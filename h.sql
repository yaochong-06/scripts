host echo -n -e "\e[0;35m+=======================+Instance===============================================================+\e[0m"
host echo -n "|checkdb.sql            |"
host echo -n "|dailyReport.sql        |"
host echo -n "|job.sql                |"
host echo -n "|load.sql               |"
host echo -n "|myundo.sql             | "       
host echo -n "|redo.sql               |查看数据库最近归档生成量   "  
host echo -n "|security.sql           |" 
host echo -n "|hidden_params.sql      |"
host echo -n "|shared_pool.sql        |"
host echo -n "|showdglogapply.sql     |" 
host echo -n "|showlong9i.sql         |"     
host echo -n -e "\e[31;1m|check_cursor           |当前实例open_cursor和session_cached_cursors使用率                     |\e[0m"
host echo -n -e "\e[31;1m|top_sql.sql            |输入开始时间和最小逻辑读，抓去top逻辑读sql，并且调用sqlmon            |\e[0m"
                                                                                           
host echo -n -e "\e[31;1m+=======================+SQL===================================================================+\e[0m"                                    
host echo -n -e "\e[31;1m|                       |                                                                      |"        
host echo -n -e "\e[31;1m|kill_objects.sql       |根据输入对象名 kill被阻塞session                                      |\e[0m"
host echo -n -e "\e[31;1m|blocking.sql           |查询阻塞信息                                                          |\e[0m"
host echo -n -e "\e[31;1m|wait_chain.sql         |查询阻塞链                                                            |\e[0m"
host echo -n -e "\e[31;1m|sqlmon.sql             |sqlmon报告                                                            |\e[0m"
host echo -n -e "\e[31;1m|sqlmonhtml.sql         |html版本sqlmon报告                                                    |\e[0m"
host echo -n -e "\e[31;1m|index_monitor.sql      |监控表上索引使用 index monitor                                        |\e[0m"
host echo -n -e "\e[31;1m|cursor.sql             |查看sql advanced执行计划                                              |\e[0m"
host echo -n "|getlpsql.sql           |" 
host echo -n "|profile.sql            |"
host echo -n "|awr.sql                |"
host echo -n "|display.sql            |"
host echo -n "|sqlinfo.sql            |"
host echo -n "|topsql.sql             |"
host echo -n "|topcpu.sql             |" 
host echo -n -e "\e[31;1m|top_phy_logical.sql    | 检查数据库中逻辑读，物理读过高的SQL                                 |\e[0m"    
host echo -n -e "\e[31;1m|temp_tab_stat_check.sql|检查是否存在收集了统计信息的临时表                                   |\e[0m"
host echo -n -e "\e[31;1m|ind_stat_check.sql     |检查无统计信息/统计信息过期/统计信息过旧的索引                       |\e[0m"
host echo -n -e "\e[31;1m|tab_stat_check.sql     |检查无统计信息/统计信息过期/统计信息过旧的表                         |\e[0m"
host echo -n -e "\e[31;1m|snapper_ash.sql        |还有snapper_ash2.sql 都是查看所有session ash信息                     |\e[0m"
host echo -n -e "\e[31;1m|index_not_used.sql     |从此刻开始一致没用到的索引                                           |\e[0m"
host echo -n -e "\e[31;1m|full.sql               |查找大表全表扫面的sql语句                                            |\e[0m"
host echo -n -e "\e[31;1m|sub.sql                |查找系统中标量子查询的sql                                            |\e[0m"
host echo -n -e "\e[0;34m+=======================+Space================================================================+\e[0m"                                    
host echo -n "|file_status.sql        | "
host echo -n "|showtbs.sql            | "   
host echo -n "|rman_cold_bak.sql      | "
host echo -n "|tbsfile.sql            | " 
host echo -n "|tbs.sql                |查看表空间和asm磁盘组快速闪回区等状态信息"
host echo -n "|temp.sql               |查看正在大量消耗temp的SQL"         
host echo -n "|undo.sql               |查看每10分钟的undo消耗情况"         
                                                                                           
host echo -n -e "\e[0;36m+=======================+Session====================+\e[0m"                                    
host echo -n "|executions.sql         |"
host echo -n "|greeting.sql           |"
host echo -n "|lock.sql               |"     
host echo -n "|showsessproc.sql       |"
host echo -n "|get_session_to_kill.sql|      "
host echo -n "|                       |"
host echo -n "|               |"        
host echo -n "|locksql.sql            |"  
host echo -n "|mytemp.sql             |"
host echo -n "|                       |"
host echo -n "|getsid.sql             |"    
host echo -n "|login.sql              |"
host echo -n "|gettrcname.sql         |  "
host echo -n "|killsql.sql            |"
host echo -n "|sesswait.sql           |"
host echo -n "|active.sql             | 查看当前的active SQL与会话等待事件"    
host echo -n "|getspid.sql            |"
host echo -n "|showsql.sql            |"
host echo -n "|librarypin.sql         |"
host echo -n "|long_idle.sql          |查看会话连接数及活动数，主机来源统计,多久没有动作了 query/dml"
host echo -n "|disksort.sql           |"       
host echo -n "|lockob.sql             |"          
host echo -n "|long_sess.sql          |"  
host echo -n "|pga.sql                |"
host echo -n "|spid.sql               |"
host echo -n "|spinfo.sql             |"
host echo -n "|trans.sql              |"           
host echo -n "|tsql10.sql             |"      
host echo -n "|showsesswait.sql       |" 
host echo -n "|sess_status.sql        |"
host echo -n "|stat.sql               |"

host echo -n -e "\033[32m+=======================+Schema====================+\033[0m"
host echo -n "|cached_proc.sql        |"
host echo -n "|exp_ga_stats.sql       |"
host echo -n "|invalid_obj.sql        |  "
host echo -n "|showjob.sql            |"
host echo -n "|tab_cons.sql           |查看表上的约束，外键，主键"
host echo -n "|import_table_stats.sql |"
host echo -n "|col_index.sql          |"
host echo -n "|parttab.sql            |"  
host echo -n "|showsource.sql         |"  
host echo -n "|size.sql               |" 
host echo -n "|tab_index.sql          |"  
host echo -n "|export_table_stats.sql |"
host echo -n "|dblink.sql             |"
host echo -n "|genstats.sql           |"       
host echo -n "|indexinfo.sql          |rowid_part.sql   "
host echo -n "|showtext.sql           |查看存过，trigger，包的创建语句"
host echo -n "|user_segment_size.sql  |"    
host echo -n "|statis.sql             |"
host echo -n "|tab_info.sql           |"
host echo -n "|viewddl.sql            |"        
host echo -n "|tbs_seg.sql            |查看具体表空间的段空间情况"      
host echo -n "|tab_col.sql            |"
host echo -n "|dep.sql                |查看表上存过，触发器，函数等依赖对象"     
host echo -n -e "\e[31;1m|get_ddl.sql            |获得对象metadata信息\e[0m"
host echo -n "|ind.sql                |查看表上的索引情况" 
host echo -n "|showhisto.sql          |"   
host echo -n "|showuser.sql           |"
host echo -n -e "\e[0;31m+=======================+Recovery===============================================================+\e[0m"
host echo -n -e "\e[0;31m|hcheck.sql             |用户特殊恢复（比如active redo故障恢复后）数据字典一致性检查    \e[0m "     
host echo -n -e "\e[0;31m+=======================+其他配置方面===========================================================+\e[0m"
host echo -n -e "\e[0;33m|检查数据库_use_adaptive_log_file_sync配置是否合理: select upper(value) VALUE from v\$parameter where name ='_use_adaptive_log_file_sync';参数 _use_adaptive_log_file_sync 11.2.0.3版本及以上版本的参数默认为TRUE，可能影响日志同步性能, 建议生产库做以下调整(参考MOS 文档： 1462942.1 )： alter system set "_use_adaptive_log_file_sync"=false; \e[0m"
host echo -n -e "\e[0;32m|_undo_autotune配置是否合理: select upper(value) VALUE from v\$parameter where name ='_undo_autotune'; 可能出现UNDO表空间利用率过高或者是UNDO段争用的问题,建议生产库做以下调整(相关故障可参考MOS 文档： 1574714.1 )： alter system set “_undo_autotune” = false;\e[0m"
host echo -n -e "\e[0;31m|参数deferred_segment_creation为TRUE,可能出现如exp,imp导入导出BUG,表空间删除后对应的表对象还在数据字典等问题, select upper(value) VALUE from v\$parameter where name ='deferred_segment_creation';建议生产库设置为false(相关故障可参考MOS 文档:1216282.1 )\e[0m"
host echo -n -e "\e[0;29m|参数control_file_record_keep_time建议大于15,否则控制文件里可重复使用的记录偏少，备份恢复时可能需要额外操作, select value from v\$parameter where name ='control_file_record_keep_time';建议生产库适当增大该值(参考MOS 文档47322.1)\e[0m"
host echo -n -e "\e[0;31m|参数 _datafile_write_errors_crash_instance为TRUE,不符合最佳实践,数据库可能因为IO错误影响而意外终止,数据库稳定性较低, select value from v\$parameter where name ='_datafile_write_errors_crash_instance';DBWR进程写出到数据文件遇到I/O问题时的表现:在版本11g中:1. 默认情况下，若是RAC或未启用归档的实例或出现问题的是SYSTEM表空间的数据文件会导致实例终止;其他情况下,会造成相关数据文件被OFFLINE。2.若该参数设置为TRUE，则在DBWR写文件出现问题时总是终止本实例 3. 若设置为FALSE，仅在未启用归档或SYSTEM表空间的数据文件的情况下会终止实例\e[0m"
host echo -n -e "\e[0;27m|    \e[0m"
