
20:46:23 sys@AA>exit
20:47:49 sys@AA>@sga

SGA and PGA Usage Size and Pct)
======================
-------------------------------------------------------------------------------------------------
| NAME                          | TOTAL_MB       | USED_MB        | FREE_MB         | PCT_USED% |
-------------------------------------------------------------------------------------------------
| SGA                           |         816.33 |         778.56 |           37.77 |     95.37 |
| Shared pool                   |            276 |         249.76 |           26.24 |     90.49 |
| Default pool                  |         486.17 |         229.39 |          256.78 |     47.18 |
| PGA                           |            204 |          66.67 |          137.33 |     32.68 |
| Large Pool                    |              8 |            .47 |            7.53 |      5.86 |
| KEEP pool                     |          11.48 |           8.86 |            2.63 |       .77 |
| DEFAULT 16K buffer cache      |              0 |              0 |               0 |         0 |
| DEFAULT 32K buffer cache      |              0 |              0 |               0 |         0 |
| Java Pool                     |              4 |              0 |               4 |         0 |
| RECYCLE pool                  |              0 |              0 |               0 |         0 |
-------------------------------------------------------------------------------------------------

SGA components Information from v$sga_dynamic_components
======================
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
| COMPONENT                 | CURRENT_GB | MIN_GB | MAX_GB | USER_SPECIFIED_GB | OPER_COUNT | LAST_OPER_TYPE | LAST_OPER_MODE | LAST_OPER_TIME      | GRANULE_SIZE_MB |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
| shared pool               |        .27 |     .2 |    .27 |                 0 |          8 | GROW           | DEFERRED       | 2021-07-06 22:00:11 |               4 |
| large pool                |        .01 |    .01 |    .07 |                 0 |          1 | SHRINK         | DEFERRED       | 2021-07-02 10:53:26 |               4 |
| java pool                 |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| streams pool              |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| DEFAULT buffer cache      |         .5 |     .5 |    .58 |                 0 |         10 | SHRINK         | MANUAL         | 2021-07-08 00:02:09 |               4 |
| KEEP buffer cache         |        .01 |      0 |    .01 |               .01 |          1 | GROW           | MANUAL         | 2021-07-08 00:02:09 |               4 |
| RECYCLE buffer cache      |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| DEFAULT 2K buffer cache   |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| DEFAULT 4K buffer cache   |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| DEFAULT 8K buffer cache   |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| DEFAULT 16K buffer cache  |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| DEFAULT 32K buffer cache  |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| Shared IO Pool            |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
| ASM Buffer Cache          |          0 |      0 |      0 |                 0 |          0 | STATIC         | None           | None                |               4 |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Shared Pool Sub Pool Size Information
======================
---------------------------------------------------------------
| SUBPOOL                | SUBPOOL_BYTES         | SUBPOOL_MB |
---------------------------------------------------------------
| shared pool (1):       |             289406976 |        276 |
| shared pool (Total):   |             289406976 |        276 |
---------------------------------------------------------------

Shared Pool Sub Pool components Detail Information
======================
-------------------------------------------------------------------------------------------------------
| RANK | SUBPOOL                | COMPONENT_NAME                     | CURRENT_SIZE_MB | CURRENT_PCT% |
-------------------------------------------------------------------------------------------------------
|    1 | shared pool (1):       | SQLA                               |         86.45 M |       31.32% |
|    2 | shared pool (1):       | KGLH0                              |         35.81 M |       12.98% |
|    3 | shared pool (1):       | free memory                        |         26.24 M |        9.51% |
|    4 | shared pool (1):       | XDBSC                              |          9.55 M |        3.46% |
|    5 | shared pool (1):       | row cache                          |          8.24 M |        2.99% |
|    6 | shared pool (1):       | KGLHD                              |          6.74 M |        2.44% |
|    7 | shared pool (1):       | PLMCD                              |          5.73 M |        2.07% |
|    8 | shared pool (1):       | db_block_hash_buckets              |          5.57 M |        2.02% |
|    9 | shared pool (1):       | KGLSG                              |          5.02 M |        1.82% |
|   10 | shared pool (1):       | kglsim hash table bkts             |             4 M |        1.45% |
|   11 | shared pool (1):       | KCB Table Scan Buffer              |           3.8 M |        1.38% |
|   12 | shared pool (1):       | dbwriter coalesce buffer           |          3.79 M |        1.37% |
|   13 | shared pool (1):       | KSFD SGA I/O b                     |          3.79 M |        1.37% |
|   14 | shared pool (1):       | private strands                    |          3.51 M |        1.27% |
|   15 | shared pool (1):       | SQLP                               |          3.48 M |        1.26% |
|   16 | shared pool (1):       | KGLS                               |          3.24 M |        1.17% |
|   17 | shared pool (1):       | event statistics per sess          |           3.1 M |        1.12% |
|   18 | shared pool (1):       | ksunfy : SSO free list             |          2.95 M |        1.07% |
|   19 | shared pool (1):       | write state object                 |          2.94 M |        1.07% |
|   20 | shared pool (1):       | obj stats allocation chun          |          2.58 M |         .93% |
-------------------------------------------------------------------------------------------------------

Latch: row cache objects On Dc_objects Information from x$kqrst
Doc ID 2359175.1
======================
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
| ADDR             | c# | parameter                        | type        | s# | gets       | misses   | modi_s   | flushes | ch# | lagets   | lamisses | laimge |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
| 000000008F534140 |  0 | dc_tablespaces                   | PARENT      | No |    3824485 |       13 |        0 |       0 |   5 | 11473442 |        9 |     14 |
| 000000008FBD55D8 |  1 | dc_free_extents                  | PARENT      | No |          0 |        0 |        0 |       0 |   2 |        0 |        0 |      0 |
| 000000008FBD7958 |  2 | dc_segments                      | PARENT      | No |     102953 |     4020 |     1410 |    1406 |   4 |   318552 |        5 |   4033 |
| 000000008FAD5418 |  3 | dc_rollback_segments             | PARENT      | No |     131180 |       21 |       21 |      20 |   1 |   393622 |        0 |      2 |
| 000000008FBD6798 |  4 | dc_used_extents                  | PARENT      | No |          0 |        0 |        0 |       0 |   3 |        0 |        0 |      0 |
| 000000008F534500 |  5 | dc_tablespace_quotas             | PARENT      | No |          0 |        0 |        0 |       0 |   6 |        0 |        0 |      0 |
| 000000008F5356C0 |  6 | dc_files                         | PARENT      | No |        320 |       12 |        0 |       0 |   7 |      973 |        0 |      8 |
| 000000008F535C88 |  7 | dc_users                         | SUBORDINATE |  0 |         20 |        5 |        0 |       0 |   8 | 11318654 |        6 |    346 |
| 000000008F535C88 |  7 | dc_users                         | SUBORDINATE |  1 |      17343 |      210 |        0 |       0 |   8 | 11318654 |        6 |    346 |
| 000000008F535C88 |  7 | dc_users                         | SUBORDINATE |  2 |          0 |        0 |        0 |       0 |   8 | 11318654 |        6 |    346 |
| 000000008F635E48 |  8 | dc_object_grants                 | SUBORDINATE |  0 |        548 |      133 |        0 |       0 |   9 |  3241774 |        6 |   5118 |
| 000000008F635E48 |  8 | dc_objects                       | PARENT      | No |    1073269 |     9553 |     1832 |    1405 |   9 |  3241774 |        6 |   5118 |
| 000000008ED47100 |  9 | qmrc_cache_entries               | PARENT      | No |          7 |        7 |        0 |       0 |  46 |       28 |        0 |      4 |
| 000000008F535C88 | 10 | dc_users                         | PARENT      | No |    3767472 |      410 |        2 |       2 |   8 | 11318654 |        6 |    346 |
| 000000008F7381C8 | 12 | dc_constraints                   | PARENT      | No |          2 |        2 |        2 |       2 |  11 |       16 |        0 |      0 |
| 000000008F739388 | 13 | dc_sequences                     | PARENT      | No |        426 |       70 |      426 |     426 |  12 |     3053 |        0 |    126 |
| 000000008F139A40 | 14 | dc_profiles                      | PARENT      | No |       1756 |        4 |        0 |       0 |  18 |     5270 |        0 |      8 |
| 000000008F24E740 | 15 | global database name             | PARENT      | No |     373792 |        1 |        0 |       0 |  34 |  1121377 |        0 |      2 |
| 000000008F739D48 | 16 | dc_histogram_data                | SUBORDINATE |  0 |     356117 |    17733 |    14976 |    8287 |  13 | 20982464 |       12 |  10056 |
| 000000008F739D48 | 16 | dc_histogram_data                | SUBORDINATE |  1 |     257457 |      881 |      670 |     365 |  13 | 20982464 |       12 |  10056 |
| 000000008F739D48 | 16 | dc_histogram_defs                | PARENT      | No |    6688538 |    79264 |    25744 |   25075 |  13 | 20982464 |       12 |  10056 |
| 000000008F736008 | 17 | dc_global_oids                   | PARENT      | No |     105355 |      246 |        0 |       0 |  10 |   316314 |        0 |    274 |
| 000000008F137880 | 18 | dc_outlines                      | PARENT      | No |          0 |        0 |        0 |       0 |  17 |        0 |        0 |      0 |
| 000000008F1356C0 | 19 | dc_partition_scns                | SUBORDINATE |  0 |          0 |        0 |        0 |       0 |  16 |      260 |        0 |     11 |
| 000000008F1356C0 | 19 | dc_table_scns                    | PARENT      | No |         52 |       52 |        0 |       0 |  16 |      260 |        0 |     11 |
| 000000008F24E910 | 20 | rule_info                        | PARENT      | No |          0 |        0 |        0 |       0 |  35 |        0 |        0 |      0 |
| 000000008F34EAD0 | 21 | rule_fast_operators              | SUBORDINATE |  0 |          0 |        0 |        0 |       0 |  36 |        0 |        0 |      0 |
| 000000008F34EAD0 | 21 | rule_or_piece                    | PARENT      | No |          0 |        0 |        0 |       0 |  36 |        0 |        0 |      0 |
| 000000008ED4AE40 | 22 | dc_awr_control                   | PARENT      | No |      10453 |        1 |      312 |     312 |  49 |    32608 |        0 |      2 |
| 000000008ED34140 | 23 | dc_qmc_ldap_cache_entries        | PARENT      | No |          0 |        0 |        0 |       0 |  37 |        0 |        0 |      0 |
| 000000008ED49C80 | 24 | outstanding_alerts               | PARENT      | No |       2776 |       14 |        2 |       2 |  48 |     8347 |        0 |     16 |
| 000000008ED4B010 | 25 | SMO rowcache                     | PARENT      | No |        159 |       80 |        0 |       0 |  50 |      716 |        0 |      7 |
| 000000008ED44F40 | 26 | qmtmrctq_cache_entries           | PARENT      | No |        341 |      341 |        0 |       0 |  45 |     1364 |        0 |     92 |
| 000000008ED3A680 | 27 | qmtmrcin_cache_entries           | PARENT      | No |          1 |        1 |        0 |       0 |  40 |        4 |        0 |      1 |
| 000000008ED3C840 | 28 | qmtmrctn_cache_entries           | PARENT      | No |          6 |        6 |        0 |       0 |  41 |       24 |        0 |      5 |
| 000000008ED3EA00 | 29 | qmtmrcip_cache_entries           | PARENT      | No |          0 |        0 |        0 |       0 |  42 |        0 |        0 |      0 |
| 000000008ED40BC0 | 30 | qmtmrctp_cache_entries           | PARENT      | No |          0 |        0 |        0 |       0 |  43 |        0 |        0 |      0 |
| 000000008ED42D80 | 31 | qmtmrciq_cache_entries           | PARENT      | No |          1 |        1 |        0 |       0 |  44 |        4 |        0 |      2 |
| 000000008F135300 | 32 | kqlsubheap_object                | PARENT      | No |          0 |        0 |        0 |       0 |  15 |        0 |        0 |      0 |
| 000000008F246CC0 | 33 | extensible security principal ne | PARENT      | No |          0 |        0 |        0 |       0 |  28 |        0 |        0 |      0 |
| 000000008F23E5C0 | 34 | extensible security user and rol | PARENT      | No |          0 |        0 |        0 |       0 |  24 |        0 |        0 |      0 |
| 000000008F240780 | 35 | extensible security principal pa | PARENT      | No |          0 |        0 |        0 |       0 |  25 |        0 |        0 |      0 |
| 000000008F244B00 | 36 | extensible security principal na | PARENT      | No |          0 |        0 |        0 |       0 |  27 |        0 |        0 |      0 |
| 000000008F242940 | 37 | extensible security UID to princ | PARENT      | No |          0 |        0 |        0 |       0 |  26 |        0 |        0 |      0 |
| 000000008F247E80 | 38 | XS security class privilege      | PARENT      | No |          0 |        0 |        0 |       0 |  29 |        0 |        0 |      0 |
| 000000008F24A040 | 39 | extensible security midtier cach | PARENT      | No |          0 |        0 |        0 |       0 |  30 |        0 |        0 |      0 |
| 000000008ED4D1D0 | 40 | sch_lj_objs                      | PARENT      | No |        205 |       41 |        0 |       0 |  51 |      656 |        0 |     57 |
| 000000008ED4E390 | 41 | sch_lj_oids                      | PARENT      | No |        903 |       74 |        0 |       0 |  52 |     2783 |        0 |     98 |
| 000000008F24B200 | 43 | AV row cache 1                   | PARENT      | No |          0 |        0 |        0 |       0 |  31 |        0 |        0 |      0 |
| 000000008F24C3C0 | 44 | AV row cache 2                   | PARENT      | No |          0 |        0 |        0 |       0 |  32 |        0 |        0 |      0 |
| 000000008F24D580 | 45 | AV row cache 3                   | PARENT      | No |          0 |        0 |        0 |       0 |  33 |        0 |        0 |      0 |
| 000000008F23C240 | 46 | Rule Set Cache                   | PARENT      | No |          0 |        0 |        0 |       0 |  22 |        0 |        0 |      0 |
| 000000008F139D00 | 47 | realm auth                       | SUBORDINATE |  0 |          0 |        0 |        0 |       0 |  19 |        0 |        0 |      0 |
| 000000008F139D00 | 47 | realm cache                      | PARENT      | No |          0 |        0 |        0 |       0 |  19 |        0 |        0 |      0 |
| 000000008F13AEC0 | 48 | Command rule cache               | PARENT      | No |          0 |        0 |        0 |       0 |  20 |        0 |        0 |      0 |
| 000000008F13C080 | 49 | Realm Object cache               | PARENT      | No |          0 |        0 |        0 |       0 |  21 |        0 |        0 |      0 |
| 000000008F13C080 | 49 | Realm Subordinate Cache          | SUBORDINATE |  0 |          0 |        0 |        0 |       0 |  21 |        0 |        0 |      0 |
| 000000008ED47AC0 | 50 | qmemod_cache_entries             | PARENT      | No |          0 |        0 |        0 |       0 |  47 |        0 |        0 |      0 |
| 000000008ED36300 | 52 | qmc_app_cache_entries            | PARENT      | No |          0 |        0 |        0 |       0 |  38 |        0 |        0 |      0 |
| 000000008ED384C0 | 53 | qmc_app_cache_entries            | PARENT      | No |          1 |        1 |        0 |       0 |  39 |        4 |        0 |      1 |
| 000000008F134140 | 54 | dc_sql_prs_errors                | PARENT      | No |          0 |        0 |        0 |       0 |  14 |        0 |        0 |      0 |
| 000000008F23D400 | 55 | DV Auth Cache                    | PARENT      | No |          0 |        0 |        0 |       0 |  23 |        0 |        0 |      0 |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

PL/SQL procedure successfully completed.


POOL_NAME USERNAME         OBJECT_NAME          SUB_NAME             OBJECT_TYPE                    BLOCKS    SIZE_MB
--------- ---------------- -------------------- -------------------- ---------------------------- -------- ----------
DEFAULT   SCOTT            TEST                                      TABLE                          15,833      123.7
DEFAULT   SCOTT            TEST1                                     TABLE                             310       2.42
DEFAULT   SCOTT            HASH_TABLE           PART01               TABLE PARTITION                    64         .5
DEFAULT   SCOTT            HASH_TABLE           PART02               TABLE PARTITION                    64         .5
DEFAULT   SCOTT            HASH_TABLE           PART03               TABLE PARTITION                    64         .5
DEFAULT   SCOTT            I_HHA                PART02               INDEX PARTITION                    36        .28
DEFAULT   SCOTT            I_HHA                PART03               INDEX PARTITION                    21        .16
DEFAULT   SCOTT            I_HHA                PART01               INDEX PARTITION                    20        .16
DEFAULT   SCOTT            EMP                                       TABLE                               9        .07
DEFAULT   SCOTT            DEPT                                      TABLE                               6        .05
DEFAULT   SCOTT            ABC                                       TABLE                               3        .02
DEFAULT   SCOTT            PK_EMP                                    INDEX                               1        .01
KEEP      SCOTT            TEST1                                     TABLE                           1,134       8.86

13 rows selected.

Buffer Pool Information

NAME                 BLOCK_SIZE    BUFFERS BUFFER_SIZE_MB
-------------------- ---------- ---------- --------------
KEEP                       8192       1470      11.484375
DEFAULT                    8192      62230     486.171875

buffer_pool_working_data_sets

    SET_ID   CNUM_SET SET_LATCH        NXT_REPL         PRV_REPL         NXT_REPLAX       PRV_REPLAX        CNUM_REPL  ANUM_REPL   DBWR_NUM
---------- ---------- ---------------- ---------------- ---------------- ---------------- ---------------- ---------- ---------- ----------
         1       1470 0000000091646308 0000000063FEFA88 00000000647FB500 0000000063FD6108 0000000063FEF950       1470        336          0
         2          0 00000000916618A0 0000000091661A30 0000000091661A30 0000000091661A40 0000000091661A40          0          0          0
         3      62230 000000009167CE38 000000006CFF5998 00000000757DC3C0 00000000717D6858 0000000068FDD740      62230      32868          0
         4          0 00000000916983D0 0000000091698560 0000000091698560 0000000091698570 0000000091698570          0          0          0
         5          0 00000000916B3968 00000000916B3AF8 00000000916B3AF8 00000000916B3B08 00000000916B3B08          0          0          0
         6          0 00000000916CEF00 00000000916CF090 00000000916CF090 00000000916CF0A0 00000000916CF0A0          0          0          0
         7          0 00000000916EA498 00000000916EA628 00000000916EA628 00000000916EA638 00000000916EA638          0          0          0
         8          0 0000000091705A30 0000000091705BC0 0000000091705BC0 0000000091705BD0 0000000091705BD0          0          0          0

8 rows selected.

20:47:50 sys@AA>
20:47:51 sys@AA>21:21:26 sys@AA>@kglpin.sql
Enter value for 1: 
21:21:31 sys@AA>
21:21:31 sys@AA>
21:21:32 sys@AA>exit
21:21:57 sys@AA>@kglpin.sql
Enter value for 1: 
old   7: -- and w.kgllkhdl=hextoraw(lpad('&1', vsize(w.kgllkhdl)*2, 0))
new   7: -- and w.kgllkhdl=hextoraw(lpad('', vsize(w.kgllkhdl)*2, 0))

       SID    SERIAL#   KGLLKMOD   KGLLKREQ KGLL SQL_TEXT
---------- ---------- ---------- ---------- ---- ----------------------------------------
        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value

        35       3241          1          0 Lock select  sid, serial#, kgllkmod, kgllkreq
                                                 , kgllktype, sql_text from  dba_kgllock
                                                 w, v$session s, v$sqlarea a where  w.kgl
                                                 lkuse = s.saddr -- and w.kgllkhdl=hextor
                                                 aw(lpad('', vsize(w.kgllkhdl)*2, 0)) and
                                                  s.sql_address = a.address and s.sql_has
                                                 h_value = a.hash_value


52 rows selected.

Elapsed: 00:00:00.10
21:22:01 sys@AA>
21:22:13 sys@AA>
21:22:13 sys@AA>exit
21:22:31 sys@AA>select kglhdadr, kglnaown, kglnaobj from x$kglob ;

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
0000000088DA7378 SYS
WRH$_SQL_PLAN

0000000060FA6980
7f5259471f5383ccfc3a966b99bf0c76

000000008B134C88
SELECT COUNT(*) FROM

000000008B1637F0
select   LOW_OPTIMAL_SIZE,           HIGH_OPTIMAL_SIZE,           OPTIMAL_EXECUTIONS,           ONEPASS_EXECUTIONS,           MULTIPASS
ES_EXECUTIONS,           TOTAL_EXECUTIONS    from   GV$SQL_WORKAREA_HISTOGRAM    where  INST_ID = USERENV('Instance')

000000008B23AFC0
select   LOW_OPTIMAL_SIZE,           HIGH_OPTIMAL_SIZE,           OPTIMAL_EXECUTIONS,           ONEPASS_EXECUTIONS,           MULTIPASS
ES_EXECUTIONS,           TOTAL_EXECUTIONS    from   GV$SQL_WORKAREA_HISTOGRAM    where  INST_ID = USERENV('Instance')

00000000652E4320
ae6150f225407774ba88cecdb3775c5

000000008CBA8BB8
select id, name, blo

0000000088FB1418
select inst_id,kmmsinam,kmmsiprp,kmmsista,kmmsinmg, kmmsinmb,kmmsibrk,kmmsivcp,kmmsiidl,kmmsibsy,kmmsineti,kmmsineto,kmmsitnc from x$km
msi where bitand(kmmsiflg,1)!=0

0000000060EACD50
select inst_id,kmmsinam,kmmsiprp,kmmsista,kmmsinmg, kmmsinmb,kmmsibrk,kmmsivcp,kmmsiidl,kmmsibsy,kmmsineti,kmmsineto,kmmsitnc from x$km
msi where bitand(kmmsiflg,1)!=0

000000008CA2AF68
75434e1bdf0e4d45511ebd68747b8a78

000000008C942848 SYS
WRH$_LOG

0000000088D6A4C8 SYS
SQLLOG$_SEQ

0000000088EC22E0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D563C8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000065377580
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."SYS_O
BJECTS" "SO#2", "SYS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#4"."OBJ#"="SO#2"."OBJECT_ID") AND ("O#4"."TYPE#"="SO#2".
"OBJECT_TYPE_ID")) innerQuery

0000000060C4DA50
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."SYS_O
BJECTS" "SO#2", "SYS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#4"."OBJ#"="SO#2"."OBJECT_ID") AND ("O#4"."TYPE#"="SO#2".
"OBJECT_TYPE_ID")) innerQuery

0000000060FF1060
f061b437f5224c2a6565a13f4a9bb758

0000000060E1F710 SYS
TRANSFORMATIONS$

000000008CBF0BE8
b227e8c53113383e437ecaf0e0b1d0ed

0000000088C7B040
701e7d7f576f24a66f7d6cf0fa0f5c31

0000000060F69450 SYS
DBA_LOB_PARTITIONS

0000000088D14E20 SYS
HTF

0000000060D91C30
414c4b86c614a9618f40fd45a4fc7342

0000000088C9C218
INSERT INTO WRI$_ADV

000000008B26C0C0
b227e8c53113383e437ecaf0e0b1d0ed

0000000060FD62F0
select /*+  no_paral

000000008CB09C38 $BUILD$
973cee8af93d9f68

0000000088D82168
select substrb(dump(

0000000092CC08D8
beb16e0c9ee2d4ce9fe20cd981dd7464

000000008C927E88
SELECT B.DIR_ID,B.NA

0000000060FC21B0 SYS
WRH$_THREAD

000000008CB50368
616b3a5d53182784763be5e792c529c4

0000000088C88EA8
DELETE WRI$_SQLSET_B

0000000088DCEED8
SELECT COUNT(*) C FR

0000000088EACB70
insert into wrh$_system_event   (snap_id, dbid, instance_number, event_id,    total_waits, total_timeouts, time_waited_micro,    total_
waits_fg, total_timeouts_fg, time_waited_micro_fg)  select    :snap_id, :dbid, :instance_number, event_id,    total_waits, total_timeou
ts, time_waited_micro,    total_waits_fg, total_timeouts_fg, time_waited_micro_fg  from    v$system_event  order by    event_id

0000000092D77798
insert into wrh$_system_event   (snap_id, dbid, instance_number, event_id,    total_waits, total_timeouts, time_waited_micro,    total_
waits_fg, total_timeouts_fg, time_waited_micro_fg)  select    :snap_id, :dbid, :instance_number, event_id,    total_waits, total_timeou
ts, time_waited_micro,    total_waits_fg, total_timeouts_fg, time_waited_micro_fg  from    v$system_event  order by    event_id

0000000060E25AC0
insert into wrh$_system_event   (snap_id, dbid, instance_number, event_id,    total_waits, total_timeouts, time_waited_micro,    total_
waits_fg, total_timeouts_fg, time_waited_micro_fg)  select    :snap_id, :dbid, :instance_number, event_id,    total_waits, total_timeou
ts, time_waited_micro,    total_waits_fg, total_timeouts_fg, time_waited_micro_fg  from    v$system_event  order by    event_id

000000008B369D50
insert into wrh$_system_event   (snap_id, dbid, instance_number, event_id,    total_waits, total_timeouts, time_waited_micro,    total_
waits_fg, total_timeouts_fg, time_waited_micro_fg)  select    :snap_id, :dbid, :instance_number, event_id,    total_waits, total_timeou
ts, time_waited_micro,    total_waits_fg, total_timeouts_fg, time_waited_micro_fg  from    v$system_event  order by    event_id

0000000088EACFF0
insert into wrh$_system_event   (snap_id, dbid, instance_number, event_id,    total_waits, total_timeouts, time_waited_micro,    total_
waits_fg, total_timeouts_fg, time_waited_micro_fg)  select    :snap_id, :dbid, :instance_number, event_id,    total_waits, total_timeou
ts, time_waited_micro,    total_waits_fg, total_timeouts_fg, time_waited_micro_fg  from    v$system_event  order by    event_id

0000000088D90598 SYS
WRH$_SQLSTAT

000000006537CB00
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."FILE$
" "F#0", "SYS"."SEG$" "S#1" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#")) innerQuery

000000006537AF40
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."FILE$
" "F#0", "SYS"."SEG$" "S#1" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#")) innerQuery

000000008B0D6A58 SYS
WRH$_SYS_TIME_MODEL

0000000088F47D68
7bca5ce219d8b8add07674a81178396f

0000000088F681F8
66f03ebad417de5f61d606df3f5f986

000000008C920A38
INSERT INTO WRI$_ADV

000000008C90EB60
update sys.job$ set this_date=:1 where job=:2

0000000060FA1790
update sys.job$ set this_date=:1 where job=:2

0000000088D9AB48
update sys.job$ set this_date=:1 where job=:2

000000008B1F4790
update sys.job$ set this_date=:1 where job=:2

0000000092CB5198
update sys.job$ set this_date=:1 where job=:2

0000000088DBEB88
update sys.job$ set this_date=:1 where job=:2

0000000060F521F0
aed972e15d0178c4d13c5d8c7e468af5

0000000092D510D0
9491400f1206dfd1e1851d6f5b4055ac

0000000088ED4000
delete from WRH$_ENQUEUE_STAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088E340E8
delete from WRH$_ENQUEUE_STAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088E54688
SELECT HELP_TEXT FRO

0000000092C8FEB8
UPDATE WWV_FLOW_SESS

0000000060EA0F30
816dc8f6c40f1b55292797596154da17

0000000092D24B28
SELECT HOST_NAME FRO

0000000088E68CC0
select substrb(dump(

0000000060F347B0
95965dff6dfa9d6e8cbb7cf6dd32b234

000000008CA028D8
SELECT XMLELEMENT( "

0000000088CE7C88
SELECT GROUP_TYPE, B

0000000088E959F0 SYS
WRH$_LATCH_PK

000000008CAC8FC8
e7e04a13b7fb7ff764c8ab84c22c7d28

0000000088C80958
/* SQL Analyze(1) */

0000000060FCBC30
aadbaa7ffe4afb53828eec89b054c732

000000008CB42CD8 EXFSYS
RLM$EVENTSTRUCT

0000000088FCBF28 EXFSYS
RLM$PARSEDCOND

000000008B1A26A8 SYS
SCHEDULER$_SCHEDULE

0000000060F622D0
9acdc455870a5f559e0d75fdb4b04d9

0000000060EC77D0 SYS
JOB_DEFINITION

0000000088FEFDD0
2b52d8f06e15f2c22327a01b455a43e8

0000000088F67388 SYS
GV$PROPAGATION_RECEIVER

000000008C97F200
9cfd2727f30195e759a1d5c68bb699b4

0000000060CD5280
select memory_size,

0000000088DE0658
select lt.inst_id,lt.kslltaddr,lt.kslltnum,lt.kslltlvl,lt.kslltnam,        lt.ksllthsh,lt.kslltwgt,lt.kslltwff,        lt.kslltwsl,lt.k
slltngt,lt.kslltnfa,lt.kslltwkc,        lt.kslltwth,lt.ksllthst0,lt.ksllthst1,lt.ksllthst2,        lt.ksllthst3,lt.ksllthst4,lt.ksllths
t5,lt.ksllthst6,lt.ksllthst7,        lt.ksllthst8,lt.ksllthst9,lt.ksllthst10, lt.ksllthst11, lt.kslltwtt from x$kslltr lt

0000000060E4C030
select lt.inst_id,lt.kslltaddr,lt.kslltnum,lt.kslltlvl,lt.kslltnam,        lt.ksllthsh,lt.kslltwgt,lt.kslltwff,        lt.kslltwsl,lt.k
slltngt,lt.kslltnfa,lt.kslltwkc,        lt.kslltwth,lt.ksllthst0,lt.ksllthst1,lt.ksllthst2,        lt.ksllthst3,lt.ksllthst4,lt.ksllths
t5,lt.ksllthst6,lt.ksllthst7,        lt.ksllthst8,lt.ksllthst9,lt.ksllthst10, lt.ksllthst11, lt.kslltwtt from x$kslltr lt

0000000092D02068 SYS
V$SGA_TARGET_ADVICE

00000000652F0E00
cf3b8539eaedf56fd3f08abf6b3511df

0000000060F66ED0
aed972e15d0178c4d13c5d8c7e468af5

000000008CB07560
SELECT O.SUBNAME FRO

0000000088CBB690
UPDATE SYS.SCHEDULER

000000008CA4C790 SYS
GV$AW_OLAP

00000000653424A0
5b0e3308b9b7aa8d9936922ad55fa6a4

000000008CA1E7E8
SELECT NVL(MAX(SNAP_ID),0) FROM SYS.WRH$_SEG_STAT

000000008B12C3D8
SELECT NVL(MAX(SNAP_ID),0) FROM SYS.WRH$_SEG_STAT

000000008C8912A0
SELECT NVL(MAX(SNAP_ID),0) FROM SYS.WRH$_SEG_STAT

000000008CAEC5F8
SELECT NVL(MAX(SNAP_ID),0) FROM SYS.WRH$_SEG_STAT

0000000088F19258
insert into wrh$_filemetric_history     (snap_id, dbid, instance_number,      fileid, creationtime,      begin_time, end_time, intsize,
 group_id,      avgreadtime, avgwritetime, physicalread,      physicalwrite, phyblkread, phyblkwrite)  select      :snap_id, :dbid, :in
stance_number,      fileid, creationtime,      begtime, endtime, intsize_csec, groupid,      avrdtime, avwrtime, phyread,      phywrite
, phybkrd, phybkwr  from x$kewmflmv

000000008CB4AB30
insert into wrh$_filemetric_history     (snap_id, dbid, instance_number,      fileid, creationtime,      begin_time, end_time, intsize,
 group_id,      avgreadtime, avgwritetime, physicalread,      physicalwrite, phyblkread, phyblkwrite)  select      :snap_id, :dbid, :in
stance_number,      fileid, creationtime,      begtime, endtime, intsize_csec, groupid,      avrdtime, avwrtime, phyread,      phywrite
, phybkrd, phybkwr  from x$kewmflmv

0000000088F196D8
insert into wrh$_filemetric_history     (snap_id, dbid, instance_number,      fileid, creationtime,      begin_time, end_time, intsize,
 group_id,      avgreadtime, avgwritetime, physicalread,      physicalwrite, phyblkread, phyblkwrite)  select      :snap_id, :dbid, :in
stance_number,      fileid, creationtime,      begtime, endtime, intsize_csec, groupid,      avrdtime, avwrtime, phyread,      phywrite
, phybkrd, phybkwr  from x$kewmflmv

000000008B368148
8256f9c392783d2ca915978f9f4ac8c0

0000000088E7C310
insert into wrh$_buffer_pool_statistics   (snap_id, dbid, instance_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, c
num_set, buf_got, sum_write, sum_scan,    free_buffer_wait, write_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buff
ers_inspected, db_block_change,    db_block_gets, consistent_gets, physical_reads, physical_writes)  select    :snap_id, :dbid, :instan
ce_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, cnum_set, buf_got, sum_write, sum_scan,    free_buffer_wait, writ
e_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buffers_inspected, db_block_change,    db_block_gets, consistent_get
s, physical_reads, physical_writes  from    v$buffer_pool_statistics

0000000088FE3520
insert into wrh$_buffer_pool_statistics   (snap_id, dbid, instance_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, c
num_set, buf_got, sum_write, sum_scan,    free_buffer_wait, write_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buff
ers_inspected, db_block_change,    db_block_gets, consistent_gets, physical_reads, physical_writes)  select    :snap_id, :dbid, :instan
ce_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, cnum_set, buf_got, sum_write, sum_scan,    free_buffer_wait, writ
e_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buffers_inspected, db_block_change,    db_block_gets, consistent_get
s, physical_reads, physical_writes  from    v$buffer_pool_statistics

000000008B11C570
insert into wrh$_buffer_pool_statistics   (snap_id, dbid, instance_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, c
num_set, buf_got, sum_write, sum_scan,    free_buffer_wait, write_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buff
ers_inspected, db_block_change,    db_block_gets, consistent_gets, physical_reads, physical_writes)  select    :snap_id, :dbid, :instan
ce_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, cnum_set, buf_got, sum_write, sum_scan,    free_buffer_wait, writ
e_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buffers_inspected, db_block_change,    db_block_gets, consistent_get
s, physical_reads, physical_writes  from    v$buffer_pool_statistics

0000000060E5FD00
insert into wrh$_buffer_pool_statistics   (snap_id, dbid, instance_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, c
num_set, buf_got, sum_write, sum_scan,    free_buffer_wait, write_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buff
ers_inspected, db_block_change,    db_block_gets, consistent_gets, physical_reads, physical_writes)  select    :snap_id, :dbid, :instan
ce_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, cnum_set, buf_got, sum_write, sum_scan,    free_buffer_wait, writ
e_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buffers_inspected, db_block_change,    db_block_gets, consistent_get
s, physical_reads, physical_writes  from    v$buffer_pool_statistics

0000000088E7C790
insert into wrh$_buffer_pool_statistics   (snap_id, dbid, instance_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, c
num_set, buf_got, sum_write, sum_scan,    free_buffer_wait, write_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buff
ers_inspected, db_block_change,    db_block_gets, consistent_gets, physical_reads, physical_writes)  select    :snap_id, :dbid, :instan
ce_number, id, name, block_size, set_msize,    cnum_repl, cnum_write, cnum_set, buf_got, sum_write, sum_scan,    free_buffer_wait, writ
e_complete_wait, buffer_busy_wait,    free_buffer_inspected, dirty_buffers_inspected, db_block_change,    db_block_gets, consistent_get
s, physical_reads, physical_writes  from    v$buffer_pool_statistics

0000000088F47878
SELECT ITEM_VALUE FR

0000000088E74AE8
SELECT OBJECT_TYPE F

0000000088CBA618 SYS
X$KSLLTR

000000008CA49E80 PUBLIC
DBMS_LOCK

000000008B27DD48
select substrb(dump(

000000008B07A540 SYS
WRI$_OPTSTAT_HISTGRM_HISTORY

000000008B04F1B0
SELECT O.SUBNAME, O.

000000008B1CE1B8
INSERT INTO SYS.SCHE

000000008B075460
SELECT /*+ leading(u

000000008B098AA0
DELETE FROM SYS.AUX_

000000008B3A5EF8
SELECT MAX(TASK_ID)

000000008C89A128
/* SQL Analyze(1) */

000000008B05B280
DELETE FROM SYS.WRI$

000000008CAC8DD8
3701188696115137083

0000000088C70640
e9987a7b781838a56da2aa17b01f4446

0000000092D74608 SYS
X$KSMPGST

0000000065311910 SYS
DBA_TAB_COL_STATISTICS

000000008B3B8118 SYS
DBA_ANALYZE_OBJECTS

0000000060CCC600
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("INSTANCE_NAME") val,count(*)
 cnt  from "SYS"."WRM$_DATABASE_INSTANCE" t  where "INSTANCE_NAME" is not null  group by nlssort("INSTANCE_NAME", 'NLS_SORT = binary'))
 order by nlssort(val,'NLS_SORT = binary')

000000008B20FB58
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("INSTANCE_NAME") val,count(*)
 cnt  from "SYS"."WRM$_DATABASE_INSTANCE" t  where "INSTANCE_NAME" is not null  group by nlssort("INSTANCE_NAME", 'NLS_SORT = binary'))
 order by nlssort(val,'NLS_SORT = binary')

0000000060CCC990
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("INSTANCE_NAME") val,count(*)
 cnt  from "SYS"."WRM$_DATABASE_INSTANCE" t  where "INSTANCE_NAME" is not null  group by nlssort("INSTANCE_NAME", 'NLS_SORT = binary'))
 order by nlssort(val,'NLS_SORT = binary')

000000008CA32088
select streams_pool_size_for_estimate s,           streams_pool_size_factor * 100 f,           estd_spill_time + estd_unspill_time, 0
from v$streams_pool_advice

000000008CA32508
select streams_pool_size_for_estimate s,           streams_pool_size_factor * 100 f,           estd_spill_time + estd_unspill_time, 0
from v$streams_pool_advice

000000008B1A4368
select substrb(dump(

0000000088FD0598
b4f335256ed143ca6e4c74234eba35af

0000000060E40A80 SYS
DBMS_OBFUSCATION_TOOLKIT

000000008C872178
delete from dependency$ where d_obj#=:1

000000008B2B0CC8
delete from dependency$ where d_obj#=:1

000000008B2A85E8
delete from dependency$ where d_obj#=:1

0000000088E1A150
delete from dependency$ where d_obj#=:1

0000000088CC4B68
delete from dependency$ where d_obj#=:1

000000008C8725F8
delete from dependency$ where d_obj#=:1

0000000088DF9DD8
insert into wrh$_memory_target_advice   (snap_id, dbid, instance_number,    memory_size, memory_size_factor,    estd_db_time, estd_db_t
ime_factor, version)  select    :snap_id, :dbid, :instance_number,    memory_size, memory_size_factor,    estd_db_time, estd_db_time_fa
ctor, version  from    v$memory_target_advice

000000008B1EB708
insert into wrh$_memory_target_advice   (snap_id, dbid, instance_number,    memory_size, memory_size_factor,    estd_db_time, estd_db_t
ime_factor, version)  select    :snap_id, :dbid, :instance_number,    memory_size, memory_size_factor,    estd_db_time, estd_db_time_fa
ctor, version  from    v$memory_target_advice

0000000088DFA258
insert into wrh$_memory_target_advice   (snap_id, dbid, instance_number,    memory_size, memory_size_factor,    estd_db_time, estd_db_t
ime_factor, version)  select    :snap_id, :dbid, :instance_number,    memory_size, memory_size_factor,    estd_db_time, estd_db_time_fa
ctor, version  from    v$memory_target_advice

0000000092D49FF8
57a0d2631d9883f9a6807ddfe53ac2d3

000000008B0703F0
SELECT /*+ push_pred

0000000092EBF7C0
d1ddd68ed1edac67ce47973d6539529

000000008B3B6848
SELECT OWNER, OBJECT

000000008B133BC8
4d58558c9298413c57611affb41981e

0000000060CBEDF8 $BUILD$
eae900485895e2ae

0000000060EC6F70
declare     v_cnt nu

0000000088F92A28
INSERT INTO EXFSYS.R

0000000088C5DD38
2490706085944436925

000000008B268858
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000088F66E78
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008CAF1128
delete from WRH$_TABLESPACE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3EA660
delete from WRH$_TABLESPACE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092CAC1B8
8aa8b5183742d0ce38314a5cbe30f55

0000000088D9A848
SELECT SUM(POWER(2,P

000000008C9FAA00
SELECT MIN(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

0000000088F710B0
SELECT MIN(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

0000000060E83A50
SELECT MIN(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

0000000088FDA040
SELECT MIN(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

000000008B244DB0
SELECT MIN(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

00000000652F91E0
SELECT MIN(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

000000008B145BD8
SELECT MIN(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

0000000088D52BF8
update WRI$_SCH_VOTES   set vector = :vec  where schedule_id  = :id    and vector_index = :vidx

000000008B1DF4F8
update WRI$_SCH_VOTES   set vector = :vec  where schedule_id  = :id    and vector_index = :vidx

0000000092CD59C8
update WRI$_SCH_VOTES   set vector = :vec  where schedule_id  = :id    and vector_index = :vidx

0000000088E18CB8
update WRI$_SCH_VOTES   set vector = :vec  where schedule_id  = :id    and vector_index = :vidx

000000008CA472D0
update WRI$_SCH_VOTES   set vector = :vec  where schedule_id  = :id    and vector_index = :vidx

000000008B1C1C60
update WRI$_SCH_VOTES   set vector = :vec  where schedule_id  = :id    and vector_index = :vidx

0000000092D2D448
SELECT COUNT(*) FROM

000000008CA12270
4ba068cb64a97c58c95a83f0c2e924e4

000000008B35B440 $BUILD$
96c2f145292af8aa

0000000088E1CB88
cb87c155ccf5baeb795113ddb9af199f

000000008CAF85C8 SYS
WRH$_SYSMETRIC_HISTORY

000000008B24EFA8
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  A.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060D75F48
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  A.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000065332460
86074f8e90ac06a33cb5c17ff6c171a

0000000060E63E80
16bb15465bb8aca7b107b2878d915e8e

0000000060ED00E0
4b3040e5285e83f49c03aa2b5fbd58a5

0000000060C61230
6a16eb53e1982ae084e1bf202d6174e

0000000088CA4EA8 SYS
WRI$_SQLSET_STATISTICS

0000000088FD9958
febb0bb973020e2bccc880a6dbae0d37

0000000088DEA248 SYS
GV$IOSTAT_FUNCTION

000000008B3322D0 $BUILD$
84e1bf20 2d6174e

000000008C9877E0
select substrb(dump(

0000000092D6C028
3a9c036ee6d1fd0e17795f9b6424fc4f

0000000088D070A8
SELECT D.DESCRIPTION

0000000092C6BDA0 APEX_030200
WWV_FLOW_SW_RESULTS

0000000088C9CDC8
SELECT MESSAGE, MORE

000000008C92F478 SYS
WRI$_ADV_FINDINGS

000000008CAC91C8
a190bd62af9d233f2e1b12b4441e42d7

000000008C864BB8
SELECT NVL(MIN(F.PRI

0000000092EBE8F0 SYS
DBA_PART_TABLES

0000000088C990D8
SELECT XMLELEMENT( "

0000000088D66EF8
SELECT /*+ index(cvl

000000008CBECFC8
b4f335256ed143ca6e4c74234eba35af

000000008B27BC90
4eb07448aafb261a81b2c155a3c2be6f

00000000653C92D0 MDSYS
SDO_ST_SYN_CREATE

000000008B33ADA0
update sys.optstat_hist_control$ set sval2 = :1 where  sname = 'SKIP_TIME'

0000000088D569C8
update sys.optstat_hist_control$ set sval2 = :1 where  sname = 'SKIP_TIME'

000000008B3887A0
update sys.optstat_hist_control$ set sval2 = :1 where  sname = 'SKIP_TIME'

000000008B33AF10
update sys.optstat_hist_control$ set sval2 = :1 where  sname = 'SKIP_TIME'

0000000088CED748 SYS
GV$SESSION_LONGOPS

0000000088F61428 SYS
WRH$_TABLESPACE_SPACE_USAGE

000000008CB49458 APEX_030200
WWV_FLOW_DATA

0000000060FE7480
dd2f59d696d607fe92ceb2a17bf48001

0000000088F36C08 EXFSYS
EXF$ESETIDXPARAM

000000008C8858B0
delete from idl_ub1$ where obj#=:1 and part=:2

000000008C885D30
delete from idl_ub1$ where obj#=:1 and part=:2

000000008B2476D8 SYS
KET$_AUTOTASK_STATUS

000000008B2F54E8
SELECT COUNT(*) FROM

0000000092D6E678
3fc8565e94f7f927641455243f041c

000000008B072AF0
SELECT /*+ ordered *

000000008B1AFA20
insert into wri$_adv_sqlt_rtn_plan(task_id, object_id, rtn_id, operation_id, plan_attr, exec_name) values(:1,:2,:3,:4,:5,:6)

0000000088FCACD8
insert into wri$_adv_sqlt_rtn_plan(task_id, object_id, rtn_id, operation_id, plan_attr, exec_name) values(:1,:2,:3,:4,:5,:6)

0000000092D16538 SYS
SYS_GROUP

000000008CB84D38
select     u.name owner,     io.name index_name,     t.name table_name,     decode(bitand(i.flags, 65536), 0, 'NO', 'YES') monitoring,
    decode(bitand(ou.flags, 1), 0, 'NO', 'YES') used,     ou.start_monitoring,     ou.end_monitoring from sys.user$ u, sys.obj$ io, sys
.obj$ t, sys.ind$ i, sys.object_usage ou where     i.obj# = ou.obj#     and io.obj# = ou.obj#     and t.obj# = i.bo#     and u.user# =
io.owner#     and upper(u.name) like '%' || upper(:owner) || '%'     and upper(t.name) like '%' || upper(:table_name) || '%'

0000000060E00E00
select     u.name owner,     io.name index_name,     t.name table_name,     decode(bitand(i.flags, 65536), 0, 'NO', 'YES') monitoring,
    decode(bitand(ou.flags, 1), 0, 'NO', 'YES') used,     ou.start_monitoring,     ou.end_monitoring from sys.user$ u, sys.obj$ io, sys
.obj$ t, sys.ind$ i, sys.object_usage ou where     i.obj# = ou.obj#     and io.obj# = ou.obj#     and t.obj# = i.bo#     and u.user# =
io.owner#     and upper(u.name) like '%' || upper(:owner) || '%'     and upper(t.name) like '%' || upper(:table_name) || '%'

0000000092C600A8
UPDATE BSLN_THRESHOL

0000000088D32B48
ae5675c671b365c6738b022ec3e07512

0000000088D525A8
aa731f86655bc019ad8e886714d33854

0000000088EB6790
select /*+  no_paral

000000008C937970
1d2f28a8334da81a21a485cad701bc84

000000008C84C428 SYS
X$KSUNETSTAT

000000008B0345A8
3be1c8773a4a08d4a8fa6fa5436a5f5c

0000000060D7EBC8
16ca272060087b658c73d55aee098ce2

000000008CBC0AD8 SYS
STANDARD

000000008CAFE1E8 SYS
WRI$_DBU_CPU_USAGE_SAMPLE

0000000060CBF2E8
4d4bf9c8fdc03e0659904653703df74

000000008B3A9728 SYS
DBA_SQLSET_REFERENCES

000000008B1623D8
select substrb(dump(

000000008CBFC9A0
select min(minbkt),m

000000008C8C2548
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"FIELD1" val,count(*) cnt  from "
SYS"."JOB$" t  where "FIELD1" is not null  group by "FIELD1") order by val

0000000060F8A950
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"FIELD1" val,count(*) cnt  from "
SYS"."JOB$" t  where "FIELD1" is not null  group by "FIELD1") order by val

000000008B122B68
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"FIELD1" val,count(*) cnt  from "
SYS"."JOB$" t  where "FIELD1" is not null  group by "FIELD1") order by val

0000000088E5FC90
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"FIELD1" val,count(*) cnt  from "
SYS"."JOB$" t  where "FIELD1" is not null  group by "FIELD1") order by val

0000000060D9AF28 $BUILD$
 3de65a98b86111a

00000000652EDA20
select substrb(dump(

000000008C900EB8
UPDATE KET$_AUTOTASK_STATUS     SET ABA_STATE = 2,         RECONCILE_TIME = :1,         ABA_STATE_TIME = :2   WHERE DUMMY_KEY = 99999

000000008CBA3C18
UPDATE KET$_AUTOTASK_STATUS     SET ABA_STATE = 2,         RECONCILE_TIME = :1,         ABA_STATE_TIME = :2   WHERE DUMMY_KEY = 99999

0000000088D611D8
UPDATE KET$_AUTOTASK_STATUS     SET ABA_STATE = 2,         RECONCILE_TIME = :1,         ABA_STATE_TIME = :2   WHERE DUMMY_KEY = 99999

0000000088D93208
7cda76911a5aef12ec66a7ea377b0865

0000000092D1B3C8 SYS
X$KEWRTOPTENV

0000000088DB5148
6b5876239a64a79a8e15bdecda9f8e59

0000000088CD3968
SELECT /*+ no_monito

000000008B0B46B0
fe582a4dce181bd3992451ede3db23b

000000008CABDBB8
SELECT ITEM_NAME, IT

000000008CB89D68
V

000000008C85EC10 DBSNMP
BSLN_THRESHOLD_PARAMS

000000008B21C850 SYS
V$SYSSTAT

0000000092D32108
SELECT JOB_OWNER, JO

0000000092EB3690
SELECT BITAND(RSET_P

0000000088FAD778
SELECT RULE_SET_EVAL

0000000088D36610
SELECT PRIM_ASETNM F

000000008B1E39E8
INSERT /*+ LEADING(@SEL$5DA710D3 K@SEL$1 R@SEL$2)             INDEX(@SEL$5DA710D3 R@SEL$2                (WRI$_SQLTEXT_REFCOUNT.DBID
              WRI$_SQLTEXT_REFCOUNT.SQL_ID)) */    INTO wri$_sqltext_refcount                (dbid, sql_id, ref_count)    SELECT :dbid,
 sqlid_kewrsie, 1    FROM   x$kewrsqlidtab k    WHERE NOT EXISTS (SELECT 1                      FROM   wri$_sqltext_refcount r
             WHERE  r.dbid = :dbid AND                             r.sql_id = k.sqlid_kewrsie)

00000000652D0460
INSERT /*+ LEADING(@SEL$5DA710D3 K@SEL$1 R@SEL$2)             INDEX(@SEL$5DA710D3 R@SEL$2                (WRI$_SQLTEXT_REFCOUNT.DBID
              WRI$_SQLTEXT_REFCOUNT.SQL_ID)) */    INTO wri$_sqltext_refcount                (dbid, sql_id, ref_count)    SELECT :dbid,
 sqlid_kewrsie, 1    FROM   x$kewrsqlidtab k    WHERE NOT EXISTS (SELECT 1                      FROM   wri$_sqltext_refcount r
             WHERE  r.dbid = :dbid AND                             r.sql_id = k.sqlid_kewrsie)

000000008B32B348
INSERT /*+ LEADING(@SEL$5DA710D3 K@SEL$1 R@SEL$2)             INDEX(@SEL$5DA710D3 R@SEL$2                (WRI$_SQLTEXT_REFCOUNT.DBID
              WRI$_SQLTEXT_REFCOUNT.SQL_ID)) */    INTO wri$_sqltext_refcount                (dbid, sql_id, ref_count)    SELECT :dbid,
 sqlid_kewrsie, 1    FROM   x$kewrsqlidtab k    WHERE NOT EXISTS (SELECT 1                      FROM   wri$_sqltext_refcount r
             WHERE  r.dbid = :dbid AND                             r.sql_id = k.sqlid_kewrsie)

000000008CBF8E98 SYS
SCHEDULER$_RULE_LIST

0000000088E88BD0
SELECT DISTINCT 1 FR

000000008CBE5488
select col#,intcol#,reftyp,stabid,expctoid from refcon$ where obj#=:1 order by intcol# asc

0000000088D0A078
select col#,intcol#,reftyp,stabid,expctoid from refcon$ where obj#=:1 order by intcol# asc

0000000088C6A350
select col#,intcol#,reftyp,stabid,expctoid from refcon$ where obj#=:1 order by intcol# asc

000000008CB3F870
select col#,intcol#,reftyp,stabid,expctoid from refcon$ where obj#=:1 order by intcol# asc

000000008CBE5908
select col#,intcol#,reftyp,stabid,expctoid from refcon$ where obj#=:1 order by intcol# asc

0000000088E7F5A0 SYS
UTL_I18N

0000000060EFE900 $BUILD$
8117ee429b80fbc4

000000008CBD1500
76129d8af53693142a3193c13b01ca7c

000000008B344590
f11df0ae22512371a0f5fdce31b2def5

0000000060E83070
eafe294e48cbb8071e361ae98c64c641

000000008B100158
539c4e2b345582bc74896c5de64071f

0000000088DC5948
SELECT /* OPT_DYN_SA

000000008C92BFB8
SELECT E.EXECUTION_T

0000000092D38E08
SELECT AO.ATTR1 OBJD, SUM(AR.BENEFIT) AS BENEFIT FROM DBA_ADVISOR_ACTIONS AA, DBA_ADVISOR_OBJECTS AO, DBA_ADVISOR_RECOMMENDATIONS AR WH
ERE AA.TASK_ID IN ( SELECT TASK_ID FROM DBA_ADVISOR_TASKS WHERE ADVISOR_ID=1 AND EXECUTION_START > :B1 AND STATUS='COMPLETED' AND HOW_C
REATED='AUTO') AND AA.COMMAND = 'RUN SEGMENT ADVISOR' AND AA.TASK_ID = AO.TASK_ID AND AA.OBJECT_ID = AO.OBJECT_ID AND AA.TASK_ID = AR.T
ASK_ID AND AA.REC_ID = AR.REC_ID GROUP BY AO.ATTR1 ORDER BY 2 DESC

000000008CAADA28
SELECT AO.ATTR1 OBJD, SUM(AR.BENEFIT) AS BENEFIT FROM DBA_ADVISOR_ACTIONS AA, DBA_ADVISOR_OBJECTS AO, DBA_ADVISOR_RECOMMENDATIONS AR WH
ERE AA.TASK_ID IN ( SELECT TASK_ID FROM DBA_ADVISOR_TASKS WHERE ADVISOR_ID=1 AND EXECUTION_START > :B1 AND STATUS='COMPLETED' AND HOW_C
REATED='AUTO') AND AA.COMMAND = 'RUN SEGMENT ADVISOR' AND AA.TASK_ID = AO.TASK_ID AND AA.OBJECT_ID = AO.OBJECT_ID AND AA.TASK_ID = AR.T
ASK_ID AND AA.REC_ID = AR.REC_ID GROUP BY AO.ATTR1 ORDER BY 2 DESC

000000008CA8A080
SELECT AO.ATTR1 OBJD, SUM(AR.BENEFIT) AS BENEFIT FROM DBA_ADVISOR_ACTIONS AA, DBA_ADVISOR_OBJECTS AO, DBA_ADVISOR_RECOMMENDATIONS AR WH
ERE AA.TASK_ID IN ( SELECT TASK_ID FROM DBA_ADVISOR_TASKS WHERE ADVISOR_ID=1 AND EXECUTION_START > :B1 AND STATUS='COMPLETED' AND HOW_C
REATED='AUTO') AND AA.COMMAND = 'RUN SEGMENT ADVISOR' AND AA.TASK_ID = AO.TASK_ID AND AA.OBJECT_ID = AO.OBJECT_ID AND AA.TASK_ID = AR.T
ASK_ID AND AA.REC_ID = AR.REC_ID GROUP BY AO.ATTR1 ORDER BY 2 DESC

0000000088D2F478
SELECT AO.ATTR1 OBJD, SUM(AR.BENEFIT) AS BENEFIT FROM DBA_ADVISOR_ACTIONS AA, DBA_ADVISOR_OBJECTS AO, DBA_ADVISOR_RECOMMENDATIONS AR WH
ERE AA.TASK_ID IN ( SELECT TASK_ID FROM DBA_ADVISOR_TASKS WHERE ADVISOR_ID=1 AND EXECUTION_START > :B1 AND STATUS='COMPLETED' AND HOW_C
REATED='AUTO') AND AA.COMMAND = 'RUN SEGMENT ADVISOR' AND AA.TASK_ID = AO.TASK_ID AND AA.OBJECT_ID = AO.OBJECT_ID AND AA.TASK_ID = AR.T
ASK_ID AND AA.REC_ID = AR.REC_ID GROUP BY AO.ATTR1 ORDER BY 2 DESC

0000000088E5C398 EXFSYS
RLM$RULESETPRIVS

000000008C9197C8
UPDATE SYS.WRI$_ADV_

000000008B18A820
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), count(distinct "INF"), sum(sys_op_opnsize("INF")) fro
m "SCOTT"."HASH_TABLE" t

0000000060CEB208
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), count(distinct "INF"), sum(sys_op_opnsize("INF")) fro
m "SCOTT"."HASH_TABLE" t

000000008B1E0BC8
select substrb(dump(

0000000088CA5538 SYS
WRI$_ADV_SQLT_BINDS

000000008CA929B0
1c19a7b9ed56a0b2bb09298b27fd69

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

000000008C88B9F0
select position, type from oparg$ where obj#=:1 and bind#=:2 order by position

0000000060F6D5C0
select position, type from oparg$ where obj#=:1 and bind#=:2 order by position

000000008B0E5E98
2aa0fe84cb9682cd33cc2edc5e5142d3

000000008C8A7410
select substrb(dump(

000000008C97DB98
DELETE FROM BSLN_STA

0000000060EF51B0
SELECT FINDING_ID, M

0000000088E33F78
delete from subcoltype$ where obj#=:1

000000008B38BBB0
delete from subcoltype$ where obj#=:1

000000008B0BE680
delete from jijoin$ where obj# in ( select obj# from jijoin$ where tab1obj# = :1 or tab2obj# = :1)

000000008B0D5EB8
delete from jijoin$ where obj# in ( select obj# from jijoin$ where tab1obj# = :1 or tab2obj# = :1)

000000008B0A4C00
select  FILE# , STATUS , CHANGE# , TIME from GV$BACKUP where inst_id = USERENV('Instance')

0000000060E3A920
select  FILE# , STATUS , CHANGE# , TIME from GV$BACKUP where inst_id = USERENV('Instance')

0000000060E32500
SELECT SUM(DECODE(ST

000000008CB917F8
1d2a49dba1050b20a6581da2231b1522

0000000092EB9018
71426d02602c009f7f47f611106344c

0000000092D83300
SYS

0000000088EAE6F0 $BUILD$
e51f1612432f9f16

000000008B16FF30
CREATE TABLE pdba (I

0000000088C64030
CREATE TABLE pdba (I

000000008C9C84A8 SYS
GV$LOGFILE

000000008CB9DAE8
SELECT :B15 TYPE_CON

0000000092CFD6B8 SYS
V_$LATCH_CHILDREN

0000000088FF60A0 SYS
SCHEDULER$_STEP_TYPE_LIST

000000008B101AB8
32042997f1da2c8c6f93fdafd1f259cb

000000008C890480 SYS
WRH$_LATCH_MISSES_SUMMARY

0000000060E8CCC8
62edd6cedf951470ab5a075620b35a11

000000008CAE2B70 SYS
DBMS_PRVT_TRACE

0000000092D264C8 SYS
V$MTTR_TARGET_ADVICE

0000000060D65C28 $BUILD$
9936922ad55fa6a4

000000008B2743C0
/* SQL Analyze(1) */

000000008CBD5610 SYS
GV$BACKUP

0000000092CB3A08
f17e21ef4ee04a3da07584a58d8e477e

000000008B059F60
SELECT COUNT(*) FROM

0000000092D18128
5f65c44a44536be3cc1d10cf4d82c1d

000000008B23F208 SYS
DBMS_OBFUSCATION_TOOLKIT_FFI

000000008CBB2A80 SYS
TYPE_MISC$

000000008CA1A660
SELECT NVL(MAX(LENGT

0000000092C6FFA0
da001182935df0fd5bbbf1c3821d1f5c

0000000092C47840
b49de9dfaceef79e39457c1637df3719

000000008CBD8190 SYS
X$KEWMDRMV

0000000088C5D298
8905de4368a318f028c6fe64885960e6

0000000092C84068 SYS
IND_STATS$

0000000088FD8750
SELECT COLUMN_NAME FROM DBA_PART_KEY_COLUMNS WHERE OWNER = :B2 AND NAME = :B1 AND OBJECT_TYPE ='TABLE' ORDER BY COLUMN_POSITION

000000008B077DA0
SELECT COLUMN_NAME FROM DBA_PART_KEY_COLUMNS WHERE OWNER = :B2 AND NAME = :B1 AND OBJECT_TYPE ='TABLE' ORDER BY COLUMN_POSITION

000000008CA03448 SYS
DBMS_STATS_INTERNAL

000000008C9ECD48
SELECT ORDRKEY, ORDR

0000000060D27C20
c0a6ad6492d445146ec894c2fc412bd9

0000000060C9B2B0
f0b32fa32a49ed4f4f2e201d28402a9a

0000000092D6E508
insert into con$(owner#,name,con#,spare1)values(:1,:2,:3,:4)

000000008C912358
insert into con$(owner#,name,con#,spare1)values(:1,:2,:3,:4)

0000000060D0F958
5a4aa9b4fd39ca8a2abaf1a1938a913e

0000000060F14160
delete from WRH$_COMP_IOSTAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CB163E8
delete from WRH$_COMP_IOSTAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

00000000653B01D0
select substrb(dump(

000000008B115E40
c986f5afb88afbf1a3ddb3bee2644bb

0000000088D70610
INSERT INTO WWV_FLOW

000000008CADCCC8
SELECT USERENV('SESS

0000000088E9AFB0
SELECT IP_ADDRESS SE

000000008B1236B8 SYS
UTL_ENCODE

000000008C9F15B0
87fdf86ca1795cbaa0ff66e4743765fb

0000000088EDC620
ae16995fde98af308a9009bfd918ad59

0000000088CA9D28
UPDATE WRI$_ADV_DEF_

0000000060E6A160
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "U#3")  */ 1 AS C1 FROM "SYS"."USER$" "U#3", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"
="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACHE',9,'SPACE HEA
DER','UNDEFINED') LIKE 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."TYPE#"<>8) AND ("S#1"
."TYPE#"<>10) AND ("S#1"."USER#"="U#3"."USER#"(+))) innerQuery

000000008CA04D40
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "U#3")  */ 1 AS C1 FROM "SYS"."USER$" "U#3", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"
="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACHE',9,'SPACE HEA
DER','UNDEFINED') LIKE 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."TYPE#"<>8) AND ("S#1"
."TYPE#"<>10) AND ("S#1"."USER#"="U#3"."USER#"(+))) innerQuery

000000008B1CA3F8
insert into objauth$(option$,grantor#,obj#,privilege#,grantee#,col#,sequence#) values(decode(:1,0,null,:1),:2,:3,:4,:5,decode(:6,0,null
,:6),object_grant.nextval)

0000000088F8F838
insert into objauth$(option$,grantor#,obj#,privilege#,grantee#,col#,sequence#) values(decode(:1,0,null,:1),:2,:3,:4,:5,decode(:6,0,null
,:6),object_grant.nextval)

000000008B2063F8
insert into objauth$(option$,grantor#,obj#,privilege#,grantee#,col#,sequence#) values(decode(:1,0,null,:1),:2,:3,:4,:5,decode(:6,0,null
,:6),object_grant.nextval)

000000008C92A1A8
SELECT COUNT(*),MAX(

0000000088F64988
f2d6cb38a80a635c45c79b2e2a949509

000000008B2929E8
dae7b38ee5c0c01df01d71c085963ce2

0000000092D57878
SELECT TO_NUMBER(ITE

000000008B3038D8
c5c579a24bfb0248e5519bf575ac256c

0000000060CE1A08
SELECT COUNT(*) FROM

000000008CA68430
select sys.dbms_standard.dictionary_obj_owner from dual

0000000088D29530
select sys.dbms_standard.dictionary_obj_owner from dual

000000008CBBED28
select sys.dbms_standard.dictionary_obj_owner from dual

000000008CA688B0
select sys.dbms_standard.dictionary_obj_owner from dual

0000000088EB55A0
SELECT F.FINDING_NAM

0000000088E160A8
insert into   WRI$_DBU_CPU_USAGE(dbid, version, timestamp,                      cpu_count, cpu_core_count, cpu_socket_count) select :db
id, :version, :bind1,        gv.gv_cpu_count, gv.gv_cpu_core_count, gv.gv_cpu_socket_count  from   (select sum(cpu_count_current)
  as gv_cpu_count,           sum(cpu_core_count_current)   as gv_cpu_core_count,           sum(cpu_socket_count_current) as gv_cpu_sock
et_count      from GV$LICENSE) gv  where (nvl(gv_cpu_count,        -1),         nvl(gv_cpu_core_count,   -1),         nvl(gv_cpu_socket
_count, -1))   not in (select nvl(cpu_count,        -1) as cu_cpu_count,                  nvl(cpu_core_count,   -1) as cu_cpu_core_coun
t,                  nvl(cpu_socket_count, -1) as cu_cpu_socket_count           from (select cpu_count, cpu_core_count, cpu_socket_count
                   from WRI$_DBU_CPU_USAGE                  order by timestamp desc)            where rownum <= 1)

000000008B3BA1D8
insert into   WRI$_DBU_CPU_USAGE(dbid, version, timestamp,                      cpu_count, cpu_core_count, cpu_socket_count) select :db
id, :version, :bind1,        gv.gv_cpu_count, gv.gv_cpu_core_count, gv.gv_cpu_socket_count  from   (select sum(cpu_count_current)
  as gv_cpu_count,           sum(cpu_core_count_current)   as gv_cpu_core_count,           sum(cpu_socket_count_current) as gv_cpu_sock
et_count      from GV$LICENSE) gv  where (nvl(gv_cpu_count,        -1),         nvl(gv_cpu_core_count,   -1),         nvl(gv_cpu_socket
_count, -1))   not in (select nvl(cpu_count,        -1) as cu_cpu_count,                  nvl(cpu_core_count,   -1) as cu_cpu_core_coun
t,                  nvl(cpu_socket_count, -1) as cu_cpu_socket_count           from (select cpu_count, cpu_core_count, cpu_socket_count
                   from WRI$_DBU_CPU_USAGE                  order by timestamp desc)            where rownum <= 1)

000000008B05CB40
DELETE FROM SYS.WRI$

000000008B34DB38
SELECT A.RECID, A.RE

0000000088EC2980
update sys.scheduler$_global_attribute set  value = :1, flags = :2, modified_inst = :3, additional_info = :4, attr_tstamp = :5, attr_in
tv = :6 where  obj# = :7

0000000060FF8E38
update sys.scheduler$_global_attribute set  value = :1, flags = :2, modified_inst = :3, additional_info = :4, attr_tstamp = :5, attr_in
tv = :6 where  obj# = :7

000000008C9A2938
update sys.scheduler$_global_attribute set  value = :1, flags = :2, modified_inst = :3, additional_info = :4, attr_tstamp = :5, attr_in
tv = :6 where  obj# = :7

0000000060E642B0
update sys.scheduler$_global_attribute set  value = :1, flags = :2, modified_inst = :3, additional_info = :4, attr_tstamp = :5, attr_in
tv = :6 where  obj# = :7

000000008B268AB8
update sys.scheduler$_global_attribute set  value = :1, flags = :2, modified_inst = :3, additional_info = :4, attr_tstamp = :5, attr_in
tv = :6 where  obj# = :7

0000000088D01DE8
SELECT P.VALCHAR FROM SYS.OPTSTAT_USER_PREFS$ P, OBJ$ O, USER$ U WHERE P.OBJ#=O.OBJ# AND U.USER#=O.OWNER# AND U.NAME=:B3 AND O.NAME=:B2
 AND P.PNAME=:B1

000000008CB5C270
SELECT P.VALCHAR FROM SYS.OPTSTAT_USER_PREFS$ P, OBJ$ O, USER$ U WHERE P.OBJ#=O.OBJ# AND U.USER#=O.OWNER# AND U.NAME=:B3 AND O.NAME=:B2
 AND P.PNAME=:B1

000000008B06E8B0
SELECT P.VALCHAR FROM SYS.OPTSTAT_USER_PREFS$ P, OBJ$ O, USER$ U WHERE P.OBJ#=O.OBJ# AND U.USER#=O.OWNER# AND U.NAME=:B3 AND O.NAME=:B2
 AND P.PNAME=:B1

000000008B1A75D8
f6e6d26dde8eb316b40306b4ee932790

0000000088F50088
6869d2c4ecf33741ef4cee37371f0292

0000000088DC64B0
bc414735d653fcabe490d532c16840b9

0000000088E85120
7ce3df281c2113714e1d898a3ece851d

000000008CA870F8
SELECT S.DESTINATION

0000000088C9F188
SELECT R.ATTR5 FROM

0000000088E7E950 $BUILD$
2a5637b7f9184853

0000000088EB8D90
DELETE FROM SYS.SCHE

0000000060EDB5D0
SELECT NVL(MIN(BP.SE

0000000060DA12B0
191400d59d1dc962d7ae71549d332e54

000000008B0BE7F0 PUBLIC
UTL_RAW

0000000088FA6018
/* SQL Analyze(1) */

0000000060C9A650 SYS
DBMS_AQ_LIB

0000000060F70D20
1af1bdbc4085268991935745cf9b2e3d

000000008B3D9F68
558efbca1489645648b8cdc4a0f67bf

0000000088FC5F48
f008bcfc973ba8f11ba988f9a820b824

0000000088F3DDF8
758d300eb7cb72ec34dea88a817b3c73

0000000060E6EC80
UPDATE sys.wri$_adv_objects SET attr2=:0, attr7=:1 WHERE task_id=:2 and id=:3 RETURNING rowid into :4

0000000092C34CF8
UPDATE sys.wri$_adv_objects SET attr2=:0, attr7=:1 WHERE task_id=:2 and id=:3 RETURNING rowid into :4

000000008C9897A8
UPDATE sys.wri$_adv_objects SET attr2=:0, attr7=:1 WHERE task_id=:2 and id=:3 RETURNING rowid into :4

0000000088F184E8 SYS
DBMS_OUTPUT

0000000092D388C8
SELECT :B1 TYPE, BP.

000000008CB369A8
SELECT D.CONNECT_INF

0000000060CC7860
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."STATS_TARGET$" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

000000008B3F0660
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."STATS_TARGET$" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

0000000060CC7CE0
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."STATS_TARGET$" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

0000000088D25300
select obj# from objerror$

000000008CBCD7F8
select obj# from objerror$

0000000088E43E38
select obj# from objerror$

0000000088D25780
select obj# from objerror$

0000000092D10AD8
select substrb(dump(

000000008C8A21B0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0AA190
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B27B588
select owner, index_name, 'N/A' partition_name, table_name from dba_indexes where status <> 'VALID' and PARTITIONED<>'YES' and owner <>
 'SYSTEM' union all select a.index_owner owner,a.index_name index_name,a.partition_name partition_name,b.table_name from dba_ind_partit
ions a,dba_indexes b where a.index_name=b.index_name and a.index_owner=b.owner and b.owner<>'SYSTEM' and a.status<>'USABLE' order by ow
ner,index_name,partition_name

0000000060D98D28
select owner, index_name, 'N/A' partition_name, table_name from dba_indexes where status <> 'VALID' and PARTITIONED<>'YES' and owner <>
 'SYSTEM' union all select a.index_owner owner,a.index_name index_name,a.partition_name partition_name,b.table_name from dba_ind_partit
ions a,dba_indexes b where a.index_name=b.index_name and a.index_owner=b.owner and b.owner<>'SYSTEM' and a.status<>'USABLE' order by ow
ner,index_name,partition_name

0000000060E99AB0
fd330516529c4d986ed71746c47acfc2

0000000088E2CE78
delete coltype$ where obj#=:1

000000008CAF9488
delete coltype$ where obj#=:1

000000008B06F380
SELECT CASE WHEN BIT

000000008C8A8450 SYS
WRH$_SHARED_SERVER_SUMMARY

0000000092D82AB0
8d20935fea25c124a919825597878bc7

0000000060E463C8 PUBLIC
DICT

0000000092C4D488 SYS
_BASE_USER

0000000088E79D10 SYS
WRH$_BUFFER_POOL_STATISTICS

0000000088DE4B20 SYS
DBA_OBJECTS

000000008B14EC98
SELECT T.FLAGS, T.OB

000000008B1655B0 SYS
KU$_DDLS

0000000088D94B58 $BUILD$
555dbe9be48e91b0

000000008C865C28 SYSTEM
LOGSTDBY$FLASHBACK_SCN

0000000088E23608
UPDATE /*+ UNNEST(@SEL$1)             LEADING(@SEL$3FF8579E               VW_NSO_1@SEL$3FF8579E STX@UPD$1)             USE_NL(@SEL$3FF8
579E STX@UPD$1)             INDEX(@SEL$3FF8579E STX@UPD$1               (WRI$_SQLTEXT_REFCOUNT.DBID                WRI$_SQLTEXT_REFCOUN
T.SQL_ID)) */         wri$_sqltext_refcount stx  SET stx.ref_count = stx.ref_count + 1  WHERE sql_id IN         (SELECT sqlid_kewrsie F
ROM x$kewrsqlidtab)        AND stx.dbid = :dbid

000000008B290EE0
UPDATE /*+ UNNEST(@SEL$1)             LEADING(@SEL$3FF8579E               VW_NSO_1@SEL$3FF8579E STX@UPD$1)             USE_NL(@SEL$3FF8
579E STX@UPD$1)             INDEX(@SEL$3FF8579E STX@UPD$1               (WRI$_SQLTEXT_REFCOUNT.DBID                WRI$_SQLTEXT_REFCOUN
T.SQL_ID)) */         wri$_sqltext_refcount stx  SET stx.ref_count = stx.ref_count + 1  WHERE sql_id IN         (SELECT sqlid_kewrsie F
ROM x$kewrsqlidtab)        AND stx.dbid = :dbid

0000000060EEE100
UPDATE /*+ UNNEST(@SEL$1)             LEADING(@SEL$3FF8579E               VW_NSO_1@SEL$3FF8579E STX@UPD$1)             USE_NL(@SEL$3FF8
579E STX@UPD$1)             INDEX(@SEL$3FF8579E STX@UPD$1               (WRI$_SQLTEXT_REFCOUNT.DBID                WRI$_SQLTEXT_REFCOUN
T.SQL_ID)) */         wri$_sqltext_refcount stx  SET stx.ref_count = stx.ref_count + 1  WHERE sql_id IN         (SELECT sqlid_kewrsie F
ROM x$kewrsqlidtab)        AND stx.dbid = :dbid

00000000653F78A0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C945628
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B1F0308
select distinct set_id from x$kcbwds

0000000088FA47D8
select distinct set_id from x$kcbwds

0000000060E85D20
alter session set st

0000000060E913E0
SELECT PE.PRIM_ATTR

0000000092C41678
4249278189569389089

0000000088E61628
9dea72c9223c0aa4dfce45230b9a84

0000000088E9B700
49b94a2bd3902d97760b04fbf1104f0

0000000092C82198
33b13ff338eb194cb6858e4628cb372b

0000000092D1AD68 SYS
X$KEWRATTRSTALE

0000000088E49418
insert into wrh$_pga_target_advice   (snap_id, dbid, instance_number, pga_target_for_estimate,    pga_target_factor, advice_status, byt
es_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_percentage, estd_overalloc_count, estd_time)  select    :snap_id, :dbid, :inst
ance_number, pga_target_for_estimate,    pga_target_factor, advice_status, bytes_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_
percentage, estd_overalloc_count, estd_time  from    v$pga_target_advice  where    advice_status = 'ON'

000000008B03CDF8
insert into wrh$_pga_target_advice   (snap_id, dbid, instance_number, pga_target_for_estimate,    pga_target_factor, advice_status, byt
es_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_percentage, estd_overalloc_count, estd_time)  select    :snap_id, :dbid, :inst
ance_number, pga_target_for_estimate,    pga_target_factor, advice_status, bytes_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_
percentage, estd_overalloc_count, estd_time  from    v$pga_target_advice  where    advice_status = 'ON'

000000008B2714C8
insert into wrh$_pga_target_advice   (snap_id, dbid, instance_number, pga_target_for_estimate,    pga_target_factor, advice_status, byt
es_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_percentage, estd_overalloc_count, estd_time)  select    :snap_id, :dbid, :inst
ance_number, pga_target_for_estimate,    pga_target_factor, advice_status, bytes_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_
percentage, estd_overalloc_count, estd_time  from    v$pga_target_advice  where    advice_status = 'ON'

000000008B28C5C8
insert into wrh$_pga_target_advice   (snap_id, dbid, instance_number, pga_target_for_estimate,    pga_target_factor, advice_status, byt
es_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_percentage, estd_overalloc_count, estd_time)  select    :snap_id, :dbid, :inst
ance_number, pga_target_for_estimate,    pga_target_factor, advice_status, bytes_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_
percentage, estd_overalloc_count, estd_time  from    v$pga_target_advice  where    advice_status = 'ON'

0000000088DD0838
insert into wrh$_pga_target_advice   (snap_id, dbid, instance_number, pga_target_for_estimate,    pga_target_factor, advice_status, byt
es_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_percentage, estd_overalloc_count, estd_time)  select    :snap_id, :dbid, :inst
ance_number, pga_target_for_estimate,    pga_target_factor, advice_status, bytes_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_
percentage, estd_overalloc_count, estd_time  from    v$pga_target_advice  where    advice_status = 'ON'

0000000088E49898
insert into wrh$_pga_target_advice   (snap_id, dbid, instance_number, pga_target_for_estimate,    pga_target_factor, advice_status, byt
es_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_percentage, estd_overalloc_count, estd_time)  select    :snap_id, :dbid, :inst
ance_number, pga_target_for_estimate,    pga_target_factor, advice_status, bytes_processed, estd_extra_bytes_rw,    estd_pga_cache_hit_
percentage, estd_overalloc_count, estd_time  from    v$pga_target_advice  where    advice_status = 'ON'

000000008CAF3838
select actionsize from trigger$ where obj# = :1

0000000088D302F8
select actionsize from trigger$ where obj# = :1

000000008CAF3CB8
select actionsize from trigger$ where obj# = :1

000000008C884F80
875c00da886952da9c1d62e641eef1d3

000000008B060450
SELECT SVAL2 FROM SY

000000008B170810
UPDATE RLM$COLLGRPBY

000000008B06DA60
SELECT /*+ ordered f

0000000088CF67A8
e90cf42d4ff5884c9a99760eca490471

0000000088C9D068
SELECT R.ID REC_ID,

000000008C927508
SELECT EXEC_MTIME FR

0000000088E992C0 SYS
X$KSUVMSTAT

0000000060C5EDD0
/* SQL Analyze(37,1) */ select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as
object_name,         ob.subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW
',5, 'SYNONYM',          6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          1
4,'TYPE BODY',19, 'TABLE PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SO
URCE', 29, 'JAVA CLASS', 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,
'LOB PARTITION', 41, 'LOB SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',
  48, 'CONSUMER GROUP',          51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY
 PROFILE', 59, 'RULE',          60, 'CAPTURE', 61, 'APP

0000000088F6BDD8
/* SQL Analyze(37,1) */ select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as
object_name,         ob.subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW
',5, 'SYNONYM',          6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          1
4,'TYPE BODY',19, 'TABLE PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SO
URCE', 29, 'JAVA CLASS', 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,
'LOB PARTITION', 41, 'LOB SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',
  48, 'CONSUMER GROUP',          51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY
 PROFILE', 59, 'RULE',          60, 'CAPTURE', 61, 'APP

000000008B1F2020
/* SQL Analyze(37,1) */ select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as
object_name,         ob.subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW
',5, 'SYNONYM',          6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          1
4,'TYPE BODY',19, 'TABLE PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SO
URCE', 29, 'JAVA CLASS', 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,
'LOB PARTITION', 41, 'LOB SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',
  48, 'CONSUMER GROUP',          51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY
 PROFILE', 59, 'RULE',          60, 'CAPTURE', 61, 'APP

000000006535E1E0
/* SQL Analyze(37,1) */ select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as
object_name,         ob.subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW
',5, 'SYNONYM',          6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          1
4,'TYPE BODY',19, 'TABLE PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SO
URCE', 29, 'JAVA CLASS', 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,
'LOB PARTITION', 41, 'LOB SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',
  48, 'CONSUMER GROUP',          51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY
 PROFILE', 59, 'RULE',          60, 'CAPTURE', 61, 'APP

000000006535DC90
/* SQL Analyze(37,1) */ select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as
object_name,         ob.subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW
',5, 'SYNONYM',          6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          1
4,'TYPE BODY',19, 'TABLE PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SO
URCE', 29, 'JAVA CLASS', 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,
'LOB PARTITION', 41, 'LOB SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',
  48, 'CONSUMER GROUP',          51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY
 PROFILE', 59, 'RULE',          60, 'CAPTURE', 61, 'APP

000000006535D650
/* SQL Analyze(37,1) */ select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as
object_name,         ob.subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW
',5, 'SYNONYM',          6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          1
4,'TYPE BODY',19, 'TABLE PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SO
URCE', 29, 'JAVA CLASS', 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,
'LOB PARTITION', 41, 'LOB SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',
  48, 'CONSUMER GROUP',          51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY
 PROFILE', 59, 'RULE',          60, 'CAPTURE', 61, 'APP

0000000060C5F250
/* SQL Analyze(37,1) */ select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as
object_name,         ob.subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW
',5, 'SYNONYM',          6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          1
4,'TYPE BODY',19, 'TABLE PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SO
URCE', 29, 'JAVA CLASS', 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,
'LOB PARTITION', 41, 'LOB SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',
  48, 'CONSUMER GROUP',          51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY
 PROFILE', 59, 'RULE',          60, 'CAPTURE', 61, 'APP

000000008B1D3808
SELECT :B1 TYPE, DC.

000000008CA2D0C0 SYS
WRH$_MUTEX_SLEEP

0000000088F559A0
abfc131ccaaa710bf41eebfee8643e11

000000008CB4EA48 SYS
DBMS_LOCK

000000008C853E68
UPDATE RLM$EQUALSPEC

000000008B1519B8
SELECT APPLY_NAME FR

00000000653F44E0
ea51e4e981cdb702c67df44a78d2a431

000000008C95C140
select substrb(dump(

0000000092C88AF8 SYS
X$IR_REPAIR_OPTION

000000008B07FA90
SELECT A.NAME FROM A

0000000060EF1DD0
SELECT T.TIMEZONE FR

000000008B3B7458 SYS
ALL_OBJECTS

000000008CBECDB8 PUBLIC
B

000000008B1D7CB8 SYS
DBMS_ANYDATA_LIB

000000008B3A3AA8 DBSNMP
BSLN_METRIC_SET

000000008B35B8E0
SELECT MAX(NEXT_CHAN

0000000088EC1720
75f4ef4d47a4be4e1cf6f83f55501255

0000000092D2F348
select o.name from obj$ o, refcon$ r where o.oid$ = r.expctoid and r.obj# = :1

0000000092CA69F8
select o.name from obj$ o, refcon$ r where o.oid$ = r.expctoid and r.obj# = :1

000000008CB91018
MERGE INTO SYS.MON_MODS_ALL$ MM USING ( SELECT /*+ ordered */ DISTINCT TAB.OBJ# FROM (SELECT T.OBJ# OBJ#, T.OBJ# BO#, T.ANALYZETIME FRO
M SYS.TAB$ T WHERE BITAND(T.FLAGS,16) = 16 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABPART$ T WHERE BITAND(T.FL
AGS,2) = 2 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABCOMPART$ T WHERE BITAND(T.FLAGS,2) = 2 UNION ALL SELECT T
.OBJ# OBJ#, TCP.BO# BO#, T.ANALYZETIME FROM SYS.TABSUBPART$ T, SYS.TABCOMPART$ TCP WHERE BITAND(T.FLAGS,2) = 2 AND T.POBJ# = TCP.OBJ# )
 TAB, OBJ$ O, SYS.COL$ C WHERE TAB.BO# = O.OBJ# AND TAB.ANALYZETIME < O.MTIME AND C.OBJ# = TAB.BO# AND C.TYPE# IN ( 1, 2, 12, 23, 69, 9
6, 100, 101, 178, 179, 180, 181, 182, 183, 231) AND BITAND(C.PROPERTY, 16384+32768) = 0 AND NOT (BITAND(C.PROPERTY, 32+65536+131072) =
32+65536 AND C.DEFAULT$ IS NULL ) AND NOT EXISTS (SELECT /*+ unnest */ NULL FROM HIST_HEAD$ HH WHERE HH.OBJ# = TAB.OBJ# AND HH.INTCOL#
= C.INTCOL#) ) MCS ON (MM.OBJ# = MCS.OBJ#) WHEN MATCHED

000000008C87FAD0
MERGE INTO SYS.MON_MODS_ALL$ MM USING ( SELECT /*+ ordered */ DISTINCT TAB.OBJ# FROM (SELECT T.OBJ# OBJ#, T.OBJ# BO#, T.ANALYZETIME FRO
M SYS.TAB$ T WHERE BITAND(T.FLAGS,16) = 16 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABPART$ T WHERE BITAND(T.FL
AGS,2) = 2 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABCOMPART$ T WHERE BITAND(T.FLAGS,2) = 2 UNION ALL SELECT T
.OBJ# OBJ#, TCP.BO# BO#, T.ANALYZETIME FROM SYS.TABSUBPART$ T, SYS.TABCOMPART$ TCP WHERE BITAND(T.FLAGS,2) = 2 AND T.POBJ# = TCP.OBJ# )
 TAB, OBJ$ O, SYS.COL$ C WHERE TAB.BO# = O.OBJ# AND TAB.ANALYZETIME < O.MTIME AND C.OBJ# = TAB.BO# AND C.TYPE# IN ( 1, 2, 12, 23, 69, 9
6, 100, 101, 178, 179, 180, 181, 182, 183, 231) AND BITAND(C.PROPERTY, 16384+32768) = 0 AND NOT (BITAND(C.PROPERTY, 32+65536+131072) =
32+65536 AND C.DEFAULT$ IS NULL ) AND NOT EXISTS (SELECT /*+ unnest */ NULL FROM HIST_HEAD$ HH WHERE HH.OBJ# = TAB.OBJ# AND HH.INTCOL#
= C.INTCOL#) ) MCS ON (MM.OBJ# = MCS.OBJ#) WHEN MATCHED

0000000092D4FCA8
MERGE INTO SYS.MON_MODS_ALL$ MM USING ( SELECT /*+ ordered */ DISTINCT TAB.OBJ# FROM (SELECT T.OBJ# OBJ#, T.OBJ# BO#, T.ANALYZETIME FRO
M SYS.TAB$ T WHERE BITAND(T.FLAGS,16) = 16 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABPART$ T WHERE BITAND(T.FL
AGS,2) = 2 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABCOMPART$ T WHERE BITAND(T.FLAGS,2) = 2 UNION ALL SELECT T
.OBJ# OBJ#, TCP.BO# BO#, T.ANALYZETIME FROM SYS.TABSUBPART$ T, SYS.TABCOMPART$ TCP WHERE BITAND(T.FLAGS,2) = 2 AND T.POBJ# = TCP.OBJ# )
 TAB, OBJ$ O, SYS.COL$ C WHERE TAB.BO# = O.OBJ# AND TAB.ANALYZETIME < O.MTIME AND C.OBJ# = TAB.BO# AND C.TYPE# IN ( 1, 2, 12, 23, 69, 9
6, 100, 101, 178, 179, 180, 181, 182, 183, 231) AND BITAND(C.PROPERTY, 16384+32768) = 0 AND NOT (BITAND(C.PROPERTY, 32+65536+131072) =
32+65536 AND C.DEFAULT$ IS NULL ) AND NOT EXISTS (SELECT /*+ unnest */ NULL FROM HIST_HEAD$ HH WHERE HH.OBJ# = TAB.OBJ# AND HH.INTCOL#
= C.INTCOL#) ) MCS ON (MM.OBJ# = MCS.OBJ#) WHEN MATCHED

000000008B093B80
MERGE INTO SYS.MON_MODS_ALL$ MM USING ( SELECT /*+ ordered */ DISTINCT TAB.OBJ# FROM (SELECT T.OBJ# OBJ#, T.OBJ# BO#, T.ANALYZETIME FRO
M SYS.TAB$ T WHERE BITAND(T.FLAGS,16) = 16 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABPART$ T WHERE BITAND(T.FL
AGS,2) = 2 UNION ALL SELECT T.OBJ# OBJ#, T.BO# BO#, T.ANALYZETIME FROM SYS.TABCOMPART$ T WHERE BITAND(T.FLAGS,2) = 2 UNION ALL SELECT T
.OBJ# OBJ#, TCP.BO# BO#, T.ANALYZETIME FROM SYS.TABSUBPART$ T, SYS.TABCOMPART$ TCP WHERE BITAND(T.FLAGS,2) = 2 AND T.POBJ# = TCP.OBJ# )
 TAB, OBJ$ O, SYS.COL$ C WHERE TAB.BO# = O.OBJ# AND TAB.ANALYZETIME < O.MTIME AND C.OBJ# = TAB.BO# AND C.TYPE# IN ( 1, 2, 12, 23, 69, 9
6, 100, 101, 178, 179, 180, 181, 182, 183, 231) AND BITAND(C.PROPERTY, 16384+32768) = 0 AND NOT (BITAND(C.PROPERTY, 32+65536+131072) =
32+65536 AND C.DEFAULT$ IS NULL ) AND NOT EXISTS (SELECT /*+ unnest */ NULL FROM HIST_HEAD$ HH WHERE HH.OBJ# = TAB.OBJ# AND HH.INTCOL#
= C.INTCOL#) ) MCS ON (MM.OBJ# = MCS.OBJ#) WHEN MATCHED

000000008B274180
SELECT 16*1024*24*60

0000000060D17310
7cda76911a5aef12ec66a7ea377b0865

0000000060E51440
SELECT :B12 TYPE_CON

0000000088ED1F90
4964899aa62acb46e16206162cdd849d

0000000060FD7410
select program_oid, schedule_expr, schedule_id, queue_owner, queue_name,         queue_agent, event_rule, mxdur_msgid, last_enabled_tim
e, class_oid,         next_run_date, last_start_date, last_end_date, retry_count,         run_count, failure_count, running_instance, r
unning_slave, flags,         job_status, creator, client_id, guid, char_env, start_date, end_date,         instance_id, fw_name, fw_oid
, destination, credential_name,         credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker,         program_action, s
chedule_limit,         priority, job_weight, number_of_args, max_runs, max_failures,         max_run_duration, comments, user_callback,
 user_callback_ctx,         nls_env, source, env, database_role, owner_udn, dist_flags  from sys.scheduler$_job  where obj# = :1

0000000060DDEA10
select program_oid, schedule_expr, schedule_id, queue_owner, queue_name,         queue_agent, event_rule, mxdur_msgid, last_enabled_tim
e, class_oid,         next_run_date, last_start_date, last_end_date, retry_count,         run_count, failure_count, running_instance, r
unning_slave, flags,         job_status, creator, client_id, guid, char_env, start_date, end_date,         instance_id, fw_name, fw_oid
, destination, credential_name,         credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker,         program_action, s
chedule_limit,         priority, job_weight, number_of_args, max_runs, max_failures,         max_run_duration, comments, user_callback,
 user_callback_ctx,         nls_env, source, env, database_role, owner_udn, dist_flags  from sys.scheduler$_job  where obj# = :1

0000000060C635D0
select program_oid, schedule_expr, schedule_id, queue_owner, queue_name,         queue_agent, event_rule, mxdur_msgid, last_enabled_tim
e, class_oid,         next_run_date, last_start_date, last_end_date, retry_count,         run_count, failure_count, running_instance, r
unning_slave, flags,         job_status, creator, client_id, guid, char_env, start_date, end_date,         instance_id, fw_name, fw_oid
, destination, credential_name,         credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker,         program_action, s
chedule_limit,         priority, job_weight, number_of_args, max_runs, max_failures,         max_run_duration, comments, user_callback,
 user_callback_ctx,         nls_env, source, env, database_role, owner_udn, dist_flags  from sys.scheduler$_job  where obj# = :1

0000000060CFA058
select program_oid, schedule_expr, schedule_id, queue_owner, queue_name,         queue_agent, event_rule, mxdur_msgid, last_enabled_tim
e, class_oid,         next_run_date, last_start_date, last_end_date, retry_count,         run_count, failure_count, running_instance, r
unning_slave, flags,         job_status, creator, client_id, guid, char_env, start_date, end_date,         instance_id, fw_name, fw_oid
, destination, credential_name,         credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker,         program_action, s
chedule_limit,         priority, job_weight, number_of_args, max_runs, max_failures,         max_run_duration, comments, user_callback,
 user_callback_ctx,         nls_env, source, env, database_role, owner_udn, dist_flags  from sys.scheduler$_job  where obj# = :1

000000008B332F50
select program_oid, schedule_expr, schedule_id, queue_owner, queue_name,         queue_agent, event_rule, mxdur_msgid, last_enabled_tim
e, class_oid,         next_run_date, last_start_date, last_end_date, retry_count,         run_count, failure_count, running_instance, r
unning_slave, flags,         job_status, creator, client_id, guid, char_env, start_date, end_date,         instance_id, fw_name, fw_oid
, destination, credential_name,         credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker,         program_action, s
chedule_limit,         priority, job_weight, number_of_args, max_runs, max_failures,         max_run_duration, comments, user_callback,
 user_callback_ctx,         nls_env, source, env, database_role, owner_udn, dist_flags  from sys.scheduler$_job  where obj# = :1

000000008B0C2940
select substrb(dump(

000000008B3AA1E8 SYS
DBA_HIST_WR_CONTROL

0000000088EF1210 PUBLIC
DBA_TAB_COLUMNS

000000008CB0DDE0
select timestamp, flags from fixed_obj$ where obj#=:1

000000008B34EFA0
select timestamp, flags from fixed_obj$ where obj#=:1

0000000088CFCC60
select timestamp, flags from fixed_obj$ where obj#=:1

000000008B343130
select timestamp, flags from fixed_obj$ where obj#=:1

000000008CB85D28
select timestamp, flags from fixed_obj$ where obj#=:1

000000008CB0E260
select timestamp, flags from fixed_obj$ where obj#=:1

000000008CB5B900
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 152

000000008C984540
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 152

0000000088EE02B0
MERGE /*+ opt_param('_optimizer_mjc_enabled','false') */ INTO wrh$_datafile dfh USING (  SELECT /*+ ordered */          dfh0.dbid,
     dfh0.file#,          dfh0.creation_change#,          ts.name  tsname,          v.name   name     FROM v$dbfile      v,          fi
le$         f,          ts$           ts,          wrh$_datafile dfh0    WHERE dfh0.dbid    = :dbid      AND dfh0.snap_id < :snap_id
   AND dfh0.file#   = f.file#      AND dfh0.creation_change# =  f.crscnbas + (f.crscnwrp * power(2,32))      AND f.status$    = 2
AND f.ts#        = ts.ts#      AND f.file#      = v.file#) s ON  (dfh.dbid             = s.dbid  AND dfh.file#            = s.file#  AN
D dfh.creation_change# = s.creation_change#) WHEN MATCHED THEN  UPDATE SET snap_id  = :lah_snap_id,            filename = s.name,
      tsname   = s.tsname

000000008B35D6A8
MERGE /*+ opt_param('_optimizer_mjc_enabled','false') */ INTO wrh$_datafile dfh USING (  SELECT /*+ ordered */          dfh0.dbid,
     dfh0.file#,          dfh0.creation_change#,          ts.name  tsname,          v.name   name     FROM v$dbfile      v,          fi
le$         f,          ts$           ts,          wrh$_datafile dfh0    WHERE dfh0.dbid    = :dbid      AND dfh0.snap_id < :snap_id
   AND dfh0.file#   = f.file#      AND dfh0.creation_change# =  f.crscnbas + (f.crscnwrp * power(2,32))      AND f.status$    = 2
AND f.ts#        = ts.ts#      AND f.file#      = v.file#) s ON  (dfh.dbid             = s.dbid  AND dfh.file#            = s.file#  AN
D dfh.creation_change# = s.creation_change#) WHEN MATCHED THEN  UPDATE SET snap_id  = :lah_snap_id,            filename = s.name,
      tsname   = s.tsname

0000000088EE0730
MERGE /*+ opt_param('_optimizer_mjc_enabled','false') */ INTO wrh$_datafile dfh USING (  SELECT /*+ ordered */          dfh0.dbid,
     dfh0.file#,          dfh0.creation_change#,          ts.name  tsname,          v.name   name     FROM v$dbfile      v,          fi
le$         f,          ts$           ts,          wrh$_datafile dfh0    WHERE dfh0.dbid    = :dbid      AND dfh0.snap_id < :snap_id
   AND dfh0.file#   = f.file#      AND dfh0.creation_change# =  f.crscnbas + (f.crscnwrp * power(2,32))      AND f.status$    = 2
AND f.ts#        = ts.ts#      AND f.file#      = v.file#) s ON  (dfh.dbid             = s.dbid  AND dfh.file#            = s.file#  AN
D dfh.creation_change# = s.creation_change#) WHEN MATCHED THEN  UPDATE SET snap_id  = :lah_snap_id,            filename = s.name,
      tsname   = s.tsname

0000000088E4E5F8
1d5cd4af9c30e2277b6d6177c0a8ee5

000000008B055DD0
SELECT SUBNAME FROM

0000000088E64A00 SYS
RESOURCE_PLAN_DIRECTIVE$

000000008CA0E4F0 SYS
WRH$_ACTIVE_SESSION_HISTORY_BL

0000000092D598D8
c262940875b805f4a2504ede7915af4e

0000000088DC37D8
c9af8b97df23a3386e199fbf39fec2

0000000088FEF600
WITH UNQIDX AS (SELECT /*+ index(cc) */ CD.CON#,CC.INTCOL# FROM SYS.CCOL$ CC, SYS.CDEF$ CD WHERE CC.OBJ# = :B2 AND CD.CON# = CC.CON# AN
D CD.OBJ# = CC.OBJ# AND CD.ENABLED IS NOT NULL AND CD.INTCOLS <= :B1 AND CD.TYPE# IN (2,3) UNION ALL SELECT /*+ index(i) index(ic) */ I
.OBJ#,IC.INTCOL# FROM SYS.IND$ I, SYS.ICOL$ IC WHERE I.BO# = :B2 AND I.OBJ# = IC.OBJ# AND I.INTCOLS <= :B1 AND BITAND(PROPERTY,1) = 1 A
ND BITAND(FLAGS,1025) = 0) SELECT CON# FROM UNQIDX WHERE CON# NOT IN (SELECT /*+ no_unnest */ CON# FROM UNQIDX WHERE INTCOL# NOT IN (SE
LECT /*+ no_unnest index(ic) */ INTCOL# FROM ICOL$ IC WHERE OBJ#=:B3 )) AND ROWNUM <= 1

0000000060FC0030
WITH UNQIDX AS (SELECT /*+ index(cc) */ CD.CON#,CC.INTCOL# FROM SYS.CCOL$ CC, SYS.CDEF$ CD WHERE CC.OBJ# = :B2 AND CD.CON# = CC.CON# AN
D CD.OBJ# = CC.OBJ# AND CD.ENABLED IS NOT NULL AND CD.INTCOLS <= :B1 AND CD.TYPE# IN (2,3) UNION ALL SELECT /*+ index(i) index(ic) */ I
.OBJ#,IC.INTCOL# FROM SYS.IND$ I, SYS.ICOL$ IC WHERE I.BO# = :B2 AND I.OBJ# = IC.OBJ# AND I.INTCOLS <= :B1 AND BITAND(PROPERTY,1) = 1 A
ND BITAND(FLAGS,1025) = 0) SELECT CON# FROM UNQIDX WHERE CON# NOT IN (SELECT /*+ no_unnest */ CON# FROM UNQIDX WHERE INTCOL# NOT IN (SE
LECT /*+ no_unnest index(ic) */ INTCOL# FROM ICOL$ IC WHERE OBJ#=:B3 )) AND ROWNUM <= 1

000000008B073270
WITH UNQIDX AS (SELECT /*+ index(cc) */ CD.CON#,CC.INTCOL# FROM SYS.CCOL$ CC, SYS.CDEF$ CD WHERE CC.OBJ# = :B2 AND CD.CON# = CC.CON# AN
D CD.OBJ# = CC.OBJ# AND CD.ENABLED IS NOT NULL AND CD.INTCOLS <= :B1 AND CD.TYPE# IN (2,3) UNION ALL SELECT /*+ index(i) index(ic) */ I
.OBJ#,IC.INTCOL# FROM SYS.IND$ I, SYS.ICOL$ IC WHERE I.BO# = :B2 AND I.OBJ# = IC.OBJ# AND I.INTCOLS <= :B1 AND BITAND(PROPERTY,1) = 1 A
ND BITAND(FLAGS,1025) = 0) SELECT CON# FROM UNQIDX WHERE CON# NOT IN (SELECT /*+ no_unnest */ CON# FROM UNQIDX WHERE INTCOL# NOT IN (SE
LECT /*+ no_unnest index(ic) */ INTCOL# FROM ICOL$ IC WHERE OBJ#=:B3 )) AND ROWNUM <= 1

0000000092C45F28
701e7d7f576f24a66f7d6cf0fa0f5c31

000000008C9222E8
DELETE FROM SYS.WRI$

000000008C894DB0
select substrb(dump(

000000008B0736F0
SELECT KSUSEPXOPT FR

0000000088FFE420
d913ebc51a2e6a4e4a175b91b5af55e8

0000000060C4B7D0 $BUILD$
a25c1ec7c75e8679

000000008B07F530
SELECT COL_INF.INTCO

0000000088C609B8
SELECT COUNT(*) FROM SYSTEM.AQ$_QUEUES B WHERE B.TABLE_OBJNO = :B2 AND BITAND(B.PROPERTIES, :B1 ) = :B1

0000000060EBE7A0
SELECT COUNT(*) FROM SYSTEM.AQ$_QUEUES B WHERE B.TABLE_OBJNO = :B2 AND BITAND(B.PROPERTIES, :B1 ) = :B1

0000000060D14628
select substrb(dump(

000000008B25D000
1c3fc2b357a0f861bad965a6aa1a5a1

0000000088C3FC90
SELECT MAX(NAME) FRO

0000000092D464A0
e77ea8d2abd8e48760c67145a7e552a4

000000008C95AB90
SELECT MAX(NAME) FRO

0000000060E43AD0
81fbfa0063483f5fb6287bbe2d31683b

0000000092CBC9B8
SELECT PRIOR_RESETLO

0000000060E271D0
select min(minbkt),m

000000008B05F180
SELECT T.FLAGS FROM

000000006533A920
5bad4d7bd1c7e268ea36e858b7dcedd7

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

0000000060C37CB0
SELECT VALUE FROM V$

0000000088EB1070
98e3ac294e935f3816e96b5bad4b6e09

000000008B26CA68
f72dc1f96f728145bc425b44dcf4808d

000000008B153138
select blocks,NVL(ts#,-1),status$,NVL(relfile#,0),maxextend,inc, crscnwrp,crscnbas,NVL(spare1,0) from file$ where file#=:1

0000000088EB93F0
select blocks,NVL(ts#,-1),status$,NVL(relfile#,0),maxextend,inc, crscnwrp,crscnbas,NVL(spare1,0) from file$ where file#=:1

000000008B29B140 EXFSYS
RLM$OPTIMEQCLS

0000000088CA78C0
a6fae6deb9c4a9359c89c99fc131fc1

0000000060E4DE90
801e305b3e5667071eb28fe44dead25d

0000000088D3A548
SELECT EVST_PRCTTLS,

000000008CB474E8 SYS
SYS_TEMP_0FD9D6627_EB3C8

000000008C91FA38
UPDATE WRI$_ADV_EXEC

0000000060D439D0
a6ed62c04899fa626b10510028e1f28

000000008B15A0B8
1dfe2e0d71483af69e518e533a0a4530

000000008B26FFB8
34115981f597cb18b418fdb4726cf474

00000000653BA3A0 $BUILD$
34cc98ea6461ad42

00000000652EFFF0
c7e380e2d0008b6047cf4710354d8a4c

0000000060D83308
fc94b7d8a5a4b10239654cda6e532ca1

0000000060FC5D70
1a82a5de534dc5c6ddad6549c1f5bae9

0000000088D80498
select min(minbkt),m

0000000088F084F8 APEX_030200
WWV_FLOW_STEP_ITEMS

000000008B3FEBF8 SYS
X$KSWSCLSTAB

000000008C887F20
b8167c3034ae52a8e40200eac36daf12

000000008B150D38 SYS
DBA_ADVISOR_RECOMMENDATIONS

000000008CB833C8
3ec61a3af78a7e7b7ede1f9a0b8ea3

000000008B365A28
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

0000000088CC1390
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

000000008CB42EF8
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

0000000088F3D5F8
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

000000008B18D9A0
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

0000000088F1B628
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

0000000092D246C8
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

000000008B365DB8
insert into sys.mon_mods$ (obj#, inserts, updates, deletes, timestamp, flags, drop_segments) values (:1, :2, :3, :4, :5, :6, :7)

000000008B1DFA68 PUBLIC
WWV_FLOW_FILE_OBJECTS$

0000000088FFF9D0
9748d51ddb19cb21779c62bf4268a22c

000000008B31AC40
INSERT INTO EXF$ATTR

000000008CB3DA80
/* SQL Analyze(1) */

0000000088E8E3A0 SYS
WRH$_LATCH_MISSES_SUMMARY

000000008C937D50
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and p.instance_i
d is NULL    and (p.class_oid is null      or (p.class_oid is not null      and p.class_oid in (select b.obj# from sys.scheduler$_class
 b                          where b.affinity is null)))   UNION ALL   select q.obj#, q.flags, q.next_run_date, q.job_status, q.class_oi
d,      q.last_enabled_time, q.instance_id, 1   from sy

0000000092D489D0
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and p.instance_i
d is NULL    and (p.class_oid is null      or (p.class_oid is not null      and p.class_oid in (select b.obj# from sys.scheduler$_class
 b                          where b.affinity is null)))   UNION ALL   select q.obj#, q.flags, q.next_run_date, q.job_status, q.class_oi
d,      q.last_enabled_time, q.instance_id, 1   from sy

0000000092CCB248
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and p.instance_i
d is NULL    and (p.class_oid is null      or (p.class_oid is not null      and p.class_oid in (select b.obj# from sys.scheduler$_class
 b                          where b.affinity is null)))   UNION ALL   select q.obj#, q.flags, q.next_run_date, q.job_status, q.class_oi
d,      q.last_enabled_time, q.instance_id, 1   from sy

000000008B19E198
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and p.instance_i
d is NULL    and (p.class_oid is null      or (p.class_oid is not null      and p.class_oid in (select b.obj# from sys.scheduler$_class
 b                          where b.affinity is null)))   UNION ALL   select q.obj#, q.flags, q.next_run_date, q.job_status, q.class_oi
d,      q.last_enabled_time, q.instance_id, 1   from sy

0000000088E718B0
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and p.instance_i
d is NULL    and (p.class_oid is null      or (p.class_oid is not null      and p.class_oid in (select b.obj# from sys.scheduler$_class
 b                          where b.affinity is null)))   UNION ALL   select q.obj#, q.flags, q.next_run_date, q.job_status, q.class_oi
d,      q.last_enabled_time, q.instance_id, 1   from sy

000000008C9381D0
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and p.instance_i
d is NULL    and (p.class_oid is null      or (p.class_oid is not null      and p.class_oid in (select b.obj# from sys.scheduler$_class
 b                          where b.affinity is null)))   UNION ALL   select q.obj#, q.flags, q.next_run_date, q.job_status, q.class_oi
d,      q.last_enabled_time, q.instance_id, 1   from sy

000000008CBF72C0
12affb3dbf590b5b8ffa7c888c389659

000000008C923A18
UPDATE SYS.WRI$_ADV_

0000000092EBEF60
ba695175d03fc0f84b3ba5d5d0a483d3

0000000088FCF258
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U")  */ 1 AS C1 FROM "SYS"."USER$"
"U" WHERE ("U"."NAME"=:B1)) innerQuery

0000000060FFAB08
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U")  */ 1 AS C1 FROM "SYS"."USER$"
"U" WHERE ("U"."NAME"=:B1)) innerQuery

0000000060E1C170 SYS
AQ$_SCHEDULER_FILEWATCHER_QT_H

0000000060D5EBB8
select aft.owner_instance, t.objno, t.flags  from system.aq$_queue_tables t,  aq$_queue_table_affinities aft  where t.objno = aft.table
_objno and t.schema = :1 and t.name = :2

0000000060D5F038
select aft.owner_instance, t.objno, t.flags  from system.aq$_queue_tables t,  aq$_queue_table_affinities aft  where t.objno = aft.table
_objno and t.schema = :1 and t.name = :2

000000008B0F4C58
SELECT BUTTON_NAME F

000000008C912F48
INSERT INTO WRI$_ADV

0000000060DB9118 $BUILD$
 a2bf5247a2908d9

00000000652F1F70
6c127d65180c4398b303980b4bab106a

000000008B133FF8
67bc5e8971ecd4183b03184b4aca823a

0000000060FD42D8
SELECT STATUS FROM D

0000000088C74EF0
3f4c469163f377d54f7964089895f91

0000000088FC2A68
insert into seg$ (file#,block#,type#,ts#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,lists,groups,cachehint,hwmincr, sp
are1, scanhint, bitmapranges) values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,DECODE(:17,0,NULL,:17),:18,:19)

000000008C9D7BE8
insert into seg$ (file#,block#,type#,ts#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,lists,groups,cachehint,hwmincr, sp
are1, scanhint, bitmapranges) values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,DECODE(:17,0,NULL,:17),:18,:19)

0000000060DCE748
insert into seg$ (file#,block#,type#,ts#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,lists,groups,cachehint,hwmincr, sp
are1, scanhint, bitmapranges) values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,DECODE(:17,0,NULL,:17),:18,:19)

00000000653CEF00
865c500017ddc55b1a86826e24f595b4

0000000060D9C540
1a80689c518b9cc77ffae30771372c4

0000000060E5C350 $BUILD$
5d8b9552a80f7d12

0000000092CB5328 SYS
DBA_SUBPART_COL_STATISTICS

000000008B352120 SYS
COL_USAGE$

0000000088EF6248
SELECT (NEXT_CHANGE#

000000008B26CF88
/* SQL Analyze(1) */

000000008C8AC670 SYS
PENDING_TRANS$

000000008B26E328
SELECT CHECKPOINT_CH

000000008B39AA30 SYS
X$KTUSMST

000000008C919578
UPDATE SYS.WRI$_ADV_

000000008B05C610
SELECT BO#, INTCOL#

000000008CABE0B8
58e8c142109e7c51f6d07ec6bd8c3902

0000000088EC3780
SELECT JOB_NAME, TO_

000000008B154688
f79d226eb7519e8b0f1851b5ad34075

0000000060F02240
begin   :owner :=upper('sott');   :table_name := upper('emp'); end;

00000000653FDBD0
begin   :owner :=upper('sott');   :table_name := upper('emp'); end;

000000008C93D218
cb89c38ccd91d888706b2fd08a83ce18

0000000060FC7DC0 SYS
WRH$_DISPATCHER

000000008CB5A710
719cd1868e279a4533ae9e33a48f8c97

0000000088EB3530 SYS
DBA_HIST_PLAN_OPERATION_NAME

0000000088F589A0
b8c386265b6c44d09f649250e82c6e6c

0000000060F484E0
eafe294e48cbb8071e361ae98c64c641

0000000088DC3AC8
/* SQL Analyze(1) */

0000000060EBA2B0
f62ff30b38867e865452f06e98caec8

000000008B3D7188
select substrb(dump(

0000000092CBAD58 SYS
CON$

0000000060FA3360
2432af90d0593f35df488dadea7034e4

0000000060CA1C10
4d7a37d0131e2a762ebf4b6995e87961

00000000652B5820
ee991c9ea0f312507c74b50e9e553c22

000000008C857480
select substrb(dump(

000000008CA1AEB8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060ED77C0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F47190
/* SQL Analyze(1) */

0000000060C42E10
SELECT DECODE(VALUE,

0000000060E1E7C0
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

000000008B2B9E58
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000060F985E0
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

000000008B252768
49ee69148e8b0e1bbc01bdc422895690

000000008CA340B8
delete from ind$ where bo#=:1

000000008C9685E0
delete from ind$ where bo#=:1

0000000088DFB728
delete from ind$ where bo#=:1

000000008CAC7BC8
SELECT S.SCHEMA, S.Q

000000008CAED428
/* SQL Analyze(1) */

0000000088D54BB0
BEGIN DBMS_APPLICATION_INFO.SET_MODULE(:1,NULL); END;

000000008B1C9A78
BEGIN DBMS_APPLICATION_INFO.SET_MODULE(:1,NULL); END;

0000000060D5AD58
26947ac91d45c1242b247fc5f6b6f088

0000000088D6E008
select name,mandatory,mgmt_method,category,description,internal_use from resource_consumer_group$ where obj#=:1 and status = 'ACTIVE'

0000000092C38308
select name,mandatory,mgmt_method,category,description,internal_use from resource_consumer_group$ where obj#=:1 and status = 'ACTIVE'

0000000092C46D00
select min(minbkt),m

0000000060EA0650
select substrb(dump(

0000000060EE94D0
SELECT 1 FROM DUAL W

0000000088FDF990 SYS
X$KSLSESHIST

0000000088C9B648
SELECT NAME FROM WRI

000000008CA76130
c18b778c62b988de5b3fe1a819ac9e7d

0000000088C5C598
select STAT_NAME, VALUE, OSSTAT_ID, COMMENTS, CUMULATIVE from GV$OSSTAT where INST_ID = USERENV('Instance')

0000000088D00470
select STAT_NAME, VALUE, OSSTAT_ID, COMMENTS, CUMULATIVE from GV$OSSTAT where INST_ID = USERENV('Instance')

0000000092D40F48 SYS
GV$ENABLEDPRIVS

000000008B04AE40
SELECT KSPPCV.KSPPST

000000008B267DA8 APEX_030200
WWV_FLOW_MAIL_LOG

0000000092CA0E18
SELECT GRPATTIDX, AT

0000000065321A70
69a71095f0b24abc1ffd3a1fa391b9e

0000000060D320C8
d63f7aea3b18fabbd5897d85fc945666

0000000060CB3260 MDSYS
SDO_TOPO_GEOMETRY_LAYER_ARRAY

0000000088F040C0 SYS
AWR_OBJECT_INFO_TYPE

0000000060F800C0
821b215a2e5a6d97333c5eb027d8f45e

000000008B327650
66bc067ac059b66920a032d96feb872f

0000000065335BE0 SYS
ECOL$

000000008B232750
/* SQL Analyze(1) */

000000008B32BD08
select inst_id, kswsastabsi, kswsastabnm, kswsastabnmh, kswsastabnn, kswsastabcd, kswsastabcdh,  decode(kswsastabgoal, -1, NULL, 0, 'NO
NE', 1, 'SERVICE_TIME', 2, 'THROUGHPUT', NULL) kswsastabgoal,  decode(bitand(kswsastabpflg, 2), 2, 'Y', 'N'),  decode(bitand(kswsastabg
flg, 1), 1, 'YES', 'NO'),  decode(bitand(kswsastabpflg, 4), 4, 'YES', 'NO'),  decode(bitand(kswsastabpflg, 8), 8, 'LONG', 'SHORT')  fro
m x$kswsastab  where kswsastabact = 1

000000008B263F58
select inst_id, kswsastabsi, kswsastabnm, kswsastabnmh, kswsastabnn, kswsastabcd, kswsastabcdh,  decode(kswsastabgoal, -1, NULL, 0, 'NO
NE', 1, 'SERVICE_TIME', 2, 'THROUGHPUT', NULL) kswsastabgoal,  decode(bitand(kswsastabpflg, 2), 2, 'Y', 'N'),  decode(bitand(kswsastabg
flg, 1), 1, 'YES', 'NO'),  decode(bitand(kswsastabpflg, 4), 4, 'YES', 'NO'),  decode(bitand(kswsastabpflg, 8), 8, 'LONG', 'SHORT')  fro
m x$kswsastab  where kswsastabact = 1

00000000652EFE80
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  B.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  B.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060DFF650
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  B.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  B.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060E7CD00
/* SQL Analyze(1) */

0000000060E84E40
select inst_id,decode(indx,1,'data block',2,'sort block',3,'save undo block', 4,'segment header',5,'save undo header',6,'free list',7,'
extent map', 8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',12,'bitmap index block',13,'file header block',1
4,'unused', 15,'system undo header',16,'system undo block', 17,'undo header',18,'undo block'), count,time from x$kcbwait where indx!=0

0000000060D876A0
select inst_id,decode(indx,1,'data block',2,'sort block',3,'save undo block', 4,'segment header',5,'save undo header',6,'free list',7,'
extent map', 8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',12,'bitmap index block',13,'file header block',1
4,'unused', 15,'system undo header',16,'system undo block', 17,'undo header',18,'undo block'), count,time from x$kcbwait where indx!=0

000000008C8FF4F0
SELECT GREATEST(NVL(

000000008CABBB60
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060C76710
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000006533EB40 $BUILD$
9541b7196010e639

0000000088F83408
SELECT CV.FLAGS FROM

0000000088D4BC88
SELECT * FROM BSLN_T

0000000060ECE520
c27fb2535eca441d7fa230b7266ce511

000000008C8709A8
select /*+  no_paral

000000008B13D7E8
4ec342bf5fe2a6e9193480eefd3beaea

000000008B11B2C0
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

0000000088EE9260
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

000000008B239E60
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

0000000088F72E80
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

0000000060EB9F20
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

000000008B0C7478
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

0000000088F0EF00
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

000000008B1DCD68
insert into sys.wri$_optstat_ind_history(obj#,rowcnt,leafcnt,distkey, lblkkey, dblkkey,clufac,blevel,analyzetime,samplesize,guessq,cach
edblk, cachehit,logicalread,savtime,flags) values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16)

0000000060C8E090
7ef60da5d68418074e7be977865a13f0

0000000060DDBEC8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max(substrb("INF",1,32)) val,coun
t(*) cnt  from "SCOTT"."HASH_TABLE" t  where substrb("INF",1,32) is not null  group by nlssort(substrb("INF",1,32), 'NLS_SORT = binary'
)) order by nlssort(val,'NLS_SORT = binary')

000000008CB5C3E0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max(substrb("INF",1,32)) val,coun
t(*) cnt  from "SCOTT"."HASH_TABLE" t  where substrb("INF",1,32) is not null  group by nlssort(substrb("INF",1,32), 'NLS_SORT = binary'
)) order by nlssort(val,'NLS_SORT = binary')

000000008B368348
4769ddb6121bd637252e2ea6fc5bcbcf

000000008C835AE8
UPDATE RLM$EVENTSTRU

0000000088DE47B8
INSERT INTO BSLN_STA

0000000088ED23C0
c6a91ead2cc5f0dfa4af9226022750a

0000000088D0C380
      declare          policy        varchar2(512);          alldest       number  := dbms_rcvman.FALSE#;          rlgscn        number
;        begin          if (:alldest > 0) then             alldest := dbms_rcvman.TRUE#;          end if;          dbms_rcvman.setRecov
eryDestFile(TRUE);           dbms_rcvman.getRedoLogDeletionPolicy(policy  => policy);          dbms_rcvman.setRedoLogDeletionPolicy(pol
icy  =>  policy,                                               alldest =>  alldest);          if ((policy like '%APPLIED%' OR
      policy like '%SHIPPED%') AND               policy not like '%BACKED UP%') then             dbms_rcvman.getSCNForAppliedPolicy(
             minscn     => :applied_scn               ,rlgscn     => rlgscn);          else             :applied_scn := 0;          end
 if;       end;

000000008C8A7780
      declare          policy        varchar2(512);          alldest       number  := dbms_rcvman.FALSE#;          rlgscn        number
;        begin          if (:alldest > 0) then             alldest := dbms_rcvman.TRUE#;          end if;          dbms_rcvman.setRecov
eryDestFile(TRUE);           dbms_rcvman.getRedoLogDeletionPolicy(policy  => policy);          dbms_rcvman.setRedoLogDeletionPolicy(pol
icy  =>  policy,                                               alldest =>  alldest);          if ((policy like '%APPLIED%' OR
      policy like '%SHIPPED%') AND               policy not like '%BACKED UP%') then             dbms_rcvman.getSCNForAppliedPolicy(
             minscn     => :applied_scn               ,rlgscn     => rlgscn);          else             :applied_scn := 0;          end
 if;       end;

0000000060EDF7D0 SYS
WRH$_LATCH_BL

000000008B096730
DELETE FROM SYS.AUX_

000000008CBDED10
456d73eb362b00fdd2e3e733ae70d95a

0000000088F569A8
SELECT TT.ROWID FROM

0000000088D1AEB0
select substrb(dump(

0000000088F01BB8
select inst_id, status, count(*) from gv$session group by inst_id,status order by inst_id,status

000000008C9EA520
select inst_id, status, count(*) from gv$session group by inst_id,status order by inst_id,status

000000008C8B42F0
select substrb(dump(

000000008CAEADB8 SYS
WRI$_ADV_TUNEMVIEW_ADV

0000000060E928B0
SELECT COUNT(*) FROM

000000006534DE90
select c.owner#,c.name,c.con# from con$ c,cdef$ d where d.obj#=:1 and d.con#=c.con#

0000000060FD2DB0
select c.owner#,c.name,c.con# from con$ c,cdef$ d where d.obj#=:1 and d.con#=c.con#

000000008C999770
ef1ed6f154d4dc6415bf9d8e6d67be1b

0000000088EF1BA0 EXFSYS
RLM$EQUALATTR

0000000060DEB408
select inst_id,kglnaobj,kglfnobj,kglobt03, kglobhs0+kglobhs1+kglobhs2+kglobhs3+kglobhs4+kglobhs5+kglobhs6+kglobt16, kglobt08+kglobt11,
kglobt10, kglobt01, decode(kglobhs6,0,0,1), decode(kglhdlmd,0,0,1), kglhdlkc, kglobt04, kglobt05, kglobt48, kglobt35, kglobpc6, kglhdld
c, substr(to_char(kglnatim,'YYYY-MM-DD/HH24:MI:SS'),1,19), kglhdivc, kglobt12, kglobt13, kglobwdw, kglobt14, kglobwap, kglobwcc, kglobw
cl, kglobwui, kglobt42, kglobt43, kglobt15, kglobt02, decode(kglobt32,        0, 'NONE',        1, 'ALL_ROWS',        2, 'FIRST_ROWS',
       3, 'RULE',        4, 'CHOOSE',           'UNKNOWN'), kglobtn0, kglobcce, kglobcceh, kglobt17, kglobt18, kglobts4, kglhdkmk, kglh
dpar, kglobtp0, kglnahsh, kglobt46, kglobt30, kglobt09, kglobts5, kglobt48, kglobts0, kglobt19, kglobts1, kglobt20, kglobt21, kglobts2,
 kglobt06, kglobt07, decode(kglobt28, 0, to_number(NULL), kglobt28), kglhdadr, kglobt29, decode(bitand(kglobt00,64),64, 'Y', 'N'), deco
de(kglobsta,        1, 'VALID',        2, 'VALID_AUTH_E

000000008B133520
select inst_id,kglnaobj,kglfnobj,kglobt03, kglobhs0+kglobhs1+kglobhs2+kglobhs3+kglobhs4+kglobhs5+kglobhs6+kglobt16, kglobt08+kglobt11,
kglobt10, kglobt01, decode(kglobhs6,0,0,1), decode(kglhdlmd,0,0,1), kglhdlkc, kglobt04, kglobt05, kglobt48, kglobt35, kglobpc6, kglhdld
c, substr(to_char(kglnatim,'YYYY-MM-DD/HH24:MI:SS'),1,19), kglhdivc, kglobt12, kglobt13, kglobwdw, kglobt14, kglobwap, kglobwcc, kglobw
cl, kglobwui, kglobt42, kglobt43, kglobt15, kglobt02, decode(kglobt32,        0, 'NONE',        1, 'ALL_ROWS',        2, 'FIRST_ROWS',
       3, 'RULE',        4, 'CHOOSE',           'UNKNOWN'), kglobtn0, kglobcce, kglobcceh, kglobt17, kglobt18, kglobts4, kglhdkmk, kglh
dpar, kglobtp0, kglnahsh, kglobt46, kglobt30, kglobt09, kglobts5, kglobt48, kglobts0, kglobt19, kglobts1, kglobt20, kglobt21, kglobts2,
 kglobt06, kglobt07, decode(kglobt28, 0, to_number(NULL), kglobt28), kglhdadr, kglobt29, decode(bitand(kglobt00,64),64, 'Y', 'N'), deco
de(kglobsta,        1, 'VALID',        2, 'VALID_AUTH_E

0000000092CD9748 SYS
CLU$

0000000092D77D48
15af3f50fe128a50ac520c7888175c5e

0000000060D61228
a305ac233d6e97b631416aa8b799b8a3

000000008B20F248
9d54e2404ea4561ac8c82e778b29ccb8

000000008C8B2AF8
select 1 from sys.aq$_subscriber_table where rownum < 2 and subscriber_id <> 0 and table_objno <> 0

0000000088FA6FB8
select 1 from sys.aq$_subscriber_table where rownum < 2 and subscriber_id <> 0 and table_objno <> 0

000000008C8B2F78
select 1 from sys.aq$_subscriber_table where rownum < 2 and subscriber_id <> 0 and table_objno <> 0

0000000088EC7100
2753135679337055042

0000000088F91F58
SELECT '"'||U.NAME||

0000000060D097A8
6a618680506b82bd2525327282df4b5e

0000000088C88978
SELECT COUNT(*) FROM

000000008C922788
DELETE FROM SYS.WRI$

0000000060E13460
b4f335256ed143ca6e4c74234eba35af

0000000060FC1820 $BUILD$
7d217da4cf2d3fed

000000008B241548
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C9D22B0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000653FE7D0
SELECT '"' || OWNER

0000000088C453D0
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 170

0000000060E3AC20
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 170

000000008CA866B8
I

000000008C9F9B90 PUBLIC
DBMS_XMLPARSER

000000008B0EF388
c2a356a065bb98fda3587f232bf17860

000000008B3733B8
select userenv('Inst

000000008C88D740
5693aa8071e5a88cf0f5558cf24dccac

000000008B131B28
SELECT PARAMETER_VAL

00000000652DDC00
select /*+  no_paral

000000008CBDBCA0
bd9e5af123b9adda5a274237cb178ea1

00000000653C8E70
e08030a8519ff94a4fffb745f70c9c9f

000000008B27D068
b2d194b6396ae66825b4b5df17049d4

000000008B32A2A8
401a1a3977022ac8ae7ebaa5fd9b16e

0000000088E4E3F8
81fbfa0063483f5fb6287bbe2d31683b

000000008CB27FD8 SYS
WRH$_SESS_TIME_STATS

000000008B14FE38 SYS
DBA_ADVISOR_ACTIONS

0000000088D63670
SELECT M.REQUIRED, M

000000008C9579F0 SYS
SCHEDULER$_PROGRAM

0000000088E89CC0
insert into wrh$_librarycache   (snap_id, dbid, instance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dl
m_lock_requests, dlm_pin_requests,    dlm_pin_releases, dlm_invalidation_requests, dlm_invalidations)  select    :snap_id, :dbid, :inst
ance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dlm_lock_requests, dlm_pin_requests,    dlm_pin_releas
es, dlm_invalidation_requests, dlm_invalidations  from    v$librarycache

0000000088FDCD10
insert into wrh$_librarycache   (snap_id, dbid, instance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dl
m_lock_requests, dlm_pin_requests,    dlm_pin_releases, dlm_invalidation_requests, dlm_invalidations)  select    :snap_id, :dbid, :inst
ance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dlm_lock_requests, dlm_pin_requests,    dlm_pin_releas
es, dlm_invalidation_requests, dlm_invalidations  from    v$librarycache

000000008C87CB28
insert into wrh$_librarycache   (snap_id, dbid, instance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dl
m_lock_requests, dlm_pin_requests,    dlm_pin_releases, dlm_invalidation_requests, dlm_invalidations)  select    :snap_id, :dbid, :inst
ance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dlm_lock_requests, dlm_pin_requests,    dlm_pin_releas
es, dlm_invalidation_requests, dlm_invalidations  from    v$librarycache

0000000088E8A140
insert into wrh$_librarycache   (snap_id, dbid, instance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dl
m_lock_requests, dlm_pin_requests,    dlm_pin_releases, dlm_invalidation_requests, dlm_invalidations)  select    :snap_id, :dbid, :inst
ance_number, namespace, gets, gethits, pins,    pinhits, reloads, invalidations, dlm_lock_requests, dlm_pin_requests,    dlm_pin_releas
es, dlm_invalidation_requests, dlm_invalidations  from    v$librarycache

0000000092C87808 SYS
DBA_KGLLOCK

000000008B396118
a690c703d7fe4d6d2def856de5b430e

000000008C902810
8659814c47f4abeeae72444fa6793b79

0000000060EF6AE0
select substrb(dump(

000000008B065470
SELECT TS.NAME FROM

0000000088D78A78
insert into wrh$_sql_summary    (snap_id, dbid, instance_number,     total_sql, total_sql_mem, single_use_sql, single_use_sql_mem)  val
ues (:snap_id, :dbid, :instance_number,          :total_sql, :total_sql_mem,          :single_use_sql, :single_use_sql_mem)

000000008CA46FF0
insert into wrh$_sql_summary    (snap_id, dbid, instance_number,     total_sql, total_sql_mem, single_use_sql, single_use_sql_mem)  val
ues (:snap_id, :dbid, :instance_number,          :total_sql, :total_sql_mem,          :single_use_sql, :single_use_sql_mem)

0000000088F9D5D8
insert into wrh$_sql_summary    (snap_id, dbid, instance_number,     total_sql, total_sql_mem, single_use_sql, single_use_sql_mem)  val
ues (:snap_id, :dbid, :instance_number,          :total_sql, :total_sql_mem,          :single_use_sql, :single_use_sql_mem)

0000000088D78EF8
insert into wrh$_sql_summary    (snap_id, dbid, instance_number,     total_sql, total_sql_mem, single_use_sql, single_use_sql_mem)  val
ues (:snap_id, :dbid, :instance_number,          :total_sql, :total_sql_mem,          :single_use_sql, :single_use_sql_mem)

000000008C85CE10 DBSNMP
BSLN_STATISTICS_T

0000000092D22E28
c28e9ee5230b937c9eb4f7f6c0d72773

0000000088E208D8
SELECT COUNT(*) FROM

00000000653C4250
SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as DENSITY,  A.NUM_DIST
INCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A.NUM_BUCKETS,  decod
e(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyzed,'YYYYMMDD HH24:MI
'),null,'None',to_char(T.last_analyzed,'YYYYMMDD HH24:M

0000000060C72D30
SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as DENSITY,  A.NUM_DIST
INCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A.NUM_BUCKETS,  decod
e(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyzed,'YYYYMMDD HH24:MI
'),null,'None',to_char(T.last_analyzed,'YYYYMMDD HH24:M

000000008B3B3A20
1e8a012b95ad658332dcbe9798c5bc19

000000008B344790
5839188172e9899c39db72ca5580d616

00000000652D9910
select  t.INDEX_NAME,t.PARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER_KEY,  t.AVG_DATA_BLO
CKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_ind_partit
ions t,dba_indexes i where     i.table_name = upper(:table_name) and i.table_owner = upper(nvl(:owner,user)) and i.owner = t.index_owne
r and i.index_name=t.index_name

0000000092C6A798
select  t.INDEX_NAME,t.PARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER_KEY,  t.AVG_DATA_BLO
CKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_ind_partit
ions t,dba_indexes i where     i.table_name = upper(:table_name) and i.table_owner = upper(nvl(:owner,user)) and i.owner = t.index_owne
r and i.index_name=t.index_name

00000000652D10E0
select  t.INDEX_NAME,t.PARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER_KEY,  t.AVG_DATA_BLO
CKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_ind_partit
ions t,dba_indexes i where     i.table_name = upper(:table_name) and i.table_owner = upper(nvl(:owner,user)) and i.owner = t.index_owne
r and i.index_name=t.index_name

0000000060C951B0 $BUILD$
2327a01b455a43e8

000000008C9168E8
SELECT T.ADVISOR_NAM

00000000652FCC00
532fd34d1d5f46be5ca909c44841ab20

0000000092D63A90
a3343d3e54e460252cb35b22e4f00ad6

0000000060C91F70
acc84660c4ff0cdebd5318b24a0c520e

0000000088D75B58
60581bbc18b400ecba1163dc7829c47a

0000000088D3B5B8 $BUILD$
466c74604142df80

000000008CA80468
select substrb(dump(

0000000088FCDC78
INSERT INTO WWV_FLOW

0000000060EFF380
SELECT O.OBJ# FROM S

000000008B393CA0
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_USED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DAT
AOBJ# ORDER BY SUM(ABS(SPACE_USED_DELTA)) DESC

000000008CA99688
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_USED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DAT
AOBJ# ORDER BY SUM(ABS(SPACE_USED_DELTA)) DESC

0000000060E58DF8
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_USED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DAT
AOBJ# ORDER BY SUM(ABS(SPACE_USED_DELTA)) DESC

000000008B2E8B10
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_USED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DAT
AOBJ# ORDER BY SUM(ABS(SPACE_USED_DELTA)) DESC

000000008CBC7438 SYS
AUX_STATS$

000000006536A8D0 $BUILD$
2f6cbd54213b894a

000000008B379A38 $BUILD$
7a6b84ef2f4d73b6

000000008CB920C8
(SELECT FLOW_ID FROM

000000008C8ABCD0
b3c02efb28485d1530e1ba49e435aac1

0000000088D94348
c289a4fe5c2ae6819bbad301bb3d7340

0000000092CA9C78
84b4b47f2679320e633d7537eef05e1b

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

000000008C940908
select     TABLE_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
 USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tables t where     owner = 'SCOTT' and table_name = 'E
MP'

0000000088D1AB90
select     TABLE_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
 USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tables t where     owner = 'SCOTT' and table_name = 'E
MP'

0000000088D317C0
SELECT LO.OBJ# FROM

0000000088FDA780
SELECT COUNT(*) FROM

000000008B137E38 SYS
X$KCCAL

0000000060D41078
f0cfa2e63e1fda46fbf3cdf9535d1a6c

0000000088C8BF28
UPDATE WRI$_SQLSET_P

000000008C8B76C8
3a9b479e3630f1912a9d9d1b2e275a0

000000008C92E348 SYS
DBA_ADVISOR_OBJECT_TYPES

0000000088FA4A08
SELECT TO_CHAR(:B1 ,

0000000060EB5780
SELECT BITAND(J.RUNN

000000008B0D6138
23c68e1c658644607c09ef37edbee107

000000008C90EDC0
7b1cd940d66c05a085b0a80da2abfab7

000000008B12B1D8
select s.inst_id,s.addr,s.indx,s.ksuseser,s.ksuudses,s.ksusepro,s.ksuudlui,s.ksuudlna,s.ksuudoct,s.ksusesow, decode(s.ksusetrn,hextoraw
('00'),null,s.ksusetrn),decode(s.ksqpswat,hextoraw('00'),null,s.ksqpswat),decode(bitand(s.ksuseidl,11),1,'ACTIVE',0,decode(bitand(s.ksu
seflg,4096),0,'INACTIVE','CACHED'),2,'SNIPED',3,'SNIPED', 'KILLED'),decode(s.ksspatyp,1,'DEDICATED',2,'SHARED',3,'PSEUDO',4,'POOLED','N
ONE'),  s.ksuudsid,s.ksuudsna,s.ksuseunm,s.ksusepid, s.ksusemnm,s.ksusemnp,s.ksusetid,s.ksusepnm, decode(bitand(s.ksuseflg,19),17,'BACK
GROUND',1,'USER',2,'RECURSIVE','?'), s.ksusesql, s.ksusesqh, s.ksusesqi, decode(s.ksusesch, 65535, to_number(null), s.ksusesch),  s.ksu
sesesta,  decode(s.ksuseseid, 0, to_number(null), s.ksuseseid),  s.ksusepsq, s.ksusepha, s.ksusepsi,  decode(s.ksusepch, 65535, to_numb
er(null), s.ksusepch),  s.ksusepesta,  decode(s.ksusepeid, 0, to_number(null), s.ksusepeid),  decode(s.ksusepeo,0,to_number(null),s.ksu
sepeo),  decode(s.ksusepeo,0,to_number(null),s.ksusepes

0000000060D66268
select s.inst_id,s.addr,s.indx,s.ksuseser,s.ksuudses,s.ksusepro,s.ksuudlui,s.ksuudlna,s.ksuudoct,s.ksusesow, decode(s.ksusetrn,hextoraw
('00'),null,s.ksusetrn),decode(s.ksqpswat,hextoraw('00'),null,s.ksqpswat),decode(bitand(s.ksuseidl,11),1,'ACTIVE',0,decode(bitand(s.ksu
seflg,4096),0,'INACTIVE','CACHED'),2,'SNIPED',3,'SNIPED', 'KILLED'),decode(s.ksspatyp,1,'DEDICATED',2,'SHARED',3,'PSEUDO',4,'POOLED','N
ONE'),  s.ksuudsid,s.ksuudsna,s.ksuseunm,s.ksusepid, s.ksusemnm,s.ksusemnp,s.ksusetid,s.ksusepnm, decode(bitand(s.ksuseflg,19),17,'BACK
GROUND',1,'USER',2,'RECURSIVE','?'), s.ksusesql, s.ksusesqh, s.ksusesqi, decode(s.ksusesch, 65535, to_number(null), s.ksusesch),  s.ksu
sesesta,  decode(s.ksuseseid, 0, to_number(null), s.ksuseseid),  s.ksusepsq, s.ksusepha, s.ksusepsi,  decode(s.ksusepch, 65535, to_numb
er(null), s.ksusepch),  s.ksusepesta,  decode(s.ksusepeid, 0, to_number(null), s.ksusepeid),  decode(s.ksusepeo,0,to_number(null),s.ksu
sepeo),  decode(s.ksusepeo,0,to_number(null),s.ksusepes

000000008C9FC388
SELECT * FROM HASH_T

000000008CA0F248
SELECT * FROM HASH_T

000000008B266778
2e1bec87ac7ee62e66279d37d1c4daba

0000000092D439B8
28e018c6fdc2a76f345e78fa5f40bb88

0000000092C45DB8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060D6F008
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0593F0
UPDATE SYS.WRI$_OPTS

0000000088D13C48
b227e8c53113383e437ecaf0e0b1d0ed

0000000060EC1E30 $BUILD$
fe927b31abb88fbf

0000000060EE32D0
922242db205a2b3576f3d6da70ae4bcb

000000008C8A2660
SELECT Q.OID, T.UDAT

000000008B26A720
SELECT /* DS_SVC */

0000000092CB6298
fc4ceb843396457c1ae760adac0ea9ca

0000000060FC0DD0
select substrb(dump(

0000000088EACCE0 SYS
SQLSET_ROW

000000008CA6F880
b1b863b41909ea0594ccf96f501d083

000000008CA4BE48
ee0939a6dd26084ecdd0a459fdf0611a

0000000060FAB2A0
fcd5f1211364da0ba4bc206bf905eef2

000000008B17F6C0
SELECT DECODE(BACKUP

000000008CA95E00
select subscriber_id, name, address, protocol, subscriber_type,      rule_name, trans_name, ruleset_name, negative_ruleset_name,
   creation_time, deletion_time,  modification_time, scn_at_remove      , scn_at_add from  AQ$_SUBSCRIBER_TABLE where queue_name=:1
                    and schema=:2 and bitand(subscriber_type, 2) = 2

000000008CA96280
select subscriber_id, name, address, protocol, subscriber_type,      rule_name, trans_name, ruleset_name, negative_ruleset_name,
   creation_time, deletion_time,  modification_time, scn_at_remove      , scn_at_add from  AQ$_SUBSCRIBER_TABLE where queue_name=:1
                    and schema=:2 and bitand(subscriber_type, 2) = 2

0000000088EABE50
47adc09c34f78c2d121b6c5e5863a0fe

0000000092D71048
select /*+  no_paral

000000008B263D58
3f4c469163f377d54f7964089895f91

000000008B097550
INSERT INTO SYS.AUX_

000000008C8622B8
70f3a81cc36656af2e7e3f289ed42a8

000000008CA63658
SELECT SET_COUNT FRO

000000008B07B010 SYS
DBA_PART_KEY_COLUMNS

0000000060E58F68
select /*+  no_paral

0000000088F869E8
SELECT ON_NEW_INSTAN

000000008B2DE940
SELECT ID FROM WWV_F

0000000065304850
create global tempor

000000008CB30CD8
d1ddd68ed1edac67ce47973d6539529

0000000088EB3AA0
840c172d5aba6485f1199c950812589

0000000092C7F9B8 SYS
I_OBJ#_INTCOL#

000000008CA74010
59ae08bfd9fc3b9f6d734f2b72f5518f

000000008B07E360
SELECT O.OBJ# FROM O

0000000088F73B30
bfe0e243c0d35dc85767d379cef0f29

000000008C9249E8
DELETE FROM WRI$_ADV

0000000088E12A88
e56c75d6d65980dfda72b303dac65eb0

00000000652C8B10
select min(minbkt),m

000000008CACE318
select /*+  no_paral

000000008B356378 $BUILD$
2feb791d7329f0f1

000000008B2FB6D8
select /*+ ordered use_nl(a,b) */ trim(to_char(a.sql_id)) as sql_id, a.sid as sid, b.spid as spid, substr(c.event,1,25) as event, c.p1
|| ',' || c.p2 || ',' ||c.p3 as "P1 P2 P3", to_char(LAST_CALL_ET) as seconds, a.logon_time from v$session a,v$process b,v$session_wait
c where a.type = 'USER' and a.status <> 'ACTIVE' and a.paddr = b.addr and a.sid = c.sid and a.wait_class <> 'Idle' and a.sid not in (se
lect sid from v$mystat where rownum = 1) order by LAST_CALL_ET desc

000000008B142108
select /*+ ordered use_nl(a,b) */ trim(to_char(a.sql_id)) as sql_id, a.sid as sid, b.spid as spid, substr(c.event,1,25) as event, c.p1
|| ',' || c.p2 || ',' ||c.p3 as "P1 P2 P3", to_char(LAST_CALL_ET) as seconds, a.logon_time from v$session a,v$process b,v$session_wait
c where a.type = 'USER' and a.status <> 'ACTIVE' and a.paddr = b.addr and a.sid = c.sid and a.wait_class <> 'Idle' and a.sid not in (se
lect sid from v$mystat where rownum = 1) order by LAST_CALL_ET desc

0000000060FEB510
8fb12607aa69c005c0c99213410588f

000000008C836918
APEX_030200

000000008CB94DD8
SELECT COUNT(*), SUM

000000008B2FEDE8
SELECT COUNT(*) FROM

000000008CA671B8
4cc9e8a0cc13723ef7c1bd9c9d516e59

0000000088C856F8
INSERT INTO WRI$_SQL

0000000088FA9F30
1221de747902965363a7a4b3df7f345b

000000008C931D18 SYS
WRI$_ADV_OBJECTS

0000000060E28420
d0bf293043a9bdeeae900485895e2ae

0000000060F480E0
select /*+  no_paral

000000008C9D0600
9d2a96c4623601911c56667dad95df97

0000000088C92578
SELECT /*+ opt_param

000000008CADB8C8
SELECT NLS_CHARSET_N

000000008CA95600
f8bcbf9a47f90fc973cee8af93d9f68

0000000088C44488 $BUILD$
f41eebfee8643e11

0000000088E45C28 $BUILD$
3dbad78c15881ef4

0000000088E3ABC8 SYS
WRH$_SYSSTAT

0000000088E52508
select member_oid,coalesce(member_oid2,0) from sys.scheduler$_wingrp_member           where oid = :1

000000008CA13F68
select member_oid,coalesce(member_oid2,0) from sys.scheduler$_wingrp_member           where oid = :1

0000000092C711A0
d8af6ef9c2b0642a3029c5c029e3dc4d

000000008CA72F00 SYS
KOTMD$

000000008B1A7D48
a29569b0fae3de621d7a61de549497cb

0000000060E84FB0
2b794b594b32f9851e59c951ec2d89a7

0000000088E44C38
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 164

0000000060C4D350
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 164

000000008C8E2890
 begin      dbms_aqadm_sys.remove_all_nondurablesub(:1, :2);   end;

000000008C8E2D10
 begin      dbms_aqadm_sys.remove_all_nondurablesub(:1, :2);   end;

000000008CA53F80
46d6e2071dade5256e9b0bb203c6d17

000000008B3FB6B8 DBSNMP
BSLN_METRIC_DEFAULTS

0000000092C82D68
DELETE FROM SYS.SCHE

000000008CBB4C98
select size_for_estimate,                      size_factor * 100 f,                    estd_physical_read_time,                estd_phy
sical_reads              from v$db_cache_advice where id = '3'

0000000092D31D98
select size_for_estimate,                      size_factor * 100 f,                    estd_physical_read_time,                estd_phy
sical_reads              from v$db_cache_advice where id = '3'

000000008CBB6C90
select size_for_estimate,                      size_factor * 100 f,                    estd_physical_read_time,                estd_phy
sical_reads              from v$db_cache_advice where id = '3'

000000008C8BF228
SELECT TO_CHAR(INSTA

0000000088F8A498
86dedeb385c6c279d9a81beaf90188b5

0000000092C47BB0 $BUILD$
a9cfbb7dd51ab911

0000000088D970F8
DELETE FROM RLM$SCHA

0000000088EADF40
SELECT T.DB_USERNAME

000000008CBAB320 $BUILD$
508198ab2b3550f2

000000008CAD5270
SELECT BCKSCN, TAG F

0000000088D10B90 SYS
TRANSIENT_IOT$

0000000088D8BA68
c79f2031f88988011d90973ed5317179

0000000065346F80 $BUILD$
a51a15887faee1a7

000000008CBD0B20
select substrb(dump(

0000000060D0DAC8
5bc85d6c27785376bfa21350b9c21116

0000000088F4E988
UPDATE SYSTEM.AQ$_QU

0000000092CD8BE8 SYS
C_TS#

0000000060DC0AC8
5a803ef5eb09fa31652f309074127967

000000008CBEDE88
V_J

00000000653519E0
select INST_ID, NAME, VALUE, UNIT, TIME_COMPUTED, DATUM_TIME from x$krstpvrs

0000000088D0BCB0
select INST_ID, NAME, VALUE, UNIT, TIME_COMPUTED, DATUM_TIME from x$krstpvrs

0000000088C94128
SELECT XMLCONCAT( :B

0000000088CF3D58
SELECT SQL_FULLTEXT,

000000008B08E4D0 SYS
COL_GROUP_USAGE$

0000000088CEC138
SELECT START_SNAP_ID

000000008B3946D0 APEX_030200
WWV_FLOW_FIELD_TEMPLATES

000000008CB45D48
50fc1a1b780a2f7fb1d950935309100

0000000088C544B8
select 1 from ustats$ where obj# = :1 and rownum = 1

0000000088FB26C8
select 1 from ustats$ where obj# = :1 and rownum = 1

0000000060E1C510 SYS
DBA_APPLY_SPILL_TXN

0000000088CB26A8
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

000000008CAFA348
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

000000008CAAB238
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

0000000060F56AB0
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

0000000088E44DB8
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

000000008B39BB10
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

0000000088F48FB8
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

00000000652C2F10
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

0000000088CB2B28
                                        delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mo
ds$ m                                                          where exists
      (select /*+ unnest */ * from sys.tabpart$ t where t.obj# = m.obj#)

000000008C8835E0
f01e4d16abfce00ddd5cc1acd33673

000000008CBC7808
select  inst_id,                               bp_id,                                 bp_name,                               bp_blksz,
                             decode(bp_state, 0, 'STATIC',     1, 'ALLOCATING',                                2, 'ACTIVATING', 3, 'SHR
INKING'),               bp_currgrans * bp_gransz,              bp_size,                               bp_tgtgrans  * bp_gransz,
      bp_tgtgrans  * bp_bufpergran,          bp_prevgrans * bp_gransz,              bp_prevgrans * bp_bufpergran,          0, 0,
                           bp_lo_sid,                             bp_hi_sid,                             bp_set_ct
 from x$kcbwbpd where bp_id > 0 and bp_currgrans > 0                     and bp_tgtgrans > 0

000000008CB90078
select  inst_id,                               bp_id,                                 bp_name,                               bp_blksz,
                             decode(bp_state, 0, 'STATIC',     1, 'ALLOCATING',                                2, 'ACTIVATING', 3, 'SHR
INKING'),               bp_currgrans * bp_gransz,              bp_size,                               bp_tgtgrans  * bp_gransz,
      bp_tgtgrans  * bp_bufpergran,          bp_prevgrans * bp_gransz,              bp_prevgrans * bp_bufpergran,          0, 0,
                           bp_lo_sid,                             bp_hi_sid,                             bp_set_ct
 from x$kcbwbpd where bp_id > 0 and bp_currgrans > 0                     and bp_tgtgrans > 0

0000000088F82B78
UPDATE sys.wri$_adv_objects SET attr7=:0 WHERE task_id=:1 and id=:2 RETURNING rowid into :3

000000008CBE3148
UPDATE sys.wri$_adv_objects SET attr7=:0 WHERE task_id=:1 and id=:2 RETURNING rowid into :3

0000000060C8E970
UPDATE sys.wri$_adv_objects SET attr7=:0 WHERE task_id=:1 and id=:2 RETURNING rowid into :3

0000000060FE1820
SELECT COUNT(*) FROM

000000008B2BA1F8 SYS
DBMS_ISCHED

000000008C9309D8 SYS
DBA_TAB_STATISTICS

000000008B0573C0
DELETE FROM SYS.WRI$

0000000092D60398
select substrb(dump(

000000008CBAE8E8
ae16995fde98af308a9009bfd918ad59

000000008B2619E8 SYS
GV$TABLESPACE

000000008B2BBDE8 $BUILD$
f1f2f29f65dfc1c2

0000000092EB7940 SYS
SCHEDULER$_SRCQ_INFO

000000008CA57480
delete from WRH$_IC_DEVICE_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060F450E0
delete from WRH$_IC_DEVICE_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B05A1A0
INSERT INTO SYS.WRI$

0000000060CC12C8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"TS#" val,count(*) cnt  from "SYS
"."WRH$_SEG_STAT_OBJ" t  where "TS#" is not null  group by "TS#") order by val

0000000060E5E2A0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"TS#" val,count(*) cnt  from "SYS
"."WRH$_SEG_STAT_OBJ" t  where "TS#" is not null  group by "TS#") order by val

000000008C91ADE8
MERGE INTO WRI$_ADV_

0000000088FF85C0 SYS
WRH$_MVPARAMETER

000000008CBDE2D0 SYS
TYPE$

00000000652FE7E0
       select unique( nvl2(job_subname,       '"'||owner||'"."'||job_name||'"."'||job_subname ||'"',       '"'||owner||'"."'||job_name|
|'"')) jn from scheduler$_notification       where bitand(flags,1)=1 and owner||'"'||job_name not in         ( select owner||'"'||job_n
ame from dba_scheduler_jobs union all           select qt.user_data.object_owner||'"'||qt.user_data.object_name             from sys.sc
heduler$_event_qtab qt where state<2 )

0000000088D3B810
       select unique( nvl2(job_subname,       '"'||owner||'"."'||job_name||'"."'||job_subname ||'"',       '"'||owner||'"."'||job_name|
|'"')) jn from scheduler$_notification       where bitand(flags,1)=1 and owner||'"'||job_name not in         ( select owner||'"'||job_n
ame from dba_scheduler_jobs union all           select qt.user_data.object_owner||'"'||qt.user_data.object_name             from sys.sc
heduler$_event_qtab qt where state<2 )

0000000060FBCA70
SELECT SYSTIMESTAMP-

0000000092D78898
SELECT A.ID,A.TYPE FROM SYS.WRI$_ADV_DEFINITIONS A WHERE A.NAME = :B1

000000008B0F6888
SELECT A.ID,A.TYPE FROM SYS.WRI$_ADV_DEFINITIONS A WHERE A.NAME = :B1

000000008C917D58
SELECT A.ID,A.TYPE FROM SYS.WRI$_ADV_DEFINITIONS A WHERE A.NAME = :B1

0000000092CCB3B8 APEX_030200
WWV_FLOW_COMPUTATIONS

000000008B377688
64884c02b1b12c106f408995d9ecd1a

0000000088F709A0
SELECT GLOBAL_NAME F

0000000088FE9970 SYS
STREAMS$_PROCESS_PARAMS

000000008C99F700
/* SQL Analyze(1) */

0000000060E59E30
SELECT FUNCTION_ID, FUNCTION_NAME, FILETYPE_ID, FILETYPE_NAME,           SMALL_READ_MEGABYTES, SMALL_WRITE_MEGABYTES,
           LARGE_READ_MEGABYTES, LARGE_WRITE_MEGABYTES, SMALL_READ_REQS,            SMALL_WRITE_REQS, LARGE_READ_REQS, LARGE_WRITE_REQS
,                     NUMBER_OF_WAITS, WAIT_TIME                                               FROM GV$IOSTAT_FUNCTION_DETAIL
                                 where inst_id=USERENV('Instance')

000000008C9DFAF0
SELECT FUNCTION_ID, FUNCTION_NAME, FILETYPE_ID, FILETYPE_NAME,           SMALL_READ_MEGABYTES, SMALL_WRITE_MEGABYTES,
           LARGE_READ_MEGABYTES, LARGE_WRITE_MEGABYTES, SMALL_READ_REQS,            SMALL_WRITE_REQS, LARGE_READ_REQS, LARGE_WRITE_REQS
,                     NUMBER_OF_WAITS, WAIT_TIME                                               FROM GV$IOSTAT_FUNCTION_DETAIL
                                 where inst_id=USERENV('Instance')

0000000060CEEA70
7f2433e11fb18bcb56317bc025f4c6

0000000060FA1570 SYS
DBA_ADDM_INSTANCES

000000008CB9C878
SELECT TO_NUMBER(NUL

000000008B1D9608 SYS
DBMS_OUTPUTEPUT_LINE

0000000088FCAF68
select /*+  no_paral

000000008CAC11E8
select name,online$,contents$,undofile#,undoblock#,blocksize,dflmaxext,dflinit,dflincr,dflextpct,dflminext, dflminlen, owner#,scnwrp,sc
nbas, NVL(pitrscnwrp, 0), NVL(pitrscnbas, 0), dflogging, bitmapped, inc#, flags, plugged, NVL(spare1,0), NVL(spare2,0), affstrength fro
m ts$ where ts#=:1

0000000092D7E268
select name,online$,contents$,undofile#,undoblock#,blocksize,dflmaxext,dflinit,dflincr,dflextpct,dflminext, dflminlen, owner#,scnwrp,sc
nbas, NVL(pitrscnwrp, 0), NVL(pitrscnbas, 0), dflogging, bitmapped, inc#, flags, plugged, NVL(spare1,0), NVL(spare2,0), affstrength fro
m ts$ where ts#=:1

0000000092D7C9C8
DELETE FROM RLM$JOBQ

0000000060FC9990
e3a6ac3ad321a1af8fcc14b5133c416

000000008CBD1700
764a572ace198bb67efd18ad730ee46

000000008B3DA828
delete from WRM$_SNAP_ERROR tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092CBB7C8
delete from WRM$_SNAP_ERROR tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088CF17D8 SYS
SQL_BIND

000000006533EE50
294be658458d6dfaa326276ab69e5907

000000008B0D9EA8
SELECT DECODE(BITAND

0000000088C754D0
7623273066cdae4936901a2dc517330d

000000008B0CFAA8
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

0000000088CABF18
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

0000000088FA20C8
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

0000000060E194D0
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

000000008B1A69F8
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

0000000060E52660
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

0000000060F519C0
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

0000000060E5C570
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

000000008C954448
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

000000008B152FB8
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

0000000088FB6CB8
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

000000008B0CFF28
select obj#, dataobj#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, flags, analyzetime, s
amplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, length(bhiboundval), bhiboundval from tabpart$ where bo# = :1 order by part#

000000008CB50E70 SYS
GV$DB_CACHE_ADVICE

0000000060FCE220
SELECT SO.SUBNAME FR

000000008CBC9748
SELECT /* DS_SVC */

0000000060D88560
6ac3207f3c3be84ba9657d74794fbe7a

0000000088C769B0 SYS
DBMS_STREAMS_ADV_ADM_UTL

0000000060D56FE0 SYS
CDC_ALTER_CTABLE_BEFORE

0000000092C8B8A8 SYS
SCHEDULER$_JOBSUFFIX_S

00000000653BCF80
/* SQL Analyze(36,1) */ SELECT /*+ NO_MONITORING */ SYS_OP_COMBINED_HASH("DBID", "SNAP_ID", "INSTANCE_NUMBER", "FILE#") FROM "SYS" . "W
RH$_FILESTATXS"

0000000088C7ADA0
/* SQL Analyze(36,1) */ SELECT /*+ NO_MONITORING */ SYS_OP_COMBINED_HASH("DBID", "SNAP_ID", "INSTANCE_NUMBER", "FILE#") FROM "SYS" . "W
RH$_FILESTATXS"

000000008CB1FC78
SELECT C.SQL_ID, A.U

000000008B26F748
26947ac91d45c1242b247fc5f6b6f088

0000000088D55410 $BUILD$
9cbe247a3c4bf3c8

0000000060CD4DF0
b2d194b6396ae66825b4b5df17049d4

00000000652AD9D0 $BUILD$
1cd743b3b8254303

000000008CA0D790 SYS
GV$IOSTAT_FILE

0000000092D05648 SCOTT
HASH_TABLE

00000000653BE3C0 SYS
_default_auditing_options_

000000008B319F80 PUBLIC
DBMS_XDBZ

0000000088FEA2F0
488ca209719cc57f32228fc9527f081e

0000000060D968C8 SYS
ORA_DICT_OBJ_OWNER

0000000060EFFC60
da0f5d5885f338c29aeb8ffd394a9d23

000000008C868408
SELECT IS_PERSISTENT

000000008B363278
SELECT COUNT(*) FROM

0000000088DD0BD8
1e72adecced337a334088361336bcbb3

000000008B1E29D8
select substrb(dump(

000000008C8DB4B8 SYS
DBMS_SCHEDULER

0000000088EF4B28 SYS
RESOURCE_GROUP_MAPPING$

0000000088F44290
11638621470874829993

0000000060FFEDB0
71426d02602c009f7f47f611106344c

0000000060F091A0
select /*+  no_paral

0000000088CA8318
select substrb(dump(

000000008B14F7D8 $BUILD$
e320f5ca11b9d146

00000000652DB780 $BUILD$
aad3f416447b46c9

00000000653058B0 $BUILD$
12a9d9d1b2e275a0

000000008C8B7C58
SELECT RESTRICT_TO_U

000000008CA6FCE0
feda23fd904280cd45aaf86fe2584e

0000000060F07B80
select inst_id, java_size, round(java_size / basejava_size, 4),  kgljsim_size, kgljsim_objs, kgljsim_timesave,  decode(kgljsim_basetime
save, 0, to_number(null),         round(kgljsim_timesave / kgljsim_basetimesave, 4)),  kgljsim_parsetime, decode(kgljsim_baseparsetime,
 0, to_number(null),         round(kgljsim_parsetime / kgljsim_baseparsetime, 4)),  kgljsim_hits from x$kgljsim

0000000060E8E340
select inst_id, java_size, round(java_size / basejava_size, 4),  kgljsim_size, kgljsim_objs, kgljsim_timesave,  decode(kgljsim_basetime
save, 0, to_number(null),         round(kgljsim_timesave / kgljsim_basetimesave, 4)),  kgljsim_parsetime, decode(kgljsim_baseparsetime,
 0, to_number(null),         round(kgljsim_parsetime / kgljsim_baseparsetime, 4)),  kgljsim_hits from x$kgljsim

000000008B0A2A50 SYS
V$SESSION

0000000092D43BD8
/* SQL Analyze(1) */

0000000088FCCBE8
2a7a5f2724c77c374e1632b79be34347

0000000088F99CD8
33112c7778d88fba837089936c443e49

0000000060D63B08
select /*+  no_paral

0000000060DAFC08
SELECT ORIGINAL_CAPT

000000008CBCB5F8 SYS
WRH$_SEG_STAT_BL

000000008B19DB98
a6540abbb5419b3f2cc0ba6fde19d61

0000000088CBFFC0 SYS
GV$MUTEX_SLEEP

0000000088F57B28
a738ad6547e98496dbf7e813bc4b0af

000000008C931F38 SYS
DBA_ADVISOR_EXECUTIONS

0000000060CA11D0
58e8c142109e7c51f6d07ec6bd8c3902

000000008B09B7B0 SYS
USER_ROLE_PRIVS

000000008B33AB78 $BUILD$
d71234b1f46a64d0

000000008B154DB8
SELECT JOB_OWNER, JO

0000000088E5D348
SELECT COLLCTTAB FRO

0000000060CAAA10
e98fc29946ac98402e0b82e942d92136

0000000088E59078
e91cf5527ed6b23d719849ccdcb8fef0

000000008B0F4758
SELECT COUNT(*) FROM

0000000060ECADE0
69a48f784be7c7d1dca49527cd1b2c33

000000008C89E548
select substrb(dump(

0000000060E1C820
select substrb(dump(

0000000088F02040
a0c2800552207569853de40958395dc2

000000008C9DCF30 SYS
DBMS_OUTPUT

0000000088C685E0 APEX_030200
WWV_FLOW_PAGE_CACHE_API

0000000088C99558
SELECT APPENDCHILDXM

0000000088F89D48
57c547690472c43471041825a74ced5

0000000092C79BC8
INSERT INTO SYS.SCHE

000000008B044A10
SELECT /*+ all_rows */ C.NAME ICNAME,IC.POS# ICPOS,IC.SPARE1 ICFLAGS, C.PROPERTY ICPROP,C.DEFAULT$ ICEXPR, C.DEFLENGTH ICELEN FROM ICOL
$ IC,COL$ C WHERE (:B2 IS NULL) AND IC.OBJ#=:B1 AND IC.BO#=C.OBJ# AND IC.INTCOL# = C.INTCOL# UNION ALL SELECT '"'||BO.NAME||'"."'||C.NA
ME||'"' ICNAME, IC.POS# ICPOS,IC.SPARE1 ICFLAGS, C.PROPERTY ICPROP,C.DEFAULT$ ICEXPR, C.DEFLENGTH ICELEN FROM ICOL$ IC,COL$ C, OBJ$ BO
WHERE (:B2 IS NOT NULL) AND IC.OBJ#=:B1 AND IC.BO#=C.OBJ# AND IC.BO#=BO.OBJ# AND IC.SPARE2 = C.INTCOL# ORDER BY ICPOS

000000008B1BB740
SELECT /*+ all_rows */ C.NAME ICNAME,IC.POS# ICPOS,IC.SPARE1 ICFLAGS, C.PROPERTY ICPROP,C.DEFAULT$ ICEXPR, C.DEFLENGTH ICELEN FROM ICOL
$ IC,COL$ C WHERE (:B2 IS NULL) AND IC.OBJ#=:B1 AND IC.BO#=C.OBJ# AND IC.INTCOL# = C.INTCOL# UNION ALL SELECT '"'||BO.NAME||'"."'||C.NA
ME||'"' ICNAME, IC.POS# ICPOS,IC.SPARE1 ICFLAGS, C.PROPERTY ICPROP,C.DEFAULT$ ICEXPR, C.DEFLENGTH ICELEN FROM ICOL$ IC,COL$ C, OBJ$ BO
WHERE (:B2 IS NOT NULL) AND IC.OBJ#=:B1 AND IC.BO#=C.OBJ# AND IC.BO#=BO.OBJ# AND IC.SPARE2 = C.INTCOL# ORDER BY ICPOS

000000008B087160
SELECT /*+ all_rows */ C.NAME ICNAME,IC.POS# ICPOS,IC.SPARE1 ICFLAGS, C.PROPERTY ICPROP,C.DEFAULT$ ICEXPR, C.DEFLENGTH ICELEN FROM ICOL
$ IC,COL$ C WHERE (:B2 IS NULL) AND IC.OBJ#=:B1 AND IC.BO#=C.OBJ# AND IC.INTCOL# = C.INTCOL# UNION ALL SELECT '"'||BO.NAME||'"."'||C.NA
ME||'"' ICNAME, IC.POS# ICPOS,IC.SPARE1 ICFLAGS, C.PROPERTY ICPROP,C.DEFAULT$ ICEXPR, C.DEFLENGTH ICELEN FROM ICOL$ IC,COL$ C, OBJ$ BO
WHERE (:B2 IS NOT NULL) AND IC.OBJ#=:B1 AND IC.BO#=C.OBJ# AND IC.BO#=BO.OBJ# AND IC.SPARE2 = C.INTCOL# ORDER BY ICPOS

000000008C928858
UPDATE SYS.WRI$_ADV_

0000000060DEB578 SYS
DBA_CONSTRAINTS

0000000088CF3778
SELECT SQLSET_ROW(NU

000000008C8DB6D8 SYS
DBMS_JOB

000000008B182608
SELECT ATTRTYPE FROM

000000008C986E30
select substrb(dump(

000000008B1E9488
SELECT MIN(SNAP_ID)

0000000060EB84C0
SELECT MESSAGE FROM

0000000060E46058
b9382c8555750582a7c02d7dcb1b2d3c

0000000088C8CB68
UPDATE WRI$_SQLSET_P

0000000088DA47F8
UPDATE WRH$_SQL_PLAN SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID, PLAN_HASH_VALUE) IN (SELECT STR1_KEWRATTR, NUM1_KEW
RATTR FROM X$KEWRATTRSTALE)

0000000092CAC048
UPDATE WRH$_SQL_PLAN SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID, PLAN_HASH_VALUE) IN (SELECT STR1_KEWRATTR, NUM1_KEW
RATTR FROM X$KEWRATTRSTALE)

0000000092D5E660
UPDATE WRH$_SQL_PLAN SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID, PLAN_HASH_VALUE) IN (SELECT STR1_KEWRATTR, NUM1_KEW
RATTR FROM X$KEWRATTRSTALE)

0000000088DA4C78
UPDATE WRH$_SQL_PLAN SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID, PLAN_HASH_VALUE) IN (SELECT STR1_KEWRATTR, NUM1_KEW
RATTR FROM X$KEWRATTRSTALE)

0000000088C87D78
SELECT SQL_ID, SQL_T

0000000088FB2038
88c50e0a3b33366d53013019e3cb9051

0000000088EAECD0
1db2dc56497376f5a8609bfa3d0279bd

0000000088E02F48 $BUILD$
2882d0be58c5fc9a

0000000060CBEC88
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJECT_NAME" val, nti
le(254) over (order by nlssort("OBJECT_NAME",'NLS_SORT = binary')) bkt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "OBJECT_NAME" is not nu
ll) group by val) group by maxbkt order by maxbkt

0000000088E04DA8
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJECT_NAME" val, nti
le(254) over (order by nlssort("OBJECT_NAME",'NLS_SORT = binary')) bkt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "OBJECT_NAME" is not nu
ll) group by val) group by maxbkt order by maxbkt

0000000088FBC408
2c9996701a33a4a61060771b82763343

000000008CADD7D8
SELECT SOUNDEX(:B1 )


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
000000008CAE30C0
f70a40e6b81497efef8a1969ea710ea5

0000000065346B20
29ddbaaada51e32ffda2d5985ff1bd93

0000000088CB5AF8
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

0000000092C8D938
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

000000008B12CF68
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

000000008CBDAF40
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

000000008B2B1438
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

0000000060D27E20
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

0000000060E35F40
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

0000000088E0DFB8
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

0000000065359590
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

0000000060F34BE0
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

0000000088CB5F78
                                         delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_m
ods$ m                                                          where exists
       (select /*+ unnest */ * from sys.tab$ t where t.obj# = m.obj#)

000000008CA4BC18
SELECT 4*1024*1024*1

0000000088CCDCC8
SELECT XMLELEMENT( "

000000008CBCBA68
9ffcc103f8c0e41a8bc0d2ecb097ad41

000000008CA2F030
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") INDEX( "U" "I_USER1")  */ COUNT(*) AS C1, 4294967
295 AS C2, COUNT(*) AS C3  FROM "SYS"."USER$" "U" WHERE ("U"."NAME"=:B1)) innerQuery

0000000060E02230
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") INDEX( "U" "I_USER1")  */ COUNT(*) AS C1, 4294967
295 AS C2, COUNT(*) AS C3  FROM "SYS"."USER$" "U" WHERE ("U"."NAME"=:B1)) innerQuery

0000000088DFBF28
b4346dae6f42ea4dfb6cf687a11ee0b9

000000008CB32690
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F66470
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060CD3670
cc0bbf5f14f51baa2e1f0fcac6b9bdb

0000000060FAB120
table_4_9_1735_0_0_0

0000000088E3CFB0
table_4_9_1735_0_0_0

000000008B14D638 APEX_030200
WWV_FLOW_FORMS

000000008B194C88
505c2c0f5c7a8bc76486a250618e4813

0000000088EFDFA8 SYS
V$TIMER

0000000092EB8D08 SYS
SCHEDULER$_SRCQ_MAP

0000000088EF64E8
  UPDATE /*+ INDEX(wrh$_seg_stat_obj wrh$_seg_stat_obj_index) */          wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, s
ubobject_name, tablespace_name,           object_type, index_type, base_obj#, base_object_name,           base_object_owner) =       (S
ELECT :lah_snap_id, so.oj.owner_name, so.oj.object_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,
              index_type, coalesce(io.base_obj#, so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),
        coalesce(io.base_object_owner, so.base_object_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, b
ase_obj#,                    base_object_name, base_object_owner,                    dbms_swrf_internal.awr_get_object_info(
           ts#, obj#, dataobj#,                      AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,
                 tablespace_name, object_type)) oj

0000000092C48B40
  UPDATE /*+ INDEX(wrh$_seg_stat_obj wrh$_seg_stat_obj_index) */          wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, s
ubobject_name, tablespace_name,           object_type, index_type, base_obj#, base_object_name,           base_object_owner) =       (S
ELECT :lah_snap_id, so.oj.owner_name, so.oj.object_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,
              index_type, coalesce(io.base_obj#, so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),
        coalesce(io.base_object_owner, so.base_object_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, b
ase_obj#,                    base_object_name, base_object_owner,                    dbms_swrf_internal.awr_get_object_info(
           ts#, obj#, dataobj#,                      AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,
                 tablespace_name, object_type)) oj

0000000088D56E28
  UPDATE /*+ INDEX(wrh$_seg_stat_obj wrh$_seg_stat_obj_index) */          wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, s
ubobject_name, tablespace_name,           object_type, index_type, base_obj#, base_object_name,           base_object_owner) =       (S
ELECT :lah_snap_id, so.oj.owner_name, so.oj.object_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,
              index_type, coalesce(io.base_obj#, so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),
        coalesce(io.base_object_owner, so.base_object_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, b
ase_obj#,                    base_object_name, base_object_owner,                    dbms_swrf_internal.awr_get_object_info(
           ts#, obj#, dataobj#,                      AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,
                 tablespace_name, object_type)) oj

000000008CBE2FB8
  UPDATE /*+ INDEX(wrh$_seg_stat_obj wrh$_seg_stat_obj_index) */          wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, s
ubobject_name, tablespace_name,           object_type, index_type, base_obj#, base_object_name,           base_object_owner) =       (S
ELECT :lah_snap_id, so.oj.owner_name, so.oj.object_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,
              index_type, coalesce(io.base_obj#, so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),
        coalesce(io.base_object_owner, so.base_object_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, b
ase_obj#,                    base_object_name, base_object_owner,                    dbms_swrf_internal.awr_get_object_info(
           ts#, obj#, dataobj#,                      AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,
                 tablespace_name, object_type)) oj

0000000060EBC080
  UPDATE /*+ INDEX(wrh$_seg_stat_obj wrh$_seg_stat_obj_index) */          wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, s
ubobject_name, tablespace_name,           object_type, index_type, base_obj#, base_object_name,           base_object_owner) =       (S
ELECT :lah_snap_id, so.oj.owner_name, so.oj.object_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,
              index_type, coalesce(io.base_obj#, so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),
        coalesce(io.base_object_owner, so.base_object_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, b
ase_obj#,                    base_object_name, base_object_owner,                    dbms_swrf_internal.awr_get_object_info(
           ts#, obj#, dataobj#,                      AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,
                 tablespace_name, object_type)) oj

0000000088EF6968
  UPDATE /*+ INDEX(wrh$_seg_stat_obj wrh$_seg_stat_obj_index) */          wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, s
ubobject_name, tablespace_name,           object_type, index_type, base_obj#, base_object_name,           base_object_owner) =       (S
ELECT :lah_snap_id, so.oj.owner_name, so.oj.object_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,
              index_type, coalesce(io.base_obj#, so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),
        coalesce(io.base_object_owner, so.base_object_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, b
ase_obj#,                    base_object_name, base_object_owner,                    dbms_swrf_internal.awr_get_object_info(
           ts#, obj#, dataobj#,                      AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,
                 tablespace_name, object_type)) oj

000000008CA9E090 APEX_030200
WWV_FLOW_STEP_BUTTONS

0000000060FA8EE0
select /*+  no_paral

0000000088D8C0F8
77c0cf26557964a9ea48e129672146c6

000000008B0CE898
SELECT TABLE_NAME, BLOCKS, EMPTY_BLOCKS, AVG_SPACE, CHAIN_CNT, AVG_ROW_LEN, CASE WHEN PARTITION_NAME IS NULL THEN 'Current Table' ELSE
PARTITION_NAME END AS PARTITION_NAME , CASE WHEN PARTITION_POSITION IS NULL THEN 'Current Table' ELSE TO_CHAR(PARTITION_POSITION) END A
S PARTITION_POSITION, STALE_STATS, LAST_ANALYZED FROM DBA_TAB_STATISTICS WHERE OWNER = UPPER(:B2 ) AND TABLE_NAME = UPPER(:B1 )

000000008B107FA8
SELECT TABLE_NAME, BLOCKS, EMPTY_BLOCKS, AVG_SPACE, CHAIN_CNT, AVG_ROW_LEN, CASE WHEN PARTITION_NAME IS NULL THEN 'Current Table' ELSE
PARTITION_NAME END AS PARTITION_NAME , CASE WHEN PARTITION_POSITION IS NULL THEN 'Current Table' ELSE TO_CHAR(PARTITION_POSITION) END A
S PARTITION_POSITION, STALE_STATS, LAST_ANALYZED FROM DBA_TAB_STATISTICS WHERE OWNER = UPPER(:B2 ) AND TABLE_NAME = UPPER(:B1 )

000000008B159218
5ca02bb59725147d425819cb5dae5f

000000008B1DB648
select substrb(dump(

000000008CBA0CA8
select substrb(dump(

00000000652E0180
SELECT DECODE('A','A','1','2') FROM DUAL

000000008B37C020
SELECT DECODE('A','A','1','2') FROM DUAL

000000008B2311B0
618e8d07a51af70a9413fb5a5d1f227

000000008CBE6B48
select nvl(spare3,0), property, flags, nvl(spare5,'NN0') from tab$ where obj# = :1

000000008CA28700
select nvl(spare3,0), property, flags, nvl(spare5,'NN0') from tab$ where obj# = :1

000000008CA837A8
select nvl(spare3,0), property, flags, nvl(spare5,'NN0') from tab$ where obj# = :1

000000008CA14D38
select nvl(spare3,0), property, flags, nvl(spare5,'NN0') from tab$ where obj# = :1

0000000060FB9980
INSERT INTO HASH_TABLE VALUES (TO_CHAR(SYSDATE, 'yyyymmdd') ||LPAD(ROUND(DBMS_RANDOM.VALUE(1, 999999999)), 9, 0),'helloword hash partit
ion table')

0000000060E76480
INSERT INTO HASH_TABLE VALUES (TO_CHAR(SYSDATE, 'yyyymmdd') ||LPAD(ROUND(DBMS_RANDOM.VALUE(1, 999999999)), 9, 0),'helloword hash partit
ion table')

000000008C884080
f4891e3beacd46de9f1f0253a92b612d

0000000092C81098 SYS
ACCESS$

0000000060DB9928
select audit$, os_path from dir$ where obj#=:1

0000000060DB9DA8
select audit$, os_path from dir$ where obj#=:1

000000008B3B06C8 SYS
DEFERRED_STG$

000000008B1009B8 SYS
DBA_CAPTURE

000000008B0A8130
538bf35e2d2bf27850394abd2ace267

0000000092D14160
DELETE FROM SYS.SCHE

0000000092D3A2F8
UPDATE RLM$RULESET S

000000008B0E7F28
436a415b2251827617e919499a05b67a

0000000088D26A90 $BUILD$
cdf2da4d6db4e1b4

0000000092D526D8
MERGE INTO EXF$ASUDF

000000006533CBC0
9ca47a406df4b978f1602faefcaa0d91

0000000092CBB658
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008C954CF8
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008B255F68
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008B127418
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

0000000060FF4C10
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008C9EC648
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

0000000092CB6498
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008B350720
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008B270DA8
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008C8340D0
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

000000008C9A3B00
 SELECT source,        (case when time_secs < 1 then 1 else time_secs end) as time_secs,        operation  FROM   ( SELECT  1  as sourc
e,                 trunc((sysdate - cast(ll.log_date as date)) * 86400)                   as time_secs,                 decode(ll.opera
tion,                        'OPEN',  0                        ,  1 ) as operation,                 ll.log_id as log_id          FROM
DBA_SCHEDULER_WINDOW_LOG ll ,                 ( SELECT max(l.log_id) as max_log_id                   FROM  DBA_SCHEDULER_WINDOW_LOG l ,
                         DBA_SCHEDULER_WINGROUP_MEMBERS m                   WHERE  l.window_name = m.window_name                     AN
D  m.window_group_name = 'MAINTENANCE_WINDOW_GROUP'                     AND  l.operation in ('OPEN', 'CLOSE')                     AND
CAST(l.log_date AS DATE) < ( SELECT cast(min(end_interval_time) as date) as btime FROM  WRM$_SNAPSHOT bsi  WHERE  bsi.dbid = :dbid  AND
 bsi.instance_number = :inst  AND bsi.snap_id = :bid

0000000088CA41B8 SYS
SQL_PLAN_ROW_TYPE

0000000060FFE950
48e1fc19b07f60e77ba0b876fdea38e

0000000088E865E0
777452b7c196beacde44bdfab56238b

000000008B04C470
DELETE FROM SYS.COL_

0000000088C60668
b40caa8d715ad10acd4e36208400e467

0000000092D61C68 SYS
X$KCCDI

0000000060D9B238
SELECT T.SCHEMA SCHE

0000000060F5EFB0
DELETE FROM EXFSYS.R

000000008CB20798
select substrb(dump(

0000000092D594B8 SCOTT
I_HHA

0000000088DA5038 SYS
DBMSOUTPUT_LINESARRAY

0000000088F783A8 SYS
GV$RSRC_PLAN_HISTORY

00000000652F8A70
select inst_id, ksmpgst_pid, ksmpgst_ser, ksmpgst_catname, ksmpgst_alloc,         decode(ksmpgst_used, 0, to_number(null), 1, 0, ksmpgs
t_used),         decode(ksmpgst_maxal, 0, to_number(null), 1, 0, ksmpgst_maxal)  from x$ksmpgst where bitand(ksmpgst_paflg,1)!=0 and
      (ksmpgst_alloc > 0 or ksmpgst_used > 1 or ksmpgst_maxal > 1)         order by inst_id, ksmpgst_pid, ksmpgst_catidx

0000000088F88D28
select inst_id, ksmpgst_pid, ksmpgst_ser, ksmpgst_catname, ksmpgst_alloc,         decode(ksmpgst_used, 0, to_number(null), 1, 0, ksmpgs
t_used),         decode(ksmpgst_maxal, 0, to_number(null), 1, 0, ksmpgst_maxal)  from x$ksmpgst where bitand(ksmpgst_paflg,1)!=0 and
      (ksmpgst_alloc > 0 or ksmpgst_used > 1 or ksmpgst_maxal > 1)         order by inst_id, ksmpgst_pid, ksmpgst_catidx

0000000060E67EC8
SELECT obj_type, plan_id, comp_data                                           FROM sqlobj$data
                     WHERE signature = :1                                                                AND category = :2

0000000092D5BE28
SELECT obj_type, plan_id, comp_data                                           FROM sqlobj$data
                     WHERE signature = :1                                                                AND category = :2

0000000088DBB9D8
select substrb(dump(

000000008B0AAC60
SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,DECODE(B.TABLESPACE_NAME,NULL,'None',B.TABLESPACE_NAME) AS TABLESPACE_NAME,B.INDEX_
TYPE,B.DEGREE, ROUND(C.BYTES / 1024 / 1024) AS INDEX_MB, A.DESCEND, CASE WHEN B.STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, DE
CODE(TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi'),NULL,'None', TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi')) AS LAST_ANALYZED, CASE WHEN B.VI
SIBILITY = 'VISIBLE' THEN 'YES' ELSE 'NO ' END VISIBILITY, CASE WHEN UNIQUENESS = 'UNIQUE' THEN 'YES' ELSE 'NO ' END UNIQUENESS FROM DB
A_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C ,DBA_TAB_COLUMNS T WHERE A.INDEX_NAME = B.INDEX_NAME AND T.TABLE_NAME = A.TABLE_NAME AND
 A.COLUMN_NAME = T.COLUMN_NAME AND A.TABLE_NAME = :B2 AND A.INDEX_OWNER = :B1 AND C.SEGMENT_NAME = A.INDEX_NAME ORDER BY INDEX_NAME, CO
LUMN_POSITION

000000008B2FD588
SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,DECODE(B.TABLESPACE_NAME,NULL,'None',B.TABLESPACE_NAME) AS TABLESPACE_NAME,B.INDEX_
TYPE,B.DEGREE, ROUND(C.BYTES / 1024 / 1024) AS INDEX_MB, A.DESCEND, CASE WHEN B.STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, DE
CODE(TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi'),NULL,'None', TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi')) AS LAST_ANALYZED, CASE WHEN B.VI
SIBILITY = 'VISIBLE' THEN 'YES' ELSE 'NO ' END VISIBILITY, CASE WHEN UNIQUENESS = 'UNIQUE' THEN 'YES' ELSE 'NO ' END UNIQUENESS FROM DB
A_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C ,DBA_TAB_COLUMNS T WHERE A.INDEX_NAME = B.INDEX_NAME AND T.TABLE_NAME = A.TABLE_NAME AND
 A.COLUMN_NAME = T.COLUMN_NAME AND A.TABLE_NAME = :B2 AND A.INDEX_OWNER = :B1 AND C.SEGMENT_NAME = A.INDEX_NAME ORDER BY INDEX_NAME, CO
LUMN_POSITION

000000008C9F9970 SYS
SQLOBJ$

0000000088DF4278
insert into wrh$_memory_resize_ops   (snap_id, dbid, instance_number,    component, oper_type, start_time, end_time,    target_size, op
er_mode, parameter, initial_size,    final_size, status) select snap_id, dbid, instance_num,        component, oper_type, start_time, m
ax(end_time),        target_size, max(oper_mode), max(parameter), max(initial_size),        max(final_size), max(status) from (select
  :snap_id snap_id, :dbid dbid, :instance_number instance_num,    component, oper_type, start_time, end_time,    target_size, oper_mode
, parameter, initial_size,    final_size, status  from    v$memory_resize_ops  where    :begin_interval_time <= end_time and    end_tim
e < :end_interval_time)  group by    snap_id, dbid, instance_num,    component, oper_type, start_time, target_size

000000008B1F39F0
insert into wrh$_memory_resize_ops   (snap_id, dbid, instance_number,    component, oper_type, start_time, end_time,    target_size, op
er_mode, parameter, initial_size,    final_size, status) select snap_id, dbid, instance_num,        component, oper_type, start_time, m
ax(end_time),        target_size, max(oper_mode), max(parameter), max(initial_size),        max(final_size), max(status) from (select
  :snap_id snap_id, :dbid dbid, :instance_number instance_num,    component, oper_type, start_time, end_time,    target_size, oper_mode
, parameter, initial_size,    final_size, status  from    v$memory_resize_ops  where    :begin_interval_time <= end_time and    end_tim
e < :end_interval_time)  group by    snap_id, dbid, instance_num,    component, oper_type, start_time, target_size

0000000060DD7BE8
insert into wrh$_memory_resize_ops   (snap_id, dbid, instance_number,    component, oper_type, start_time, end_time,    target_size, op
er_mode, parameter, initial_size,    final_size, status) select snap_id, dbid, instance_num,        component, oper_type, start_time, m
ax(end_time),        target_size, max(oper_mode), max(parameter), max(initial_size),        max(final_size), max(status) from (select
  :snap_id snap_id, :dbid dbid, :instance_number instance_num,    component, oper_type, start_time, end_time,    target_size, oper_mode
, parameter, initial_size,    final_size, status  from    v$memory_resize_ops  where    :begin_interval_time <= end_time and    end_tim
e < :end_interval_time)  group by    snap_id, dbid, instance_num,    component, oper_type, start_time, target_size

000000008CAF9E68
insert into wrh$_memory_resize_ops   (snap_id, dbid, instance_number,    component, oper_type, start_time, end_time,    target_size, op
er_mode, parameter, initial_size,    final_size, status) select snap_id, dbid, instance_num,        component, oper_type, start_time, m
ax(end_time),        target_size, max(oper_mode), max(parameter), max(initial_size),        max(final_size), max(status) from (select
  :snap_id snap_id, :dbid dbid, :instance_number instance_num,    component, oper_type, start_time, end_time,    target_size, oper_mode
, parameter, initial_size,    final_size, status  from    v$memory_resize_ops  where    :begin_interval_time <= end_time and    end_tim
e < :end_interval_time)  group by    snap_id, dbid, instance_num,    component, oper_type, start_time, target_size

0000000088DF46F8
insert into wrh$_memory_resize_ops   (snap_id, dbid, instance_number,    component, oper_type, start_time, end_time,    target_size, op
er_mode, parameter, initial_size,    final_size, status) select snap_id, dbid, instance_num,        component, oper_type, start_time, m
ax(end_time),        target_size, max(oper_mode), max(parameter), max(initial_size),        max(final_size), max(status) from (select
  :snap_id snap_id, :dbid dbid, :instance_number instance_num,    component, oper_type, start_time, end_time,    target_size, oper_mode
, parameter, initial_size,    final_size, status  from    v$memory_resize_ops  where    :begin_interval_time <= end_time and    end_tim
e < :end_interval_time)  group by    snap_id, dbid, instance_num,    component, oper_type, start_time, target_size

000000008B3D5308 APEX_030200
WWV_FLOW_DISP_PAGE_PLUGS

0000000060FCCE80
select substrb(dump(

000000008B104410 $BUILD$
3cf2ce5dd1edd6c5

0000000088C55368
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B36E6D0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C996F08
select substrb(dump(

00000000652CEDF0
a7f85501496c15d4cfedcf088a5c17ef

0000000060FE2620
SELECT :B10 TYPE_CON

0000000060F2A4C0
f237ab9d327baedc6fa75ac3d5f2fd36

0000000092C60448
SELECT COUNT(DISTINC

0000000092EB3100
5a53b140fea8dfc2238781c4b3a8bad2

000000008B1769D0
select substrb(dump(

000000008C8ABED0
493cd250cc27a1a671836dfc28f34ccf

0000000088D8CAE8 PUBLIC
V$DATABASE

000000008B0AF290
UPDATE RLM$EVENTSTRU

00000000652DB090
b7ada89eb959bc13f558c0479a173b7

0000000088F94FA8
MERGE INTO SYS.SCHED

000000008B3CA678 SYS
X$KSULL

000000008C92F018 SYS
WRI$_ADV_SQLT_PLAN_HASH

000000008CAFCBD8
2490706085944436925

000000008C8996E8
declare     v_cnt nu

0000000065394A30
declare     v_cnt nu

000000008C9FEFF8
3b11c1281b6f11d34bb2fd96d56c8cee

0000000088D4DC68
ee991c9ea0f312507c74b50e9e553c22

0000000060E31F48
SELECT O.NAME, O.SUB

0000000088EC0620 SYS
WRH$_SERVICE_STAT_PK

000000008CAEEE00
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max(substrb("INF",1,32)) val,coun
t(*) cnt  from "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn and substrb("INF",1,32) is
 not null  group by nlssort(substrb("INF",1,32), 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binary')

000000008B11D590
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max(substrb("INF",1,32)) val,coun
t(*) cnt  from "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn and substrb("INF",1,32) is
 not null  group by nlssort(substrb("INF",1,32), 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binary')

0000000060FCEEB8
begin   :owner :=upper('');   :index_name := upper(''); end;

0000000088C47308
begin   :owner :=upper('');   :index_name := upper(''); end;

0000000060FF71C0
c9feee85d219d564a7091d5b98dbc96b

0000000060CE5F88
646244caebc64aa7bec837eeff551e51

0000000060EE88A0 $BUILD$
db490257cbda5d37

000000008CA90740
select /*+  no_paral

0000000088F84958
c40023e74668cd0711cb8f2151077dcb

0000000092D279C8
select /*+  no_paral

0000000088D18E40 SYS
DBMS_BACKUP_RESTORE

000000008B187E40
UPDATE WWV_FLOW_SESS

000000008CA575F8
select sga_size, sga_size_factor, estd_db_time,                  estd_db_time_factor, estd_physical_reads                         from
gv$sga_target_advice where inst_id = userenv('instance')

0000000088DBF608
select sga_size, sga_size_factor, estd_db_time,                  estd_db_time_factor, estd_physical_reads                         from
gv$sga_target_advice where inst_id = userenv('instance')

0000000060E74BD0
436a415b2251827617e919499a05b67a

000000008B111D90
SELECT COUNT(*) FROM

0000000092C93228
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

0000000092C930B8
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

000000008B29EB30
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

000000008B03B088
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

0000000088F043F8
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

000000008B0A8350
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

000000008B110DB0
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

000000008B38A580
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

000000008B35E010
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

0000000092C947F8
SELECT advisor_id FROM sys.wri$_adv_tasks WHERE ID = :1

000000008B2273C0
d633471bd02e9bf3337cec25f79acb87

00000000652FBC30
9fe4e0239cc520782558100be5ce93bd

000000008B18F570 SYS
DBA_SCHEDULER_CHAIN_STEPS

0000000088EC0D90 SYS
WRH$_SERVICE_STAT_PK

000000008B241A58
SELECT TO_NUMBER(VAL

0000000060ECDAD0 APEX_030200
WWV_FLOW_COLLECTION

0000000088C6C210
insert into sys.wri$_optstat_histhead_history (obj#,intcol#,savtime,flags, null_cnt,minimum,maximum,distcnt,density,lowval,hival,avgcln
,sample_distcnt, sample_size,timestamp#,colname)  select h.obj#, h.intcol#, :3, bitand(h.spare2,7) + 8 + decode(h.cache_cnt,0,0,64), h.
null_cnt, h.minimum, h.maximum, h.distcnt, h.density, h.lowval, h.hival, h.avgcln, h.spare1, h.sample_size, h.timestamp#, :4  from sys.
hist_head$ h where h.obj# = :1 and h.intcol# = :2

000000008CA62CA8
insert into sys.wri$_optstat_histhead_history (obj#,intcol#,savtime,flags, null_cnt,minimum,maximum,distcnt,density,lowval,hival,avgcln
,sample_distcnt, sample_size,timestamp#,colname)  select h.obj#, h.intcol#, :3, bitand(h.spare2,7) + 8 + decode(h.cache_cnt,0,0,64), h.
null_cnt, h.minimum, h.maximum, h.distcnt, h.density, h.lowval, h.hival, h.avgcln, h.spare1, h.sample_size, h.timestamp#, :4  from sys.
hist_head$ h where h.obj# = :1 and h.intcol# = :2

0000000088F5C260
insert into sys.wri$_optstat_histhead_history (obj#,intcol#,savtime,flags, null_cnt,minimum,maximum,distcnt,density,lowval,hival,avgcln
,sample_distcnt, sample_size,timestamp#,colname)  select h.obj#, h.intcol#, :3, bitand(h.spare2,7) + 8 + decode(h.cache_cnt,0,0,64), h.
null_cnt, h.minimum, h.maximum, h.distcnt, h.density, h.lowval, h.hival, h.avgcln, h.spare1, h.sample_size, h.timestamp#, :4  from sys.
hist_head$ h where h.obj# = :1 and h.intcol# = :2

0000000092D2B528
insert into sys.wri$_optstat_histhead_history (obj#,intcol#,savtime,flags, null_cnt,minimum,maximum,distcnt,density,lowval,hival,avgcln
,sample_distcnt, sample_size,timestamp#,colname)  select h.obj#, h.intcol#, :3, bitand(h.spare2,7) + 8 + decode(h.cache_cnt,0,0,64), h.
null_cnt, h.minimum, h.maximum, h.distcnt, h.density, h.lowval, h.hival, h.avgcln, h.spare1, h.sample_size, h.timestamp#, :4  from sys.
hist_head$ h where h.obj# = :1 and h.intcol# = :2

0000000060E8A0D0
insert into sys.wri$_optstat_histhead_history (obj#,intcol#,savtime,flags, null_cnt,minimum,maximum,distcnt,density,lowval,hival,avgcln
,sample_distcnt, sample_size,timestamp#,colname)  select h.obj#, h.intcol#, :3, bitand(h.spare2,7) + 8 + decode(h.cache_cnt,0,0,64), h.
null_cnt, h.minimum, h.maximum, h.distcnt, h.density, h.lowval, h.hival, h.avgcln, h.spare1, h.sample_size, h.timestamp#, :4  from sys.
hist_head$ h where h.obj# = :1 and h.intcol# = :2

0000000060F43780
insert into sys.wri$_optstat_histhead_history (obj#,intcol#,savtime,flags, null_cnt,minimum,maximum,distcnt,density,lowval,hival,avgcln
,sample_distcnt, sample_size,timestamp#,colname)  select h.obj#, h.intcol#, :3, bitand(h.spare2,7) + 8 + decode(h.cache_cnt,0,0,64), h.
null_cnt, h.minimum, h.maximum, h.distcnt, h.density, h.lowval, h.hival, h.avgcln, h.spare1, h.sample_size, h.timestamp#, :4  from sys.
hist_head$ h where h.obj# = :1 and h.intcol# = :2

0000000088C6C5A0
insert into sys.wri$_optstat_histhead_history (obj#,intcol#,savtime,flags, null_cnt,minimum,maximum,distcnt,density,lowval,hival,avgcln
,sample_distcnt, sample_size,timestamp#,colname)  select h.obj#, h.intcol#, :3, bitand(h.spare2,7) + 8 + decode(h.cache_cnt,0,0,64), h.
null_cnt, h.minimum, h.maximum, h.distcnt, h.density, h.lowval, h.hival, h.avgcln, h.spare1, h.sample_size, h.timestamp#, :4  from sys.
hist_head$ h where h.obj# = :1 and h.intcol# = :2

0000000088D46BD0
f265d5e838d61eea262c745e87356bf5

000000008CB3ABD8 SYS
IDL_UB1$

000000008B35DBC0
select substrb(dump(

000000008C8A9090 SYS
DBMS_CAPTURE_ADM

000000008C9D47D0
SELECT 1 from "SYS"."AQ$SCHEDULER_FILEWATCHER_QT" qtview  WHERE (queue = 'SYS.AQ$_SCHEDULER_FILEWATCHER_QT_E' ) AND rownum < 2

000000008CA84E98
SELECT 1 from "SYS"."AQ$SCHEDULER_FILEWATCHER_QT" qtview  WHERE (queue = 'SYS.AQ$_SCHEDULER_FILEWATCHER_QT_E' ) AND rownum < 2

0000000060E8BF60
SELECT count(*) nb_baselines, nvl(sum(updplan), 0) to_update FROM (SELECT CASE WHEN b.plan_id = :1 and BITAND(b.flags, 2) != 2 THEN 1
            ELSE 0 END as updplan       FROM sqlobj$ b WHERE b.signature = :2 AND b.obj_type = 2)

0000000060C8A660
SELECT count(*) nb_baselines, nvl(sum(updplan), 0) to_update FROM (SELECT CASE WHEN b.plan_id = :1 and BITAND(b.flags, 2) != 2 THEN 1
            ELSE 0 END as updplan       FROM sqlobj$ b WHERE b.signature = :2 AND b.obj_type = 2)

000000008C9A8AE8 $BUILD$
1866335d8d300cca

000000008B1E4908
SELECT O.NAME, O.SUB

0000000088D75D58
da957bc475a303b95574bdd24da17f2d

000000008CAB95A0
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 153

0000000060CD0D30
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 153

000000008B3BDFB8 ORACLE_OCM
MGMT_CONFIG_JOB_1

0000000060D65E48
225ee1942f68d416b64ac1c08383f2dd

000000008CA92E10 SYS
X$KTSTFC

0000000088DFEB08 SYS
GV$TEMPFILE

000000008B09AF30 SYS
ODCIOBJECTLIST

0000000088DA45F8
3292a3d1ae77d385c5b5cc732a1abf35

000000006530E4B0
select substrb(dump(

000000008B2F76A8
93e68bd5f62696436065a5b1b1a56b6

0000000088E06FA8
call dbms_autotask_prvt.age (  )

000000008CA8FA80
call dbms_autotask_prvt.age (  )

000000008B211828 SYS
GV$TEMP_EXTENT_POOL

000000008C9443B8 $BUILD$
934f553354ac8024

0000000088EC8D30 SYS
V$ACTIVE_SERVICES

0000000088E48AE8
DELETE FROM SYS.SCHE

000000008CBA8568 SYS
SYSEVENT

000000008CBDA120
SELECT TO_CHAR((((:B

000000008B21CC80
UPDATE SYSTEM.AQ$_QU

000000008CBB81A8 SYS
SYS_DBA_SEGS

000000008B056010
SELECT TBL$OR$IDX$PA

0000000088D94F98 SYS
WRI$_SEGADV_OBJLIST

0000000088C9AF48
SELECT XMLELEMENT( "

0000000060D9A438
select /*+  no_parallel_index(t, "WRH$_SEG_STAT_OBJ_INDEX")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_
monitoring no_substrb_pad  no_expand index(t,"WRH$_SEG_STAT_OBJ_INDEX") */ count(*) as nrw,count(distinct sys_op_lbid(6581,'L',t.rowid)
) as nlb,count(distinct hextoraw(sys_op_descend("DBID")||sys_op_descend("SNAP_ID"))) as ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as
 clf from "SYS"."WRH$_SEG_STAT_OBJ" t where "DBID" is not null or "SNAP_ID" is not null

0000000092D1D408
select /*+  no_parallel_index(t, "WRH$_SEG_STAT_OBJ_INDEX")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_
monitoring no_substrb_pad  no_expand index(t,"WRH$_SEG_STAT_OBJ_INDEX") */ count(*) as nrw,count(distinct sys_op_lbid(6581,'L',t.rowid)
) as nlb,count(distinct hextoraw(sys_op_descend("DBID")||sys_op_descend("SNAP_ID"))) as ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as
 clf from "SYS"."WRH$_SEG_STAT_OBJ" t where "DBID" is not null or "SNAP_ID" is not null

000000008B10AB80
d0bf293043a9bdeeae900485895e2ae

000000008B04D190
SELECT POBJN, PN, PN

0000000088EAB290 SYS
WRH$_SYSTEM_EVENT_PK

000000008CAD9ED8 SYS
DBMS_UTILITY

000000008B0A8CB0 SYS
V$LATCH_MISSES

0000000092CA2518 SYS
DBA_SCHEDULER_FILE_WATCHERS

000000008B065910
SELECT C.NAME FROM S

0000000088DE8D58
ad154e49dc1355cd9027d8dafe0d59a8

0000000060F641F0
5839188172e9899c39db72ca5580d616

000000008B3F2520
MERGE /*+ INDEX(@sel$2 sqlobj$auxdata                                                                (signature category obj_type plan_
id)) */              INTO sqlobj$auxdata                                                           USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET description = :5,
                                        creator = nvl(:6, creator),                                                   origin = :7,
                                                             version = :8,
    created = :9,

000000008CA5E988
MERGE /*+ INDEX(@sel$2 sqlobj$auxdata                                                                (signature category obj_type plan_
id)) */              INTO sqlobj$auxdata                                                           USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET description = :5,
                                        creator = nvl(:6, creator),                                                   origin = :7,
                                                             version = :8,
    created = :9,

0000000088E91AC0
MERGE /*+ INDEX(@sel$2 sqlobj$auxdata                                                                (signature category obj_type plan_
id)) */              INTO sqlobj$auxdata                                                           USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET description = :5,
                                        creator = nvl(:6, creator),                                                   origin = :7,
                                                             version = :8,
    created = :9,

0000000088D66B28
MERGE /*+ INDEX(@sel$2 sqlobj$auxdata                                                                (signature category obj_type plan_
id)) */              INTO sqlobj$auxdata                                                           USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET description = :5,
                                        creator = nvl(:6, creator),                                                   origin = :7,
                                                             version = :8,
    created = :9,

0000000060E36730
MERGE /*+ INDEX(@sel$2 sqlobj$auxdata                                                                (signature category obj_type plan_
id)) */              INTO sqlobj$auxdata                                                           USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET description = :5,
                                        creator = nvl(:6, creator),                                                   origin = :7,
                                                             version = :8,
    created = :9,

0000000092D559D8 SYS
WRH$_SERVICE_NAME

0000000092D3F8E8 SYS
WRI$_ADV_HDM_T

0000000088E880E0 $BUILD$
fd228069c3467b3e

000000008B1902D0 SYS
GV$LATCH

0000000092C5CA38 SYS
X$KGSKSCS

0000000060FE6330
a7d0a75ff4baf3a2197c26f430948e02

000000008CA321F8
17e2e2d1951b0a3aadc5f1344606391

0000000060F9AB90 SYS
DBA_ADVISOR_DIR_TASK_INST

0000000088CC6658
SELECT NVL(MEM.SQL_I

000000008C887DB0
SELECT COUNT(*) FROM ( SELECT R.PRIVILEGE FROM SYS.USER_ROLE_PRIVS U, SYS.ROLE_SYS_PRIVS R WHERE U.GRANTED_ROLE=R.ROLE UNION ALL SELECT
 PRIVILEGE FROM SYS.USER_SYS_PRIVS ) WHERE PRIVILEGE = :B1 AND ROWNUM < 2

000000008CA1F078
SELECT COUNT(*) FROM ( SELECT R.PRIVILEGE FROM SYS.USER_ROLE_PRIVS U, SYS.ROLE_SYS_PRIVS R WHERE U.GRANTED_ROLE=R.ROLE UNION ALL SELECT
 PRIVILEGE FROM SYS.USER_SYS_PRIVS ) WHERE PRIVILEGE = :B1 AND ROWNUM < 2

0000000060E70DA0
SELECT COUNT(*) FROM ( SELECT R.PRIVILEGE FROM SYS.USER_ROLE_PRIVS U, SYS.ROLE_SYS_PRIVS R WHERE U.GRANTED_ROLE=R.ROLE UNION ALL SELECT
 PRIVILEGE FROM SYS.USER_SYS_PRIVS ) WHERE PRIVILEGE = :B1 AND ROWNUM < 2

0000000060EBDE90
SELECT COUNT(*) FROM ( SELECT R.PRIVILEGE FROM SYS.USER_ROLE_PRIVS U, SYS.ROLE_SYS_PRIVS R WHERE U.GRANTED_ROLE=R.ROLE UNION ALL SELECT
 PRIVILEGE FROM SYS.USER_SYS_PRIVS ) WHERE PRIVILEGE = :B1 AND ROWNUM < 2

000000008B0994F0
SELECT COUNT(*) FROM ( SELECT R.PRIVILEGE FROM SYS.USER_ROLE_PRIVS U, SYS.ROLE_SYS_PRIVS R WHERE U.GRANTED_ROLE=R.ROLE UNION ALL SELECT
 PRIVILEGE FROM SYS.USER_SYS_PRIVS ) WHERE PRIVILEGE = :B1 AND ROWNUM < 2

0000000088CD06C8
SELECT XMLELEMENT( "

000000008C996018
9985329dd0518ccd7a9611e59d7f697

0000000092C73908 SYS
WRH$_UNDOSTAT


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
000000008B2A0A68
380be70e6546af6a242df65feaa41fae

000000008CB99A18
/* SQL Analyze(1) */

000000008B314870
a7d0a75ff4baf3a2197c26f430948e02

000000008B0BBEB0 SYS
CDC_CREATE_CTABLE_BEFORE

000000008B0CAD78 $BUILD$
9027d8dafe0d59a8

000000008B3E39E0 $BUILD$
 baa1904 2522cc3

000000008B2BE228
select substrb(dump(

0000000088F0DBC8
insert into sys.scheduler$_window_details  (log_id, log_date, instance_id, req_start_date,   start_date, duration, actual_duration, add
itional_info)   values  (:1, SYSTIMESTAMP, :2, :3, :4, :5, :6, :7)

000000008B1CCE68
insert into sys.scheduler$_window_details  (log_id, log_date, instance_id, req_start_date,   start_date, duration, actual_duration, add
itional_info)   values  (:1, SYSTIMESTAMP, :2, :3, :4, :5, :6, :7)

0000000088E49588 SYS
WRH$_PLAN_OPTION_NAME

000000008CB03C88
7623273066cdae4936901a2dc517330d

00000000653D17E0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("SNAP_ID")),to_char(substrb(dump(min("SNAP_ID"),16,0,32),1,120)),to_char(
substrb(dump(max("SNAP_ID"),16,0,32),1,120)),to_char(count("DBID")),to_char(substrb(dump(min("DBID"),16,0,32),1,120)),to_char(substrb(d
ump(max("DBID"),16,0,32),1,120)),to_char(count("INSTANCE_NUMBER")),to_char(substrb(dump(min("INSTANCE_NUMBER"),16,0,32),1,120)),to_char
(substrb(dump(max("INSTANCE_NUMBER"),16,0,32),1,120)),to_char(count("FILE#")),to_char(substrb(dump(min("FILE#"),16,0,32),1,120)),to_cha
r(substrb(dump(max("FILE#"),16,0,32),1,120)),to_char(count("CREATION_CHANGE#")),to_char(substrb(dump(min("CREATION_CHANGE#"),16,0,32),1
,120)),to_char(substrb(dump(max("CREATION_CHANGE#"),16,0,32),1,120)),to_char(count("PHYRDS")),to_char(substrb(dump(min("PHYRDS"),16,0,3
2),1,120)),to_char(substrb(dump(max("PHYRDS"),16,0,32),

000000008CBF3950
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("SNAP_ID")),to_char(substrb(dump(min("SNAP_ID"),16,0,32),1,120)),to_char(
substrb(dump(max("SNAP_ID"),16,0,32),1,120)),to_char(count("DBID")),to_char(substrb(dump(min("DBID"),16,0,32),1,120)),to_char(substrb(d
ump(max("DBID"),16,0,32),1,120)),to_char(count("INSTANCE_NUMBER")),to_char(substrb(dump(min("INSTANCE_NUMBER"),16,0,32),1,120)),to_char
(substrb(dump(max("INSTANCE_NUMBER"),16,0,32),1,120)),to_char(count("FILE#")),to_char(substrb(dump(min("FILE#"),16,0,32),1,120)),to_cha
r(substrb(dump(max("FILE#"),16,0,32),1,120)),to_char(count("CREATION_CHANGE#")),to_char(substrb(dump(min("CREATION_CHANGE#"),16,0,32),1
,120)),to_char(substrb(dump(max("CREATION_CHANGE#"),16,0,32),1,120)),to_char(count("PHYRDS")),to_char(substrb(dump(min("PHYRDS"),16,0,3
2),1,120)),to_char(substrb(dump(max("PHYRDS"),16,0,32),

000000008B0B04E0
select substrb(dump(

0000000092CBB4E8
 SELECT sum(case when a.session_type = 1 and a.wait_time = 0             then 1 else 0 end) as fgw,         sum(case when a.session_typ
e = 1 and a.wait_time <> 0             then 1 else 0 end) as fgc,         sum(case when a.session_type <> 1 and a.wait_time = 0
     then 1 else 0 end) as bgw,         sum(case when a.session_type <> 1 and a.wait_time <> 0             then 1 else 0 end) as bgc,
       sum(case when v.event_id is not null and                       a.session_type = 1 and a.wait_time = 0             then 1 else 0
end) as fgi  FROM  WRH$_ACTIVE_SESSION_HISTORY a     ,  V$EVENT_NAME v  WHERE a.event_id = v.event_id(+)    AND v.wait_class(+) = 'Idle
'    AND  a.dbid = :dbid  AND a.instance_number = :inst  AND a.snap_id > :bid AND a.snap_id <= :eid

000000008C878B48
 SELECT sum(case when a.session_type = 1 and a.wait_time = 0             then 1 else 0 end) as fgw,         sum(case when a.session_typ
e = 1 and a.wait_time <> 0             then 1 else 0 end) as fgc,         sum(case when a.session_type <> 1 and a.wait_time = 0
     then 1 else 0 end) as bgw,         sum(case when a.session_type <> 1 and a.wait_time <> 0             then 1 else 0 end) as bgc,
       sum(case when v.event_id is not null and                       a.session_type = 1 and a.wait_time = 0             then 1 else 0
end) as fgi  FROM  WRH$_ACTIVE_SESSION_HISTORY a     ,  V$EVENT_NAME v  WHERE a.event_id = v.event_id(+)    AND v.wait_class(+) = 'Idle
'    AND  a.dbid = :dbid  AND a.instance_number = :inst  AND a.snap_id > :bid AND a.snap_id <= :eid

000000008B24A4B8
 SELECT sum(case when a.session_type = 1 and a.wait_time = 0             then 1 else 0 end) as fgw,         sum(case when a.session_typ
e = 1 and a.wait_time <> 0             then 1 else 0 end) as fgc,         sum(case when a.session_type <> 1 and a.wait_time = 0
     then 1 else 0 end) as bgw,         sum(case when a.session_type <> 1 and a.wait_time <> 0             then 1 else 0 end) as bgc,
       sum(case when v.event_id is not null and                       a.session_type = 1 and a.wait_time = 0             then 1 else 0
end) as fgi  FROM  WRH$_ACTIVE_SESSION_HISTORY a     ,  V$EVENT_NAME v  WHERE a.event_id = v.event_id(+)    AND v.wait_class(+) = 'Idle
'    AND  a.dbid = :dbid  AND a.instance_number = :inst  AND a.snap_id > :bid AND a.snap_id <= :eid

000000008B39E790
 SELECT sum(case when a.session_type = 1 and a.wait_time = 0             then 1 else 0 end) as fgw,         sum(case when a.session_typ
e = 1 and a.wait_time <> 0             then 1 else 0 end) as fgc,         sum(case when a.session_type <> 1 and a.wait_time = 0
     then 1 else 0 end) as bgw,         sum(case when a.session_type <> 1 and a.wait_time <> 0             then 1 else 0 end) as bgc,
       sum(case when v.event_id is not null and                       a.session_type = 1 and a.wait_time = 0             then 1 else 0
end) as fgi  FROM  WRH$_ACTIVE_SESSION_HISTORY a     ,  V$EVENT_NAME v  WHERE a.event_id = v.event_id(+)    AND v.wait_class(+) = 'Idle
'    AND  a.dbid = :dbid  AND a.instance_number = :inst  AND a.snap_id > :bid AND a.snap_id <= :eid

000000008C88CF60
 SELECT sum(case when a.session_type = 1 and a.wait_time = 0             then 1 else 0 end) as fgw,         sum(case when a.session_typ
e = 1 and a.wait_time <> 0             then 1 else 0 end) as fgc,         sum(case when a.session_type <> 1 and a.wait_time = 0
     then 1 else 0 end) as bgw,         sum(case when a.session_type <> 1 and a.wait_time <> 0             then 1 else 0 end) as bgc,
       sum(case when v.event_id is not null and                       a.session_type = 1 and a.wait_time = 0             then 1 else 0
end) as fgi  FROM  WRH$_ACTIVE_SESSION_HISTORY a     ,  V$EVENT_NAME v  WHERE a.event_id = v.event_id(+)    AND v.wait_class(+) = 'Idle
'    AND  a.dbid = :dbid  AND a.instance_number = :inst  AND a.snap_id > :bid AND a.snap_id <= :eid

0000000088F1A4D8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060C73480
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060FEBBC0
SELECT T.PARTITION_POSITION,T.PARTITION_NAME, T.HIGH_VALUE , CASE WHEN T.NUM_ROWS IS NULL THEN 'None' ELSE TO_CHAR(T.NUM_ROWS) END AS N
UM_ROWS, CASE WHEN TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') IS NULL THEN 'None' ELSE TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') END AS LAST_ANALYZE
D, ROUND(S.G,2) AS G, T.SUBPARTITION_COUNT AS SUBPARTITION_CNT,T.COMPRESSION FROM DBA_TAB_PARTITIONS T, (SELECT SUM(BYTES/1024/1024/102
4) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY PARTITION_NAME) S WHERE S.PART
ITION_NAME = T.PARTITION_NAME AND TABLE_OWNER = UPPER(:B1 ) AND TABLE_NAME = UPPER(:B2 ) ORDER BY T.PARTITION_POSITION

0000000060C3BC00
SELECT T.PARTITION_POSITION,T.PARTITION_NAME, T.HIGH_VALUE , CASE WHEN T.NUM_ROWS IS NULL THEN 'None' ELSE TO_CHAR(T.NUM_ROWS) END AS N
UM_ROWS, CASE WHEN TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') IS NULL THEN 'None' ELSE TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') END AS LAST_ANALYZE
D, ROUND(S.G,2) AS G, T.SUBPARTITION_COUNT AS SUBPARTITION_CNT,T.COMPRESSION FROM DBA_TAB_PARTITIONS T, (SELECT SUM(BYTES/1024/1024/102
4) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY PARTITION_NAME) S WHERE S.PART
ITION_NAME = T.PARTITION_NAME AND TABLE_OWNER = UPPER(:B1 ) AND TABLE_NAME = UPPER(:B2 ) ORDER BY T.PARTITION_POSITION

0000000088C7B240
SELECT SHARED_KEY, H

000000008B2590C8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"NEXT_DATE" val,count(*) cnt  fro
m "SYS"."JOB$" t  where "NEXT_DATE" is not null  group by "NEXT_DATE") order by val

0000000088F5CDE8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"NEXT_DATE" val,count(*) cnt  fro
m "SYS"."JOB$" t  where "NEXT_DATE" is not null  group by "NEXT_DATE") order by val

0000000060ED8DB8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"NEXT_DATE" val,count(*) cnt  fro
m "SYS"."JOB$" t  where "NEXT_DATE" is not null  group by "NEXT_DATE") order by val

000000008CBD36D0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"NEXT_DATE" val,count(*) cnt  fro
m "SYS"."JOB$" t  where "NEXT_DATE" is not null  group by "NEXT_DATE") order by val

000000008B3201C8
select min(minbkt),m

0000000088F84448
1d4a51a2c89ab6b07a3c64bebc5573b6

000000008B193CA8
select /*+  no_parallel_index(t, "I_STATS_TARGET2")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET2") */ count(*) as nrw,count(distinct sys_op_lbid(470,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "OBJ#" is not null

000000008B2E6F38
select /*+  no_parallel_index(t, "I_STATS_TARGET2")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET2") */ count(*) as nrw,count(distinct sys_op_lbid(470,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "OBJ#" is not null

000000008B2A5B58
select /*+  no_parallel_index(t, "I_STATS_TARGET2")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET2") */ count(*) as nrw,count(distinct sys_op_lbid(470,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "OBJ#" is not null

000000008B29AC50
select /*+  no_parallel_index(t, "I_STATS_TARGET2")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET2") */ count(*) as nrw,count(distinct sys_op_lbid(470,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "OBJ#" is not null

000000008C961570
SELECT STATUS#, HOW_CREATED, LAST_EXECUTION FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

0000000092C5EDE0
SELECT STATUS#, HOW_CREATED, LAST_EXECUTION FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008B3615B8
SELECT STATUS#, HOW_CREATED, LAST_EXECUTION FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008B226FA0
SELECT STATUS#, HOW_CREATED, LAST_EXECUTION FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008C9F9290
SELECT STATUS#, HOW_CREATED, LAST_EXECUTION FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008C92AE38
SELECT STATUS#, HOW_CREATED, LAST_EXECUTION FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

0000000092D41A20 SYS
UTL_SMTP

000000008CA07740
SELECT PROPAGATION_N

000000008C915448
SELECT COUNT(*) FROM

000000008B28B558
aff7e618c1ae80172801eb11206fd69a

0000000092C61B38
10081972184212141053

000000008B3D5A98
CREATE TABLE HASH_TA

0000000060FA2B90
CREATE TABLE HASH_TA

0000000088D7A740
UPDATE BSLN_BASELINE

0000000060C564B0
6a820004ba36e08c565b4e0a4bb5d9d

0000000088D5B778
SELECT NAME FROM V$DATABASE

0000000060E05C50
SELECT NAME FROM V$DATABASE

0000000060E26B30
SELECT APPLY_USER FR

0000000092D52CD8 DBSNMP
BSLN_OBSERVATION_T

0000000060D5B648 SYS
X$KTFBHC

000000008B05AF80
DELETE FROM SYS.WRI$

000000008C891420
select substrb(dump(

000000008B0CE028
delete from WRH$_MEMORY_RESIZE_OPS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C46AE0
delete from WRH$_MEMORY_RESIZE_OPS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B16C540
select /*+  no_paral

0000000092CD57A8 $BUILD$
37e1a95a8fecc018

0000000088C98938
SELECT COUNT(*) FROM

000000008B3879E0
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), sum(sys_op_opnsize("INF")) from "SCOTT"."HASH_TABLE"
t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn

000000008B0ED8D8
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), sum(sys_op_opnsize("INF")) from "SCOTT"."HASH_TABLE"
t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn

000000008B20AEB8
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), sum(sys_op_opnsize("INF")) from "SCOTT"."HASH_TABLE"
t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn

000000008CA47160
SELECT CASE WHEN VALUE IN ('ALL', 'UNUSED') THEN 'N' ELSE 'Y' END FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCES'

000000008B1C1ED0
SELECT CASE WHEN VALUE IN ('ALL', 'UNUSED') THEN 'N' ELSE 'Y' END FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCES'

0000000060E92380
SELECT CASE WHEN VALUE IN ('ALL', 'UNUSED') THEN 'N' ELSE 'Y' END FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCES'

000000008B145E48
SELECT CASE WHEN VALUE IN ('ALL', 'UNUSED') THEN 'N' ELSE 'Y' END FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCES'

0000000088C986D8
SELECT XMLTYPE.APPEN

0000000060DDC578
select /*+  no_paral

000000008C91A918
UPDATE SYS.WRI$_ADV_

000000008B1BB000 APEX_030200
UTL_RAW

0000000088D06C08
bff5ee754fc221deb3ad40fe4c4e6587

000000008B0D3588
SELECT RSET_EQCLS FR

000000008B267858
25ae8f1cd31b16abc9977a101d0cd2c1

0000000088EAD390
select /*+  no_paral

0000000088F96C00
2c444d22e330995d10af5c53b236d232

0000000088DB8338 SYS
WRH$_MVPARAMETER_PK

000000008CB7A7C8
SELECT OBJNO FROM SY

0000000088EAAB20 SYSTEM
AQ$_QUEUE_TABLES

0000000060EE42E0
select substrb(dump(

000000008C88B438
6ca2c5fc464556dbd71234b1f46a64d0

000000006535D9A0
54de1f2d0a990793d7faa5bd28815d8

0000000060E76B50
select inst_id,indx,ksusdnam,ksusdcls,ksusgstv,ksusdhsh from x$ksusgsta

000000008B23FA78
select inst_id,indx,ksusdnam,ksusdcls,ksusgstv,ksusdhsh from x$ksusgsta

000000008C9EE558 $BUILD$
bdee86fa235bc2cf

0000000060FA9A70
d25ba01f53e60356ab23d6efbcb20294

000000008B352890
c326b4aaa2bc6754ac6f4eb8edbfab4

000000008CA5E5E8
SELECT /*+ INDEX(sqlobj$ (signature category obj_type plan_id)) */              DISTINCT category
                     FROM sqlobj$                                                                  WHERE signature = :1

0000000088D498F0
SELECT /*+ INDEX(sqlobj$ (signature category obj_type plan_id)) */              DISTINCT category
                     FROM sqlobj$                                                                  WHERE signature = :1

0000000088FDBC30
SELECT /*+ INDEX(sqlobj$ (signature category obj_type plan_id)) */              DISTINCT category
                     FROM sqlobj$                                                                  WHERE signature = :1

0000000060FD3E18
SELECT /*+ INDEX(sqlobj$ (signature category obj_type plan_id)) */              DISTINCT category
                     FROM sqlobj$                                                                  WHERE signature = :1

000000008C940C58
SELECT /*+ INDEX(sqlobj$ (signature category obj_type plan_id)) */              DISTINCT category
                     FROM sqlobj$                                                                  WHERE signature = :1

0000000088D73928
SELECT TO_NUMBER(NUL

000000008C925D28
DELETE FROM WRI$_ADV

000000008B097090
INSERT INTO SYS.AUX_

0000000088D880C8
9cfd2727f30195e759a1d5c68bb699b4

0000000088E0D998 $BUILD$
39654cda6e532ca1

0000000060FF0B00
SELECT L.DEST_ID DES

0000000060F789E0 $BUILD$
5c9f499341e30aad

000000008B3CC4D8
c0c442b172e2436ab2b2e48428d9af4e

000000008CB800C8 $BUILD$
3b9d0b296caf46c7

000000008CA69040
a97a1caaae483b470ff51b8bc9a0de

0000000088EDFAF0
a75e195c3d0c71b9309a4729821b0f9c

0000000088DD3328
insert into WRH$_MEM_DYNAMIC_COMP   (snap_id, dbid, instance_number,    component, current_size, min_size, max_size, user_specified_siz
e,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size)  select    :snap_id, :dbid, :instance_number,    compon
ent, current_size, min_size, max_size, user_specified_size,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size
   from  v$memory_dynamic_components

000000008B221EB0
insert into WRH$_MEM_DYNAMIC_COMP   (snap_id, dbid, instance_number,    component, current_size, min_size, max_size, user_specified_siz
e,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size)  select    :snap_id, :dbid, :instance_number,    compon
ent, current_size, min_size, max_size, user_specified_size,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size
   from  v$memory_dynamic_components

000000008C88C8B0
insert into WRH$_MEM_DYNAMIC_COMP   (snap_id, dbid, instance_number,    component, current_size, min_size, max_size, user_specified_siz
e,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size)  select    :snap_id, :dbid, :instance_number,    compon
ent, current_size, min_size, max_size, user_specified_size,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size
   from  v$memory_dynamic_components

0000000088DD37A8
insert into WRH$_MEM_DYNAMIC_COMP   (snap_id, dbid, instance_number,    component, current_size, min_size, max_size, user_specified_siz
e,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size)  select    :snap_id, :dbid, :instance_number,    compon
ent, current_size, min_size, max_size, user_specified_size,    oper_count, last_oper_type, last_oper_mode, last_oper_time, granule_size
   from  v$memory_dynamic_components

0000000092C85628 SYS
HISTGRM$

0000000060D67568
78652c9f67620bbbdcc9fd0f7f9aa94c

0000000088FA7988
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_ALLOCATED_DELTA != 0

0000000060F1F900
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_ALLOCATED_DELTA != 0

0000000092D3EC28
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_ALLOCATED_DELTA != 0

000000008B1270A8
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_ALLOCATED_DELTA != 0

0000000060CC8570
c3add426cf82acf1e69158ac972b609a

000000008B0354E8
select substrb(dump(

000000008C935D78
UPDATE sys.wri$_adv_objects SET attr8=:0, attr9=:1, attr10=:2 WHERE task_id=:3 and id=:4 RETURNING rowid into :5

0000000092D76DA8
UPDATE sys.wri$_adv_objects SET attr8=:0, attr9=:1, attr10=:2 WHERE task_id=:3 and id=:4 RETURNING rowid into :5

000000008C856FD0
UPDATE sys.wri$_adv_objects SET attr8=:0, attr9=:1, attr10=:2 WHERE task_id=:3 and id=:4 RETURNING rowid into :5

000000008C8B1A80
SELECT RSET_DURTCL,

000000008B19C078
ffabab7a1546b8df114b83eb3bb0daaf

000000008B0B7360
SELECT RECID, RECID,

000000008CA1FF08
28e018c6fdc2a76f345e78fa5f40bb88

0000000060D68168
SELECT COUNT(*) FROM

0000000088DD46A8 MDSYS
SDO_STRING2_ARRAYSET

0000000092CEC820 $BUILD$
dabb550c97dbfca0

0000000088D6A2C8
1808be9a60fa934d7da00b19661a149a

0000000060EBA620
SELECT /*+ordered*/

0000000088CF4C78 SYS
DBMS_SQLTUNE_UTIL0

0000000092C3F228 SYS
V$IOSTAT_FUNCTION

000000008C915B88
SELECT FLAGS FROM SY

000000008CBEA568
77c0cf26557964a9ea48e129672146c6

000000008B055360
SELECT DENSITY FROM

0000000060F005D0
begin   :owner :=upper('scott');   :table_name := upper('emp'); end;

0000000060E2C5B0
begin   :owner :=upper('scott');   :table_name := upper('emp'); end;

0000000088F0B598
select substrb(dump(

000000008CA03228 PUBLIC
XMLAGG

000000008B3A4928 SYS
PRVT_SMGUTIL

0000000060D13998
3ec61a3af78a7e7b7ede1f9a0b8ea3

0000000088E7CC80
SELECT COMPONENT, ROUND(CURRENT_SIZE/1024/1024/1024,2) AS CURRENT_G, ROUND(MIN_SIZE/1024/1024/1024,2) MIN_G, ROUND(MAX_SIZE/1024/1024/1
024,2) AS MAX_G, ROUND(USER_SPECIFIED_SIZE/1024/1024/1024,2) AS USER_SPECIFIED_G, OPER_COUNT, LAST_OPER_TYPE, DECODE(LAST_OPER_MODE,NUL
L,'None',LAST_OPER_MODE) AS LAST_OPER_MODE, DECODE(LAST_OPER_TIME,NULL,'None',LAST_OPER_TIME) AS LAST_OPER_TIME, ROUND(GRANULE_SIZE/102
4/1024) AS GRANULE_SIZE_M FROM V$SGA_DYNAMIC_COMPONENTS

0000000088D5C8B8
SELECT COMPONENT, ROUND(CURRENT_SIZE/1024/1024/1024,2) AS CURRENT_G, ROUND(MIN_SIZE/1024/1024/1024,2) MIN_G, ROUND(MAX_SIZE/1024/1024/1
024,2) AS MAX_G, ROUND(USER_SPECIFIED_SIZE/1024/1024/1024,2) AS USER_SPECIFIED_G, OPER_COUNT, LAST_OPER_TYPE, DECODE(LAST_OPER_MODE,NUL
L,'None',LAST_OPER_MODE) AS LAST_OPER_MODE, DECODE(LAST_OPER_TIME,NULL,'None',LAST_OPER_TIME) AS LAST_OPER_TIME, ROUND(GRANULE_SIZE/102
4/1024) AS GRANULE_SIZE_M FROM V$SGA_DYNAMIC_COMPONENTS

0000000060F10B00 SYS
WRH$_OSSTAT

000000008CB7D198
1f4aea65c72e75a1ea7c23ed372f2f31

000000008B17DE70
select  decode(u.type#, 2, u.ext_username, u.name), o.name, trigger$.sys_evts, trigger$.type#  from obj$ o, user$ u, trigger$  where o.
type# = 12 and bitand(trigger$.property,16) = 16   and trigger$.baseobject = :1 and trigger$.obj# = o.obj#   and o.owner# = u.user# ord
er by o.obj#

000000008C877758
select  decode(u.type#, 2, u.ext_username, u.name), o.name, trigger$.sys_evts, trigger$.type#  from obj$ o, user$ u, trigger$  where o.
type# = 12 and bitand(trigger$.property,16) = 16   and trigger$.baseobject = :1 and trigger$.obj# = o.obj#   and o.owner# = u.user# ord
er by o.obj#

0000000088E14188
b78edfcdf0e69fe51bdc4ea7ca91371b

000000008CBD0530 EXFSYS
DBMS_RLMGR_IR

000000008B117810 SYS
DBA_IND_SUBPARTITIONS

00000000652C9B20
 SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
       null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
              'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'M
LSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NUL
L',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as DENSITY,  A.NUM_DIS
TINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A.NUM_BUCKETS,  deco
de(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyzed,'YYYYMMDD HH24:M
I'),null,'None',to_char(T.last_analyzed,'YYYYMMDD HH24:

0000000088D48AC0
 SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
       null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
              'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'M
LSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NUL
L',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as DENSITY,  A.NUM_DIS
TINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A.NUM_BUCKETS,  deco
de(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyzed,'YYYYMMDD HH24:M
I'),null,'None',to_char(T.last_analyzed,'YYYYMMDD HH24:

000000008B2ED080
 SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
       null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
              'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'M
LSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NUL
L',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as DENSITY,  A.NUM_DIS
TINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A.NUM_BUCKETS,  deco
de(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyzed,'YYYYMMDD HH24:M
I'),null,'None',to_char(T.last_analyzed,'YYYYMMDD HH24:

000000008B2804D8 SYS
EXF$DBMS_EXPFIL_SYSPACK

0000000060FED2B0
10319496158637792786

000000008B087F70
SELECT VALUE FROM V$

000000008B2339C0 $BUILD$
51cc8fe1 6ad73b5

0000000092C85D68 SYS
HIST_HEAD$

0000000088D107A0 SYS
DBA_SQL_PLAN_BASELINES

0000000088FDD280
SELECT * FROM ALL_SC

000000008CA891E0
SELECT A.RECID, A.RE

000000008C92DEE8 SYS
DBA_ADVISOR_FINDING_NAMES

000000008CB930A8 $BUILD$
5ea9e9f0744221b2

0000000060E0F1F0
87fdf86ca1795cbaa0ff66e4743765fb

000000008B384250 $BUILD$
ae59a63b75bff787

0000000060FB6358
9599191742190826003

0000000092C8C6C8
cef0429a290691c83a49a378e3a2d601

0000000092CE2568 SYS
WRH$_IC_CLIENT_STATS

000000008CA346E8
SELECT COUNT(*) FROM V$ASM_DISKGROUP

000000008C993968
SELECT COUNT(*) FROM V$ASM_DISKGROUP

000000008B3C8228
/* SQL Analyze(1) */

00000000652FE950
da957bc475a303b95574bdd24da17f2d

000000008B0AB910
cbd0913ebe89716a7d2d220f7f9696b9

000000008B0B8980
INSERT INTO SYS.AQ$_

0000000092CC26A8
SELECT T.USER# FROM

000000008C835E48
insert into smon_scn_time (thread, time_mp, time_dp, scn, scn_wrp, scn_bas, num_mappings, tim_scn_map) values (0, :1, :2, :3, :4, :5, :
6, :7)

000000008B158A68
insert into smon_scn_time (thread, time_mp, time_dp, scn, scn_wrp, scn_bas, num_mappings, tim_scn_map) values (0, :1, :2, :3, :4, :5, :
6, :7)

0000000060F927E0
insert into smon_scn_time (thread, time_mp, time_dp, scn, scn_wrp, scn_bas, num_mappings, tim_scn_map) values (0, :1, :2, :3, :4, :5, :
6, :7)

000000008C8476E0
insert into smon_scn_time (thread, time_mp, time_dp, scn, scn_wrp, scn_bas, num_mappings, tim_scn_map) values (0, :1, :2, :3, :4, :5, :
6, :7)

000000008B16E360
select count(*) from sdo_geor_sysdata_table where sdo_owner=:1 and RDT_TABLE_NAME=:2

0000000088E42A68
select count(*) from sdo_geor_sysdata_table where sdo_owner=:1 and RDT_TABLE_NAME=:2

000000008B0E8588
9549f2508adac6b66d330c399a3e4ce9

0000000088F450D8
4dc50f70e823dc1296fe3ac48294dd8

000000008B095B50
INSERT INTO SYS.AUX_

000000008B1F7610
select inst_id,'',ksmssnam,ksmsslen from x$ksmfs where ksmsslen>1  union all  select inst_id,'shared pool',ksmssnam, sum(ksmsslen) from
 x$ksmss    where ksmsslen>1 group by inst_id, 'shared pool', ksmssnam  union all  select inst_id,'large pool',ksmssnam, sum(ksmsslen)
from x$ksmls    where ksmsslen>1 group by inst_id, 'large pool', ksmssnam  union all  select inst_id,'java pool',ksmssnam, sum(ksmsslen
) from x$ksmjs    where ksmsslen>1 group by inst_id, 'java pool', ksmssnam  union all  select inst_id,'numa pool',ksmnsnam, sum(ksmnsle
n) from x$ksmns    where ksmnslen>1 group by inst_id, 'numa pool', ksmnsnam  union all  select inst_id,'streams pool',ksmssnam, sum(ksm
sslen) from x$ksmstrs    where ksmsslen>1 group by inst_id, 'streams pool', ksmssnam

000000008B28A778
select inst_id,'',ksmssnam,ksmsslen from x$ksmfs where ksmsslen>1  union all  select inst_id,'shared pool',ksmssnam, sum(ksmsslen) from
 x$ksmss    where ksmsslen>1 group by inst_id, 'shared pool', ksmssnam  union all  select inst_id,'large pool',ksmssnam, sum(ksmsslen)
from x$ksmls    where ksmsslen>1 group by inst_id, 'large pool', ksmssnam  union all  select inst_id,'java pool',ksmssnam, sum(ksmsslen
) from x$ksmjs    where ksmsslen>1 group by inst_id, 'java pool', ksmssnam  union all  select inst_id,'numa pool',ksmnsnam, sum(ksmnsle
n) from x$ksmns    where ksmnslen>1 group by inst_id, 'numa pool', ksmnsnam  union all  select inst_id,'streams pool',ksmssnam, sum(ksm
sslen) from x$ksmstrs    where ksmsslen>1 group by inst_id, 'streams pool', ksmssnam

0000000060E94138
select substrb(dump(

0000000060CCB520
12820469571025375045

000000008C854F20
SELECT ON_MAX_IDLE_T

0000000060D04968 SCOTT
DBMS_RANDOM

0000000060FE3FD0
select substrb(dump(

000000008B09B9D0 SYS
ROLE_SYS_PRIVS

000000008B1328D8
SELECT DISPLAY_AS, F

0000000060E1F5A0
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TABPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0 UNION ALL SELECT ROWCNT, BLKCNT, ANALYZ
ETIME FROM SYS.TABCOMPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0

000000008B1AF4B0
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TABPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0 UNION ALL SELECT ROWCNT, BLKCNT, ANALYZ
ETIME FROM SYS.TABCOMPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0

0000000060E7BB70
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TABPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0 UNION ALL SELECT ROWCNT, BLKCNT, ANALYZ
ETIME FROM SYS.TABCOMPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0

000000008B060910
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TABPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0 UNION ALL SELECT ROWCNT, BLKCNT, ANALYZ
ETIME FROM SYS.TABCOMPART$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 2) != 0

0000000088DBDB48
select substrb(dump(

000000008C936770
57fc921053c042f4450d8cc67720631c

0000000088FC0238
6ea96e21b2c3d7143170f285841701ed

0000000088E23D68
faacd91ba79384131d7b9ba5c9cac

000000008B2D75E8 APEX_030200
WWV_FLOW_STEPS

0000000060FAEB90 SCOTT
PDBA

000000008C921B88
DELETE FROM WRI$_ADV

0000000060C8F440 $BUILD$
796fc2db5d84b9db

000000008CAEA758 SYS
WRI$_ADV_SQLTUNE

000000008B105C78 SYS
DBMS_ISCHED

000000008C9400D0
select default$ from col$ where rowid=:1

000000008B28BF88
select default$ from col$ where rowid=:1

000000008C940550
select default$ from col$ where rowid=:1

0000000060F5DF90 SYS
DBA_SCHEDULER_EXTERNAL_DESTS

0000000092CD6AD8 SYS
C_FILE#_BLOCK#

000000008B056520
UPDATE SYS.WRI$_OPTS

000000008B2AC708
LOCK TABLE  FOR INDEX "EXIT"."VIM" IN SHARE MODE  NOWAIT

0000000088FCF008
LOCK TABLE  FOR INDEX "EXIT"."VIM" IN SHARE MODE  NOWAIT

0000000060D57C98
93e68bd5f62696436065a5b1b1a56b6

0000000092C78638
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000653F3B98
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C88C520
select /*+  no_paral

0000000088F69388
208fea9a6c789287b0459d7a6bd46605

000000008B1ED8F8
65bdffca6d6957675fb80b23859f0d33

0000000088E642D0
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW,         INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSO
ID, a.job_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_
instance) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_l
imit, NULL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),               a.schedule_limit) SCHLIM, 0 ISLW
,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)
and (a.database_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.
class_oid, c.job_status, c.flags, d.priority,         d

000000008B388D40
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW,         INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSO
ID, a.job_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_
instance) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_l
imit, NULL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),               a.schedule_limit) SCHLIM, 0 ISLW
,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)
and (a.database_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.
class_oid, c.job_status, c.flags, d.priority,         d

000000008B2418E8
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW,         INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSO
ID, a.job_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_
instance) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_l
imit, NULL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),               a.schedule_limit) SCHLIM, 0 ISLW
,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)
and (a.database_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.
class_oid, c.job_status, c.flags, d.priority,         d

0000000088F69588
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW,         INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSO
ID, a.job_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_
instance) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_l
imit, NULL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),               a.schedule_limit) SCHLIM, 0 ISLW
,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)
and (a.database_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.
class_oid, c.job_status, c.flags, d.priority,         d

0000000060E225D0
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW,         INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSO
ID, a.job_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_
instance) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_l
imit, NULL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),               a.schedule_limit) SCHLIM, 0 ISLW
,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)
and (a.database_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.
class_oid, c.job_status, c.flags, d.priority,         d

000000008C93F030
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW,         INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSO
ID, a.job_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_
instance) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_l
imit, NULL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),               a.schedule_limit) SCHLIM, 0 ISLW
,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)
and (a.database_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.
class_oid, c.job_status, c.flags, d.priority,         d

000000008B29C990 $BUILD$
8dae2827c2238d43

0000000088DB6818
aedd24d8b8494c7f3c07da954055fde6

0000000088FB6898 SYS
DBMS_AQADM_SYSCALLS

000000008B12F378
2a7cdc2394513b6d7716b11c73656e94

000000008B3719A0
2305f82737f7a8f4ac95850c34af57f5

0000000060E143A0 SYS
X$KMMSAS

0000000060F0EC60
delete from WRI$_ALERT_HISTORY where time_suggested < :1

0000000060E828D0
delete from WRI$_ALERT_HISTORY where time_suggested < :1

000000008C894850
INSERT INTO wri$_adv_addm_fdg ( TASK_ID, FINDING_ID, RULE_ID, ADDM_FDG_ID, ADDM_SEQ,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACTIVE_SESS
,   IS_AGGREGATE, METER_LEVEL,   QUERY_TYPE, QUERY_IS_APPROX, QUERY_ARGS) VALUES ( :tid, :kea_id, NULL, NULL, 0, NULL, NULL, NULL,
    'N', NULL, NULL, NULL, NULL)

000000008B319490
INSERT INTO wri$_adv_addm_fdg ( TASK_ID, FINDING_ID, RULE_ID, ADDM_FDG_ID, ADDM_SEQ,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACTIVE_SESS
,   IS_AGGREGATE, METER_LEVEL,   QUERY_TYPE, QUERY_IS_APPROX, QUERY_ARGS) VALUES ( :tid, :kea_id, NULL, NULL, 0, NULL, NULL, NULL,
    'N', NULL, NULL, NULL, NULL)

000000008B34F110
INSERT INTO wri$_adv_addm_fdg ( TASK_ID, FINDING_ID, RULE_ID, ADDM_FDG_ID, ADDM_SEQ,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACTIVE_SESS
,   IS_AGGREGATE, METER_LEVEL,   QUERY_TYPE, QUERY_IS_APPROX, QUERY_ARGS) VALUES ( :tid, :kea_id, NULL, NULL, 0, NULL, NULL, NULL,
    'N', NULL, NULL, NULL, NULL)

000000008B1873F0
INSERT INTO wri$_adv_addm_fdg ( TASK_ID, FINDING_ID, RULE_ID, ADDM_FDG_ID, ADDM_SEQ,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACTIVE_SESS
,   IS_AGGREGATE, METER_LEVEL,   QUERY_TYPE, QUERY_IS_APPROX, QUERY_ARGS) VALUES ( :tid, :kea_id, NULL, NULL, 0, NULL, NULL, NULL,
    'N', NULL, NULL, NULL, NULL)

0000000092C8DE88
INSERT INTO wri$_adv_addm_fdg ( TASK_ID, FINDING_ID, RULE_ID, ADDM_FDG_ID, ADDM_SEQ,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACTIVE_SESS
,   IS_AGGREGATE, METER_LEVEL,   QUERY_TYPE, QUERY_IS_APPROX, QUERY_ARGS) VALUES ( :tid, :kea_id, NULL, NULL, 0, NULL, NULL, NULL,
    'N', NULL, NULL, NULL, NULL)

000000008B0570D0
INSERT INTO SYS.WRI$

000000006533A610 SYS
JIREFRESHSQL$

000000008B0484A0
SELECT SHARED_KEY FR

0000000088DEEA48
SELECT BS.SET_STAMP

000000008CB3EE10
INSERT INTO DBMS_LOC

0000000092CA93A8
SELECT HAVNGATTRS FR

0000000088DA6758
bc414735d653fcabe490d532c16840b9

0000000088C604F8
SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, OI.OBJ# OBJ_NUM, NVL(PO.FLAGS,0) LOCALITY, I.PROPERTY IPROP
 FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI, SYS.USER$ UI, SYS.PARTOBJ$ PO WHERE ((:B3 IS NULL) OR (PO.FLAGS IS NULL) OR (
PO.FLAGS = 2)) AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = I.BO# AND I.OBJ# = OI.OBJ# A
ND OI.OWNER# = UI.USER# AND I.OBJ# = PO.OBJ#(+) UNION ALL SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, O
I.OBJ# OBJ_NUM, 0 LOCALITY, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ OI, SYS.USER$ UI WHERE :B
4 IS NOT NULL AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = T.OBJ# AND T.BOBJ# = I.BO# AN
D I.TYPE# = 3 AND I.OBJ# = OI.OBJ# AND OI.OWNER# = UI.USER#

0000000088FA51C8
SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, OI.OBJ# OBJ_NUM, NVL(PO.FLAGS,0) LOCALITY, I.PROPERTY IPROP
 FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI, SYS.USER$ UI, SYS.PARTOBJ$ PO WHERE ((:B3 IS NULL) OR (PO.FLAGS IS NULL) OR (
PO.FLAGS = 2)) AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = I.BO# AND I.OBJ# = OI.OBJ# A
ND OI.OWNER# = UI.USER# AND I.OBJ# = PO.OBJ#(+) UNION ALL SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, O
I.OBJ# OBJ_NUM, 0 LOCALITY, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ OI, SYS.USER$ UI WHERE :B
4 IS NOT NULL AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = T.OBJ# AND T.BOBJ# = I.BO# AN
D I.TYPE# = 3 AND I.OBJ# = OI.OBJ# AND OI.OWNER# = UI.USER#

0000000088FE5A80
SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, OI.OBJ# OBJ_NUM, NVL(PO.FLAGS,0) LOCALITY, I.PROPERTY IPROP
 FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI, SYS.USER$ UI, SYS.PARTOBJ$ PO WHERE ((:B3 IS NULL) OR (PO.FLAGS IS NULL) OR (
PO.FLAGS = 2)) AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = I.BO# AND I.OBJ# = OI.OBJ# A
ND OI.OWNER# = UI.USER# AND I.OBJ# = PO.OBJ#(+) UNION ALL SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, O
I.OBJ# OBJ_NUM, 0 LOCALITY, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ OI, SYS.USER$ UI WHERE :B
4 IS NOT NULL AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = T.OBJ# AND T.BOBJ# = I.BO# AN
D I.TYPE# = 3 AND I.OBJ# = OI.OBJ# AND OI.OWNER# = UI.USER#

0000000060F88380
SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, OI.OBJ# OBJ_NUM, NVL(PO.FLAGS,0) LOCALITY, I.PROPERTY IPROP
 FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI, SYS.USER$ UI, SYS.PARTOBJ$ PO WHERE ((:B3 IS NULL) OR (PO.FLAGS IS NULL) OR (
PO.FLAGS = 2)) AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = I.BO# AND I.OBJ# = OI.OBJ# A
ND OI.OWNER# = UI.USER# AND I.OBJ# = PO.OBJ#(+) UNION ALL SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, O
I.OBJ# OBJ_NUM, 0 LOCALITY, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ OI, SYS.USER$ UI WHERE :B
4 IS NOT NULL AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = T.OBJ# AND T.BOBJ# = I.BO# AN
D I.TYPE# = 3 AND I.OBJ# = OI.OBJ# AND OI.OWNER# = UI.USER#

000000008B264878
SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, OI.OBJ# OBJ_NUM, NVL(PO.FLAGS,0) LOCALITY, I.PROPERTY IPROP
 FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI, SYS.USER$ UI, SYS.PARTOBJ$ PO WHERE ((:B3 IS NULL) OR (PO.FLAGS IS NULL) OR (

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
PO.FLAGS = 2)) AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = I.BO# AND I.OBJ# = OI.OBJ# A
ND OI.OWNER# = UI.USER# AND I.OBJ# = PO.OBJ#(+) UNION ALL SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, O
I.OBJ# OBJ_NUM, 0 LOCALITY, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ OI, SYS.USER$ UI WHERE :B
4 IS NOT NULL AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = T.OBJ# AND T.BOBJ# = I.BO# AN
D I.TYPE# = 3 AND I.OBJ# = OI.OBJ# AND OI.OWNER# = UI.USER#

000000008CA92BB0
SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, OI.OBJ# OBJ_NUM, NVL(PO.FLAGS,0) LOCALITY, I.PROPERTY IPROP
 FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI, SYS.USER$ UI, SYS.PARTOBJ$ PO WHERE ((:B3 IS NULL) OR (PO.FLAGS IS NULL) OR (
PO.FLAGS = 2)) AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = I.BO# AND I.OBJ# = OI.OBJ# A
ND OI.OWNER# = UI.USER# AND I.OBJ# = PO.OBJ#(+) UNION ALL SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, O
I.OBJ# OBJ_NUM, 0 LOCALITY, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ OI, SYS.USER$ UI WHERE :B
4 IS NOT NULL AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = T.OBJ# AND T.BOBJ# = I.BO# AN
D I.TYPE# = 3 AND I.OBJ# = OI.OBJ# AND OI.OWNER# = UI.USER#

000000008B08C7C0
SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, OI.OBJ# OBJ_NUM, NVL(PO.FLAGS,0) LOCALITY, I.PROPERTY IPROP
 FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI, SYS.USER$ UI, SYS.PARTOBJ$ PO WHERE ((:B3 IS NULL) OR (PO.FLAGS IS NULL) OR (
PO.FLAGS = 2)) AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = I.BO# AND I.OBJ# = OI.OBJ# A
ND OI.OWNER# = UI.USER# AND I.OBJ# = PO.OBJ#(+) UNION ALL SELECT /*+ rule */ '"'||UI.NAME||'"' IND_OWNER, '"'||OI.NAME||'"' IND_NAME, O
I.OBJ# OBJ_NUM, 0 LOCALITY, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OT, SYS.IND$ I, SYS.TAB$ T, SYS.OBJ$ OI, SYS.USER$ UI WHERE :B
4 IS NOT NULL AND UT.NAME = :B2 AND UT.USER# = OT.OWNER# AND OT.NAME = :B1 AND OT.TYPE# = 2 AND OT.OBJ# = T.OBJ# AND T.BOBJ# = I.BO# AN
D I.TYPE# = 3 AND I.OBJ# = OI.OBJ# AND OI.OWNER# = UI.USER#

000000008B1BDE70
SELECT ELAPSED_TIME FROM DBA_SCHEDULER_RUNNING_JOBS WHERE JOB_NAME = 'AUTO_SPACE_ADVISOR_JOB'

000000008C9E8FB0
SELECT ELAPSED_TIME FROM DBA_SCHEDULER_RUNNING_JOBS WHERE JOB_NAME = 'AUTO_SPACE_ADVISOR_JOB'

0000000088F779D8
SELECT ELAPSED_TIME FROM DBA_SCHEDULER_RUNNING_JOBS WHERE JOB_NAME = 'AUTO_SPACE_ADVISOR_JOB'

0000000088E32E88
SELECT ELAPSED_TIME FROM DBA_SCHEDULER_RUNNING_JOBS WHERE JOB_NAME = 'AUTO_SPACE_ADVISOR_JOB'

000000008B29D7A0
SELECT ELAPSED_TIME FROM DBA_SCHEDULER_RUNNING_JOBS WHERE JOB_NAME = 'AUTO_SPACE_ADVISOR_JOB'

0000000060FA6CC0 $BUILD$
e1bd048993406630

000000008CAB8FD0 SYS
V$IOSTAT_FUNCTION_DETAIL

0000000060FF12A0
select  SESSION_ID,        BUGNO,        VALUE,        SQL_FEATURE,        DESCRIPTION,        OPTIMIZER_FEATURE_ENABLE,        EVENT,
       IS_DEFAULT from GV$SESSION_FIX_CONTROL where inst_id=USERENV('Instance')

0000000088D78248
select  SESSION_ID,        BUGNO,        VALUE,        SQL_FEATURE,        DESCRIPTION,        OPTIMIZER_FEATURE_ENABLE,        EVENT,
       IS_DEFAULT from GV$SESSION_FIX_CONTROL where inst_id=USERENV('Instance')

000000008C92B328
SELECT VALUE FROM SY

0000000092CDCC38
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_opr                  where start_time < :1 and rownum <= NVL(:2, rownum)

0000000060F49AD0
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_opr                  where start_time < :1 and rownum <= NVL(:2, rownum)

0000000088E84DA0
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_opr                  where start_time < :1 and rownum <= NVL(:2, rownum)

0000000088F05528
insert into wrh$_seg_stat_obj          ( snap_id          , dbid          , ts#          , obj#          , dataobj#          , owner
       , object_name          , subobject_name          , partition_type          , object_type          , tablespace_name)     select
:lah_snap_id          , :dbid          , ss1.tsn_kewrseg          , ss1.objn_kewrseg          , ss1.objd_kewrseg          , ss1.ownerna
me_kewrseg          , ss1.objname_kewrseg          , ss1.subobjname_kewrseg          , decode(po.parttype, 1, 'RANGE', 2, 'HASH',
                            3, 'SYSTEM', 4, 'LIST',                                 NULL, 'NONE', 'UNKNOWN')        , sys.dbms_swrf_int
ernal.awr_decode_object_type(ss1.objtype_kewrseg)          , ss1.tsname_kewrseg       from x$kewrattrnew  at,            x$kewrtsegstat
 ss1,            (select tp.obj#, pob.parttype               from   sys.tabpart$ tp, sys.partobj$ pob               where  tp.bo#   = p
ob.obj#             union all             select ip.obj

000000008B34E7A0
insert into wrh$_seg_stat_obj          ( snap_id          , dbid          , ts#          , obj#          , dataobj#          , owner
       , object_name          , subobject_name          , partition_type          , object_type          , tablespace_name)     select
:lah_snap_id          , :dbid          , ss1.tsn_kewrseg          , ss1.objn_kewrseg          , ss1.objd_kewrseg          , ss1.ownerna
me_kewrseg          , ss1.objname_kewrseg          , ss1.subobjname_kewrseg          , decode(po.parttype, 1, 'RANGE', 2, 'HASH',
                            3, 'SYSTEM', 4, 'LIST',                                 NULL, 'NONE', 'UNKNOWN')        , sys.dbms_swrf_int
ernal.awr_decode_object_type(ss1.objtype_kewrseg)          , ss1.tsname_kewrseg       from x$kewrattrnew  at,            x$kewrtsegstat
 ss1,            (select tp.obj#, pob.parttype               from   sys.tabpart$ tp, sys.partobj$ pob               where  tp.bo#   = p
ob.obj#             union all             select ip.obj

0000000088E85410
insert into wrh$_seg_stat_obj          ( snap_id          , dbid          , ts#          , obj#          , dataobj#          , owner
       , object_name          , subobject_name          , partition_type          , object_type          , tablespace_name)     select
:lah_snap_id          , :dbid          , ss1.tsn_kewrseg          , ss1.objn_kewrseg          , ss1.objd_kewrseg          , ss1.ownerna
me_kewrseg          , ss1.objname_kewrseg          , ss1.subobjname_kewrseg          , decode(po.parttype, 1, 'RANGE', 2, 'HASH',
                            3, 'SYSTEM', 4, 'LIST',                                 NULL, 'NONE', 'UNKNOWN')        , sys.dbms_swrf_int
ernal.awr_decode_object_type(ss1.objtype_kewrseg)          , ss1.tsname_kewrseg       from x$kewrattrnew  at,            x$kewrtsegstat
 ss1,            (select tp.obj#, pob.parttype               from   sys.tabpart$ tp, sys.partobj$ pob               where  tp.bo#   = p
ob.obj#             union all             select ip.obj

000000008B16FDA0
insert into wrh$_seg_stat_obj          ( snap_id          , dbid          , ts#          , obj#          , dataobj#          , owner
       , object_name          , subobject_name          , partition_type          , object_type          , tablespace_name)     select
:lah_snap_id          , :dbid          , ss1.tsn_kewrseg          , ss1.objn_kewrseg          , ss1.objd_kewrseg          , ss1.ownerna
me_kewrseg          , ss1.objname_kewrseg          , ss1.subobjname_kewrseg          , decode(po.parttype, 1, 'RANGE', 2, 'HASH',
                            3, 'SYSTEM', 4, 'LIST',                                 NULL, 'NONE', 'UNKNOWN')        , sys.dbms_swrf_int
ernal.awr_decode_object_type(ss1.objtype_kewrseg)          , ss1.tsname_kewrseg       from x$kewrattrnew  at,            x$kewrtsegstat
 ss1,            (select tp.obj#, pob.parttype               from   sys.tabpart$ tp, sys.partobj$ pob               where  tp.bo#   = p
ob.obj#             union all             select ip.obj

0000000088FF4528
insert into wrh$_seg_stat_obj          ( snap_id          , dbid          , ts#          , obj#          , dataobj#          , owner
       , object_name          , subobject_name          , partition_type          , object_type          , tablespace_name)     select
:lah_snap_id          , :dbid          , ss1.tsn_kewrseg          , ss1.objn_kewrseg          , ss1.objd_kewrseg          , ss1.ownerna
me_kewrseg          , ss1.objname_kewrseg          , ss1.subobjname_kewrseg          , decode(po.parttype, 1, 'RANGE', 2, 'HASH',
                            3, 'SYSTEM', 4, 'LIST',                                 NULL, 'NONE', 'UNKNOWN')        , sys.dbms_swrf_int
ernal.awr_decode_object_type(ss1.objtype_kewrseg)          , ss1.tsname_kewrseg       from x$kewrattrnew  at,            x$kewrtsegstat
 ss1,            (select tp.obj#, pob.parttype               from   sys.tabpart$ tp, sys.partobj$ pob               where  tp.bo#   = p
ob.obj#             union all             select ip.obj

0000000088F059A8
insert into wrh$_seg_stat_obj          ( snap_id          , dbid          , ts#          , obj#          , dataobj#          , owner
       , object_name          , subobject_name          , partition_type          , object_type          , tablespace_name)     select
:lah_snap_id          , :dbid          , ss1.tsn_kewrseg          , ss1.objn_kewrseg          , ss1.objd_kewrseg          , ss1.ownerna
me_kewrseg          , ss1.objname_kewrseg          , ss1.subobjname_kewrseg          , decode(po.parttype, 1, 'RANGE', 2, 'HASH',
                            3, 'SYSTEM', 4, 'LIST',                                 NULL, 'NONE', 'UNKNOWN')        , sys.dbms_swrf_int
ernal.awr_decode_object_type(ss1.objtype_kewrseg)          , ss1.tsname_kewrseg       from x$kewrattrnew  at,            x$kewrtsegstat
 ss1,            (select tp.obj#, pob.parttype               from   sys.tabpart$ tp, sys.partobj$ pob               where  tp.bo#   = p
ob.obj#             union all             select ip.obj

000000008C9F6560
UPDATE BSLN_BASELINE

000000008C95AE00
cd3744da5e17066dd59d0eedbbcee4f7

0000000060D4CD90
declare     sql_analyze varchar2(500);     cursor c_valid is select name as index_name,        del_lf_rows,        lf_rows,        roun
d(del_lf_rows / decode(lf_rows, 0, 1, lf_rows) * 100, 0) frag_pct   from index_stats;     v_valid c_valid%rowtype; begin    sql_analyze
:='analyze index '|| :owner || '.'|| :index_name ||' validate structure';   execute immediate sql_analyze;    dbms_output.put_line(' In
dex Fragment Information(analyze index to get the index frag Information)');   dbms_output.put_line('======================');   dbms_o
utput.put_line('---------------------------------------------------------------------------');   dbms_output.put_line('| INDEX_NAME
         |' || ' TOTAL_LEAF_ROWS ' || '| DELETE_LEAF_ROWS |' || ' FRAG_PCT% ' || '|');   dbms_output.put_line('------------------------
---------------------------------------------------');   open c_valid;     loop fetch c_valid into v_valid;     exit when c_valid%notfo
und;     dbms_output.put_line('| ' || rpad(v_valid.inde

0000000060D00C50
declare     sql_analyze varchar2(500);     cursor c_valid is select name as index_name,        del_lf_rows,        lf_rows,        roun
d(del_lf_rows / decode(lf_rows, 0, 1, lf_rows) * 100, 0) frag_pct   from index_stats;     v_valid c_valid%rowtype; begin    sql_analyze
:='analyze index '|| :owner || '.'|| :index_name ||' validate structure';   execute immediate sql_analyze;    dbms_output.put_line(' In
dex Fragment Information(analyze index to get the index frag Information)');   dbms_output.put_line('======================');   dbms_o
utput.put_line('---------------------------------------------------------------------------');   dbms_output.put_line('| INDEX_NAME
         |' || ' TOTAL_LEAF_ROWS ' || '| DELETE_LEAF_ROWS |' || ' FRAG_PCT% ' || '|');   dbms_output.put_line('------------------------
---------------------------------------------------');   open c_valid;     loop fetch c_valid into v_valid;     exit when c_valid%notfo
und;     dbms_output.put_line('| ' || rpad(v_valid.inde

0000000092C80B58 $BUILD$
49410b19be7698a0

000000008B15B6F8
ee950bf29a0f80493cf2ce5dd1edd6c5

0000000088E38898
bfab01341cf499d986d9475d272da1a

0000000088CB1C58 SYS
WWV_DBMS_SQL

0000000088FCBD48
MM

000000008CAEA308 SYS
WRI$_ADV_OBJSPACE_TREND_T

000000008B085EF0
SELECT S.SNAME, S.PN

000000008C959CC0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(B.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060F970C0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(B.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000088F598F8
SELECT A.DBID, A.BEG

000000008C952DB0
c25f40e6c301b03a299d5d03e60d836

0000000060F73A30
SELECT BITAND(J.JOB_

0000000088E6A9B0
select i.obj#, i.rowcnt, i.leafcnt, i.distkey, i.lblkkey, i.dblkkey,i.clufac, i.blevel, i.analyzetime, i.samplesize, decode(i.pctthres$
,null,null,mod(trunc(i.pctthres$/256),256)), i.flags, ist.cachedblk, ist.cachehit, ist.logicalread from ind$ i, ind_stats$ ist where i.
obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

000000008B121A08
select i.obj#, i.rowcnt, i.leafcnt, i.distkey, i.lblkkey, i.dblkkey,i.clufac, i.blevel, i.analyzetime, i.samplesize, decode(i.pctthres$
,null,null,mod(trunc(i.pctthres$/256),256)), i.flags, ist.cachedblk, ist.cachehit, ist.logicalread from ind$ i, ind_stats$ ist where i.
obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

0000000060F7A780
select i.obj#, i.rowcnt, i.leafcnt, i.distkey, i.lblkkey, i.dblkkey,i.clufac, i.blevel, i.analyzetime, i.samplesize, decode(i.pctthres$
,null,null,mod(trunc(i.pctthres$/256),256)), i.flags, ist.cachedblk, ist.cachehit, ist.logicalread from ind$ i, ind_stats$ ist where i.
obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

0000000088F22318
401a1a3977022ac8ae7ebaa5fd9b16e

0000000060C8CC90
/* SQL Analyze(37,0)

0000000088F9F508
SELECT DECODE(FLASHB

0000000060D7DD08
1871529dbb6cd514f52629ec8acf2700

00000000652BDCD0
87f94a23e43b3827acaedd41a9c51d1e

000000008CB310B8
select u.name, o.name, a.interface_version#, o.obj#      from association$ a, user$ u, obj$ o                     where a.obj# = :1
                                      and a.property = :2                                      and a.statstype# = o.obj#
                 and u.user# = o.owner#

0000000092C45C18
select u.name, o.name, a.interface_version#, o.obj#      from association$ a, user$ u, obj$ o                     where a.obj# = :1
                                      and a.property = :2                                      and a.statstype# = o.obj#
                 and u.user# = o.owner#

000000008CB31538
select u.name, o.name, a.interface_version#, o.obj#      from association$ a, user$ u, obj$ o                     where a.obj# = :1
                                      and a.property = :2                                      and a.statstype# = o.obj#
                 and u.user# = o.owner#

0000000088D9BA88
select /*+ FIRST_ROWS(1) PARALLEL("WRH$_FILESTATXS", 1) */ 1 from "SYS"."WRH$_FILESTATXS" PARTITION ("WRH$_FILEST_2188720451_110")  whe
re ( (  (  ( "DBID" < 2188720451 )  )  OR  ( "DBID" = 2188720451 AND  ( "SNAP_ID" < 134 )  )  ) ) and rownum < 2

0000000060DBA728
select /*+ FIRST_ROWS(1) PARALLEL("WRH$_FILESTATXS", 1) */ 1 from "SYS"."WRH$_FILESTATXS" PARTITION ("WRH$_FILEST_2188720451_110")  whe
re ( (  (  ( "DBID" < 2188720451 )  )  OR  ( "DBID" = 2188720451 AND  ( "SNAP_ID" < 134 )  )  ) ) and rownum < 2

000000008B0550C0
SELECT SUM(BLKCNT) F

0000000060CA7558
/* SQL Analyze(1) */

0000000088CA0228
SELECT POSITION, VAL

000000008CBC4978
UPDATE WWV_FLOW_MAIL

0000000092D72248 SYS
ALL_RULES

0000000092D26B38
DELETE FROM SYS.AQ$_

0000000060F8A120
delete from WRH$_SQL_WORKAREA_HISTOGRAM tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088FB2C38
delete from WRH$_SQL_WORKAREA_HISTOGRAM tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060FAFFB0 SYS
DBA_ADDM_FINDINGS

0000000088E99150
insert into wrh$_latch   (snap_id, dbid, instance_number, latch_hash, level#, gets, misses,    sleeps, immediate_gets, immediate_misses
, spin_gets, sleep1,    sleep2, sleep3, sleep4, wait_time)  select    :snap_id, :dbid, :instance_number, hash, level#, gets,    misses,
 sleeps, immediate_gets, immediate_misses, spin_gets,    sleep1, sleep2, sleep3, sleep4, wait_time  from    v$latch  order by    hash

000000008CA1CCB8
insert into wrh$_latch   (snap_id, dbid, instance_number, latch_hash, level#, gets, misses,    sleeps, immediate_gets, immediate_misses
, spin_gets, sleep1,    sleep2, sleep3, sleep4, wait_time)  select    :snap_id, :dbid, :instance_number, hash, level#, gets,    misses,
 sleeps, immediate_gets, immediate_misses, spin_gets,    sleep1, sleep2, sleep3, sleep4, wait_time  from    v$latch  order by    hash

0000000088C79A98
insert into wrh$_latch   (snap_id, dbid, instance_number, latch_hash, level#, gets, misses,    sleeps, immediate_gets, immediate_misses
, spin_gets, sleep1,    sleep2, sleep3, sleep4, wait_time)  select    :snap_id, :dbid, :instance_number, hash, level#, gets,    misses,
 sleeps, immediate_gets, immediate_misses, spin_gets,    sleep1, sleep2, sleep3, sleep4, wait_time  from    v$latch  order by    hash

000000008CBD7458
insert into wrh$_latch   (snap_id, dbid, instance_number, latch_hash, level#, gets, misses,    sleeps, immediate_gets, immediate_misses
, spin_gets, sleep1,    sleep2, sleep3, sleep4, wait_time)  select    :snap_id, :dbid, :instance_number, hash, level#, gets,    misses,
 sleeps, immediate_gets, immediate_misses, spin_gets,    sleep1, sleep2, sleep3, sleep4, wait_time  from    v$latch  order by    hash

000000008B0A4A90
insert into wrh$_latch   (snap_id, dbid, instance_number, latch_hash, level#, gets, misses,    sleeps, immediate_gets, immediate_misses
, spin_gets, sleep1,    sleep2, sleep3, sleep4, wait_time)  select    :snap_id, :dbid, :instance_number, hash, level#, gets,    misses,
 sleeps, immediate_gets, immediate_misses, spin_gets,    sleep1, sleep2, sleep3, sleep4, wait_time  from    v$latch  order by    hash

0000000088E995D0
insert into wrh$_latch   (snap_id, dbid, instance_number, latch_hash, level#, gets, misses,    sleeps, immediate_gets, immediate_misses
, spin_gets, sleep1,    sleep2, sleep3, sleep4, wait_time)  select    :snap_id, :dbid, :instance_number, hash, level#, gets,    misses,
 sleeps, immediate_gets, immediate_misses, spin_gets,    sleep1, sleep2, sleep3, sleep4, wait_time  from    v$latch  order by    hash

0000000060F886F0 SYS
WRH$_SQL_WORKAREA_HISTOGRAM

000000008B368FE8
select lobtsn, lobrdba, lobobjid from x$lobstat   where lobspcalloc > 0 and lobcurrtime >= :1   order by lobspcalloc desc

000000008B254EA8
select lobtsn, lobrdba, lobobjid from x$lobstat   where lobspcalloc > 0 and lobcurrtime >= :1   order by lobspcalloc desc

000000008B369468
select lobtsn, lobrdba, lobobjid from x$lobstat   where lobspcalloc > 0 and lobcurrtime >= :1   order by lobspcalloc desc

0000000088C8C3F8
UPDATE WRI$_SQLSET_P

000000008C95B6B0
UPDATE WRI$_ADV_RECOMMENDATIONS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT REC_ID FROM (SELECT A.REC_ID AS REC_ID, COUNT(
*) AS TOTAL_CNT, SUM(CASE WHEN A.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM DBA_ADVISOR_ACTIONS A WHERE A.TASK_ID = :B1 GROUP B
Y A.REC_ID) WHERE TOTAL_CNT = FILT_CNT)

0000000088FC1D88
UPDATE WRI$_ADV_RECOMMENDATIONS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT REC_ID FROM (SELECT A.REC_ID AS REC_ID, COUNT(
*) AS TOTAL_CNT, SUM(CASE WHEN A.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM DBA_ADVISOR_ACTIONS A WHERE A.TASK_ID = :B1 GROUP B
Y A.REC_ID) WHERE TOTAL_CNT = FILT_CNT)

0000000060E82760
UPDATE WRI$_ADV_RECOMMENDATIONS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT REC_ID FROM (SELECT A.REC_ID AS REC_ID, COUNT(
*) AS TOTAL_CNT, SUM(CASE WHEN A.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM DBA_ADVISOR_ACTIONS A WHERE A.TASK_ID = :B1 GROUP B
Y A.REC_ID) WHERE TOTAL_CNT = FILT_CNT)

0000000088E86A10
UPDATE WRI$_ADV_RECOMMENDATIONS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT REC_ID FROM (SELECT A.REC_ID AS REC_ID, COUNT(
*) AS TOTAL_CNT, SUM(CASE WHEN A.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM DBA_ADVISOR_ACTIONS A WHERE A.TASK_ID = :B1 GROUP B
Y A.REC_ID) WHERE TOTAL_CNT = FILT_CNT)

0000000088D1D200
UPDATE WRI$_ADV_RECOMMENDATIONS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT REC_ID FROM (SELECT A.REC_ID AS REC_ID, COUNT(
*) AS TOTAL_CNT, SUM(CASE WHEN A.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM DBA_ADVISOR_ACTIONS A WHERE A.TASK_ID = :B1 GROUP B
Y A.REC_ID) WHERE TOTAL_CNT = FILT_CNT)

000000008B13E508
UPDATE WRI$_ADV_RECOMMENDATIONS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT REC_ID FROM (SELECT A.REC_ID AS REC_ID, COUNT(
*) AS TOTAL_CNT, SUM(CASE WHEN A.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM DBA_ADVISOR_ACTIONS A WHERE A.TASK_ID = :B1 GROUP B
Y A.REC_ID) WHERE TOTAL_CNT = FILT_CNT)

0000000088DE5708 $BUILD$
5d4c080ccae9798d

000000008CA7EFC8 SYS
PROCEDUREINFO$

0000000092CBA1E8 SYS
C_COBJ#

0000000060D88A18 $BUILD$
9edcecdcbe1de605

0000000088C44AF0 APEX_030200
APEX_030200

0000000088D71380 PUBLIC
NLS_SESSION_PARAMETERS

0000000060F2ADB0
select /*+  no_paral

000000008B3A6458
SELECT TEMPLATE_NAME

0000000092D6ECC8
b4f335256ed143ca6e4c74234eba35af

0000000060E69C40
SELECT DECODE(Y.KSPP

000000008CB8FBF8
SELECT IC.INCARNATIO

0000000092D4DD40
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 T.DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY, A.HISTOGRAM, A.
NUM_BUCKETS, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI:SS') AS LAST1 FROM DBA_TAB_COL_STAT
ISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME AND A.TABLE_NAME
 = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) ORDER BY A.OWNER,A.COLUMN_NA
ME

0000000092C6B258
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 T.DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY, A.HISTOGRAM, A.
NUM_BUCKETS, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI:SS') AS LAST1 FROM DBA_TAB_COL_STAT
ISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME AND A.TABLE_NAME
 = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) ORDER BY A.OWNER,A.COLUMN_NA
ME

0000000060FC35A0
table_4_9_1909_0_0_0

0000000088C7FEA8
table_4_9_1909_0_0_0

0000000092D69478 SYS
X$IR_WR_PARAM

0000000088E42DB8
insert into wrh$_instance_recovery (snap_id, dbid, instance_number, recovery_estimated_ios, actual_redo_blks, target_redo_blks, log_fil
e_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_target_redo_blks, target_mttr, estimated_mtt
r, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes_logfile_size, writes_log_checkpoint_settin
gs, writes_other_settings, writes_autotune, writes_full_thread_ckpt) select :snap_id, :dbid, :instance_number, recovery_estimated_ios,
actual_redo_blks, target_redo_blks, log_file_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_t
arget_redo_blks, target_mttr, estimated_mttr, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes
_logfile_size, writes_log_checkpoint_settings, writes_other_settings, writes_autotune, writes_full_thread_ckpt from v$instance_recovery

000000008B0D7BD8
insert into wrh$_instance_recovery (snap_id, dbid, instance_number, recovery_estimated_ios, actual_redo_blks, target_redo_blks, log_fil
e_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_target_redo_blks, target_mttr, estimated_mtt
r, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes_logfile_size, writes_log_checkpoint_settin
gs, writes_other_settings, writes_autotune, writes_full_thread_ckpt) select :snap_id, :dbid, :instance_number, recovery_estimated_ios,
actual_redo_blks, target_redo_blks, log_file_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_t
arget_redo_blks, target_mttr, estimated_mttr, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes
_logfile_size, writes_log_checkpoint_settings, writes_other_settings, writes_autotune, writes_full_thread_ckpt from v$instance_recovery

0000000088D06E08
insert into wrh$_instance_recovery (snap_id, dbid, instance_number, recovery_estimated_ios, actual_redo_blks, target_redo_blks, log_fil
e_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_target_redo_blks, target_mttr, estimated_mtt
r, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes_logfile_size, writes_log_checkpoint_settin
gs, writes_other_settings, writes_autotune, writes_full_thread_ckpt) select :snap_id, :dbid, :instance_number, recovery_estimated_ios,
actual_redo_blks, target_redo_blks, log_file_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_t
arget_redo_blks, target_mttr, estimated_mttr, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes
_logfile_size, writes_log_checkpoint_settings, writes_other_settings, writes_autotune, writes_full_thread_ckpt from v$instance_recovery

000000008B2BBC78
insert into wrh$_instance_recovery (snap_id, dbid, instance_number, recovery_estimated_ios, actual_redo_blks, target_redo_blks, log_fil
e_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_target_redo_blks, target_mttr, estimated_mtt
r, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes_logfile_size, writes_log_checkpoint_settin
gs, writes_other_settings, writes_autotune, writes_full_thread_ckpt) select :snap_id, :dbid, :instance_number, recovery_estimated_ios,
actual_redo_blks, target_redo_blks, log_file_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_t
arget_redo_blks, target_mttr, estimated_mttr, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes
_logfile_size, writes_log_checkpoint_settings, writes_other_settings, writes_autotune, writes_full_thread_ckpt from v$instance_recovery

0000000060FA3AF0
insert into wrh$_instance_recovery (snap_id, dbid, instance_number, recovery_estimated_ios, actual_redo_blks, target_redo_blks, log_fil
e_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_target_redo_blks, target_mttr, estimated_mtt
r, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes_logfile_size, writes_log_checkpoint_settin
gs, writes_other_settings, writes_autotune, writes_full_thread_ckpt) select :snap_id, :dbid, :instance_number, recovery_estimated_ios,
actual_redo_blks, target_redo_blks, log_file_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_t
arget_redo_blks, target_mttr, estimated_mttr, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes
_logfile_size, writes_log_checkpoint_settings, writes_other_settings, writes_autotune, writes_full_thread_ckpt from v$instance_recovery

0000000088E43238
insert into wrh$_instance_recovery (snap_id, dbid, instance_number, recovery_estimated_ios, actual_redo_blks, target_redo_blks, log_fil
e_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_target_redo_blks, target_mttr, estimated_mtt
r, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes_logfile_size, writes_log_checkpoint_settin
gs, writes_other_settings, writes_autotune, writes_full_thread_ckpt) select :snap_id, :dbid, :instance_number, recovery_estimated_ios,
actual_redo_blks, target_redo_blks, log_file_size_redo_blks, log_chkpt_timeout_redo_blks, log_chkpt_interval_redo_blks, fast_start_io_t
arget_redo_blks, target_mttr, estimated_mttr, ckpt_block_writes, optimal_logfile_size, estd_cluster_available_time, writes_mttr, writes
_logfile_size, writes_log_checkpoint_settings, writes_other_settings, writes_autotune, writes_full_thread_ckpt from v$instance_recovery

0000000060F84450
delete from WRM$_BASELINE_DETAILS   where dbid = :dbid     and baseline_id in      (select baseline_id from WRM$_BASELINE        where
expiration is not NULL          and creation_time + expiration < :bind1)

0000000060C8B260
delete from WRM$_BASELINE_DETAILS   where dbid = :dbid     and baseline_id in      (select baseline_id from WRM$_BASELINE        where
expiration is not NULL          and creation_time + expiration < :bind1)

0000000060EF2260
SELECT JOB_OWNER, JO

000000008CA873C8
select   NAME,           VALUE,           UNIT     from   GV$PGASTAT    where  INST_ID = USERENV('Instance')

000000008B0F74E8
select   NAME,           VALUE,           UNIT     from   GV$PGASTAT    where  INST_ID = USERENV('Instance')

000000008C9D6288
select substrb(dump(

000000008CA6C3D0
613e7fde2f45249d589182d8d66c2d6

000000008C9E9C60
select /*+  no_paral

000000008CB1DF18
1243f25b4f5420f0d7fe72da626bba0f

000000008C8E38A8
1c19a7b9ed56a0b2bb09298b27fd69

000000008C94CEA0
UPDATE RLM$RULESET S

0000000088D13160
select sys.dbms_standard.login_user  from dual

000000008CB9D0B8
select sys.dbms_standard.login_user  from dual

0000000088D135E0
select sys.dbms_standard.login_user  from dual

00000000652EF2B0
select substrb(dump(

0000000065347E10 SYS
STREAMS$_PREPARE_OBJECT

000000008B34C3F0
249376247cff8ae9cf95b13ef7200df7

000000008B167490
94755b1bcf440d6ed429189295867dd0

0000000088EA7430
select min(minbkt),m

0000000088DB5348 $BUILD$
5574160cda1e2535

0000000088D438F8
360404555e947c02583b61d0ffaadca3

000000008B2EF970
ad643b5a2b58f8b933f79c19321e3478

0000000092D16758 SYS
X$KEHRP

0000000092D65C48 SYS
GV$MTTR_TARGET_ADVICE

0000000060FC1A40
71426d02602c009f7f47f611106344c

0000000060F4F420 MDSYS
SDO_GEOR_INT

00000000653F24A0 SYS
WRH$_FILESTATXS

000000008C8A9710
select count(*) from sys.job$ where next_date < :1 and (field1 = :2 or (field1 = 0 and 'Y' = :3)) and ((dbms_logstdby.db_is_logstdby =
0 and job < 1000000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000))

000000008C9E59F0
select count(*) from sys.job$ where next_date < :1 and (field1 = :2 or (field1 = 0 and 'Y' = :3)) and ((dbms_logstdby.db_is_logstdby =
0 and job < 1000000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000))

0000000088F8DF38
select count(*) from sys.job$ where next_date < :1 and (field1 = :2 or (field1 = 0 and 'Y' = :3)) and ((dbms_logstdby.db_is_logstdby =
0 and job < 1000000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000))

000000008B1AC930
select count(*) from sys.job$ where next_date < :1 and (field1 = :2 or (field1 = 0 and 'Y' = :3)) and ((dbms_logstdby.db_is_logstdby =
0 and job < 1000000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000))

000000008C8A9B90
select count(*) from sys.job$ where next_date < :1 and (field1 = :2 or (field1 = 0 and 'Y' = :3)) and ((dbms_logstdby.db_is_logstdby =
0 and job < 1000000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000))

0000000088C89DA8
DELETE WRI$_SQLSET_D

0000000060FBC870
722f7c0049c65d6c77a7849d9ea70789

000000008CBCA988
493cd250cc27a1a671836dfc28f34ccf

0000000088C63D20 SYS
DBA_CONS_COLUMNS

0000000092D6B798
fc94b7d8a5a4b10239654cda6e532ca1

00000000653D2C10
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION
_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'OR
DSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPS
YS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

000000008B159BA8
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION
_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'OR
DSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPS
YS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

000000008CA87C90
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION
_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'OR
DSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPS
YS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

000000008B25F968
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION
_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'OR
DSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPS
YS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

0000000088EAB550
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION
_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'OR
DSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPS
YS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

0000000060F05540
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION
_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'OR
DSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPS
YS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

0000000092D2D8C8
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION
_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'OR
DSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPS
YS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

0000000088ED78F0
select inst_id, decode(MSTYP,   1,'RFS',   2,'MRP0',   3,'MR(fg)',   4,'ARCH',   5,'FGRD',   6,'LGWR',   7,'RFS(FAL)',   8,'RFS(NEXP)',
   9,'LNS',     'UNKNOWN'), to_number(MSPID), decode(MSSTS,   0,'UNUSED',   1,'ALLOCATED',   2,'CONNECTED',   3,'ATTACHED',   4,'IDLE',
   5,'ERROR',   6,'OPENING',   7,'CLOSING',   8,'WRITING',   9,'RECEIVING',  10,'ANNOUNCING',  11,'REGISTERING',  12,'WAIT_FOR_LOG',  1
3,'WAIT_FOR_GAP',  14,'APPLYING_LOG',     'UNKNOWN'), decode(MSPAR,   0,'N/A',   4,'ARCH',   5,'Archival',   6,'LGWR',   9,'LNS',     '
UNKNOWN'), decode(MSPPID,   0,'N/A',   to_number(MSPPID)), decode(MSDBID,   0,'N/A',   to_number(MSDBID)), decode(MSLNO,   0,'N/A',   t
o_number(MSLNO)), to_number(MSRLC), to_number(MSTHR), to_number(MSSEQ), to_number(MSBNO), to_number(MSBCT), to_number(MSDLY), to_number
(MSRCLT), to_number(MSACLT)  from x$krssms

0000000060F8BA60
select inst_id, decode(MSTYP,   1,'RFS',   2,'MRP0',   3,'MR(fg)',   4,'ARCH',   5,'FGRD',   6,'LGWR',   7,'RFS(FAL)',   8,'RFS(NEXP)',
   9,'LNS',     'UNKNOWN'), to_number(MSPID), decode(MSSTS,   0,'UNUSED',   1,'ALLOCATED',   2,'CONNECTED',   3,'ATTACHED',   4,'IDLE',
   5,'ERROR',   6,'OPENING',   7,'CLOSING',   8,'WRITING',   9,'RECEIVING',  10,'ANNOUNCING',  11,'REGISTERING',  12,'WAIT_FOR_LOG',  1
3,'WAIT_FOR_GAP',  14,'APPLYING_LOG',     'UNKNOWN'), decode(MSPAR,   0,'N/A',   4,'ARCH',   5,'Archival',   6,'LGWR',   9,'LNS',     '
UNKNOWN'), decode(MSPPID,   0,'N/A',   to_number(MSPPID)), decode(MSDBID,   0,'N/A',   to_number(MSDBID)), decode(MSLNO,   0,'N/A',   t
o_number(MSLNO)), to_number(MSRLC), to_number(MSTHR), to_number(MSSEQ), to_number(MSBNO), to_number(MSBCT), to_number(MSDLY), to_number
(MSRCLT), to_number(MSACLT)  from x$krssms

000000008C872A88
2c444d22e330995d10af5c53b236d232

0000000060E32770
SELECT MAX(T.ACTUAL_

0000000088D45B10
SELECT TS$.TS#, OBJ#, DATAOBJ#, SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA), SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PH
YSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) FROM SYS.WRH$_SEG_STAT SEG, TS$, SEG$ S2, X$KCFISTSA TSATTR WHERE SNAP_
ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# = SEG.TS# AND TS$.TS# <> 0 AND SEG.TS# = TS$.TS# AND TS$.NAME NOT IN ('SYSTEM', 'SYSA
UX') AND TS$.TS# = TSATTR.TSID AND TSATTR.STORATTR <> 1 GROUP BY TS$.TS# , OBJ#, DATAOBJ#, S2.BLOCKS, TS$.BLOCKSIZE ORDER BY SUM(PHYSIC
AL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) DESC

000000008C9A20C0
SELECT TS$.TS#, OBJ#, DATAOBJ#, SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA), SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PH
YSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) FROM SYS.WRH$_SEG_STAT SEG, TS$, SEG$ S2, X$KCFISTSA TSATTR WHERE SNAP_
ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# = SEG.TS# AND TS$.TS# <> 0 AND SEG.TS# = TS$.TS# AND TS$.NAME NOT IN ('SYSTEM', 'SYSA
UX') AND TS$.TS# = TSATTR.TSID AND TSATTR.STORATTR <> 1 GROUP BY TS$.TS# , OBJ#, DATAOBJ#, S2.BLOCKS, TS$.BLOCKSIZE ORDER BY SUM(PHYSIC
AL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) DESC

0000000088C5A3A8
SELECT TS$.TS#, OBJ#, DATAOBJ#, SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA), SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PH
YSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) FROM SYS.WRH$_SEG_STAT SEG, TS$, SEG$ S2, X$KCFISTSA TSATTR WHERE SNAP_
ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# = SEG.TS# AND TS$.TS# <> 0 AND SEG.TS# = TS$.TS# AND TS$.NAME NOT IN ('SYSTEM', 'SYSA
UX') AND TS$.TS# = TSATTR.TSID AND TSATTR.STORATTR <> 1 GROUP BY TS$.TS# , OBJ#, DATAOBJ#, S2.BLOCKS, TS$.BLOCKSIZE ORDER BY SUM(PHYSIC
AL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) DESC

000000008B0A12C0
SELECT TS$.TS#, OBJ#, DATAOBJ#, SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA), SUM(PHYSICAL_WRITE_REQUESTS_DELTA+ PH
YSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) FROM SYS.WRH$_SEG_STAT SEG, TS$, SEG$ S2, X$KCFISTSA TSATTR WHERE SNAP_
ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# = SEG.TS# AND TS$.TS# <> 0 AND SEG.TS# = TS$.TS# AND TS$.NAME NOT IN ('SYSTEM', 'SYSA
UX') AND TS$.TS# = TSATTR.TSID AND TSATTR.STORATTR <> 1 GROUP BY TS$.TS# , OBJ#, DATAOBJ#, S2.BLOCKS, TS$.BLOCKSIZE ORDER BY SUM(PHYSIC
AL_WRITE_REQUESTS_DELTA+ PHYSICAL_READ_REQUESTS_DELTA)/((S2.BLOCKS*TS$.BLOCKSIZE)/1048576) DESC

0000000088C8DED8
SELECT FIRST_LOAD_TI

000000008B0AE430 $BUILD$
3c578de6947155f4

000000008CA42350
select /*+  no_paral

0000000088FDDBE0 APEX_030200
WWV_FLOW_SW_BINDS

000000008CB96BC8
SELECT ITEM_VALUE FR

0000000060FB1750 SYS
X$KEHF

0000000060E83BC0
4c6855784e08880730b0adc51f7ff59

000000008B36E4D0
8fb12607aa69c005c0c99213410588f

0000000060C886E0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F4AB00
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CB82F80
SELECT INST_ID,INSTA

000000008CB32800 SYS
IS_DROP_COLUMN

000000008C987B60
select substrb(dump(

000000008B256B28
SELECT ID FROM WWV_F

0000000060F88920 SYS
GV$SQL_WORKAREA_HISTOGRAM

000000008C894430
ec2d3064d53266de5ea9e9f0744221b2

000000008CAA3050
SELECT T.PARTITION_POSITION,T.PARTITION_NAME, T.HIGH_VALUE, CASE WHEN T.NUM_ROWS IS NULL THEN 'None' ELSE TO_CHAR(T.NUM_ROWS) END AS NU
M_ROWS, CASE WHEN TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') IS NULL THEN 'None' ELSE TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') END AS LAST_ANALYZED
, ROUND(S.G,2) AS G, T.SUBPARTITION_COUNT AS SUBPARTITION_CNT,T.COMPRESSION FROM DBA_TAB_PARTITIONS T, (SELECT SUM(BYTES/1024/1024/1024
) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY PARTITION_NAME) S WHERE S.PARTI
TION_NAME = T.PARTITION_NAME AND TABLE_OWNER = UPPER(:B1 ) AND TABLE_NAME = UPPER(:B2 ) ORDER BY T.PARTITION_POSITION

000000006531E900
SELECT T.PARTITION_POSITION,T.PARTITION_NAME, T.HIGH_VALUE, CASE WHEN T.NUM_ROWS IS NULL THEN 'None' ELSE TO_CHAR(T.NUM_ROWS) END AS NU
M_ROWS, CASE WHEN TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') IS NULL THEN 'None' ELSE TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') END AS LAST_ANALYZED
, ROUND(S.G,2) AS G, T.SUBPARTITION_COUNT AS SUBPARTITION_CNT,T.COMPRESSION FROM DBA_TAB_PARTITIONS T, (SELECT SUM(BYTES/1024/1024/1024
) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY PARTITION_NAME) S WHERE S.PARTI
TION_NAME = T.PARTITION_NAME AND TABLE_OWNER = UPPER(:B1 ) AND TABLE_NAME = UPPER(:B2 ) ORDER BY T.PARTITION_POSITION

0000000088C46610
select substrb(dump(

0000000088DE2978 $BUILD$
abd482b2db66dc1d

000000008B0D5B98 SYS
DBA_GOLDENGATE_PRIVILEGES

0000000088F90128
bfab01341cf499d986d9475d272da1a

000000008CA0A7C0
cb87c155ccf5baeb795113ddb9af199f

0000000065325910
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."TS$"
"TS#3", "SYS"."USER$" "U#4", "SYS"."FILE$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE
#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (D
ECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") A
ND ("S#1"."USER#"="U#4"."USER#"(+)) AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

000000008CBBE008
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."TS$"
"TS#3", "SYS"."USER$" "U#4", "SYS"."FILE$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE
#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (D
ECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") A
ND ("S#1"."USER#"="U#4"."USER#"(+)) AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

000000008B1C2C60 SYS
X$KGLOB

000000008C9F1FB0
7f5259471f5383ccfc3a966b99bf0c76

0000000060C8B6B0
56702055b39a5ce2a8c470ff55890df2

000000008CA62A38
SELECT 1 FROM WWV_FL

000000008B218B90
2b794b594b32f9851e59c951ec2d89a7

0000000088E4C6F8
bd8ff7f116095cd04f07c4184237ed0e

0000000088D5D968 $BUILD$
853de40958395dc2

000000008CB0AA48 SYS
WRH$_DLM_MISC_BL

0000000060FFC9D0 APEX_030200
WWV_FLOW_SECURITY_SCHEMES

0000000088C9BFC8
DELETE FROM WRI$_SQL

000000008C89EE48 APEX_030200
WWV_FLOW_STEP_COMPUTATIONS

000000008CBB9A70 $BUILD$
471041825a74ced5

000000008B29FFC8
a7d0a75ff4baf3a2197c26f430948e02

0000000092D4D9C8
8f75e52c65c7dea2a99ec4e436457614

000000008B3FB8E8 EXFSYS
RLM$EQUALSPEC

000000008C8A37E0
delete from WRH$_RULE_SET tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060E9EF00
delete from WRH$_RULE_SET tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088FA2418
SELECT NVL(MAX(AL.NE

0000000088C97738
SELECT XMLELEMENT( "

0000000088CFBEB0
9af563a22d8dfb1f23ea03bf22fa440

0000000060D991D8
fa118609107e2db46bcfd6515dcbe47a

000000008C9318B8 SYS
WRI$_ADV_EXEC_PARAMETERS

000000008B3A7BD8
SELECT COUNT(*) FROM

0000000088D72FD8
select op.inst_id, gv.component,     decode(op.opcode, 0, 'STATIC', 1, 'INITIALIZING', 2, 'DISABLED',           3, 'GROW', 4, 'SHRINK',
 5, 'SHRINK_CANCEL', NULL),     decode(op.opmode, 1, 'MANUAL', 2, 'DEFERRED', 3, 'IMMEDIATE', NULL),     pn.name, op.initsize * gv.gran
size, op.targsize * gv.gransize,      op.realsize * gv.gransize,     decode(op.status, 0, 'INACTIVE', 1, 'PENDING', 2, 'COMPLETE',
      3, 'CANCELLED', 4, 'ERROR', 5, 'ERROR', 6, 'ERROR',           7, 'CANCELLED', 8, 'CANCELLED', NULL),     op.starttime, op.endtime
   from x$kmgsop op, x$kmgsct gv, v$parameter pn   where (op.grantype = gv.grantype)     and (op.parno = pn.num)     order by op.startt
ime

000000008CA57878
select op.inst_id, gv.component,     decode(op.opcode, 0, 'STATIC', 1, 'INITIALIZING', 2, 'DISABLED',           3, 'GROW', 4, 'SHRINK',
 5, 'SHRINK_CANCEL', NULL),     decode(op.opmode, 1, 'MANUAL', 2, 'DEFERRED', 3, 'IMMEDIATE', NULL),     pn.name, op.initsize * gv.gran
size, op.targsize * gv.gransize,      op.realsize * gv.gransize,     decode(op.status, 0, 'INACTIVE', 1, 'PENDING', 2, 'COMPLETE',
      3, 'CANCELLED', 4, 'ERROR', 5, 'ERROR', 6, 'ERROR',           7, 'CANCELLED', 8, 'CANCELLED', NULL),     op.starttime, op.endtime
   from x$kmgsop op, x$kmgsct gv, v$parameter pn   where (op.grantype = gv.grantype)     and (op.parno = pn.num)     order by op.startt
ime

0000000088CFC1A0
SELECT :B11 TYPE_CON

0000000092CEF548 SYS
RE$NV_LIST

0000000060F17110
76f6180bf1679ca35112494d1b7bd30

000000008CADC3D8
SELECT USERENV('CLIE

0000000088CBBC80
df62b0e7a56a3c40411200a38eb85bed

0000000060EDB070
16352072022617169886

0000000092C734E8 $BUILD$
224045a2509e958d

000000008B2A60B8
/* SQL Analyze(1) */

00000000652E0610 $BUILD$
53013019e3cb9051

000000008B34E4B0
f9f66f2c75b3b4bfa51a15887faee1a7

000000008CB603A0
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008CBDCE80
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000060EE54F0
select substrb(dump(

000000008B3FA7E8
16adef17c456837c99a0554544d3fd04

0000000060E00410 SCOTT
DBMS_APPLICATION_INFO

0000000088FF2C70
f0fde197a1a16883c15137c81af0b98

000000008CBAD088
insert into sdo_geor_ddl__table$$ values (2)

0000000088E72110
insert into sdo_geor_ddl__table$$ values (2)

0000000088FD7B30
SELECT FAILS, PROP F

0000000088CA1B18
SELECT SUBSTR(PARAME

000000008B26C838 APEX_030200
WWV_FLOW_FORM_CONTROL

000000008CAF0868 SYS
WRH$_EVENT_HISTOGRAM_BL

0000000088F06FD8
e8aaf378da374e729c02b07ee31a7c12

000000008B177ED0
/* SQL Analyze(1) */

0000000060F316B0
select component, oper_type, oper_mode, parameter, initial_size,     target_size, final_size, status, start_time, end_time   from gv$me
mory_resize_ops   where inst_id = USERENV('Instance')

0000000060D8ECF0
select component, oper_type, oper_mode, parameter, initial_size,     target_size, final_size, status, start_time, end_time   from gv$me
mory_resize_ops   where inst_id = USERENV('Instance')

000000008CADD5A8
SELECT UID FROM SYS.

0000000088E138C8
SELECT q'[alter syst

0000000060D2E6A8
5a09d6bdd3eb07dfeddc2feb33ffdc74

0000000088FBC718

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
9a7c89d5c19203b3f3cf27ae6c241b47

000000008CA80118 SYS
ALERT_QT

000000008B116F20
b715dc3f633a2bd991991b83c41cc414

0000000088E08C48
insert into wrh$_sga_target_advice   (snap_id, dbid, instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS)
 select    :snap_id, :dbid, :instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS  from    v$sga_target_adv
ice

000000008C900738
insert into wrh$_sga_target_advice   (snap_id, dbid, instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS)
 select    :snap_id, :dbid, :instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS  from    v$sga_target_adv
ice

000000008CB50568
insert into wrh$_sga_target_advice   (snap_id, dbid, instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS)
 select    :snap_id, :dbid, :instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS  from    v$sga_target_adv
ice

0000000088D53FA8
insert into wrh$_sga_target_advice   (snap_id, dbid, instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS)
 select    :snap_id, :dbid, :instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS  from    v$sga_target_adv
ice

0000000088E090C8
insert into wrh$_sga_target_advice   (snap_id, dbid, instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS)
 select    :snap_id, :dbid, :instance_number,    SGA_SIZE, SGA_SIZE_FACTOR, ESTD_DB_TIME, ESTD_PHYSICAL_READS  from    v$sga_target_adv
ice

000000008C9FEBB8 SYS
DBMS_AQJMS

000000008C923578
DELETE FROM SYS.WRI$

0000000088F405C0
SELECT * FROM WWV_FL

0000000088CA6D98
SELECT COUNT(*) FROM SYS.ALL_USERS WHERE NLSSORT(USERNAME, 'NLS_SORT=BINARY') = NLSSORT(:B1 , 'NLS_SORT=BINARY')

000000008B27EE68
SELECT COUNT(*) FROM SYS.ALL_USERS WHERE NLSSORT(USERNAME, 'NLS_SORT=BINARY') = NLSSORT(:B1 , 'NLS_SORT=BINARY')

0000000060E5DB30
f03155edd7a1886a4a303e74f371150f

000000008B29C010
/* SQL Analyze(1) */

0000000060CF75E8
a9700ada9857efc07105a74a47b8eae9

0000000088CADB38
select substrb(dump(

0000000088FC1AE8
SELECT GRPBYATTRS FR

0000000092D7F888 SYS
X$KQFCO

0000000088CAC618 $BUILD$
aa1e41eb73eafa1c

0000000092D4B970
d666b5bc68f108645b306bdbdcf247

000000008CAF39A8 SYS
WRH$_IOSTAT_FILETYPE

0000000060FDED10
SELECT CONTROLFILE_TYPE FROM V$DATABASE

000000008C960B08
SELECT CONTROLFILE_TYPE FROM V$DATABASE

0000000088D66000
begin prvt_hdm.auto_execute( :dbid, :inst_num , :end_snap_id ); end;

000000008C8751F8
begin prvt_hdm.auto_execute( :dbid, :inst_num , :end_snap_id ); end;

0000000088D66480
begin prvt_hdm.auto_execute( :dbid, :inst_num , :end_snap_id ); end;

0000000092D613E8
INSERT INTO EXFSYS.R

000000008B327D28
d2afb868cb61819e8b97154322cad954

000000008B057AD0
DELETE FROM SYS.WRI$

000000008CA0EEB8
select substrb(dump(

0000000060CDAC50
90240e97355a0bf43ce680c269c3dfe

000000008B03ED38
UPDATE WWV_FLOW_SESS

0000000088F40CF8 SYS
DBMS_SQLDIAG_LIB

0000000060D80B18 SYSTEM
LOGMNR_RESTART_CKPT$

0000000088C71C80
SELECT COOKIE FROM W

000000008B097C70
INSERT INTO SYS.AUX_

0000000088F9F758
update hist_head$ set bucket_cnt=:3, row_cnt=:4, cache_cnt=:5,null_cnt=:6, timestamp#=:7, sample_size=:8, minimum=:9, maximum=:10,distc
nt=:11, lowval=:12, hival=:13, density=:14, spare1=:15, spare2=:16, avgcln=:17, col#=:18 where obj#=:1 and intcol#=:2

000000008B246790
update hist_head$ set bucket_cnt=:3, row_cnt=:4, cache_cnt=:5,null_cnt=:6, timestamp#=:7, sample_size=:8, minimum=:9, maximum=:10,distc
nt=:11, lowval=:12, hival=:13, density=:14, spare1=:15, spare2=:16, avgcln=:17, col#=:18 where obj#=:1 and intcol#=:2

0000000088DE3F98
update hist_head$ set bucket_cnt=:3, row_cnt=:4, cache_cnt=:5,null_cnt=:6, timestamp#=:7, sample_size=:8, minimum=:9, maximum=:10,distc
nt=:11, lowval=:12, hival=:13, density=:14, spare1=:15, spare2=:16, avgcln=:17, col#=:18 where obj#=:1 and intcol#=:2

0000000088FD8D20
update hist_head$ set bucket_cnt=:3, row_cnt=:4, cache_cnt=:5,null_cnt=:6, timestamp#=:7, sample_size=:8, minimum=:9, maximum=:10,distc
nt=:11, lowval=:12, hival=:13, density=:14, spare1=:15, spare2=:16, avgcln=:17, col#=:18 where obj#=:1 and intcol#=:2

0000000092C3E828
c25f40e6c301b03a299d5d03e60d836

000000008CBD68C0
5b8f80e370cf9ae6e13a371fb3e346af

000000008CB79AB8 EXFSYS
RLM$SCHDNEGACTION

000000008B245EE0
SELECT SO.SUBNAME FR

000000008C872C88
58e8c142109e7c51f6d07ec6bd8c3902

000000008B1F7380
UPDATE RLM$RULESET S

000000008C9F7E60
77c0cf26557964a9ea48e129672146c6

000000008B052E20
SELECT SUM(T.ROWCNT

0000000088CBFE50
lock table sys.mon_mods_all$ in exclusive mode

000000008CB45AB8
lock table sys.mon_mods_all$ in exclusive mode

000000008B1F25D0
lock table sys.mon_mods_all$ in exclusive mode

0000000088D06218
lock table sys.mon_mods_all$ in exclusive mode

000000008B0E6978
lock table sys.mon_mods_all$ in exclusive mode

0000000092C390B0
lock table sys.mon_mods_all$ in exclusive mode

000000008C998DE0
lock table sys.mon_mods_all$ in exclusive mode

0000000092D6A288
lock table sys.mon_mods_all$ in exclusive mode

0000000088F42988
lock table sys.mon_mods_all$ in exclusive mode

0000000060C37B30
lock table sys.mon_mods_all$ in exclusive mode

0000000088E3CC40
lock table sys.mon_mods_all$ in exclusive mode

0000000088CC02D0
lock table sys.mon_mods_all$ in exclusive mode

0000000088ECCD28
3d98614219adcb3ddb490257cbda5d37

000000008B0ECEB8
SELECT GREATEST(NVL(

000000008B3DAEB8 APEX_030200
WWV_FLOW_ASSERT

000000008B38AB48 SYS
GV$SESSION_WAIT

0000000088E734D0 SYS
UTL_TCP

00000000653FEBA0 SCOTT
HASH_TABLE

0000000092D001D8
MERGE INTO WRI$_ADV_PARAMETERS P USING (SELECT :B6 TASK_ID, :B5 NAME, :B4 VALUE, :B3 DATATYPE, :B2 FLAGS, :B1 DESCRIPTION FROM DUAL) I
ON (P.TASK_ID = I.TASK_ID AND P.NAME = I.NAME) WHEN MATCHED THEN UPDATE SET P.VALUE = I.VALUE, P.FLAGS = I.FLAGS WHERE P.VALUE <> I.VAL
UE WHEN NOT MATCHED THEN INSERT(TASK_ID, NAME, VALUE, DATATYPE, FLAGS, DESCRIPTION) VALUES(I.TASK_ID, I.NAME, I.VALUE, I.DATATYPE, I.FL
AGS, I.DESCRIPTION)

000000008CAFA5A8
MERGE INTO WRI$_ADV_PARAMETERS P USING (SELECT :B6 TASK_ID, :B5 NAME, :B4 VALUE, :B3 DATATYPE, :B2 FLAGS, :B1 DESCRIPTION FROM DUAL) I
ON (P.TASK_ID = I.TASK_ID AND P.NAME = I.NAME) WHEN MATCHED THEN UPDATE SET P.VALUE = I.VALUE, P.FLAGS = I.FLAGS WHERE P.VALUE <> I.VAL
UE WHEN NOT MATCHED THEN INSERT(TASK_ID, NAME, VALUE, DATATYPE, FLAGS, DESCRIPTION) VALUES(I.TASK_ID, I.NAME, I.VALUE, I.DATATYPE, I.FL
AGS, I.DESCRIPTION)

000000008B044540
MERGE INTO WRI$_ADV_PARAMETERS P USING (SELECT :B6 TASK_ID, :B5 NAME, :B4 VALUE, :B3 DATATYPE, :B2 FLAGS, :B1 DESCRIPTION FROM DUAL) I
ON (P.TASK_ID = I.TASK_ID AND P.NAME = I.NAME) WHEN MATCHED THEN UPDATE SET P.VALUE = I.VALUE, P.FLAGS = I.FLAGS WHERE P.VALUE <> I.VAL
UE WHEN NOT MATCHED THEN INSERT(TASK_ID, NAME, VALUE, DATATYPE, FLAGS, DESCRIPTION) VALUES(I.TASK_ID, I.NAME, I.VALUE, I.DATATYPE, I.FL
AGS, I.DESCRIPTION)

000000008B2216E0
MERGE INTO WRI$_ADV_PARAMETERS P USING (SELECT :B6 TASK_ID, :B5 NAME, :B4 VALUE, :B3 DATATYPE, :B2 FLAGS, :B1 DESCRIPTION FROM DUAL) I
ON (P.TASK_ID = I.TASK_ID AND P.NAME = I.NAME) WHEN MATCHED THEN UPDATE SET P.VALUE = I.VALUE, P.FLAGS = I.FLAGS WHERE P.VALUE <> I.VAL
UE WHEN NOT MATCHED THEN INSERT(TASK_ID, NAME, VALUE, DATATYPE, FLAGS, DESCRIPTION) VALUES(I.TASK_ID, I.NAME, I.VALUE, I.DATATYPE, I.FL
AGS, I.DESCRIPTION)

000000008C91B158
MERGE INTO WRI$_ADV_PARAMETERS P USING (SELECT :B6 TASK_ID, :B5 NAME, :B4 VALUE, :B3 DATATYPE, :B2 FLAGS, :B1 DESCRIPTION FROM DUAL) I
ON (P.TASK_ID = I.TASK_ID AND P.NAME = I.NAME) WHEN MATCHED THEN UPDATE SET P.VALUE = I.VALUE, P.FLAGS = I.FLAGS WHERE P.VALUE <> I.VAL
UE WHEN NOT MATCHED THEN INSERT(TASK_ID, NAME, VALUE, DATATYPE, FLAGS, DESCRIPTION) VALUES(I.TASK_ID, I.NAME, I.VALUE, I.DATATYPE, I.FL
AGS, I.DESCRIPTION)

0000000088EB48B0 $BUILD$
cecd45ab1121337a

000000008C908098
/* SQL Analyze(1) */

000000008C94FD10
f6e85280951951214531b8c8401fd6e6

0000000060F57970
b88d04ca21b0099354e3897515ff5ac

000000008C8398C8 $BUILD$
c8c82e778b29ccb8

000000008B034388 SYS
GV$DATAFILE

0000000060E071C8
delete from WRM$_SNAPSHOT   where :beg_snap <= snap_id and         snap_id <= :end_snap and         status = 2 and         dbid = :dbid

0000000060D38548
delete from WRM$_SNAPSHOT   where :beg_snap <= snap_id and         snap_id <= :end_snap and         status = 2 and         dbid = :dbid

000000008B28F458
SELECT COUNT(*) FROM DBA_SCHEDULER_JOBS WHERE JOB_NAME = :B1 AND OWNER ='ORACLE_OCM'

000000008B367498
SELECT COUNT(*) FROM DBA_SCHEDULER_JOBS WHERE JOB_NAME = :B1 AND OWNER ='ORACLE_OCM'

0000000060C35C10 SYS
DBA_SEQUENCES

0000000088D532F8
WITH MWS AS  (SELECT ROWNUM idx, WINDOW_NAME, NEXT_START_DATE sd,        NEXT_START_DATE + DURATION ed , DURATION,         EXTRACT(DAY
FROM DURATION)*24*60 +         EXTRACT(HOUR FROM DURATION)*60 +         EXTRACT(MINUTE FROM DURATION) mdur,         CASE active WHEN 'T
RUE' THEN 1 ELSE 0 END AS act     FROM DBA_SCHEDULER_WINDOWS    WHERE ENABLED='TRUE'       AND WINDOW_NAME IN        (SELECT WINDOW_NAM
E            FROM DBA_SCHEDULER_WINGROUP_MEMBERS          WHERE WINDOW_GROUP_NAME='MAINTENANCE_WINDOW_GROUP'))  SELECT idx, 0,  WINDOW_
NAME, sd, ed, DURATION, mdur, act  FROM  MWS UNION ALL   SELECT idx, C.CID_KETCL, WINDOW_NAME, sd, ed, DURATION, mdur, act     FROM MWS
, X$KETCL C   WHERE C.CID_KETCL > 0      AND MWS.WINDOW_NAME IN        (SELECT WINDOW_NAME           FROM DBA_SCHEDULER_WINGROUP_MEMBER
S WGM          WHERE WGM.WINDOW_GROUP_NAME=C.WGRP_KETCL) ORDER BY 4,1,2

0000000088C3FFD0
WITH MWS AS  (SELECT ROWNUM idx, WINDOW_NAME, NEXT_START_DATE sd,        NEXT_START_DATE + DURATION ed , DURATION,         EXTRACT(DAY
FROM DURATION)*24*60 +         EXTRACT(HOUR FROM DURATION)*60 +         EXTRACT(MINUTE FROM DURATION) mdur,         CASE active WHEN 'T
RUE' THEN 1 ELSE 0 END AS act     FROM DBA_SCHEDULER_WINDOWS    WHERE ENABLED='TRUE'       AND WINDOW_NAME IN        (SELECT WINDOW_NAM
E            FROM DBA_SCHEDULER_WINGROUP_MEMBERS          WHERE WINDOW_GROUP_NAME='MAINTENANCE_WINDOW_GROUP'))  SELECT idx, 0,  WINDOW_
NAME, sd, ed, DURATION, mdur, act  FROM  MWS UNION ALL   SELECT idx, C.CID_KETCL, WINDOW_NAME, sd, ed, DURATION, mdur, act     FROM MWS
, X$KETCL C   WHERE C.CID_KETCL > 0      AND MWS.WINDOW_NAME IN        (SELECT WINDOW_NAME           FROM DBA_SCHEDULER_WINGROUP_MEMBER
S WGM          WHERE WGM.WINDOW_GROUP_NAME=C.WGRP_KETCL) ORDER BY 4,1,2

000000008CB47B48
WITH MWS AS  (SELECT ROWNUM idx, WINDOW_NAME, NEXT_START_DATE sd,        NEXT_START_DATE + DURATION ed , DURATION,         EXTRACT(DAY
FROM DURATION)*24*60 +         EXTRACT(HOUR FROM DURATION)*60 +         EXTRACT(MINUTE FROM DURATION) mdur,         CASE active WHEN 'T
RUE' THEN 1 ELSE 0 END AS act     FROM DBA_SCHEDULER_WINDOWS    WHERE ENABLED='TRUE'       AND WINDOW_NAME IN        (SELECT WINDOW_NAM
E            FROM DBA_SCHEDULER_WINGROUP_MEMBERS          WHERE WINDOW_GROUP_NAME='MAINTENANCE_WINDOW_GROUP'))  SELECT idx, 0,  WINDOW_
NAME, sd, ed, DURATION, mdur, act  FROM  MWS UNION ALL   SELECT idx, C.CID_KETCL, WINDOW_NAME, sd, ed, DURATION, mdur, act     FROM MWS
, X$KETCL C   WHERE C.CID_KETCL > 0      AND MWS.WINDOW_NAME IN        (SELECT WINDOW_NAME           FROM DBA_SCHEDULER_WINGROUP_MEMBER
S WGM          WHERE WGM.WINDOW_GROUP_NAME=C.WGRP_KETCL) ORDER BY 4,1,2

0000000060F99200
create global tempor

0000000088E5CF88 APEX_030200
WWV_FLOW_API

0000000088D270E0 SYS
DBMS_SQL

00000000652C2B40
select num_nulls fro

0000000060C56F50
select num_nulls fro

0000000060E7FB60
SELECT NVL(TO_NUMBER

0000000060DDAC20
1871529dbb6cd514f52629ec8acf2700

0000000065332150 SYS
V$DATAFILE

000000008B246620
      select name, resetlogs_time,              resetlogs_change#,              dbid       into :dbname:dbname_i,            :rlgtime,
           :rlgscn,            :fhdbi:fhdbi_i       from v$database

000000008CB02858
      select name, resetlogs_time,              resetlogs_change#,              dbid       into :dbname:dbname_i,            :rlgtime,
           :rlgscn,            :fhdbi:fhdbi_i       from v$database

0000000088E5B1B8
f3bf7a82af101b8e1b0d6a8db8f4959f

000000008B0E5600
SELECT COUNT(*) FROM

0000000088E28388
insert into wrh$_log        (snap_id, dbid, instance_number, group#, thread#,         sequence#, bytes, members, archived,         stat
us, first_change#, first_time)   select :snap_id, :dbid, :instance_number,          group#, thread#, sequence#, bytes,          members
, archived, status, first_change#, first_time     from v$log

0000000092C9D148
insert into wrh$_log        (snap_id, dbid, instance_number, group#, thread#,         sequence#, bytes, members, archived,         stat
us, first_change#, first_time)   select :snap_id, :dbid, :instance_number,          group#, thread#, sequence#, bytes,          members
, archived, status, first_change#, first_time     from v$log

000000008B276990
insert into wrh$_log        (snap_id, dbid, instance_number, group#, thread#,         sequence#, bytes, members, archived,         stat
us, first_change#, first_time)   select :snap_id, :dbid, :instance_number,          group#, thread#, sequence#, bytes,          members
, archived, status, first_change#, first_time     from v$log

0000000088D562F0
insert into wrh$_log        (snap_id, dbid, instance_number, group#, thread#,         sequence#, bytes, members, archived,         stat
us, first_change#, first_time)   select :snap_id, :dbid, :instance_number,          group#, thread#, sequence#, bytes,          members
, archived, status, first_change#, first_time     from v$log

0000000060E91230
insert into wrh$_log        (snap_id, dbid, instance_number, group#, thread#,         sequence#, bytes, members, archived,         stat
us, first_change#, first_time)   select :snap_id, :dbid, :instance_number,          group#, thread#, sequence#, bytes,          members
, archived, status, first_change#, first_time     from v$log

0000000088E28808
insert into wrh$_log        (snap_id, dbid, instance_number, group#, thread#,         sequence#, bytes, members, archived,         stat
us, first_change#, first_time)   select :snap_id, :dbid, :instance_number,          group#, thread#, sequence#, bytes,          members
, archived, status, first_change#, first_time     from v$log

0000000088E22BF8 SYS
RSE$CLEAN_RECOVERABLE_SCRIPT

0000000060C4A850
create global tempor

000000008B350300
31dd2dcdeff3c75249410b19be7698a0

0000000088F41A68
delete from WRH$_THREAD tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not e
xists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start_
snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B0D6338
delete from WRH$_THREAD tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not e
xists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start_
snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C88FD90
1c4a17954ac0b4e5db3a9e16971aba0

0000000088D39CE8
9519de745a9dab30840a0cf5742a7863

0000000060D1A020
83ecc77ab1106a9934f553354ac8024

00000000652AE460 $BUILD$
32228fc9527f081e

0000000092D545C8 SYS
X$KCTLAX

0000000092CCDB78 APEX_030200
HTP

0000000092CA5A58
SELECT JOB_STEP_OID

000000008B120338
table_24_d_1a7b_0_19

0000000088E91FA0
DELETE FROM RLM$EQUA

0000000092EBE310
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  A.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060D0F1C8
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  A.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000088C666C0
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

000000008CA6D610
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

0000000060E38160
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

0000000060E39FA0
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

0000000092D69698
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

0000000088F95C48
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

0000000060FE0A68
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

0000000088C66B40
insert into sys.wri$_optstat_histgrm_history (obj#,intcol#,savtime,bucket, endpoint,epvalue,colname)  select hg.obj#,hg.intcol#,:3,hg.b
ucket,hg.endpoint,hg.epvalue, :4  from sys.histgrm$ hg  where hg.obj# = :1 and hg.intcol# = :2

0000000088DC8358 $BUILD$
bf31822bdf29ae7c

0000000088CA5BA8 SYS
DBA_ADVISOR_SQLSTATS

0000000060E661B0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0), COUNT(DISTINCT C3), NVL(SUM(CASE WHEN C3 IS NULL THEN 1 ELSE 0
END),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("QT") FULL("QT") NO_PARALLEL_INDEX("QT") */ 1 AS C1, CASE WHEN "QT"."Q_NAME"='
SYS.AQ$_SCHEDULER$_EVENT_QTAB_E' AND ("QT"."STATE"<>7 OR "QT"."STATE"<>9) THEN 1 ELSE 0 END AS C2, "QT"."MSGID" AS C3 FROM "SYS"."SCHED
ULER$_EVENT_QTAB" "QT") SAMPLESUB

0000000060D324E8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0), COUNT(DISTINCT C3), NVL(SUM(CASE WHEN C3 IS NULL THEN 1 ELSE 0
END),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("QT") FULL("QT") NO_PARALLEL_INDEX("QT") */ 1 AS C1, CASE WHEN "QT"."Q_NAME"='
SYS.AQ$_SCHEDULER$_EVENT_QTAB_E' AND ("QT"."STATE"<>7 OR "QT"."STATE"<>9) THEN 1 ELSE 0 END AS C2, "QT"."MSGID" AS C3 FROM "SYS"."SCHED
ULER$_EVENT_QTAB" "QT") SAMPLESUB

0000000060D3FAB8
253957d1c7ea47cf65b8fbaabaac5b02

0000000088E26048
c21f23f0f0e10ba4ad80911d1ba41f69

000000008B174E20
a1e06003576529ec3d596ccf2547f69

000000008B352720
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

0000000088CC2380
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

000000008CB246A0
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

0000000088F36E28
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

000000008B1E3878
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

000000008CAB6DE0
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

000000008CA202E8
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

0000000088CBAD00
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

0000000060E3F110
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

0000000060C42C90
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

000000008B352BA0
update sys.col_usage$ set   equality_preds    = equality_preds    + decode(bitand(:flag,1),0,0,1),   equijoin_preds    = equijoin_preds
    + decode(bitand(:flag,2),0,0,1),   nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag,4),0,0,1),   range_preds       = ran
ge_preds       + decode(bitand(:flag,8),0,0,1),   like_preds        = like_preds        + decode(bitand(:flag,16),0,0,1),   null_preds
       = null_preds        + decode(bitand(:flag,32),0,0,1),  timestamp = :time where obj# = :objn and intcol# = :coln

000000008B08B340
SELECT /*+ rule */ H

0000000088C87A48
SELECT O.ATTR1 SQL_I

000000008B2410F8
6c60556fa3de7fb417f5db313f9038a6

0000000088E88300
SELECT NVL(MAX(BS.ST

0000000088F5E298
c74942c89bd0783593f51e7ce3800795

000000008B1359F8
UPDATE EXFSYS.RLM$PA

000000008B1D89C8
select substrb(dump(

0000000088DDCEE0 APEX_030200
WWV_FLOW_CHECK

000000006533E850
1165a848c5f6b4ab31b2710074e2fdcb

0000000060F1B520
6a618680506b82bd2525327282df4b5e

000000008B1AB540
UPDATE RLM$RULESET S

000000008C893170
select substrb(dump(

0000000088CC56E8
fc94b7d8a5a4b10239654cda6e532ca1

0000000060E8A4B0
SELECT SECURITY_GROU

000000008C9AE4D0 SYS
SCHEDULER_FILEWATCHER_RES_LIST

000000008B099C10 SYS
MON_MODS_ALL$

000000008CA42130 SYS
DBA_PART_COLUMNS

0000000088FC1208
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."TS$"
 "TS#3", "SYS"."FILE$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") A
ND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",
1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") AND ("S#1"."TS#"="TS#
3"."TS#")) innerQuery

0000000060DE2958
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."TS$"
 "TS#3", "SYS"."FILE$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") A
ND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",
1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") AND ("S#1"."TS#"="TS#
3"."TS#")) innerQuery

000000008CA847A8
SELECT EXECUTION_TYP

0000000088CA2018
SELECT TO_CHAR(EXECU

000000008B191CB0 SYS
WRH$_TABLESPACE_STAT

000000008CB592D8
select substrb(dump(

0000000092EC1DE0
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, LAST_EXEC_NAME = :B5 , STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION
 = NVL(:B2 , VERSION) WHERE ID = :B1

0000000088FEF9A0
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, LAST_EXEC_NAME = :B5 , STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION
 = NVL(:B2 , VERSION) WHERE ID = :B1

000000008B219F80
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, LAST_EXEC_NAME = :B5 , STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION
 = NVL(:B2 , VERSION) WHERE ID = :B1

0000000088DE1698
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, LAST_EXEC_NAME = :B5 , STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION
 = NVL(:B2 , VERSION) WHERE ID = :B1

000000008B1EC6D8
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, LAST_EXEC_NAME = :B5 , STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION
 = NVL(:B2 , VERSION) WHERE ID = :B1

000000008C918928
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, LAST_EXEC_NAME = :B5 , STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION
 = NVL(:B2 , VERSION) WHERE ID = :B1

000000008C9325A8 SYS
WRI$_ADV_DEF_EXEC_TYPES

0000000060EDB880
select     INDEX_NAME,     BLEVEL BLev,     LEAF_BLOCKS,     DISTINCT_KEYS,     NUM_ROWS,     AVG_LEAF_BLOCKS_PER_KEY,     AVG_DATA_BLO
CKS_PER_KEY,     CLUSTERING_FACTOR,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_indexes t where     table_n
ame = 'EMP' and table_owner = 'SCOTT'

0000000060D774A8
select     INDEX_NAME,     BLEVEL BLev,     LEAF_BLOCKS,     DISTINCT_KEYS,     NUM_ROWS,     AVG_LEAF_BLOCKS_PER_KEY,     AVG_DATA_BLO
CKS_PER_KEY,     CLUSTERING_FACTOR,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_indexes t where     table_n
ame = 'EMP' and table_owner = 'SCOTT'

0000000060D2F048
d2cc4491c3723bcdccbd01029761d091

0000000092C39220
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("S") FULL("S")
NO_PARALLEL_INDEX("S") */ 1 AS C1, CASE WHEN "S"."STATUS"=:B1 THEN 1 ELSE 0 END AS C2 FROM "SYS"."STATS_TARGET$" "S") SAMPLESUB

0000000060EAE530
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("S") FULL("S")
NO_PARALLEL_INDEX("S") */ 1 AS C1, CASE WHEN "S"."STATUS"=:B1 THEN 1 ELSE 0 END AS C2 FROM "SYS"."STATS_TARGET$" "S") SAMPLESUB

000000008B0D0728
e42471378fa8732fc7c01a8290d18d06

000000008B0E5348
SELECT COUNT(*) FROM

0000000060D653E8 SYS
AQ$_MESSAGE_TYPES

0000000088C97E98
SELECT W.SQL_ID, W.S

0000000092CAB308
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

0000000092CB0E18
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

0000000092C99978
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

000000008B0FEC58
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

000000008CB86A78
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

000000008B30C2A8
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

000000008B251F68
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

000000008B2ABA58
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

0000000088F73140
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

0000000092D54C50
SELECT a.name task_name,   nvl(e.status, a.status) status#,   a.last_exec_name as last_execution,   e.exec_type_id as execution_type# F
ROM wri$_adv_tasks a,      wri$_adv_executions e WHERE a.id = e.task_id(+)   and a.advisor_id = e.advisor_id(+)   and a.last_exec_name
= e.name(+)   and a.id = :1

0000000088E8D0A0 SYS
WRH$_LATCH_MISSES_SUMMARY_PK

000000008CA82768 $BUILD$
23c8387a 77b6595

000000008B0D2488
68c1a35216e832e249ab29eee9487ba4

000000006534E000
10213b4b8c81c47f90eb94624221cec

000000008B20BBA8 ORACLE_OCM
GV$INSTANCE

0000000060FFE2C0
b63dac9a2502df173fe2b6963518eb02

000000008CADD138
SELECT USERENV('TERM

0000000060E54360
select /*+  no_paral

0000000088F61DD8
INSERT INTO BSLN_BAS

000000008CBB3830
f3d9ee84473d88edcbbe44ec2b6ab770

0000000088C838C8 EXFSYS
DBMS_EXPFIL_UTL

000000008B035A88
DECLARE   stmt    VARCHAR2(256); BEGIN    IF  sys.dbms_standard.dictionary_obj_type = 'USER'  THEN     stmt := 'DELETE FROM SDO_NETWORK
_METADATA_TABLE WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);      stmt
:= 'DELETE FROM SDO_NETWORK_CONSTRAINTS WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictiona
ry_obj_name);      stmt := 'DELETE FROM SDO_NETWORK_LOCKS_WM WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.d
bms_standard.dictionary_obj_name);      stmt := 'DELETE FROM SDO_NETWORK_USER_DATA WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt
 using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);      --lrg-3417773     stmt := 'DELETE FROM SDO_NETWORK_HISTORIES WHERE OWNER
= :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);      stmt := 'DELETE FROM SDO_NETWORK_TIME
STAMPS WHERE OWNER = :name';     EXECUTE IMMEDIATE stmt

0000000088FAE9C8
DECLARE   stmt    VARCHAR2(256); BEGIN    IF  sys.dbms_standard.dictionary_obj_type = 'USER'  THEN     stmt := 'DELETE FROM SDO_NETWORK
_METADATA_TABLE WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);      stmt
:= 'DELETE FROM SDO_NETWORK_CONSTRAINTS WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictiona
ry_obj_name);      stmt := 'DELETE FROM SDO_NETWORK_LOCKS_WM WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.d
bms_standard.dictionary_obj_name);      stmt := 'DELETE FROM SDO_NETWORK_USER_DATA WHERE SDO_OWNER = :name';     EXECUTE IMMEDIATE stmt
 using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);      --lrg-3417773     stmt := 'DELETE FROM SDO_NETWORK_HISTORIES WHERE OWNER
= :name';     EXECUTE IMMEDIATE stmt using NLS_UPPER(sys.dbms_standard.dictionary_obj_name);      stmt := 'DELETE FROM SDO_NETWORK_TIME
STAMPS WHERE OWNER = :name';     EXECUTE IMMEDIATE stmt

000000008CA004C0
7df68573e5d0a20a8692d0cdcedea657

0000000060C5A848 $BUILD$
3114542225975cd6

0000000092C60818 $BUILD$
a4e8181bd23710ff

0000000088D40AB8 $BUILD$
a068855d1c5ec92f

000000008B29C790
869107fdb338c3c08279f961b4cd29d2

000000008CA60AF8 $BUILD$
61c9c355 510564c

0000000088C4E870
13b84f2b94e714ecc5213a75d5e7a55

0000000088E79120
62815aefd38d89e6709fc2c9b1efc8d

000000008B127BD8 PUBLIC
KU$_STATUS

000000008B25D470 APEX_030200
WWV_FLOW_AJAX

000000008CB4EC68 SYS
KOTAD$

00000000653D9670
select  PRIV_NUMBER from GV$ENABLEDPRIVS where inst_id = USERENV('Instance')

00000000652DFF20
select  PRIV_NUMBER from GV$ENABLEDPRIVS where inst_id = USERENV('Instance')

000000008C927038
SELECT VALUE FROM WR

000000008CACBAC8
7f28acbbc78981c3e36a87ec109bb8c6

0000000088F0A228
SELECT snap_id , TS#, OBJ#, DATAOBJ# FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.TSN_KEWRSEG  TS#, t1.OBJN_KEWRS
EG  OBJ#, t1.OBJD_KEWRSEG  DATAOBJ# FROM X$KEWRTSEGSTAT t1, WRH$_SEG_STAT_OBJ t2      WHERE t2.dbid(+)  = :dbid  AND t2.TS#(+) = t1.TSN
_KEWRSEG AND t2.OBJ#(+) = t1.OBJN_KEWRSEG AND t2.DATAOBJ#(+) = t1.OBJD_KEWRSEG) WHERE nvl(snap_id, 0) < :snap_id

0000000088D143C0
SELECT snap_id , TS#, OBJ#, DATAOBJ# FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.TSN_KEWRSEG  TS#, t1.OBJN_KEWRS
EG  OBJ#, t1.OBJD_KEWRSEG  DATAOBJ# FROM X$KEWRTSEGSTAT t1, WRH$_SEG_STAT_OBJ t2      WHERE t2.dbid(+)  = :dbid  AND t2.TS#(+) = t1.TSN
_KEWRSEG AND t2.OBJ#(+) = t1.OBJN_KEWRSEG AND t2.DATAOBJ#(+) = t1.OBJD_KEWRSEG) WHERE nvl(snap_id, 0) < :snap_id

0000000092CAB0A8
SELECT snap_id , TS#, OBJ#, DATAOBJ# FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.TSN_KEWRSEG  TS#, t1.OBJN_KEWRS
EG  OBJ#, t1.OBJD_KEWRSEG  DATAOBJ# FROM X$KEWRTSEGSTAT t1, WRH$_SEG_STAT_OBJ t2      WHERE t2.dbid(+)  = :dbid  AND t2.TS#(+) = t1.TSN
_KEWRSEG AND t2.OBJ#(+) = t1.OBJN_KEWRSEG AND t2.DATAOBJ#(+) = t1.OBJD_KEWRSEG) WHERE nvl(snap_id, 0) < :snap_id

0000000088F0A6A8
SELECT snap_id , TS#, OBJ#, DATAOBJ# FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.TSN_KEWRSEG  TS#, t1.OBJN_KEWRS
EG  OBJ#, t1.OBJD_KEWRSEG  DATAOBJ# FROM X$KEWRTSEGSTAT t1, WRH$_SEG_STAT_OBJ t2      WHERE t2.dbid(+)  = :dbid  AND t2.TS#(+) = t1.TSN
_KEWRSEG AND t2.OBJ#(+) = t1.OBJN_KEWRSEG AND t2.DATAOBJ#(+) = t1.OBJD_KEWRSEG) WHERE nvl(snap_id, 0) < :snap_id

0000000088CA9828
UPDATE WRI$_ADV_DEF_

0000000060FECBF0 MDSYS
SDO_STRING2_ARRAY

0000000060F68300
cef0429a290691c83a49a378e3a2d601

000000008B32FA48
SELECT DEST_ID FROM

000000008C88D960
/* SQL Analyze(1) */

000000008CAC80D8
select /*+  no_paral

0000000088F50BC8
87fdf86ca1795cbaa0ff66e4743765fb

000000008CA69AE0 SYS
X$KMGSOP

0000000088CF55D8
DELETE FROM RLM$SCHA

0000000088E366D8 SYS
WRH$_PARAMETER_PK

0000000092CFBB98
5839188172e9899c39db72ca5580d616

0000000060C99C50 $BUILD$
93f51e7ce3800795

000000008CBE6EE8
select l.col#, l.intcol#, l.lobj#, l.ind#, l.ts#, l.file#, l.block#, l.chunk, l.pctversion$, l.flags, l.property, l.retention, l.freepo
ols from lob$ l where l.obj# = :1 order by l.intcol# asc

0000000088D0BB40
select l.col#, l.intcol#, l.lobj#, l.ind#, l.ts#, l.file#, l.block#, l.chunk, l.pctversion$, l.flags, l.property, l.retention, l.freepo
ols from lob$ l where l.obj# = :1 order by l.intcol# asc

0000000088C6A8A0
select l.col#, l.intcol#, l.lobj#, l.ind#, l.ts#, l.file#, l.block#, l.chunk, l.pctversion$, l.flags, l.property, l.retention, l.freepo
ols from lob$ l where l.obj# = :1 order by l.intcol# asc

0000000088D72520
select l.col#, l.intcol#, l.lobj#, l.ind#, l.ts#, l.file#, l.block#, l.chunk, l.pctversion$, l.flags, l.property, l.retention, l.freepo
ols from lob$ l where l.obj# = :1 order by l.intcol# asc

000000008CBE7368
select l.col#, l.intcol#, l.lobj#, l.ind#, l.ts#, l.file#, l.block#, l.chunk, l.pctversion$, l.flags, l.property, l.retention, l.freepo
ols from lob$ l where l.obj# = :1 order by l.intcol# asc

0000000088E278C8
select substrb(dump(

0000000088F0D4A8
SELECT COUNT(*) FROM

00000000652E70B0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  B.NUM_NULLS,  round(100 * B.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000088E2FDA8
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  B.NUM_NULLS,  round(100 * B.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060F06020
43027390c22d7fcdac6ffd8982d61778

000000008B39DDE0
UPDATE SYSTEM.AQ$_QU

00000000652F7DE0
create global tempor

000000008C9D31B0
SELECT RSET_PROP FRO

0000000060FFD710
f2d6cb38a80a635c45c79b2e2a949509

000000008C91F538
SELECT TASK_ID FROM

000000008CB98648
ed4e8a99bcc8103e70660768110b45c7

0000000088F73300
delete from deferred_stg$ where obj# = :1

0000000060EEB6F0
delete from deferred_stg$ where obj# = :1

0000000088CAA428 SYS
PRVT_WORKLOAD

000000008CAC2468 SYS
DBMS_IJOB

0000000092D2A980
1dfe2e0d71483af69e518e533a0a4530

00000000653D9380
851b95fba8cd016555dbe9be48e91b0


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
0000000060DABEF8 SYS
IS_VPD_ENABLED

000000008C8B3CD0
DELETE FROM SYS.SCHE

000000008C867B08
eb888d633cbd2a2b80284a03c730d261

0000000092D124F8
b08a18f166b16334c32b96c14278d620

0000000088E37588 SYS
WRH$_PARAMETER

000000008CB21EA0
 SELECT sqlset_row(sql_id, force_matching_signature,           sql_text, object_list, bind_data, parsing_schema_name,           module,
 action, elapsed_time, cpu_time, buffer_gets,           disk_reads, direct_writes, rows_processed, fetches,           executions, end_o
f_fetch_count, optimizer_cost,           optimizer_env, priority, command_type, first_load_time,           stat_period, active_stat_per
iod, other, plan_hash_value,           sql_plan, bind_list) FROM (  SELECT /*+ first_rows(1) */ sql_id, force_matching_signature, sql_t
ext, cast(NULL as SQL_OBJECTS) object_list, bind_data, parsing_schema_name, module, action, elapsed_time, cpu_time, buffer_gets, disk_r
eads, direct_writes,rows_processed, fetches, executions, end_of_fetch_count, optimizer_cost, optimizer_env,NULL priority, command_type,
 NULL first_load_time, null stat_period, null active_stat_period, xmlelement(                           "other_attrs",
           xmlelement("parsing_user_id",

000000008B30BAD8
 SELECT sqlset_row(sql_id, force_matching_signature,           sql_text, object_list, bind_data, parsing_schema_name,           module,
 action, elapsed_time, cpu_time, buffer_gets,           disk_reads, direct_writes, rows_processed, fetches,           executions, end_o
f_fetch_count, optimizer_cost,           optimizer_env, priority, command_type, first_load_time,           stat_period, active_stat_per
iod, other, plan_hash_value,           sql_plan, bind_list) FROM (  SELECT /*+ first_rows(1) */ sql_id, force_matching_signature, sql_t
ext, cast(NULL as SQL_OBJECTS) object_list, bind_data, parsing_schema_name, module, action, elapsed_time, cpu_time, buffer_gets, disk_r
eads, direct_writes,rows_processed, fetches, executions, end_of_fetch_count, optimizer_cost, optimizer_env,NULL priority, command_type,
 NULL first_load_time, null stat_period, null active_stat_period, xmlelement(                           "other_attrs",
           xmlelement("parsing_user_id",

0000000088E5EDF8
 SELECT sqlset_row(sql_id, force_matching_signature,           sql_text, object_list, bind_data, parsing_schema_name,           module,
 action, elapsed_time, cpu_time, buffer_gets,           disk_reads, direct_writes, rows_processed, fetches,           executions, end_o
f_fetch_count, optimizer_cost,           optimizer_env, priority, command_type, first_load_time,           stat_period, active_stat_per
iod, other, plan_hash_value,           sql_plan, bind_list) FROM (  SELECT /*+ first_rows(1) */ sql_id, force_matching_signature, sql_t
ext, cast(NULL as SQL_OBJECTS) object_list, bind_data, parsing_schema_name, module, action, elapsed_time, cpu_time, buffer_gets, disk_r
eads, direct_writes,rows_processed, fetches, executions, end_of_fetch_count, optimizer_cost, optimizer_env,NULL priority, command_type,
 NULL first_load_time, null stat_period, null active_stat_period, xmlelement(                           "other_attrs",
           xmlelement("parsing_user_id",

0000000088F7EDE8
 SELECT sqlset_row(sql_id, force_matching_signature,           sql_text, object_list, bind_data, parsing_schema_name,           module,
 action, elapsed_time, cpu_time, buffer_gets,           disk_reads, direct_writes, rows_processed, fetches,           executions, end_o
f_fetch_count, optimizer_cost,           optimizer_env, priority, command_type, first_load_time,           stat_period, active_stat_per
iod, other, plan_hash_value,           sql_plan, bind_list) FROM (  SELECT /*+ first_rows(1) */ sql_id, force_matching_signature, sql_t
ext, cast(NULL as SQL_OBJECTS) object_list, bind_data, parsing_schema_name, module, action, elapsed_time, cpu_time, buffer_gets, disk_r
eads, direct_writes,rows_processed, fetches, executions, end_of_fetch_count, optimizer_cost, optimizer_env,NULL priority, command_type,
 NULL first_load_time, null stat_period, null active_stat_period, xmlelement(                           "other_attrs",
           xmlelement("parsing_user_id",

0000000088C8A528
INSERT INTO WRI$_SQL

0000000088DFF038
insert into WRH$_MUTEX_SLEEP    (snap_id, dbid, instance_number,     mutex_type, location, sleeps, wait_time) select     :snap_id, :dbi
d, :instance_number,     mutex_type, location, sleeps, wait_time  from    v$mutex_sleep  where    sleeps > 0 order by    mutex_type, lo
cation

000000008C901A50
insert into WRH$_MUTEX_SLEEP    (snap_id, dbid, instance_number,     mutex_type, location, sleeps, wait_time) select     :snap_id, :dbi
d, :instance_number,     mutex_type, location, sleeps, wait_time  from    v$mutex_sleep  where    sleeps > 0 order by    mutex_type, lo
cation

000000008B26FDA8
insert into WRH$_MUTEX_SLEEP    (snap_id, dbid, instance_number,     mutex_type, location, sleeps, wait_time) select     :snap_id, :dbi
d, :instance_number,     mutex_type, location, sleeps, wait_time  from    v$mutex_sleep  where    sleeps > 0 order by    mutex_type, lo
cation

000000008B0DDDF8
insert into WRH$_MUTEX_SLEEP    (snap_id, dbid, instance_number,     mutex_type, location, sleeps, wait_time) select     :snap_id, :dbi
d, :instance_number,     mutex_type, location, sleeps, wait_time  from    v$mutex_sleep  where    sleeps > 0 order by    mutex_type, lo
cation

000000008B37CB90
insert into WRH$_MUTEX_SLEEP    (snap_id, dbid, instance_number,     mutex_type, location, sleeps, wait_time) select     :snap_id, :dbi
d, :instance_number,     mutex_type, location, sleeps, wait_time  from    v$mutex_sleep  where    sleeps > 0 order by    mutex_type, lo
cation

0000000088DFF4B8
insert into WRH$_MUTEX_SLEEP    (snap_id, dbid, instance_number,     mutex_type, location, sleeps, wait_time) select     :snap_id, :dbi
d, :instance_number,     mutex_type, location, sleeps, wait_time  from    v$mutex_sleep  where    sleeps > 0 order by    mutex_type, lo
cation

000000008C969D20 SYS
LOGMNRGGC_TRIGGER

0000000060F01BE0 APEX_030200
WWV_FLOW_ID

000000008B132D90
SELECT COUNT(*) FROM

000000008B318458
SELECT P.VALUE FROM

0000000060EB3D10
67bc5e8971ecd4183b03184b4aca823a

0000000088DFB098 XDB
XD5Lb2D7KYEibgQ6yq6ArGxA==

0000000060E671F8
SELECT DBID, BASELIN

000000008B18E080
b7ada89eb959bc13f558c0479a173b7

0000000092D513D8
9d54e2404ea4561ac8c82e778b29ccb8

000000008B3E69C0 SYS
V$MUTEX_SLEEP

0000000088EA8DC0
98118df7be2a40d1248f5ff8c773b0ff

00000000652B3E20
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  A.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(A.NUM_ROWS,0,1,A.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060E634F0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  A.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(A.NUM_ROWS,0,1,A.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000092C404B8 SYS
GV$EVENT_NAME

0000000088D85AF8
45c9f87ddf84fa0b66d36f527a0d369

000000008CB36568 SYS
KET$_CLIENT_TASKS

0000000060D52438 SYS
V_$SGA_DYNAMIC_COMPONENTS

000000008B108348
UPDATE STATS_TARGET$ SET FLAGS = CASE WHEN STATUS = :B3 THEN CASE WHEN BITAND(FLAGS, :B7 ) = :B7 THEN :B7 ELSE BITAND(FLAGS, :B7 ) + 1
END ELSE 0 END + CASE WHEN STATUS IN (:B4 , :B3 ) THEN :B6 ELSE 0 END, STATUS = CASE WHEN STATUS IN (:B4 , :B3 ) THEN :B5 ELSE STATUS E
ND WHERE STATUS IN (:B4 , :B3 ) AND SID = :B2 AND SERIAL# = :B1

0000000088FBE788
UPDATE STATS_TARGET$ SET FLAGS = CASE WHEN STATUS = :B3 THEN CASE WHEN BITAND(FLAGS, :B7 ) = :B7 THEN :B7 ELSE BITAND(FLAGS, :B7 ) + 1
END ELSE 0 END + CASE WHEN STATUS IN (:B4 , :B3 ) THEN :B6 ELSE 0 END, STATUS = CASE WHEN STATUS IN (:B4 , :B3 ) THEN :B5 ELSE STATUS E
ND WHERE STATUS IN (:B4 , :B3 ) AND SID = :B2 AND SERIAL# = :B1

000000008B093300
UPDATE STATS_TARGET$ SET FLAGS = CASE WHEN STATUS = :B3 THEN CASE WHEN BITAND(FLAGS, :B7 ) = :B7 THEN :B7 ELSE BITAND(FLAGS, :B7 ) + 1
END ELSE 0 END + CASE WHEN STATUS IN (:B4 , :B3 ) THEN :B6 ELSE 0 END, STATUS = CASE WHEN STATUS IN (:B4 , :B3 ) THEN :B5 ELSE STATUS E
ND WHERE STATUS IN (:B4 , :B3 ) AND SID = :B2 AND SERIAL# = :B1

000000008B323208
SELECT NEXT_RUN_DATE

0000000092CDDD38 SYS
C_OBJ#

0000000088EE0C80
INSERT INTO SYS.SCHE

0000000060D086B8
f8bcbf9a47f90fc973cee8af93d9f68

000000008B3B6AB8
SELECT OBJECT_NAME,

0000000088F4AE78
991e8a29534028cec2ed2cc4bbe1a89

000000008C95D9E0
delete from WRH$_STREAMS_POOL_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_i
d >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B393F50
delete from WRH$_STREAMS_POOL_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_i
d >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B1A2448
SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME)
 SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('O
WBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APE
X_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM
 < 21

000000008B1CD9D8
SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME)
 SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('O
WBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APE
X_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM
 < 21

0000000060FC5F70
SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME)
 SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('O
WBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APE
X_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM
 < 21

0000000088D0D0F0
7f237d7adf7804f3c376f77bd8116687

0000000088EF7EB0 $BUILD$
3e12d8065759f6e6

000000008B28DB78 SYS
DBA_HIST_SQLCOMMAND_NAME

0000000060EC3530 $BUILD$
b4e581c13afd0204

0000000088E34D78
insert into wrh$_process_memory_summary    (snap_id, dbid, instance_number,     category, num_processes, non_zero_allocs,     used_tota
l, allocated_total,     allocated_stddev, allocated_max, max_allocated_max)  select    :snap_id, :dbid, :instance_number,    category,
   COUNT(*)                     num_processes,    SUM(DECODE(allocated,0,0,1)) non_zero_allocs,    SUM(used)                    used_to
tal,    SUM(allocated)               allocated_total,    STDDEV(allocated)            allocated_stddev,    MAX(allocated)
 allocated_max,    MAX(max_allocated)           max_allocated_max  from v$process_memory    group by category

0000000092EC0400
insert into wrh$_process_memory_summary    (snap_id, dbid, instance_number,     category, num_processes, non_zero_allocs,     used_tota
l, allocated_total,     allocated_stddev, allocated_max, max_allocated_max)  select    :snap_id, :dbid, :instance_number,    category,
   COUNT(*)                     num_processes,    SUM(DECODE(allocated,0,0,1)) non_zero_allocs,    SUM(used)                    used_to
tal,    SUM(allocated)               allocated_total,    STDDEV(allocated)            allocated_stddev,    MAX(allocated)
 allocated_max,    MAX(max_allocated)           max_allocated_max  from v$process_memory    group by category

000000008B263348
insert into wrh$_process_memory_summary    (snap_id, dbid, instance_number,     category, num_processes, non_zero_allocs,     used_tota
l, allocated_total,     allocated_stddev, allocated_max, max_allocated_max)  select    :snap_id, :dbid, :instance_number,    category,
   COUNT(*)                     num_processes,    SUM(DECODE(allocated,0,0,1)) non_zero_allocs,    SUM(used)                    used_to
tal,    SUM(allocated)               allocated_total,    STDDEV(allocated)            allocated_stddev,    MAX(allocated)
 allocated_max,    MAX(max_allocated)           max_allocated_max  from v$process_memory    group by category

0000000088F822C8
insert into wrh$_process_memory_summary    (snap_id, dbid, instance_number,     category, num_processes, non_zero_allocs,     used_tota
l, allocated_total,     allocated_stddev, allocated_max, max_allocated_max)  select    :snap_id, :dbid, :instance_number,    category,
   COUNT(*)                     num_processes,    SUM(DECODE(allocated,0,0,1)) non_zero_allocs,    SUM(used)                    used_to
tal,    SUM(allocated)               allocated_total,    STDDEV(allocated)            allocated_stddev,    MAX(allocated)
 allocated_max,    MAX(max_allocated)           max_allocated_max  from v$process_memory    group by category

0000000088E351F8
insert into wrh$_process_memory_summary    (snap_id, dbid, instance_number,     category, num_processes, non_zero_allocs,     used_tota
l, allocated_total,     allocated_stddev, allocated_max, max_allocated_max)  select    :snap_id, :dbid, :instance_number,    category,
   COUNT(*)                     num_processes,    SUM(DECODE(allocated,0,0,1)) non_zero_allocs,    SUM(used)                    used_to
tal,    SUM(allocated)               allocated_total,    STDDEV(allocated)            allocated_stddev,    MAX(allocated)
 allocated_max,    MAX(max_allocated)           max_allocated_max  from v$process_memory    group by category

000000008CB9A978
38c690f779652a8a91513a471b053d43

000000008CA74C70
402565722d47eca58e6b32bd5c88a036

000000008B19E3F8
1d4a51a2c89ab6b07a3c64bebc5573b6

000000008B138A88 $BUILD$
26872f30955be8a9

0000000060E9D2B0
SELECT * FROM DBA_AP

0000000060F015E0
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;

0000000088EAC7D0
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;

0000000060E857A0
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;

000000008CA43E50
63fbae574ecdad5efec5f59299349c6a

000000008B196D38
select o.name, o.owner# from obj$ o, type$ t  where o.oid$ = t.tvoid and  bitand(t.properties,8388608) = 8388608 and (sysdate-o.ctime)
> 0.0007

000000008CB27C58
select o.name, o.owner# from obj$ o, type$ t  where o.oid$ = t.tvoid and  bitand(t.properties,8388608) = 8388608 and (sysdate-o.ctime)
> 0.0007

0000000092D45938
select o.name, o.owner# from obj$ o, type$ t  where o.oid$ = t.tvoid and  bitand(t.properties,8388608) = 8388608 and (sysdate-o.ctime)
> 0.0007

0000000088EC2450
16adef17c456837c99a0554544d3fd04

0000000088F4AC78
4ba4814029e5a63b62f86737de4ae3c1

0000000088F6A048 SYS
DBA_SCHEDULER_CHAIN_RULES

000000008CA4C070
beb90cb33b11613359bc8b95236136cc

0000000088DCB0A8 SYS
GV$PROCESS

0000000060D98188 SYS
ORA_DICT_OBJ_TYPE

000000008B35E3B0
select substrb(dump(

0000000060F35CC0
SELECT SO.SUBNAME FR

000000008B337178
7b2938412f02c3c76468ffcf3327b61

0000000088E7A6F0 SYS
GV$ARCHIVED_LOG

0000000065355A00 MDSYS
SDO_GEOR_DDL__TABLE$$

000000008C88B080 SYS
V$BACKUP_REDOLOG

0000000060D09588 SYS
DBMS_STREAMS_SM

0000000088E105E8 SYS
X$KEWRTSQLTEXT

000000008C93C668 SYS
DBMS_ADVISOR

000000008CB17F68
update seq$ set increment$=:2,minvalue=:3,maxvalue=:4,cycle#=:5,order$=:6,cache=:7,highwater=:8,audit$=:9,flags=:10 where obj#=:1

0000000088C5A008
update seq$ set increment$=:2,minvalue=:3,maxvalue=:4,cycle#=:5,order$=:6,cache=:7,highwater=:8,audit$=:9,flags=:10 where obj#=:1

0000000088D41028
update seq$ set increment$=:2,minvalue=:3,maxvalue=:4,cycle#=:5,order$=:6,cache=:7,highwater=:8,audit$=:9,flags=:10 where obj#=:1

000000008CB183E8
update seq$ set increment$=:2,minvalue=:3,maxvalue=:4,cycle#=:5,order$=:6,cache=:7,highwater=:8,audit$=:9,flags=:10 where obj#=:1

0000000060EA9C60
b8c386265b6c44d09f649250e82c6e6c

0000000088C90C48
DELETE WRI$_SQLSET_D

000000008CB3B1D8
select /*+ index(idl_ub1$ i_idl_ub11) +*/ piece#,length,piece from idl_ub1$ where obj#=:1 and part=:2 and version=:3 order by piece#

0000000088CF6458
select /*+ index(idl_ub1$ i_idl_ub11) +*/ piece#,length,piece from idl_ub1$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB8DE58
select /*+ index(idl_ub1$ i_idl_ub11) +*/ piece#,length,piece from idl_ub1$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008C8B3B00
select /*+ index(idl_ub1$ i_idl_ub11) +*/ piece#,length,piece from idl_ub1$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB3B658
select /*+ index(idl_ub1$ i_idl_ub11) +*/ piece#,length,piece from idl_ub1$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008C838AD8
select          T.INST_ID,          to_number(decode(CUR_EST_RCV_READS, -1, NULL, CUR_EST_RCV_READS)),          to_number(decode(ACTUAL
_REDO_BLKS, -1, NULL, ACTUAL_REDO_BLKS)),          to_number(decode(MIN_LAG, 0, NULL, MIN_LAG)),          to_number(decode(LOGFILESZ, 0
, NULL, LOGFILESZ)),          to_number(decode(CT_LAG, 0, NULL, CT_LAG)),          to_number(decode(CI_LAG, 0, NULL, CI_LAG)),
 to_number(decode(ACTUAL_REDO_BLKS, 0, NULL, NULL)),          INUSE_NONRAC_MTTR_SEC+INUSE_RAC_MTTR_SEC,          to_number(decode(CUR_E
ST_IR_SEC, -1, CUR_EST_NONRAC_MTTR_SEC,                           CUR_EST_IR_SEC)),          (select ksusgstv - (select ksusgstv from X
$KSUSGSTA where          ksusdnam='physical writes non checkpoint' and inst_id=t.inst_id)          from X$KSUSGSTA where ksusdnam = 'ph
ysical writes' and          inst_id=t.inst_id),          (select logfile_size from x$kctlax where indx=0 and          inst_id=t.inst_id
),          to_number(decode(CUR_EST_CA_SEC, -1, NULL,

0000000088EA9E70
select          T.INST_ID,          to_number(decode(CUR_EST_RCV_READS, -1, NULL, CUR_EST_RCV_READS)),          to_number(decode(ACTUAL
_REDO_BLKS, -1, NULL, ACTUAL_REDO_BLKS)),          to_number(decode(MIN_LAG, 0, NULL, MIN_LAG)),          to_number(decode(LOGFILESZ, 0
, NULL, LOGFILESZ)),          to_number(decode(CT_LAG, 0, NULL, CT_LAG)),          to_number(decode(CI_LAG, 0, NULL, CI_LAG)),
 to_number(decode(ACTUAL_REDO_BLKS, 0, NULL, NULL)),          INUSE_NONRAC_MTTR_SEC+INUSE_RAC_MTTR_SEC,          to_number(decode(CUR_E
ST_IR_SEC, -1, CUR_EST_NONRAC_MTTR_SEC,                           CUR_EST_IR_SEC)),          (select ksusgstv - (select ksusgstv from X
$KSUSGSTA where          ksusdnam='physical writes non checkpoint' and inst_id=t.inst_id)          from X$KSUSGSTA where ksusdnam = 'ph
ysical writes' and          inst_id=t.inst_id),          (select logfile_size from x$kctlax where indx=0 and          inst_id=t.inst_id
),          to_number(decode(CUR_EST_CA_SEC, -1, NULL,

000000008B082840
SELECT PO.SUBNAME PN

0000000060E6D900
call dbms_stats.gather_database_stats_job_proc (  )

0000000060FE4C10
call dbms_stats.gather_database_stats_job_proc (  )

000000008C89C108
SELECT STREAMS_NAME

0000000088C89128
DELETE WRI$_SQLSET_P

000000008C9092F8
10691826517852517234

0000000060E53A80
5e837e99c6685a7c27206de6a47b5c87

000000008B184B58
UPDATE SYSTEM.AQ$_QU

0000000060F22DB0
291b144e47de1158633f0903bdea4b07

000000008B235B10 $BUILD$
62c382876ffc46b4

000000008C92CC68
SELECT NAME FROM SYS

0000000088DC3570
select le.inst_id, le.lenum, le.lethr, le.leseq, le.lesiz*le.lebsz, le.lebsz, ledup, decode(bitand(le.leflg,1),0,'NO','YES'), decode(bi
tand(le.leflg,24), 8, 'CURRENT',                            16,'CLEARING',                            24,'CLEARING_CURRENT',        dec
ode(sign(leseq),0,'UNUSED',        decode(sign((to_number(rt.rtckp_scn)-to_number(le.lenxs))*        bitand(rt.rtsta,2)*(64-bitand(rtst
a, 64))),        -1,'ACTIVE','INACTIVE'))), to_number(le.lelos), to_date(le.lelot,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), to_n
umber(le.lenxs), to_date(le.lenxt,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian')  from x$kccle le, x$kccrt rt where le.ledup!=0 and le
.lethr=rt.rtnum and  le.inst_id = rt.inst_id

0000000088F06678
select le.inst_id, le.lenum, le.lethr, le.leseq, le.lesiz*le.lebsz, le.lebsz, ledup, decode(bitand(le.leflg,1),0,'NO','YES'), decode(bi
tand(le.leflg,24), 8, 'CURRENT',                            16,'CLEARING',                            24,'CLEARING_CURRENT',        dec
ode(sign(leseq),0,'UNUSED',        decode(sign((to_number(rt.rtckp_scn)-to_number(le.lenxs))*        bitand(rt.rtsta,2)*(64-bitand(rtst
a, 64))),        -1,'ACTIVE','INACTIVE'))), to_number(le.lelos), to_date(le.lelot,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), to_n
umber(le.lenxs), to_date(le.lenxt,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian')  from x$kccle le, x$kccrt rt where le.ledup!=0 and le
.lethr=rt.rtnum and  le.inst_id = rt.inst_id

000000008B369158 SYS
GV$SHARED_SERVER

0000000060F21460
bfab01341cf499d986d9475d272da1a

000000008C939290
SELECT ATTRNAME, EVT

000000008C865798
SELECT COUNT(*) FROM

000000008CB60740
select parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniexts, defextsize, defmin
exts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, mod(spare2, 256) subparttype, mod(trunc(spare2/256), 256) subpart
keycols, mod(trunc(spare2/65536), 65536) defsubpartcnt, mod(trunc(spare2/4294967296), 256) defhscflags, mod(spare3, 256) interval_dty,
rowid, defmaxsize from partobj$ where obj# = :1

0000000088CAEA88
select parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniexts, defextsize, defmin
exts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, mod(spare2, 256) subparttype, mod(trunc(spare2/256), 256) subpart
keycols, mod(trunc(spare2/65536), 65536) defsubpartcnt, mod(trunc(spare2/4294967296), 256) defhscflags, mod(spare3, 256) interval_dty,
rowid, defmaxsize from partobj$ where obj# = :1

0000000092C8B128
select parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniexts, defextsize, defmin
exts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, mod(spare2, 256) subparttype, mod(trunc(spare2/256), 256) subpart
keycols, mod(trunc(spare2/65536), 65536) defsubpartcnt, mod(trunc(spare2/4294967296), 256) defhscflags, mod(spare3, 256) interval_dty,
rowid, defmaxsize from partobj$ where obj# = :1

000000008B1C65C0
select parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniexts, defextsize, defmin
exts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, mod(spare2, 256) subparttype, mod(trunc(spare2/256), 256) subpart
keycols, mod(trunc(spare2/65536), 65536) defsubpartcnt, mod(trunc(spare2/4294967296), 256) defhscflags, mod(spare3, 256) interval_dty,
rowid, defmaxsize from partobj$ where obj# = :1

0000000092C8BD08
select parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniexts, defextsize, defmin
exts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, mod(spare2, 256) subparttype, mod(trunc(spare2/256), 256) subpart
keycols, mod(trunc(spare2/65536), 65536) defsubpartcnt, mod(trunc(spare2/4294967296), 256) defhscflags, mod(spare3, 256) interval_dty,
rowid, defmaxsize from partobj$ where obj# = :1

000000008CB61418
select parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniexts, defextsize, defmin
exts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, mod(spare2, 256) subparttype, mod(trunc(spare2/256), 256) subpart
keycols, mod(trunc(spare2/65536), 65536) defsubpartcnt, mod(trunc(spare2/4294967296), 256) defhscflags, mod(spare3, 256) interval_dty,
rowid, defmaxsize from partobj$ where obj# = :1

0000000060D2B2C8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("QT") FULL("QT"
) NO_PARALLEL_INDEX("QT") */ 1 AS C1, CASE WHEN "QT"."STATE"<2 THEN 1 ELSE 0 END AS C2 FROM "SYS"."SCHEDULER$_EVENT_QTAB" "QT") SAMPLES
UB

0000000060D2B748
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("QT") FULL("QT"
) NO_PARALLEL_INDEX("QT") */ 1 AS C1, CASE WHEN "QT"."STATE"<2 THEN 1 ELSE 0 END AS C2 FROM "SYS"."SCHEDULER$_EVENT_QTAB" "QT") SAMPLES
UB

000000008B078BB0 SYS
SNAP$

0000000092D6EF08
      declare          vsn  varchar2(20);             begin               vsn := dbms_rcvman.getPackageVersion;               :pkg_vsn:
pkg_vsn_i := vsn;               if vsn is not null then                  :pkg_vsnub4 :=                    to_number(substr(vsn,1,2) ||
 substr(vsn,4,2) ||                              substr(vsn,7,2) || nvl(substr(vsn,10,2),'00'));               end if;             end;

0000000060FECE10
      declare          vsn  varchar2(20);             begin               vsn := dbms_rcvman.getPackageVersion;               :pkg_vsn:
pkg_vsn_i := vsn;               if vsn is not null then                  :pkg_vsnub4 :=                    to_number(substr(vsn,1,2) ||
 substr(vsn,4,2) ||                              substr(vsn,7,2) || nvl(substr(vsn,10,2),'00'));               end if;             end;

000000008CAB2578
52cdc05399e55f257edaf456f0dbeddc

000000008CA95B10
65d094a8e2bd0d2042b28fa4f6702664

000000008B197358
SELECT VALUE FROM V$

000000008B2A05E8
update wrm$_wr_control    set snap_interval = :bind1, snapint_num = :bind2, retention = :bind3,      retention_num = :bind4, most_recen
t_snap_id = :bind5,      most_recent_snap_time = :bind6, mrct_snap_time_num = :bind7,      status_flag = :bind8, most_recent_purge_time
 = :bind9,      mrct_purge_time_num = :bind10,      most_recent_split_id = :bind11, most_recent_split_time = :bind12,      swrf_version
 = :bind13, registration_status = :bind14,      mrct_baseline_id = :bind15, topnsql = :bind16, mrct_bltmpl_id = :bind17    where dbid =
 :dbid

0000000092C61F58
update wrm$_wr_control    set snap_interval = :bind1, snapint_num = :bind2, retention = :bind3,      retention_num = :bind4, most_recen
t_snap_id = :bind5,      most_recent_snap_time = :bind6, mrct_snap_time_num = :bind7,      status_flag = :bind8, most_recent_purge_time
 = :bind9,      mrct_purge_time_num = :bind10,      most_recent_split_id = :bind11, most_recent_split_time = :bind12,      swrf_version
 = :bind13, registration_status = :bind14,      mrct_baseline_id = :bind15, topnsql = :bind16, mrct_bltmpl_id = :bind17    where dbid =
 :dbid

000000008B1DE328
update wrm$_wr_control    set snap_interval = :bind1, snapint_num = :bind2, retention = :bind3,      retention_num = :bind4, most_recen
t_snap_id = :bind5,      most_recent_snap_time = :bind6, mrct_snap_time_num = :bind7,      status_flag = :bind8, most_recent_purge_time
 = :bind9,      mrct_purge_time_num = :bind10,      most_recent_split_id = :bind11, most_recent_split_time = :bind12,      swrf_version
 = :bind13, registration_status = :bind14,      mrct_baseline_id = :bind15, topnsql = :bind16, mrct_bltmpl_id = :bind17    where dbid =
 :dbid

0000000060E40910
update wrm$_wr_control    set snap_interval = :bind1, snapint_num = :bind2, retention = :bind3,      retention_num = :bind4, most_recen
t_snap_id = :bind5,      most_recent_snap_time = :bind6, mrct_snap_time_num = :bind7,      status_flag = :bind8, most_recent_purge_time
 = :bind9,      mrct_purge_time_num = :bind10,      most_recent_split_id = :bind11, most_recent_split_time = :bind12,      swrf_version
 = :bind13, registration_status = :bind14,      mrct_baseline_id = :bind15, topnsql = :bind16, mrct_bltmpl_id = :bind17    where dbid =
 :dbid

000000008B2A3308
update wrm$_wr_control    set snap_interval = :bind1, snapint_num = :bind2, retention = :bind3,      retention_num = :bind4, most_recen
t_snap_id = :bind5,      most_recent_snap_time = :bind6, mrct_snap_time_num = :bind7,      status_flag = :bind8, most_recent_purge_time
 = :bind9,      mrct_purge_time_num = :bind10,      most_recent_split_id = :bind11, most_recent_split_time = :bind12,      swrf_version
 = :bind13, registration_status = :bind14,      mrct_baseline_id = :bind15, topnsql = :bind16, mrct_bltmpl_id = :bind17    where dbid =
 :dbid

0000000092C3B568
SELECT W.REPAIR_TYPE

0000000060CBF658 SYS
DBA_PROPAGATION

000000008CA823F8
10a0910e37b72cf612dd6f811a29689a

000000008B3A6918
SELECT DBID FROM DBA

0000000060F18160 APEX_030200
WWV_FLOW_DML

000000008CAEA0D8 SYS
WRI$_ADV_COMPRESSION_T

000000008CBF1F10
SELECT ID FROM WWV_F

0000000060E007B0
a02ba15d175cdaf3619f3dce8fbdd8a7

0000000092D7FD88
select substrb(dump(

000000008B0D7D48
4dc5e75b2e64564c1a016bbe951337ba

0000000060CA95B0
31a0e3f721778e2af3ac47a82286b822

000000008CA63978
select sys.dbms_standard.dictionary_obj_name from dual

0000000088D28788
select sys.dbms_standard.dictionary_obj_name from dual

000000008CBC4DD8
select sys.dbms_standard.dictionary_obj_name from dual

000000008CA63DF8
select sys.dbms_standard.dictionary_obj_name from dual

000000008C866908 SYS
DBMS_INTERNAL_LOGSTDBY

000000008B053120
SELECT NULL_CNT FROM

000000008C9887D8
dae7b38ee5c0c01df01d71c085963ce2

0000000060D3D540
a5d0689f23e4d1dacadc3ef7eae9704a

0000000092CC1DF8 SYS
PROXY_DATA$

0000000060F42760 SYS
X$KEWRTB

000000008C8C81B8
ae48e77cdf474a4e7c7d6a2f410b1c4

0000000092CC23F8
SELECT /*+ rule */ U.NAME, OI.NAME, NULL, NULL, DECODE(BITAND(I.FLAGS, 2048),2048,2,0), DECODE(BITAND(I.FLAGS, 64),64,1,0), I.ROWCNT, I
.LEAFCNT, I.DISTKEY, I.LBLKKEY, I.DBLKKEY, I.CLUFAC, I.BLEVEL, I.ANALYZETIME, I.SAMPLESIZE, DECODE(BITAND(I.FLAGS, 128), 128, MOD(TRUNC
(I.PCTTHRES$/256),256), DECODE(I.TYPE#, 4, MOD(TRUNC(I.PCTTHRES$/256),256), NULL)), IST.CACHEDBLK, IST.CACHEHIT, IST.LOGICALREAD, NULL
FROM SYS.USER$ U, SYS.OBJ$ OI, SYS.IND$ I, SYS.IND_STATS$ IST WHERE :B4 IS NULL AND U.NAME = :B3 AND OI.OWNER# = U.USER# AND OI.NAME =
:B2 AND OI.TYPE# = 1 AND OI.OBJ# = I.OBJ# AND I.OBJ# = IST.OBJ# (+) AND (:B1 = 'CACHE_HISTORY' OR (:B1 = 'DATA' AND BITAND(I.FLAGS,2) =
 2) OR (:B1 = 'CACHE' AND IST.OBJ# IS NOT NULL) OR (:B1 = 'ALL' AND (BITAND(I.FLAGS,2) = 2 OR IST.OBJ# IS NOT NULL)) ) UNION ALL SELECT
 U.NAME, OP.NAME, OP.SUBNAME, NULL, DECODE(BITAND(IP.FLAGS, 16),16,2,0), DECODE(BITAND(IP.FLAGS, 8),8,1,0), IP.ROWCNT, IP.LEAFCNT, IP.D
ISTKEY, IP.LBLKKEY, IP.DBLKKEY, IP.CLUFAC, IP.BLEVEL, I

000000008B189AF0
SELECT /*+ rule */ U.NAME, OI.NAME, NULL, NULL, DECODE(BITAND(I.FLAGS, 2048),2048,2,0), DECODE(BITAND(I.FLAGS, 64),64,1,0), I.ROWCNT, I
.LEAFCNT, I.DISTKEY, I.LBLKKEY, I.DBLKKEY, I.CLUFAC, I.BLEVEL, I.ANALYZETIME, I.SAMPLESIZE, DECODE(BITAND(I.FLAGS, 128), 128, MOD(TRUNC
(I.PCTTHRES$/256),256), DECODE(I.TYPE#, 4, MOD(TRUNC(I.PCTTHRES$/256),256), NULL)), IST.CACHEDBLK, IST.CACHEHIT, IST.LOGICALREAD, NULL
FROM SYS.USER$ U, SYS.OBJ$ OI, SYS.IND$ I, SYS.IND_STATS$ IST WHERE :B4 IS NULL AND U.NAME = :B3 AND OI.OWNER# = U.USER# AND OI.NAME =
:B2 AND OI.TYPE# = 1 AND OI.OBJ# = I.OBJ# AND I.OBJ# = IST.OBJ# (+) AND (:B1 = 'CACHE_HISTORY' OR (:B1 = 'DATA' AND BITAND(I.FLAGS,2) =
 2) OR (:B1 = 'CACHE' AND IST.OBJ# IS NOT NULL) OR (:B1 = 'ALL' AND (BITAND(I.FLAGS,2) = 2 OR IST.OBJ# IS NOT NULL)) ) UNION ALL SELECT
 U.NAME, OP.NAME, OP.SUBNAME, NULL, DECODE(BITAND(IP.FLAGS, 16),16,2,0), DECODE(BITAND(IP.FLAGS, 8),8,1,0), IP.ROWCNT, IP.LEAFCNT, IP.D
ISTKEY, IP.LBLKKEY, IP.DBLKKEY, IP.CLUFAC, IP.BLEVEL, I

000000008B08D5D0
SELECT /*+ rule */ U.NAME, OI.NAME, NULL, NULL, DECODE(BITAND(I.FLAGS, 2048),2048,2,0), DECODE(BITAND(I.FLAGS, 64),64,1,0), I.ROWCNT, I
.LEAFCNT, I.DISTKEY, I.LBLKKEY, I.DBLKKEY, I.CLUFAC, I.BLEVEL, I.ANALYZETIME, I.SAMPLESIZE, DECODE(BITAND(I.FLAGS, 128), 128, MOD(TRUNC
(I.PCTTHRES$/256),256), DECODE(I.TYPE#, 4, MOD(TRUNC(I.PCTTHRES$/256),256), NULL)), IST.CACHEDBLK, IST.CACHEHIT, IST.LOGICALREAD, NULL
FROM SYS.USER$ U, SYS.OBJ$ OI, SYS.IND$ I, SYS.IND_STATS$ IST WHERE :B4 IS NULL AND U.NAME = :B3 AND OI.OWNER# = U.USER# AND OI.NAME =
:B2 AND OI.TYPE# = 1 AND OI.OBJ# = I.OBJ# AND I.OBJ# = IST.OBJ# (+) AND (:B1 = 'CACHE_HISTORY' OR (:B1 = 'DATA' AND BITAND(I.FLAGS,2) =
 2) OR (:B1 = 'CACHE' AND IST.OBJ# IS NOT NULL) OR (:B1 = 'ALL' AND (BITAND(I.FLAGS,2) = 2 OR IST.OBJ# IS NOT NULL)) ) UNION ALL SELECT
 U.NAME, OP.NAME, OP.SUBNAME, NULL, DECODE(BITAND(IP.FLAGS, 16),16,2,0), DECODE(BITAND(IP.FLAGS, 8),8,1,0), IP.ROWCNT, IP.LEAFCNT, IP.D
ISTKEY, IP.LBLKKEY, IP.DBLKKEY, IP.CLUFAC, IP.BLEVEL, I

000000008CAC3528
7648651ea793e10c1ed5cbd66f7fcab0

0000000060D33F28 PUBLIC
KU$_JOBDESC

000000008CA2C1D0
e8d54638796dcb00f9b24680f53482d2

0000000088C4EA70
/* SQL Analyze(1) */

0000000060E3B8E0
( SELECT ORIGINAL_CA

0000000092D3CE40
79755681cae8d7d7c4873fd791b4d14f

000000008B380378 APEX_030200
WWV_FLOW_FILE_OBJECTS$

0000000060D33DB8
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008B1C8E98
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008B31B060
e5f6cd6ba2c20761d687b013f184f9ae

0000000088D824E8 $BUILD$
d5897d85fc945666

000000008B0AC5D0
1e4faa556911b71e21d5e0048561601f

000000008B1944D8
DELETE FROM KET$_CLIENT_TASKS WHERE CURR_WIN_START < (SYSTIMESTAMP- INTERVAL '31' DAY)

0000000088D0B160
DELETE FROM KET$_CLIENT_TASKS WHERE CURR_WIN_START < (SYSTIMESTAMP- INTERVAL '31' DAY)

0000000060FBA0F0
1808be9a60fa934d7da00b19661a149a

0000000060EC33C0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INTCOL#")),to_char(substrb(dump(min("INTCOL#"),16,0,32),1,120)),to_char(substrb(dump
(max("INTCOL#"),16,0,32),1,120)),to_char(count("EQUALITY_PREDS")),to_char(substrb(dump(min("EQUALITY_PREDS"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("EQUALITY_PREDS"),16,0,32),1,120)),to_char(count("EQUIJOIN_PREDS")),to_char(substrb(dump(min("EQUIJOIN_PREDS"),16,0,32)
,1,120)),to_char(substrb(dump(max("EQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("NONEQUIJOIN_PREDS")),to_char(substrb(dump(min("NONE
QUIJOIN_PREDS"),16,0,32),1,120)),to_char(substrb(dump(max("NONEQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("RANGE_PREDS")),to_char(s
ubstrb(dump(min("RANGE_PREDS"),16,0,32),1,120)),to_char

000000008C97C088
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INTCOL#")),to_char(substrb(dump(min("INTCOL#"),16,0,32),1,120)),to_char(substrb(dump
(max("INTCOL#"),16,0,32),1,120)),to_char(count("EQUALITY_PREDS")),to_char(substrb(dump(min("EQUALITY_PREDS"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("EQUALITY_PREDS"),16,0,32),1,120)),to_char(count("EQUIJOIN_PREDS")),to_char(substrb(dump(min("EQUIJOIN_PREDS"),16,0,32)
,1,120)),to_char(substrb(dump(max("EQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("NONEQUIJOIN_PREDS")),to_char(substrb(dump(min("NONE
QUIJOIN_PREDS"),16,0,32),1,120)),to_char(substrb(dump(max("NONEQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("RANGE_PREDS")),to_char(s
ubstrb(dump(min("RANGE_PREDS"),16,0,32),1,120)),to_char

0000000060EB3390
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INTCOL#")),to_char(substrb(dump(min("INTCOL#"),16,0,32),1,120)),to_char(substrb(dump
(max("INTCOL#"),16,0,32),1,120)),to_char(count("EQUALITY_PREDS")),to_char(substrb(dump(min("EQUALITY_PREDS"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("EQUALITY_PREDS"),16,0,32),1,120)),to_char(count("EQUIJOIN_PREDS")),to_char(substrb(dump(min("EQUIJOIN_PREDS"),16,0,32)
,1,120)),to_char(substrb(dump(max("EQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("NONEQUIJOIN_PREDS")),to_char(substrb(dump(min("NONE
QUIJOIN_PREDS"),16,0,32),1,120)),to_char(substrb(dump(max("NONEQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("RANGE_PREDS")),to_char(s
ubstrb(dump(min("RANGE_PREDS"),16,0,32),1,120)),to_char

0000000060EC3750
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INTCOL#")),to_char(substrb(dump(min("INTCOL#"),16,0,32),1,120)),to_char(substrb(dump
(max("INTCOL#"),16,0,32),1,120)),to_char(count("EQUALITY_PREDS")),to_char(substrb(dump(min("EQUALITY_PREDS"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("EQUALITY_PREDS"),16,0,32),1,120)),to_char(count("EQUIJOIN_PREDS")),to_char(substrb(dump(min("EQUIJOIN_PREDS"),16,0,32)
,1,120)),to_char(substrb(dump(max("EQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("NONEQUIJOIN_PREDS")),to_char(substrb(dump(min("NONE
QUIJOIN_PREDS"),16,0,32),1,120)),to_char(substrb(dump(max("NONEQUIJOIN_PREDS"),16,0,32),1,120)),to_char(count("RANGE_PREDS")),to_char(s
ubstrb(dump(min("RANGE_PREDS"),16,0,32),1,120)),to_char

000000008B376D58
e60bc55d810d389d9bea9e43dc31fa9

000000008B2B3E30 SYS
GV$PARAMETER

000000008C91CDD8
SELECT COUNT(*) FROM

000000008CBD9CE0
34587b97ba9f7d3439ceea127ee01b

0000000088D51738
7648651ea793e10c1ed5cbd66f7fcab0

0000000088DD28F8
b7097f50fa3998cc43c4044b2cca9511

0000000088E454A8 SYS
SCHEDULER$_PROGRAM_ARGUMENT

0000000060E92E00
SELECT TALSTABONR, P

0000000092C8EF78
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

0000000092C74EB8
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

000000008B2B2EC0
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

000000008B0D7328
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

000000008CA24E68
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

000000008C90B4B0
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

0000000088FD8590
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

000000008C8B0150
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

000000008B1661B0
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

0000000060F968D0
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

0000000092C95E88
SELECT owner#, property FROM sys.wri$_adv_tasks WHERE id = :1

0000000060C7A8B0
delete from WRH$_RSRC_CONSUMER_GROUP tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_i
d >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D06388
delete from WRH$_RSRC_CONSUMER_GROUP tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_i
d >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B097A10
INSERT INTO SYS.AUX_

000000008CB62A78 SYS
WRH$_SERVICE_WAIT_CLASS_PK

0000000060D1ECA8
select substrb(dump(

000000006534D1C0
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 ROUND(100 * T.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SE
LECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, DECODE(T.SAMPLE_SIZE,NULL,0,T.SAMPLE_SIZE) AS SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, DECODE(
TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI'),NULL,'None',TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DBA_TAB_COL_STATISTI
CS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME AND A.TABLE_NAME = B
.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TAB

000000008B1C3EB0
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 ROUND(100 * T.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SE
LECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, DECODE(T.SAMPLE_SIZE,NULL,0,T.SAMPLE_SIZE) AS SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, DECODE(
TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI'),NULL,'None',TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DBA_TAB_COL_STATISTI
CS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME AND A.TABLE_NAME = B
.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TAB

0000000088D384C8
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 ROUND(100 * T.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SE
LECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, DECODE(T.SAMPLE_SIZE,NULL,0,T.SAMPLE_SIZE) AS SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, DECODE(
TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI'),NULL,'None',TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DBA_TAB_COL_STATISTI
CS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME AND A.TABLE_NAME = B
.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TAB

0000000060D0D2C8
8da34d6b8fa520b4ef0e6773b4aafeaf

0000000088D72300
db2fac99a17f50939f57bf66e1d335

0000000088DB3248
UPDATE SYS.SCHEDULER

0000000088C92988
SELECT B.POSITION, B

000000008B0DFD08
select SERVICE_ID, NAME, NAME_HASH, NETWORK_NAME, CREATION_DATE, CREATION_DATE_HASH, GOAL, DTP, BLOCKED,  AQ_HA_NOTIFICATION, CLB_GOAL
 from GV$ACTIVE_SERVICES where inst_id = USERENV('Instance')

0000000060E45A50
select SERVICE_ID, NAME, NAME_HASH, NETWORK_NAME, CREATION_DATE, CREATION_DATE_HASH, GOAL, DTP, BLOCKED,  AQ_HA_NOTIFICATION, CLB_GOAL
 from GV$ACTIVE_SERVICES where inst_id = USERENV('Instance')

0000000092CA5658 SYS
AQ$_SIG_PROP

000000008CBE8DD8
select col#,intcol#,ntab# from ntab$ where obj#=:1 order by intcol# asc

0000000088D0C950
select col#,intcol#,ntab# from ntab$ where obj#=:1 order by intcol# asc

0000000088C6ADF0
select col#,intcol#,ntab# from ntab$ where obj#=:1 order by intcol# asc

0000000088D96888
select col#,intcol#,ntab# from ntab$ where obj#=:1 order by intcol# asc

000000008CBE9258
select col#,intcol#,ntab# from ntab$ where obj#=:1 order by intcol# asc

0000000088FDD930
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

0000000088FA1108
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

0000000092C96F58
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

000000008B3DA6B8
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

0000000088F5C3D0
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

000000008C8876F0
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

000000008B3F88A8
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

000000008B087580
SELECT /*+ ordered use_nl(u io i ito t itu po) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.INTCOLS IINTCOLS, NVL(
I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,T.FLAGS TFLAGS,T.PROPERTY TPROP, ITO.TYPE# TTYPE, CASE WHEN BITAND(T
.FLAGS, 16) = 0 THEN NULL ELSE T.ROWCNT END NROWS, PO.PARTTYPE PTYPE,PO.PARTCNT PCNT,PO.PARTKEYCOLS PTKCOLS, PO.FLAGS PFLAGS,MOD(PO.SPA
RE2,256) SPTYPE FROM SYS.USER$ U,SYS.OBJ$ IO,SYS.IND$ I, SYS.OBJ$ ITO,SYS.USER$ ITU,SYS.TAB$ T, PARTOBJ$ PO WHERE U.NAME=:B2 AND IO.NAM
E=:B1 AND IO.OWNER#=U.USER# AND IO.TYPE#=1 AND IO.OBJ#=I.OBJ# AND ITO.OBJ#=I.BO# AND ITO.OWNER#=ITU.USER# AND ITO.OBJ#=T.OBJ# AND IO.OB
J#=PO.OBJ#(+) UNION ALL SELECT /*+ ordered use_nl(u io i ito t itu) */ IO.OBJ# IOBJN,I.TYPE# ITYPE,I.FLAGS IFLAGS,I.PROPERTY IPROP, I.I
NTCOLS IINTCOLS, NVL(I.DEGREE,1), I.ANALYZETIME, ITU.NAME TOWN,ITO.NAME TAB,I.BO# TOBJN,0 TFLAGS,0 TPROP, ITO.TYPE# TTYPE, NULL NROWS,
NULL PTYPE,NULL PCNT,NULL PTKCOLS, NULL PFLAGS,NULL SPT

0000000060E3B6E0
dacff0cad3a59efef7da981b31fa0cc

000000008B0767E0
SELECT /*+ ordered i

0000000060EE0720
select /*+  no_paral


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
000000008C89C5B8
SELECT EXTRACT(DAY F

0000000060F995A0
10a0910e37b72cf612dd6f811a29689a

000000008B268458
       begin          :vsn_min := dbms_backup_restore.protocol_version_number_min;             :rel_min := dbms_backup_restore.protocol
_release_number_min;             :upd_min := dbms_backup_restore.protocol_update_number_min;              :cmp_min := 0;
                                                      :vsn_max := dbms_backup_restore.protocol_version_number_max;             :rel_max
 := dbms_backup_restore.protocol_release_number_max;             :upd_max := dbms_backup_restore.protocol_update_number_max;
   :cmp_max := 0;                                                           :pkg_vsn := to_char(:vsn_max, 'fm00')||'.'||
       to_char(:rel_max, 'fm00')||'.'||                      to_char(:upd_max, 'fm00')||'.'||                      to_char(:cmp_max, 'f
m00');             end;

0000000092D76288
       begin          :vsn_min := dbms_backup_restore.protocol_version_number_min;             :rel_min := dbms_backup_restore.protocol
_release_number_min;             :upd_min := dbms_backup_restore.protocol_update_number_min;              :cmp_min := 0;
                                                      :vsn_max := dbms_backup_restore.protocol_version_number_max;             :rel_max
 := dbms_backup_restore.protocol_release_number_max;             :upd_max := dbms_backup_restore.protocol_update_number_max;
   :cmp_max := 0;                                                           :pkg_vsn := to_char(:vsn_max, 'fm00')||'.'||
       to_char(:rel_max, 'fm00')||'.'||                      to_char(:upd_max, 'fm00')||'.'||                      to_char(:cmp_max, 'f
m00');             end;

0000000088D430A8
DELETE FROM WWV_FLOW

0000000060F57B90
select     from_tz(      cast ((max(analyzetime) - 1) as timestamp),      to_char(systimestamp, 'TZH:TZM'))  from sys.tab$ where analyz
etime is not null

000000008CAC08B8
select     from_tz(      cast ((max(analyzetime) - 1) as timestamp),      to_char(systimestamp, 'TZH:TZM'))  from sys.tab$ where analyz
etime is not null

0000000088EA58B0
select     from_tz(      cast ((max(analyzetime) - 1) as timestamp),      to_char(systimestamp, 'TZH:TZM'))  from sys.tab$ where analyz
etime is not null

000000008CB072C0 SYS
WRM$_WR_CONTROL

000000008B0BD0C0 $BUILD$
adec718dadfa46dd

000000008C862AD8
d1ddd68ed1edac67ce47973d6539529

0000000060CC1B28
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"DBID" val,count(*) cnt  from "SY
S"."WRH$_SEG_STAT_OBJ" t  where "DBID" is not null  group by "DBID") order by val

000000008CA94200
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"DBID" val,count(*) cnt  from "SY
S"."WRH$_SEG_STAT_OBJ" t  where "DBID" is not null  group by "DBID") order by val

0000000088D97548
c3f35dcf17aa76537b69d30e52a9a6c

000000008B3AA858 SYS
PRVT_HDM

000000008B084710
SELECT PO.SUBNAME PN

000000008CA70FF0 SYS
PROCEDUREPLSQL$

0000000060F6AA30
SELECT /*+ ordered index(u) index(o) index(po) */ MOD(PO.SPARE2, 256), PO.PARTTYPE FROM SYS.USER$ U, SYS.OBJ$ O, SYS.PARTOBJ$ PO WHERE
U.NAME = :B3 AND O.NAME = :B2 AND O.NAMESPACE = :B1 AND U.USER# = O.OWNER# AND O.OBJ# = PO.OBJ#

000000008B0764F0
SELECT /*+ ordered index(u) index(o) index(po) */ MOD(PO.SPARE2, 256), PO.PARTTYPE FROM SYS.USER$ U, SYS.OBJ$ O, SYS.PARTOBJ$ PO WHERE
U.NAME = :B3 AND O.NAME = :B2 AND O.NAMESPACE = :B1 AND U.USER# = O.OWNER# AND O.OBJ# = PO.OBJ#

000000008C8E3D08
ea869ce79cded5b6ae49174ec9706c0

0000000060FFE4C0 SYS
DBMS_AQ_SYS_EXP_INTERNAL

000000008C8AE4F0 DBMS_RANDOM
VALUE

000000008CA6DDF0
e1ec3cc5de156e38938775903353aa13

000000008C8C29A8
51a119a06c3154a92862da7238c5ae4e

0000000088F94B48
cc0495cb8731cea68dae2827c2238d43

0000000060ED8170
faacd91ba79384131d7b9ba5c9cac

000000008B13B838
c6a91ead2cc5f0dfa4af9226022750a

000000008C83E218
6c127d65180c4398b303980b4bab106a

0000000088EF6658 XDB
DBMS_XMLDOM

0000000088D90D08
e357974324d717913f256ac9e9c647c5

0000000088DEA0D8
insert into WRH$_IOSTAT_FILETYPE    (snap_id, dbid, instance_number,     filetype_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs, small_sync_read_reqs,     large_read_reqs, larg
e_write_reqs,     small_read_servicetime, small_write_servicetime,     small_sync_read_latency,     large_read_servicetime, large_write
_servicetime,     retries_on_error)   (select      :snap_id, :dbid, :instance_number,      filetype_id,      sum(small_read_megabytes)
small_read_megabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,
sum(large_write_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_req
s,      sum(small_sync_read_reqs) small_sync_read_reqs,      sum(large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_wri
te_reqs,      sum(small_read_servicetime) small_read_se

000000008B20ED28
insert into WRH$_IOSTAT_FILETYPE    (snap_id, dbid, instance_number,     filetype_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs, small_sync_read_reqs,     large_read_reqs, larg
e_write_reqs,     small_read_servicetime, small_write_servicetime,     small_sync_read_latency,     large_read_servicetime, large_write
_servicetime,     retries_on_error)   (select      :snap_id, :dbid, :instance_number,      filetype_id,      sum(small_read_megabytes)
small_read_megabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,
sum(large_write_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_req
s,      sum(small_sync_read_reqs) small_sync_read_reqs,      sum(large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_wri
te_reqs,      sum(small_read_servicetime) small_read_se

000000008B0A5240
insert into WRH$_IOSTAT_FILETYPE    (snap_id, dbid, instance_number,     filetype_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs, small_sync_read_reqs,     large_read_reqs, larg
e_write_reqs,     small_read_servicetime, small_write_servicetime,     small_sync_read_latency,     large_read_servicetime, large_write
_servicetime,     retries_on_error)   (select      :snap_id, :dbid, :instance_number,      filetype_id,      sum(small_read_megabytes)
small_read_megabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,
sum(large_write_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_req
s,      sum(small_sync_read_reqs) small_sync_read_reqs,      sum(large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_wri
te_reqs,      sum(small_read_servicetime) small_read_se

0000000088DEA558
insert into WRH$_IOSTAT_FILETYPE    (snap_id, dbid, instance_number,     filetype_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs, small_sync_read_reqs,     large_read_reqs, larg
e_write_reqs,     small_read_servicetime, small_write_servicetime,     small_sync_read_latency,     large_read_servicetime, large_write
_servicetime,     retries_on_error)   (select      :snap_id, :dbid, :instance_number,      filetype_id,      sum(small_read_megabytes)
small_read_megabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,
sum(large_write_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_req
s,      sum(small_sync_read_reqs) small_sync_read_reqs,      sum(large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_wri
te_reqs,      sum(small_read_servicetime) small_read_se

000000008B1D0038
select substrb(dump(

0000000088C893A8
DELETE WRI$_SQLSET_M

000000008CAE8498
767439bb115ad4a42c7b76fafb52493f

000000008B1106C8
8d2583ff972856ec69b2ab01aeccc81d

000000008C9E1BC0
SELECT UNIQUE O.NAME

000000008CB41628
select INST_ID,                 KQLFBC_PADD,                 KQLFBC_HASH,                 KQLFBC_SQLID,                 KQLFBC_CADD,
              KQLFBC_CHNO,                 substr(KQLFBC_NAME, 1, 30),                 KQLFBC_POS,                 to_number(decode(KQL
FBC_DUPPOS, 65535, NULL, KQLFBC_DUPPOS)),                 KQLFBC_OACDTY,                 substr(KQLFBC_DTYSTR, 1, 15),
decode(KQLFBC_OACCSI, 0, to_number(null), KQLFBC_OACCSI),                 decode(KQLFBC_OACPRE, 0, to_number(null), KQLFBC_OACPRE),
              decode(KQLFBC_OACSCL, 0, to_number(null), KQLFBC_OACSCL),                  KQLFBC_OACMXL,                 decode(KQLFBC_W
CAP, 0, 'NO', 'YES'),                 decode(KQLFBC_WCAP, 0, to_date(NULL),                        decode(KQLFBC_WCAP, 2, to_date(NULL)
, KQLFBC_LCAP)),                 KQLFBC_STRVAL,                  decode(KQLFBC_WCAP, 0, NULL,                                      sys.
sys$rawtoany(KQLFBC_BINVAL, KQLFBC_OACDTY,

000000008B2FB938
select INST_ID,                 KQLFBC_PADD,                 KQLFBC_HASH,                 KQLFBC_SQLID,                 KQLFBC_CADD,
              KQLFBC_CHNO,                 substr(KQLFBC_NAME, 1, 30),                 KQLFBC_POS,                 to_number(decode(KQL
FBC_DUPPOS, 65535, NULL, KQLFBC_DUPPOS)),                 KQLFBC_OACDTY,                 substr(KQLFBC_DTYSTR, 1, 15),
decode(KQLFBC_OACCSI, 0, to_number(null), KQLFBC_OACCSI),                 decode(KQLFBC_OACPRE, 0, to_number(null), KQLFBC_OACPRE),
              decode(KQLFBC_OACSCL, 0, to_number(null), KQLFBC_OACSCL),                  KQLFBC_OACMXL,                 decode(KQLFBC_W
CAP, 0, 'NO', 'YES'),                 decode(KQLFBC_WCAP, 0, to_date(NULL),                        decode(KQLFBC_WCAP, 2, to_date(NULL)
, KQLFBC_LCAP)),                 KQLFBC_STRVAL,                  decode(KQLFBC_WCAP, 0, NULL,                                      sys.
sys$rawtoany(KQLFBC_BINVAL, KQLFBC_OACDTY,

0000000060D766B0
dccdafa35a82b4347f9b1f31d2b89186

0000000060D27690
eafe294e48cbb8071e361ae98c64c641

0000000060D5FEC8
select substrb(dump(

0000000088CA7210
select incarnation#,

0000000088C9C588
INSERT INTO WRI$_ADV

000000008CBA4090 SYS
V$UNDOSTAT

0000000060D1A9A8
58dd2cf522e82d96afa1913b5d4ad485

00000000653A8CE0
select distinct inst

000000008B32CAD8
SELECT COUNT(*) FROM

000000008B0591A0
INSERT INTO SYS.WRI$

0000000088F54A38 SYS
DBMS_AQ_INV

000000008CA6F570 SYS
PROCEDUREJAVA$

0000000088E9FE50
insert into wrh$_enqueue_stat   (snap_id, dbid, instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#, failed_req
#,    cum_wait_time, event#)  select    :snap_id, :dbid, :instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#,
failed_req#,    cum_wait_time, event#  from    v$enqueue_statistics  where    total_req# != 0  order by    eq_type, req_reason

000000008CA1E678
insert into wrh$_enqueue_stat   (snap_id, dbid, instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#, failed_req
#,    cum_wait_time, event#)  select    :snap_id, :dbid, :instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#,
failed_req#,    cum_wait_time, event#  from    v$enqueue_statistics  where    total_req# != 0  order by    eq_type, req_reason

000000008B2675A8
insert into wrh$_enqueue_stat   (snap_id, dbid, instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#, failed_req
#,    cum_wait_time, event#)  select    :snap_id, :dbid, :instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#,
failed_req#,    cum_wait_time, event#  from    v$enqueue_statistics  where    total_req# != 0  order by    eq_type, req_reason

0000000088EA02D0
insert into wrh$_enqueue_stat   (snap_id, dbid, instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#, failed_req
#,    cum_wait_time, event#)  select    :snap_id, :dbid, :instance_number, eq_type, req_reason,    total_req#, total_wait#, succ_req#,
failed_req#,    cum_wait_time, event#  from    v$enqueue_statistics  where    total_req# != 0  order by    eq_type, req_reason

000000008C9529D0
eaeb3e58b974fe0098f9ef7ed033980e

000000008CADAFE8
SELECT SYS_GUID() FR

000000008B1C0D48
LOCK TABLE "HASH_TABLE" IN SHARE MODE  NOWAIT

0000000060FE1180
LOCK TABLE "HASH_TABLE" IN SHARE MODE  NOWAIT

000000008B0E4098
4dc50f70e823dc1296fe3ac48294dd8

0000000088CEDB88 SYS
V$SYS_OPTIMIZER_ENV

0000000088EE0420 SYS
ORA$AUTOTASK_CLEAN

0000000088D57090
SELECT MIN_REQUIRED_

000000008B0CFC18 SYS
WRH$_EVENT_HISTOGRAM

0000000088DB35A8
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQL_BIND_METADATA t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE AND t2.POSITION(+) = 1) WHERE nvl(snap_
id, 0) < :snap_id

000000008C8B1488
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQL_BIND_METADATA t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE AND t2.POSITION(+) = 1) WHERE nvl(snap_
id, 0) < :snap_id

0000000060E1C3A0
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQL_BIND_METADATA t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE AND t2.POSITION(+) = 1) WHERE nvl(snap_
id, 0) < :snap_id

0000000088DB3A28
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQL_BIND_METADATA t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE AND t2.POSITION(+) = 1) WHERE nvl(snap_
id, 0) < :snap_id

0000000060F9B240
SELECT T.FLAGS, T.NA

000000008B351140 $BUILD$
fe90e7a4ae2c50a0

0000000088D3DA58
SELECT /* DS_SVC */

0000000088CAFEE8
a4967c3094ac91e31728d349e74558a8

000000008B094480
UPDATE MON_MODS_ALL$

000000008CA10390 SYS
UTL_HTTP

0000000060C52388
select /*+  no_paral

0000000088EF1A30
insert into wrh$_seg_stat   (snap_id, dbid, instance_number, ts#, obj#, dataobj#, logical_reads_total,    logical_reads_delta, buffer_b
usy_waits_total, buffer_busy_waits_delta,    db_block_changes_total, db_block_changes_delta, physical_reads_total,    physical_reads_de
lta, physical_writes_total, physical_writes_delta,    physical_reads_direct_total, physical_reads_direct_delta,    physical_writes_dire
ct_total, physical_writes_direct_delta,    itl_waits_total, itl_waits_delta,    row_lock_waits_total, row_lock_waits_delta,    gc_buffe
r_busy_total, gc_buffer_busy_delta,    gc_cr_blocks_received_total, gc_cr_blocks_received_delta,    gc_cu_blocks_received_total, gc_cu_
blocks_received_delta,    space_used_total, space_used_delta,    space_allocated_total, space_allocated_delta,    table_scans_total, ta
ble_scans_delta,    chain_row_excess_total, chain_row_excess_delta,    physical_read_requests_total, physical_read_requests_delta,    p
hysical_write_requests_total, physical_write_requests_d

0000000092C67570
insert into wrh$_seg_stat   (snap_id, dbid, instance_number, ts#, obj#, dataobj#, logical_reads_total,    logical_reads_delta, buffer_b
usy_waits_total, buffer_busy_waits_delta,    db_block_changes_total, db_block_changes_delta, physical_reads_total,    physical_reads_de
lta, physical_writes_total, physical_writes_delta,    physical_reads_direct_total, physical_reads_direct_delta,    physical_writes_dire
ct_total, physical_writes_direct_delta,    itl_waits_total, itl_waits_delta,    row_lock_waits_total, row_lock_waits_delta,    gc_buffe
r_busy_total, gc_buffer_busy_delta,    gc_cr_blocks_received_total, gc_cr_blocks_received_delta,    gc_cu_blocks_received_total, gc_cu_
blocks_received_delta,    space_used_total, space_used_delta,    space_allocated_total, space_allocated_delta,    table_scans_total, ta
ble_scans_delta,    chain_row_excess_total, chain_row_excess_delta,    physical_read_requests_total, physical_read_requests_delta,    p
hysical_write_requests_total, physical_write_requests_d

0000000088F8D8D8
insert into wrh$_seg_stat   (snap_id, dbid, instance_number, ts#, obj#, dataobj#, logical_reads_total,    logical_reads_delta, buffer_b
usy_waits_total, buffer_busy_waits_delta,    db_block_changes_total, db_block_changes_delta, physical_reads_total,    physical_reads_de
lta, physical_writes_total, physical_writes_delta,    physical_reads_direct_total, physical_reads_direct_delta,    physical_writes_dire
ct_total, physical_writes_direct_delta,    itl_waits_total, itl_waits_delta,    row_lock_waits_total, row_lock_waits_delta,    gc_buffe
r_busy_total, gc_buffer_busy_delta,    gc_cr_blocks_received_total, gc_cr_blocks_received_delta,    gc_cu_blocks_received_total, gc_cu_
blocks_received_delta,    space_used_total, space_used_delta,    space_allocated_total, space_allocated_delta,    table_scans_total, ta
ble_scans_delta,    chain_row_excess_total, chain_row_excess_delta,    physical_read_requests_total, physical_read_requests_delta,    p
hysical_write_requests_total, physical_write_requests_d

000000008C95A408
insert into wrh$_seg_stat   (snap_id, dbid, instance_number, ts#, obj#, dataobj#, logical_reads_total,    logical_reads_delta, buffer_b
usy_waits_total, buffer_busy_waits_delta,    db_block_changes_total, db_block_changes_delta, physical_reads_total,    physical_reads_de
lta, physical_writes_total, physical_writes_delta,    physical_reads_direct_total, physical_reads_direct_delta,    physical_writes_dire
ct_total, physical_writes_direct_delta,    itl_waits_total, itl_waits_delta,    row_lock_waits_total, row_lock_waits_delta,    gc_buffe
r_busy_total, gc_buffer_busy_delta,    gc_cr_blocks_received_total, gc_cr_blocks_received_delta,    gc_cu_blocks_received_total, gc_cu_
blocks_received_delta,    space_used_total, space_used_delta,    space_allocated_total, space_allocated_delta,    table_scans_total, ta
ble_scans_delta,    chain_row_excess_total, chain_row_excess_delta,    physical_read_requests_total, physical_read_requests_delta,    p
hysical_write_requests_total, physical_write_requests_d

0000000088EF1EB0
insert into wrh$_seg_stat   (snap_id, dbid, instance_number, ts#, obj#, dataobj#, logical_reads_total,    logical_reads_delta, buffer_b
usy_waits_total, buffer_busy_waits_delta,    db_block_changes_total, db_block_changes_delta, physical_reads_total,    physical_reads_de
lta, physical_writes_total, physical_writes_delta,    physical_reads_direct_total, physical_reads_direct_delta,    physical_writes_dire
ct_total, physical_writes_direct_delta,    itl_waits_total, itl_waits_delta,    row_lock_waits_total, row_lock_waits_delta,    gc_buffe
r_busy_total, gc_buffer_busy_delta,    gc_cr_blocks_received_total, gc_cr_blocks_received_delta,    gc_cu_blocks_received_total, gc_cu_
blocks_received_delta,    space_used_total, space_used_delta,    space_allocated_total, space_allocated_delta,    table_scans_total, ta
ble_scans_delta,    chain_row_excess_total, chain_row_excess_delta,    physical_read_requests_total, physical_read_requests_delta,    p
hysical_write_requests_total, physical_write_requests_d

000000008CAEDC48 SYS
TRIGGERCOL$

000000006538B360
bc414735d653fcabe490d532c16840b9

0000000088CB8BF8
delete from WRH$_IOSTAT_DETAIL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    an
d not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b
.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B21E3F0
delete from WRH$_IOSTAT_DETAIL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    an
d not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b
.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F0A398 EXFSYS
EXF$ATTRLIST

000000008CA60988
select sdo_geor_def.getSqlText from dual

0000000088D28238
select sdo_geor_def.getSqlText from dual

000000008CBC6618
select sdo_geor_def.getSqlText from dual

000000008CA60E08
select sdo_geor_def.getSqlText from dual

000000008C84BC58
9a73bb7dd3a509263577bda46a58c791

0000000060E9ED90
select inst_id,hxfil, decode(hxerr, 0,decode(bitand(fhsta, 1), 0,'NOT ACTIVE','ACTIVE'), 1,'FILE MISSING', 2,'OFFLINE NORMAL', 3,'NOT V
ERIFIED', 4,'FILE NOT FOUND', 5,'CANNOT OPEN FILE', 6,'CANNOT READ HEADER', 7,'CORRUPT HEADER', 8,'WRONG FILE TYPE', 9,'WRONG DATABASE'
, 10,'WRONG FILE NUMBER', 11,'WRONG FILE CREATE', 12,'WRONG FILE CREATE', 16,'DELAYED OPEN', 'UNKNOWN ERROR'), to_number(fhbsc),  to_da
te(fhbti,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian') from x$kcvfhonl

0000000088E9F460
select inst_id,hxfil, decode(hxerr, 0,decode(bitand(fhsta, 1), 0,'NOT ACTIVE','ACTIVE'), 1,'FILE MISSING', 2,'OFFLINE NORMAL', 3,'NOT V
ERIFIED', 4,'FILE NOT FOUND', 5,'CANNOT OPEN FILE', 6,'CANNOT READ HEADER', 7,'CORRUPT HEADER', 8,'WRONG FILE TYPE', 9,'WRONG DATABASE'
, 10,'WRONG FILE NUMBER', 11,'WRONG FILE CREATE', 12,'WRONG FILE CREATE', 16,'DELAYED OPEN', 'UNKNOWN ERROR'), to_number(fhbsc),  to_da
te(fhbti,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian') from x$kcvfhonl

000000008B279BA8 A
NUM_ROWS

000000008B3B8C98 SYS
UTL_IDENT

000000008C9E7820
Select SYS.AQ$_NONDU

000000008CAD8BB8 SYS
DBMS_SYSTEM

00000000652C9C90
ddde9d26397dbd709d1609991a8d9255

000000008CA83EF8
c25f40e6c301b03a299d5d03e60d836

000000008C93A1D0
SELECT BDF.FILE# DFN

0000000088D35090
SELECT POS+1 POS, RES, NONNULLS, NDV, SPLIT, RSIZE, ROWCNT, HASHVAL FROM XMLTABLE( '/process_result/select_list_item' PASSING :B1 COLUM
NS POS NUMBER PATH 'pos', RES VARCHAR2(240) PATH 'value', NONNULLS NUMBER PATH 'nonnulls', NDV NUMBER PATH 'ndv', SPLIT NUMBER PATH 'sp
lit', RSIZE NUMBER PATH 'rsize', ROWCNT NUMBER PATH 'rowcnt', HASHVAL CLOB PATH 'hash_val' )

000000008B098CF0
SELECT POS+1 POS, RES, NONNULLS, NDV, SPLIT, RSIZE, ROWCNT, HASHVAL FROM XMLTABLE( '/process_result/select_list_item' PASSING :B1 COLUM
NS POS NUMBER PATH 'pos', RES VARCHAR2(240) PATH 'value', NONNULLS NUMBER PATH 'nonnulls', NDV NUMBER PATH 'ndv', SPLIT NUMBER PATH 'sp
lit', RSIZE NUMBER PATH 'rsize', ROWCNT NUMBER PATH 'rowcnt', HASHVAL CLOB PATH 'hash_val' )

000000008C8362C8 SYS
HTP

0000000092CF8AE8 SYS
DEFAULT_JOB_CLASS

0000000088FC1378
select class,count,time from gv$waitstat where inst_id = USERENV('Instance')

000000008B1D28F8
select class,count,time from gv$waitstat where inst_id = USERENV('Instance')

0000000088DE4598 APEX_030200
V

000000008C8C76D8
3ec61a3af78a7e7b7ede1f9a0b8ea3

0000000060FAEFE0
select min(minbkt),m

0000000088C931B8
SELECT XMLELEMENT( "

0000000088C573F8
SELECT T.NAME, ENABL

000000008B351930
select exptime, ltime, astatus, lcount from user$ where user#=:1

000000008B32D8F8
select exptime, ltime, astatus, lcount from user$ where user#=:1

000000008B2B9538
3c22b34e25bc1ca2a8658041d5511f38

000000008B3308C8 SYS
WRH$_ROWCACHE_SUMMARY

0000000092D0E028 $BUILD$
a7cdb989 2f42a08

0000000088CB0438 SYS
RESOURCE_PLAN$

000000008C9E4DB0
select count(*) from (                                 select u.name                                        from registry$ r, user$ u
                          where r.status in (1,3,5)                              and r.namespace = 'SERVER'                           a
nd r.schema#   = u.user#                            and u.name      = :1                               union all
                     select u.name                                        from registry$ r, registry$schemas s, user$ u        where r.
status in (1,3,5)                              and r.namespace = 'SERVER'                           and r.cid       = s.cid
                  and s.schema#   = u.user#                            and u.name      = :1)

000000008B1419A8
select count(*) from (                                 select u.name                                        from registry$ r, user$ u
                          where r.status in (1,3,5)                              and r.namespace = 'SERVER'                           a
nd r.schema#   = u.user#                            and u.name      = :1                               union all
                     select u.name                                        from registry$ r, registry$schemas s, user$ u        where r.
status in (1,3,5)                              and r.namespace = 'SERVER'                           and r.cid       = s.cid
                  and s.schema#   = u.user#                            and u.name      = :1)

0000000092D4D7A8
75fb84bc147274f15d30731082fa00f5

0000000088F81848
1e4013f81f1d52db61c9c355510564c

0000000088CBD2D0
select substrb(dump(

0000000060C42620
76b217d580de74a6882b2075d89c727a

000000008C839338
select         RECOVERY_ESTIMATED_IOS, ACTUAL_REDO_BLKS, TARGET_REDO_BLKS,         LOG_FILE_SIZE_REDO_BLKS, LOG_CHKPT_TIMEOUT_REDO_BLKS
,         LOG_CHKPT_INTERVAL_REDO_BLKS, FAST_START_IO_TARGET_REDO_BLKS,         TARGET_MTTR, ESTIMATED_MTTR, CKPT_BLOCK_WRITES,
 OPTIMAL_LOGFILE_SIZE, ESTD_CLUSTER_AVAILABLE_TIME,         WRITES_MTTR, WRITES_LOGFILE_SIZE, WRITES_LOG_CHECKPOINT_SETTINGS,         W
RITES_OTHER_SETTINGS, WRITES_AUTOTUNE, WRITES_FULL_THREAD_CKPT from GV$INSTANCE_RECOVERY where INST_ID = USERENV('Instance')

0000000088EB8FD0
select         RECOVERY_ESTIMATED_IOS, ACTUAL_REDO_BLKS, TARGET_REDO_BLKS,         LOG_FILE_SIZE_REDO_BLKS, LOG_CHKPT_TIMEOUT_REDO_BLKS
,         LOG_CHKPT_INTERVAL_REDO_BLKS, FAST_START_IO_TARGET_REDO_BLKS,         TARGET_MTTR, ESTIMATED_MTTR, CKPT_BLOCK_WRITES,
 OPTIMAL_LOGFILE_SIZE, ESTD_CLUSTER_AVAILABLE_TIME,         WRITES_MTTR, WRITES_LOGFILE_SIZE, WRITES_LOG_CHECKPOINT_SETTINGS,         W
RITES_OTHER_SETTINGS, WRITES_AUTOTUNE, WRITES_FULL_THREAD_CKPT from GV$INSTANCE_RECOVERY where INST_ID = USERENV('Instance')

0000000060FFC4E0
select substrb(dump(

000000008C8494C0
8905de4368a318f028c6fe64885960e6

0000000060CD3470
d9fead481a2dea2e3b77097ed500e266

000000008B0CBBF8 SYS
WRH$_SYS_TIME_MODEL

0000000060E3F490
75070403403fac7372f953d9b6ec93b

0000000060EE1530
fd330516529c4d986ed71746c47acfc2

0000000088FA2B78 SYS
KU$_VCNT

0000000060D18A30
4c282b8fc877ffe5446108d3dc14a764

0000000065305BC0
6baf1288053c9fc1181bbddcb842df4

000000008B23A280
select  NAMESPACE , GETS , GETHITS , GETHITRATIO , PINS , PINHITS , PINHITRATIO , RELOADS , INVALIDATIONS , DLM_LOCK_REQUESTS , DLM_PIN
_REQUESTS , DLM_PIN_RELEASES , DLM_INVALIDATION_REQUESTS , DLM_INVALIDATIONS from GV$LIBRARYCACHE where inst_id = USERENV('Instance')

0000000088FCEBF8
select  NAMESPACE , GETS , GETHITS , GETHITRATIO , PINS , PINHITS , PINHITRATIO , RELOADS , INVALIDATIONS , DLM_LOCK_REQUESTS , DLM_PIN
_REQUESTS , DLM_PIN_RELEASES , DLM_INVALIDATION_REQUESTS , DLM_INVALIDATIONS from GV$LIBRARYCACHE where inst_id = USERENV('Instance')

0000000060EA68B8
UPDATE RLM$RULESET S

0000000088E113A8 SYS
RE$VARIABLE_VALUE

0000000060F09F18
update sys.scheduler$_job set  instance_id = :1, dist_flags = :2 where  obj# = :3

000000008B316E88
update sys.scheduler$_job set  instance_id = :1, dist_flags = :2 where  obj# = :3

0000000088CA7610
f008bcfc973ba8f11ba988f9a820b824

000000008B21B420 SYS
OLAP_TAB$

000000008CA19520 SYS
WRH$_SYS_TIME_MODEL_BL

000000008C8B8F08 SYS
WRH$_PARAMETER_BL

0000000060FA3980
INSERT INTO sqllog$ SELECT :1, 1+TRUNC(sqllog$_seq.nextval/8192) FROM dual

0000000088DF91B8
INSERT INTO sqllog$ SELECT :1, 1+TRUNC(sqllog$_seq.nextval/8192) FROM dual

000000008B33DD10
INSERT INTO sqllog$ SELECT :1, 1+TRUNC(sqllog$_seq.nextval/8192) FROM dual

0000000092D42668
SELECT ATTRTYPE FROM

000000008B0C3F20 $BUILD$
9aeb8ffd394a9d23

0000000088F29590
33112c7778d88fba837089936c443e49

0000000092D735A8
select type# from ind$ where obj# = :1

000000008CBF5020
select type# from ind$ where obj# = :1

0000000088C8BCB8
UPDATE WRI$_SQLSET_P

000000008CB48C00
UPDATE RLM$PARSEDCON

000000008B3D3248 APEX_030200
WWV_FLOW_PREFERENCES$

000000008C91F788
SELECT ID, PROPERTY

000000008B3B49E8
SELECT OWNER, OBJECT

0000000060E995C0
update sys.scheduler$_job set  last_enabled_time = :1, next_run_date = :2, job_status = :3 where  obj# = :4

000000008B183060
update sys.scheduler$_job set  last_enabled_time = :1, next_run_date = :2, job_status = :3 where  obj# = :4

000000008C99F1F0
update sys.scheduler$_job set  last_enabled_time = :1, next_run_date = :2, job_status = :3 where  obj# = :4

000000008B347588
update sys.scheduler$_job set  last_enabled_time = :1, next_run_date = :2, job_status = :3 where  obj# = :4

000000008CBAF738
update sys.scheduler$_job set  last_enabled_time = :1, next_run_date = :2, job_status = :3 where  obj# = :4

000000008B2AD9F8
update sys.scheduler$_job set  last_enabled_time = :1, next_run_date = :2, job_status = :3 where  obj# = :4

000000008C909B88
80a0fb18311fff1c49148f9e72c9ab93

0000000088F57F58
77c0cf26557964a9ea48e129672146c6

000000008B39E360
b387bbdc4f594903bba125e1f8020b0

0000000088CA5DC8 SYS
WRI$_SQLSET_STATEMENTS

0000000092C88528
SELECT GREATEST(NVL(

000000008B2D60A0
SELECT :B13 TYPE_CON

0000000088F26CC8
SELECT A.RECID, A.RE

0000000060EB3B10
274e06dcc9c5fc1cf26eed7524cd449

000000008B1B2EA0 $BUILD$
8dc4a8d959dc6631

000000008C9FF3D8
select time_mp, scn, num_mappings, tim_scn_map from smon_scn_time   where scn =    (select max(scn) from smon_scn_time where scn <= :1)

000000008B285240
select time_mp, scn, num_mappings, tim_scn_map from smon_scn_time   where scn =    (select max(scn) from smon_scn_time where scn <= :1)

0000000060F92950
select time_mp, scn, num_mappings, tim_scn_map from smon_scn_time   where scn =    (select max(scn) from smon_scn_time where scn <= :1)

000000008B1D9D28
select time_mp, scn, num_mappings, tim_scn_map from smon_scn_time   where scn =    (select max(scn) from smon_scn_time where scn <= :1)

000000008C9FF858
select time_mp, scn, num_mappings, tim_scn_map from smon_scn_time   where scn =    (select max(scn) from smon_scn_time where scn <= :1)

0000000092D53F68 $BUILD$
42311010764e9058

0000000065354B50
a9db13585bc7bac9b884ac91f7bf5de5

000000008C939EC0 SYS
X$KMMHST

000000008CA685A0
6a618680506b82bd2525327282df4b5e

000000008C9F77E0
SELECT TYPE, MESSAGE

00000000653A6840
LOCK TABLE "SYS"."OR

000000008CB35410
SELECT COUNT(*) FROM

0000000060E01D50 PUBLIC
ORA_DICT_OBJ_TYPE

000000008CA28530
select typeid, roottoid from type$ where tvoid = :1

0000000088DD19C8
select typeid, roottoid from type$ where tvoid = :1

0000000088FBE1E8
select typeid, roottoid from type$ where tvoid = :1

0000000092D7E9A8
select typeid, roottoid from type$ where tvoid = :1

0000000060FEE3F0
select /*+  no_paral

000000008C860008
DBSNMP

0000000088DA7978
SELECT snap_id , SQL_ID, PLAN_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSPE  SQL_ID, t1.P
LANHASH_KEWRSPE  PLAN_HASH_VALUE FROM X$KEWRTSQLPLAN t1, WRH$_SQL_PLAN t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_K
EWRSPE AND t2.PLAN_HASH_VALUE(+) = t1.PLANHASH_KEWRSPE AND t2.ID(+) = 0) WHERE nvl(snap_id, 0) < :snap_id

0000000092D349B8
SELECT snap_id , SQL_ID, PLAN_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSPE  SQL_ID, t1.P
LANHASH_KEWRSPE  PLAN_HASH_VALUE FROM X$KEWRTSQLPLAN t1, WRH$_SQL_PLAN t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_K
EWRSPE AND t2.PLAN_HASH_VALUE(+) = t1.PLANHASH_KEWRSPE AND t2.ID(+) = 0) WHERE nvl(snap_id, 0) < :snap_id

0000000060EE0AF0
SELECT snap_id , SQL_ID, PLAN_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSPE  SQL_ID, t1.P
LANHASH_KEWRSPE  PLAN_HASH_VALUE FROM X$KEWRTSQLPLAN t1, WRH$_SQL_PLAN t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_K
EWRSPE AND t2.PLAN_HASH_VALUE(+) = t1.PLANHASH_KEWRSPE AND t2.ID(+) = 0) WHERE nvl(snap_id, 0) < :snap_id

0000000088DA7DF8
SELECT snap_id , SQL_ID, PLAN_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSPE  SQL_ID, t1.P
LANHASH_KEWRSPE  PLAN_HASH_VALUE FROM X$KEWRTSQLPLAN t1, WRH$_SQL_PLAN t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_K
EWRSPE AND t2.PLAN_HASH_VALUE(+) = t1.PLANHASH_KEWRSPE AND t2.ID(+) = 0) WHERE nvl(snap_id, 0) < :snap_id

0000000060D3D760
e55df0e2765fd7d85b6ab225fb6fdef

000000008B21FC60
delete from sys.mon_mods_all$ m   where not exists    (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = m.obj#)   and rownum <= nv
l(:1, rownum)

000000008B1D9918
delete from sys.mon_mods_all$ m   where not exists    (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = m.obj#)   and rownum <= nv
l(:1, rownum)

000000008B3C54E0
delete from sys.mon_mods_all$ m   where not exists    (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = m.obj#)   and rownum <= nv
l(:1, rownum)

0000000088DACB08
delete from sys.mon_mods_all$ m   where not exists    (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = m.obj#)   and rownum <= nv
l(:1, rownum)

000000008B1352D8
SELECT PE.PRIM_ATTR

000000008B14F9F8 SYS
WRI$_ADV_ADDM_INST

000000008B0DC168
9620cfe1e7966914715f75e388f2943b

0000000088EA1D60
SELECT T.TASK_NAME,

000000008B313920 SYS
DBMS_ISCHED_REMDB_JOB

0000000060CF9318
UPDATE SYSTEM.AQ$_QU

0000000092D1F508
SELECT T.SORT_COLS F

0000000088DE89E8
b6705a822726996421817984e2616b6e

0000000088F54C58
SELECT BSLN.BASELINE

0000000088FD9758
b227e8c53113383e437ecaf0e0b1d0ed

000000008B05AC40
SELECT /*+ dynamic_s

000000008CADA0F8
EXFSYS

0000000088F33C88
alter table test1 st

000000008B29BAF0
alter table test1 st

0000000088FABF48 PUBLIC
ORA_DICT_OBJ_OWNER

000000008C8AAAF0
1221de747902965363a7a4b3df7f345b

0000000088FA04C8 SYS
X$QESMMSGA

000000008CADB448
SELECT NLS_CHARSET_D

0000000060F36340
select substrb(dump(

000000008C926748
DELETE FROM SYS.WRI$

0000000092C86428
SELECT DIRECTORY_PAT

000000008B130208
12030452357863385808

0000000060F1D0F0
27daf098ec4ed15d3ef66fd15c5d783d

000000008B3A8568
SELECT COUNT(*) FROM

000000008CBB0B88
a1e5adbbfb9b09c2dd2bf084f65b0ccc

0000000092D11D98
d8009fcfa8bfab433ec2f1e82700d134

000000008CB358E8
SELECT REC_ID, DECOD

0000000060E17060
85ea341b997e2558429d459f58eafbd5

000000008CBC5598
327f87bba2cbf6fdc7d27baf44f2c6c2

0000000088ECAAB0
select grantee#, privilege#, max(nvl(option$,0)) from objauth$ where obj#=:1 group by grantee#,privilege# order by grantee#

000000008C855190
select grantee#, privilege#, max(nvl(option$,0)) from objauth$ where obj#=:1 group by grantee#,privilege# order by grantee#

000000008C919A18
UPDATE SYS.WRI$_ADV_

000000008CBE1180
709304d71d98e5a012728e195aa82cfb

000000008CBBB490 SYS
DBMS_RULE_INTERNAL

000000008B28A348
SELECT COUNT(*) FROM

000000008C8B96C8 SYS
DBA_SEGMENTS

0000000088DE1808
2de1a286d2ef4b59117739fb1091b04f

000000008B18B430
505c2c0f5c7a8bc76486a250618e4813

0000000088EF7A90
ab9c1fa5adb64cc31adba71108e786b

0000000060FEC850 $BUILD$
cacc802cd9c1ae51

0000000060E1F1C0
analyze index . vali

0000000060E26130
analyze index . vali

0000000060E64690
2ba2d9a7f8e842aaab077c51c64e7011

000000008B2CA230
10319496158637792786

0000000060F0A290
SELECT P.NAME AS NAM

0000000060F707B0
3d5d234d25a38dc4499e60c99d1660bd

000000008B1A8E18
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088E06568
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088E52DB8
a6e83c6f231f1cffb54068ffe4d344b7

000000008B3640D0
db6eb94c3b88c0b2d8dbb9b42b5153

000000008B05DC80
SELECT COUNT(*) FROM

000000008C9FFEC8
select count(*) from undo$

0000000092D338A0
select count(*) from undo$

0000000092EB3930
select count(*) from undo$

0000000088E4EEF8
insert into wrh$_sql_workarea_histogram   (snap_id, dbid, instance_number, low_optimal_size, high_optimal_size,    optimal_executions,
onepass_executions, multipasses_executions,    total_executions)  select    :snap_id, :dbid, :instance_number, low_optimal_size,    hig
h_optimal_size, optimal_executions, onepass_executions,    multipasses_executions, total_executions  from    v$sql_workarea_histogram
where    total_executions > 0

000000008B037BD8
insert into wrh$_sql_workarea_histogram   (snap_id, dbid, instance_number, low_optimal_size, high_optimal_size,    optimal_executions,
onepass_executions, multipasses_executions,    total_executions)  select    :snap_id, :dbid, :instance_number, low_optimal_size,    hig
h_optimal_size, optimal_executions, onepass_executions,    multipasses_executions, total_executions  from    v$sql_workarea_histogram
where    total_executions > 0

000000008CB81048
insert into wrh$_sql_workarea_histogram   (snap_id, dbid, instance_number, low_optimal_size, high_optimal_size,    optimal_executions,
onepass_executions, multipasses_executions,    total_executions)  select    :snap_id, :dbid, :instance_number, low_optimal_size,    hig
h_optimal_size, optimal_executions, onepass_executions,    multipasses_executions, total_executions  from    v$sql_workarea_histogram
where    total_executions > 0

0000000060E8BB90
insert into wrh$_sql_workarea_histogram   (snap_id, dbid, instance_number, low_optimal_size, high_optimal_size,    optimal_executions,
onepass_executions, multipasses_executions,    total_executions)  select    :snap_id, :dbid, :instance_number, low_optimal_size,    hig
h_optimal_size, optimal_executions, onepass_executions,    multipasses_executions, total_executions  from    v$sql_workarea_histogram
where    total_executions > 0

0000000088E4F378
insert into wrh$_sql_workarea_histogram   (snap_id, dbid, instance_number, low_optimal_size, high_optimal_size,    optimal_executions,
onepass_executions, multipasses_executions,    total_executions)  select    :snap_id, :dbid, :instance_number, low_optimal_size,    hig
h_optimal_size, optimal_executions, onepass_executions,    multipasses_executions, total_executions  from    v$sql_workarea_histogram
where    total_executions > 0

000000008B05B5D0
INSERT INTO SYS.WRI$

0000000060DBA498
SELECT EVENTID FROM

000000008C94B4F0
select substrb(dump(

0000000060EA6698 SYS
X$KMMSI

000000008CA486A0
SELECT PRIM_ESLIAS,

0000000060D0C918 SYS
WRH$_SGASTAT_BL

0000000092CDC948
e79c56c58c0e2614fc9b89a72882480d

000000008B0F1C18
78ec52e040ffd3ef46165b4fd8d2a5a3

0000000088E6D650 APEX_030200
WWV_FLOW_MAIL

000000008B216D68

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
31904ab7108c284242af68afc3fa4a17

000000008CB92598
DELETE FROM WWV_FLOW

000000008CA9EFE0
9cfd2727f30195e759a1d5c68bb699b4

0000000088D8EFA8 SYS
WRH$_SQLSTAT_PK

000000008B133290
SELECT TO_NUMBER(PAR

000000008CADBD38
SELECT USERENV('SID'

0000000088C93418
SELECT XMLELEMENT( "

000000008C926C08
(SELECT TABLE_NAME O

000000008C88FB70 SYS
SQLOBJ$DATA

0000000088FB5A18
SELECT ID, VALIDATIO

0000000088C704D0
SELECT /*+ index(u) */ COUNT(*) FROM SYS.USER$ U WHERE NAME = :B1 AND ROWNUM < 2

0000000092D0C9A8
SELECT /*+ index(u) */ COUNT(*) FROM SYS.USER$ U WHERE NAME = :B1 AND ROWNUM < 2

000000008B077390
SELECT /*+ index(u) */ COUNT(*) FROM SYS.USER$ U WHERE NAME = :B1 AND ROWNUM < 2

000000008C919EA8
UPDATE WRI$_ADV_OBJE

000000008C977838
cfb7da9575a0a8aaf5d18e42583d05e

000000008B07ADE0 SYS
DBA_SUBPART_KEY_COLUMNS

000000008B05CF50
DELETE FROM WRI$_OPT

0000000060E3D810
7b4eb25b64b2e6c8bd6888e634d68e3

0000000060F557F0
2aa0fe84cb9682cd33cc2edc5e5142d3

0000000060D6A508
63fde9d167a7320a1aba4e8e3fbf42e5

000000008B123A38
DELETE FROM SYS.SCHE

000000008B399340
92873f91e95e427b2ccb8117b23236d

000000008CAC18C8
SELECT RO.ORDRKEYALS

0000000088CFBB30
select pctfree_stg, pctused_stg, size_stg,initial_stg, next_stg, minext_stg, maxext_stg, maxsiz_stg, lobret_stg,mintim_stg, pctinc_stg,
 initra_stg, maxtra_stg, optimal_stg, maxins_stg,frlins_stg, flags_stg, bfp_stg, enc_stg, cmpflag_stg, cmplvl_stg from deferred_stg$  w
here obj# =:1

0000000060C4AC30
select pctfree_stg, pctused_stg, size_stg,initial_stg, next_stg, minext_stg, maxext_stg, maxsiz_stg, lobret_stg,mintim_stg, pctinc_stg,
 initra_stg, maxtra_stg, optimal_stg, maxins_stg,frlins_stg, flags_stg, bfp_stg, enc_stg, cmpflag_stg, cmplvl_stg from deferred_stg$  w
here obj# =:1

0000000060CE5110
select pctfree_stg, pctused_stg, size_stg,initial_stg, next_stg, minext_stg, maxext_stg, maxsiz_stg, lobret_stg,mintim_stg, pctinc_stg,
 initra_stg, maxtra_stg, optimal_stg, maxins_stg,frlins_stg, flags_stg, bfp_stg, enc_stg, cmpflag_stg, cmplvl_stg from deferred_stg$  w
here obj# =:1

000000008CB492E8
select shared_pool_size_for_estimate s,          shared_pool_size_factor * 100 f,          estd_lc_load_time l, 0             from v$sh
ared_pool_advice

0000000088C5BED8
select shared_pool_size_for_estimate s,          shared_pool_size_factor * 100 f,          estd_lc_load_time l, 0             from v$sh
ared_pool_advice

000000008CB4A380
select shared_pool_size_for_estimate s,          shared_pool_size_factor * 100 f,          estd_lc_load_time l, 0             from v$sh
ared_pool_advice

000000008B1ABBD0
612183cad94d8d662fe1e14e9b2584cf

000000006539E4C0
3a2583701bc39c295acca4e3a96f3298

000000008B133010
SELECT TASK_NAME, AN

000000008B03BDB8
b554460c7e9581447245acfa76d7a5bc

0000000060E70B90
388b78b486911ea8faacec85c25ffaf8

0000000065348130
52abdd818f201270ae6ccc4af802a707

0000000092D78A08
2744cd95fe2c09231bfaa4fd34c38d00

000000008C875FC8 SYS
X$KMMDI

000000008C961FA0
update sys.job$ set failures=0, this_date=null, flag=:1, last_date=:2,  next_date = greatest(:3, sysdate),  total=total+(sysdate-nvl(th
is_date,sysdate)) where job=:4

0000000088FB5478
update sys.job$ set failures=0, this_date=null, flag=:1, last_date=:2,  next_date = greatest(:3, sysdate),  total=total+(sysdate-nvl(th
is_date,sysdate)) where job=:4

0000000088C48A18
update sys.job$ set failures=0, this_date=null, flag=:1, last_date=:2,  next_date = greatest(:3, sysdate),  total=total+(sysdate-nvl(th
is_date,sysdate)) where job=:4

0000000060F51F80
update sys.job$ set failures=0, this_date=null, flag=:1, last_date=:2,  next_date = greatest(:3, sysdate),  total=total+(sysdate-nvl(th
is_date,sysdate)) where job=:4

000000008CA3D110
update sys.job$ set failures=0, this_date=null, flag=:1, last_date=:2,  next_date = greatest(:3, sysdate),  total=total+(sysdate-nvl(th
is_date,sysdate)) where job=:4

000000008CB3B348
38d61e41e552eeefd3f8996a98c3b871

000000008B2BCCC8
/* SQL Analyze(1) */

0000000088CFDAF8
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

0000000092CF7B40
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

000000008B0A0240
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

000000008B0C72F8
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

0000000088D4FEE8
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

0000000060DDFE08
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

000000008B037A68
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

00000000653EDA10
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

000000008B08BEB0
SELECT /*+ ordered use_nl(o c cu h) index(u i_user1) index(o i_obj2)                index(ci_obj#) index(cu i_col_usage$)
  index(h i_hh_obj#_intcol#) */ C.NAME COL_NAME, C.TYPE# COL_TYPE, C.CHARSETFORM COL_CSF, C.DEFAULT$ COL_DEF, C.NULL$ COL_NULL, C.PROPE
RTY COL_PROP, C.COL# COL_UNUM, C.INTCOL# COL_INUM, C.OBJ# COL_OBJ, C.SCALE COL_SCALE, H.BUCKET_CNT H_BCNT, (T.ROWCNT-H.NULL_CNT)/GREATE
ST(H.DISTCNT,1) H_PFREQ, C.LENGTH COL_LEN, CU.TIMESTAMP CU_TIME, CU.EQUALITY_PREDS CU_EP, CU.EQUIJOIN_PREDS CU_EJP, CU.RANGE_PREDS CU_R
P, CU.LIKE_PREDS CU_LP, CU.NONEQUIJOIN_PREDS CU_NEJP, CU.NULL_PREDS NP FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T, SYS.COL$ C, SYS.COL_US
AGE$ CU, SYS.HIST_HEAD$ H WHERE :B3 = '0' AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.TYPE# = 2 AND O.NAME = :B1 AND O.OBJ# = T.OBJ#
AND O.OBJ# = C.OBJ# AND C.OBJ# = CU.OBJ#(+) AND C.INTCOL# = CU.INTCOL#(+) AND C.OBJ# = H.OBJ#(+) AND C.INTCOL# = H.INTCOL#(+) UNION ALL
 SELECT /*+ ordered use_nl(c) */ C.KQFCONAM COL_NAME, C

0000000088E3AE68
SELECT S.STEP_TYPE F

000000008B345110
SELECT FINDING_ID, I

000000008C9917A8
a4bf3729e75695d843e785499cdf454

0000000088F8FEC8
SELECT ID FROM WRI$_

0000000092D38F78 MDSYS
SDO_STRING_ARRAY

000000008B365808 SYS
X$KTTEFINFO

0000000088D674C8
SELECT FIRST_CHANGE#

000000006535E8B0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) */ COUNT(C1) FROM (SELECT /
*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."TS$" "TS#3", "SYS"."SEG$" "S#1", "SYS"."SYS_OBJECTS" "SO#2" WHERE
 ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"="SO#2"."HEADER_BLOCK") AND ("S#1"."TS#"="SO#2"."TS_NUMBER") AND ("S#1"."TYPE#
"="SO#2"."SEGMENT_TYPE_ID") AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

000000008CB5D5F0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) */ COUNT(C1) FROM (SELECT /
*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."TS$" "TS#3", "SYS"."SEG$" "S#1", "SYS"."SYS_OBJECTS" "SO#2" WHERE
 ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"="SO#2"."HEADER_BLOCK") AND ("S#1"."TS#"="SO#2"."TS_NUMBER") AND ("S#1"."TYPE#
"="SO#2"."SEGMENT_TYPE_ID") AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

000000008B057880
DELETE FROM SYS.WRI$

0000000088C96218
SELECT XMLCONCAT(:B2

000000008B07A9A0 SYS
DBMS_SESSION

0000000088D0DE20
fc94b7d8a5a4b10239654cda6e532ca1

0000000092D547E8 SYS
X$ESTIMATED_MTTR

0000000088FB3DD8 SYS
V$MEMORY_RESIZE_OPS

0000000092C6A1E8 SYS
X$KSURLMT

0000000060E79AE0 SYS
AQ$_SCHEDULER$_EVENT_QTAB_S

0000000088D29870 SYS
X$ASH

0000000060CC0A68
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

0000000088E05638
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

0000000092D60FA8 SYS
X$KCCFE

0000000088CEE848 SYS
DBMS_REPORT

000000008CBAA900
404c44e691926140916cbaab32ad6d9c

0000000088E27EF8
delete from WRH$_PERSISTENT_QUEUES tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B2D9B50
delete from WRH$_PERSISTENT_QUEUES tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B0A0DB0 SYS
GV$SESSION

000000008C93ECA0
delete from opqtype$ where obj#=:1

000000008B32E5B8
delete from opqtype$ where obj#=:1

000000008CBB19B8 $BUILD$
262c745e87356bf5

0000000088C8C198
DELETE WRI$_SQLSET_P

000000008CA546F0
5693aa8071e5a88cf0f5558cf24dccac

0000000060F99CB0
f17e21ef4ee04a3da07584a58d8e477e

000000006535B3A0
e08030a8519ff94a4fffb745f70c9c9f

000000008B289DD8
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 154

0000000060E10C38
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 154

0000000088CAA648 SYS
PRVT_ACCESS_ADVISOR

00000000652DF650
/* SQL Analyze(1) */

0000000060ECCB28
56702055b39a5ce2a8c470ff55890df2

000000008C9410D8
d5ca186a28016870100748e27790bc8

0000000088C7CC00
e16067c0985cb1cb83bd4ecf2f3140c8

000000008CB97AD8
INSERT INTO WWV_FLOW

000000008CB4DF58
58999b58baf6cf0a25deb211f9559d7b

0000000092C75828
select ts#,online$ from ts$ where name=:1

0000000092C75CA8
select ts#,online$ from ts$ where name=:1

000000008C89C888
select INST_ID,        KSUCPUSTATNAME,       decode(KSUCPUSTATID,               15, KSUCPUSTATVALUE/1024,               KSUCPUSTATVALUE
),        KSUCPUSTATID,        KSUCPUSTATCMT,        decode(bitand(KSUCPUSTATFLAGS,1),1,'YES','NO')   from X$KSUCPUSTAT union all selec
t INST_ID,        KSUVMSTATNAME,        KSUVMSTATVALUE,        KSUVMSTATID,        KSUVMSTATCMT,        decode(bitand(KSUVMSTATFLAGS,1)
,1,'YES','NO')   from X$KSUVMSTAT union all select INST_ID,        KSUNETSTATNAME,        KSUNETSTATVALUE,        KSUNETSTATID,
KSUNETSTATCMT,        decode(bitand(KSUNETSTATFLAGS,1),1,'YES','NO')   from X$KSUNETSTAT

000000008B3B9C68
select INST_ID,        KSUCPUSTATNAME,       decode(KSUCPUSTATID,               15, KSUCPUSTATVALUE/1024,               KSUCPUSTATVALUE
),        KSUCPUSTATID,        KSUCPUSTATCMT,        decode(bitand(KSUCPUSTATFLAGS,1),1,'YES','NO')   from X$KSUCPUSTAT union all selec
t INST_ID,        KSUVMSTATNAME,        KSUVMSTATVALUE,        KSUVMSTATID,        KSUVMSTATCMT,        decode(bitand(KSUVMSTATFLAGS,1)
,1,'YES','NO')   from X$KSUVMSTAT union all select INST_ID,        KSUNETSTATNAME,        KSUNETSTATVALUE,        KSUNETSTATID,
KSUNETSTATCMT,        decode(bitand(KSUNETSTATFLAGS,1),1,'YES','NO')   from X$KSUNETSTAT

0000000092D434A8
SELECT ID, CREATED_O

000000008CBE50E8
BEGIN DBMS_OUTPUT.ENABLE(10000); END;

000000008CAA5340
BEGIN DBMS_OUTPUT.ENABLE(10000); END;

000000008B195180
BEGIN DBMS_OUTPUT.ENABLE(10000); END;

0000000088E1EF98
delete from WRH$_ACTIVE_SESSION_HISTORY_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid =
:dbid)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.
snap_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F0C998
delete from WRH$_ACTIVE_SESSION_HISTORY_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid =
:dbid)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.
snap_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092D46E98
SELECT LOG_DATE FROM

000000008B3A6D88
SELECT COUNT(*) FROM

000000008B222EB0
16ca272060087b658c73d55aee098ce2

000000008B0E2128
faacd91ba79384131d7b9ba5c9cac

0000000060D88760
bc6b8ac5875ffe2e2df7523720a1c0c1

0000000088E248B8
SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, PARTOBJ$ PO, IND$ I, TABPART$ TP WHERE U.NAME = :B2 AND O.NAME = :
B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND IP.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND
 I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BITAND(TP.FLAGS, 32) = 32 UNION ALL SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SY
S.INDCOMPART$ IP, PARTOBJ$ PO, IND$ I, TABCOMPART$ TP WHERE U.NAME = :B2 AND O.NAME = :B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND I
P.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BIT
AND(TP.FLAGS, 32) = 32

0000000060EBA4B0
SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, PARTOBJ$ PO, IND$ I, TABPART$ TP WHERE U.NAME = :B2 AND O.NAME = :
B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND IP.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND
 I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BITAND(TP.FLAGS, 32) = 32 UNION ALL SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SY
S.INDCOMPART$ IP, PARTOBJ$ PO, IND$ I, TABCOMPART$ TP WHERE U.NAME = :B2 AND O.NAME = :B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND I
P.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BIT
AND(TP.FLAGS, 32) = 32

0000000092D5F8F8
SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, PARTOBJ$ PO, IND$ I, TABPART$ TP WHERE U.NAME = :B2 AND O.NAME = :
B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND IP.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND
 I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BITAND(TP.FLAGS, 32) = 32 UNION ALL SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SY
S.INDCOMPART$ IP, PARTOBJ$ PO, IND$ I, TABCOMPART$ TP WHERE U.NAME = :B2 AND O.NAME = :B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND I
P.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BIT
AND(TP.FLAGS, 32) = 32

0000000088ED4AF0
SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, PARTOBJ$ PO, IND$ I, TABPART$ TP WHERE U.NAME = :B2 AND O.NAME = :
B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND IP.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND
 I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BITAND(TP.FLAGS, 32) = 32 UNION ALL SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SY
S.INDCOMPART$ IP, PARTOBJ$ PO, IND$ I, TABCOMPART$ TP WHERE U.NAME = :B2 AND O.NAME = :B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND I
P.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BIT
AND(TP.FLAGS, 32) = 32

000000008CBC0CF8
SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, PARTOBJ$ PO, IND$ I, TABPART$ TP WHERE U.NAME = :B2 AND O.NAME = :
B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND IP.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND
 I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BITAND(TP.FLAGS, 32) = 32 UNION ALL SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SY
S.INDCOMPART$ IP, PARTOBJ$ PO, IND$ I, TABCOMPART$ TP WHERE U.NAME = :B2 AND O.NAME = :B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND I
P.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BIT
AND(TP.FLAGS, 32) = 32

000000008B07C580
SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, PARTOBJ$ PO, IND$ I, TABPART$ TP WHERE U.NAME = :B2 AND O.NAME = :
B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND IP.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND
 I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BITAND(TP.FLAGS, 32) = 32 UNION ALL SELECT O.SUBNAME PART FROM SYS.USER$ U, SYS.OBJ$ O, SY
S.INDCOMPART$ IP, PARTOBJ$ PO, IND$ I, TABCOMPART$ TP WHERE U.NAME = :B2 AND O.NAME = :B1 AND O.TYPE# = 20 AND U.USER# = O.OWNER# AND I
P.OBJ# = O.OBJ# AND IP.BO# = PO.OBJ# AND BITAND(PO.FLAGS, 1) = 1 AND I.BO# = TP.BO# AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND BIT
AND(TP.FLAGS, 32) = 32

0000000060D651E8
9e304c31c622398dc4a8d959dc6631

0000000092EB2CE0
e7e04a13b7fb7ff764c8ab84c22c7d28

000000008C9DC470
SELECT :B1 FROM V$DA

000000008B177900
select /*+  no_paral

000000008B1B9440
delete from WRI$_SEGADV_CNTRLTAB where start_time < :1

000000008C838298
delete from WRI$_SEGADV_CNTRLTAB where start_time < :1

0000000060DDBCC8
9748d51ddb19cb21779c62bf4268a22c

000000006535DEF0
54de1f2d0a990793d7faa5bd28815d8

000000008CA715F0
select max(procedure#) from procedureplsql$ where obj#=:1

000000008C8BA838
select max(procedure#) from procedureplsql$ where obj#=:1

000000008B038258
select max(procedure#) from procedureplsql$ where obj#=:1

000000008CB437B8
select max(procedure#) from procedureplsql$ where obj#=:1

000000008CA71A70
select max(procedure#) from procedureplsql$ where obj#=:1

0000000060D30D98 $BUILD$
b026dc22c87db79f

0000000088FB8698
SELECT VERSION FROM V$INSTANCE

0000000060DC0DB8
SELECT VERSION FROM V$INSTANCE

000000008C9F7C30
SELECT VERSION FROM V$INSTANCE

0000000088CFF580 $BUILD$
4afe033e90df4e37

00000000652D02F0
SELECT DATABASE_ROLE,OPEN_MODE,PROTECTION_MODE,SWITCHOVER_STATUS,FORCE_LOGGING FROM V$DATABASE

0000000088D69318
SELECT DATABASE_ROLE,OPEN_MODE,PROTECTION_MODE,SWITCHOVER_STATUS,FORCE_LOGGING FROM V$DATABASE

0000000088CEEEC8 SYS
SQL_PLAN_TABLE_TYPE

000000008C899A88
SELECT MIN(TO_DATE(F

0000000060ECF650
select /*+  no_paral

0000000060C53C80
3bd3f32de764d7111d10273110fbaeb9

0000000092EB5AF0 $BUILD$
429d459f58eafbd5

0000000060DCC588
96dda3773d9f9b93b8a21d135f9f0ab5

000000008B3434D0 ORACLE_OCM
MGMT_DB_LL_METRICS

0000000092D79B68
select /*+  no_parallel_index(t, "I_HHA")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_subs
trb_pad  no_expand index(t,"I_HHA") */ count(*) as nrw,count(distinct sys_op_lbid(87483,'L',t.rowid)) as nlb,count(distinct "INF") as n
dk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SCOTT"."HASH_TABLE" t where ("INF" is not null) and (TBL$OR$IDX$PART$NUM("SCOT
T"."HASH_TABLE",0,4,0,"ROWID") = :objn)

000000008C9847D0
select /*+  no_parallel_index(t, "I_HHA")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_subs
trb_pad  no_expand index(t,"I_HHA") */ count(*) as nrw,count(distinct sys_op_lbid(87483,'L',t.rowid)) as nlb,count(distinct "INF") as n
dk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SCOTT"."HASH_TABLE" t where ("INF" is not null) and (TBL$OR$IDX$PART$NUM("SCOT
T"."HASH_TABLE",0,4,0,"ROWID") = :objn)

000000006530B030
UPDATE SYSTEM.AQ$_IN

000000008C91A3D8
INSERT INTO SYS.WRI$

000000008CA94570
/* SQL Analyze(1) */

000000008CBEA0C8
UPDATE JOB$ SET SCHE

0000000060E8B3E0
analyze index EXIT.V

0000000060F748F0
analyze index EXIT.V

000000008CB55100
SELECT CREATED_ON, O

000000008B363870
SELECT MESSAGE_ID, A

000000008CA5E3B8 SYS
WRH$_FILEMETRIC_HISTORY

000000008CBA91F0
3e272ac1ad47d71c05b66c4705d9069

000000008B2E2110
delete from WRH$_OSSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and no
t exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.sta
rt_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3374E8
delete from WRH$_OSSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and no
t exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.sta
rt_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060DA19E0
2a32adae7c4198b137c610141eea5162

000000008CA953D0 SYS
WRH$_MTTR_TARGET_ADVICE

0000000088DA1F58 SYS
GV$SQL_PLAN

0000000088C47738 SYS
USER_TABLES

0000000088CAA868 SYS
PRVT_TUNE_MVIEW

0000000088C65940
V_STAT

0000000088E8BC40
select /*+  no_paral

000000008CA26D70
76a889777cbe76fc8cccefd2a46bb2ac

0000000088C518C8
3a9b479e3630f1912a9d9d1b2e275a0

000000008B208F18
fea0b3854397334743f873b6fd0acb78

0000000092C46B70
declare     cursor c_i is SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) a
s TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,        round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS =
 'UNUSABLE' then 'NO' else 'YES' end USABLE,        decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),null,'None',        to_char(b.last
_analyzed,'yymmdd hh24:mi')) as last_analyzed,        case when b.visibility = 'VISIBLE' then 'YES' else 'NO ' end visibility,        c
ase when uniqueness = 'UNIQUE' then 'YES' else 'NO ' end UNIQUENESS   FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C ,DBA_TAB_CO
LUMNS T  WHERE A.INDEX_NAME = B.INDEX_NAME    AND T.TABLE_NAME = A.TABLE_NAME    AND T.INDEX_NAME = A.INDEX_NAME    AND A.COLUMN_NAME =
 T.COLUMN_NAME    AND A.TABLE_NAME = :table_name    AND a.INDEX_OWNER = :owner    AND C.SEGMENT_NAME = A.INDEX_NAME  ORDER BY INDEX_NAM
E, COLUMN_POSITION;     v_i c_i%rowtype;      cursor c_

0000000060EDDE60
declare     cursor c_i is SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) a
s TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,        round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS =
 'UNUSABLE' then 'NO' else 'YES' end USABLE,        decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),null,'None',        to_char(b.last
_analyzed,'yymmdd hh24:mi')) as last_analyzed,        case when b.visibility = 'VISIBLE' then 'YES' else 'NO ' end visibility,        c
ase when uniqueness = 'UNIQUE' then 'YES' else 'NO ' end UNIQUENESS   FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C ,DBA_TAB_CO
LUMNS T  WHERE A.INDEX_NAME = B.INDEX_NAME    AND T.TABLE_NAME = A.TABLE_NAME    AND T.INDEX_NAME = A.INDEX_NAME    AND A.COLUMN_NAME =
 T.COLUMN_NAME    AND A.TABLE_NAME = :table_name    AND a.INDEX_OWNER = :owner    AND C.SEGMENT_NAME = A.INDEX_NAME  ORDER BY INDEX_NAM
E, COLUMN_POSITION;     v_i c_i%rowtype;      cursor c_

000000008C952FB0
select reason_id, object_id, subobject_id, internal_instance_number, time_suggested, context, reason_argument_1, reason_argument_2, rea
son_argument_3, reason_argument_4, reason_argument_5, action_argument_1, action_argument_2, action_argument_3, action_argument_4, actio
n_argument_5, sequence_id, metric_value, instance_name from wri$_alert_outstanding where internal_instance_number > -2

0000000088F6EEA0
select reason_id, object_id, subobject_id, internal_instance_number, time_suggested, context, reason_argument_1, reason_argument_2, rea
son_argument_3, reason_argument_4, reason_argument_5, action_argument_1, action_argument_2, action_argument_3, action_argument_4, actio
n_argument_5, sequence_id, metric_value, instance_name from wri$_alert_outstanding where internal_instance_number > -2

000000008C953340
select reason_id, object_id, subobject_id, internal_instance_number, time_suggested, context, reason_argument_1, reason_argument_2, rea
son_argument_3, reason_argument_4, reason_argument_5, action_argument_1, action_argument_2, action_argument_3, action_argument_4, actio
n_argument_5, sequence_id, metric_value, instance_name from wri$_alert_outstanding where internal_instance_number > -2

0000000088C8B298
UPDATE WRI$_SQLSET_S

0000000060D38BB8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0), COUNT(DISTINCT C3), NVL(SUM(CASE WHEN C3 IS NULL THEN 1 ELSE 0
END),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("QT") FULL("QT") NO_PARALLEL_INDEX("QT") */ 1 AS C1, CASE WHEN "QT"."Q_NAME"='
SYS.AQ$_SCHEDULER_FILEWATCHER_QT_E' AND ("QT"."STATE"<>7 OR "QT"."STATE"<>9) THEN 1 ELSE 0 END AS C2, "QT"."MSGID" AS C3 FROM "SYS"."SC
HEDULER_FILEWATCHER_QT" "QT") SAMPLESUB

0000000060D39038
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0), COUNT(DISTINCT C3), NVL(SUM(CASE WHEN C3 IS NULL THEN 1 ELSE 0
END),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("QT") FULL("QT") NO_PARALLEL_INDEX("QT") */ 1 AS C1, CASE WHEN "QT"."Q_NAME"='
SYS.AQ$_SCHEDULER_FILEWATCHER_QT_E' AND ("QT"."STATE"<>7 OR "QT"."STATE"<>9) THEN 1 ELSE 0 END AS C2, "QT"."MSGID" AS C3 FROM "SYS"."SC
HEDULER_FILEWATCHER_QT" "QT") SAMPLESUB

000000008CAAD548
48940911f3b6a745c603e0656b603e47

000000008CA7CEF0
9b4707c089f1c48cc029eacdbf6147f7

0000000088CEDFC8 SYS
GV$SQL

000000008CA6CE20
BEGIN   DBMS_STATS.GATHER_TABLE_STATS(ownname          => 'SCOTT',                                 tabname          => 'HASH_TABLE',
                              estimate_percent => 100,                                 method_opt       => 'for columns size auto',
                             no_invalidate    => FALSE,                                 degree           => 1,
        granularity      => 'PARTITION',                                 cascade          => TRUE); END;

0000000060C4B9F0
BEGIN   DBMS_STATS.GATHER_TABLE_STATS(ownname          => 'SCOTT',                                 tabname          => 'HASH_TABLE',
                              estimate_percent => 100,                                 method_opt       => 'for columns size auto',
                             no_invalidate    => FALSE,                                 degree           => 1,
        granularity      => 'PARTITION',                                 cascade          => TRUE); END;

000000008B27F0E8 SYS
ALL_USERS

0000000088C7E728 $BUILD$
e83628b8 518e5ef

000000008C9988F0
821b215a2e5a6d97333c5eb027d8f45e

000000008B3EAEF0
select /*+  no_paral

0000000092CA2BA8
274e06dcc9c5fc1cf26eed7524cd449

0000000088F8E768 SYS
V$BACKUP_SET

000000008B039608
f580377529b9bc7bf3ebba4436c1ed37

000000008CACECC8
select substrb(dump(

0000000088E88830 SYS
GV$LIBRARYCACHE

0000000088F5C000
SELECT ID FROM WWV_FLOW_SESSIONS$ WHERE LAST_CHANGED <= (SYSDATE - (:B2 /24)) AND (SECURITY_GROUP_ID = :B1 OR :B1 IS NULL OR SECURITY_G
ROUP_ID = 0)

000000008CBCEE30
SELECT ID FROM WWV_FLOW_SESSIONS$ WHERE LAST_CHANGED <= (SYSDATE - (:B2 /24)) AND (SECURITY_GROUP_ID = :B1 OR :B1 IS NULL OR SECURITY_G
ROUP_ID = 0)

000000008B3E6130 APEX_030200
WWV_FLOW_LANG

0000000088F24268
( SELECT S.JOB_NAME,

000000008C8B67C8
SELECT UNIQUE(PROCES

000000008CB4C628 SYS
DBMS_XSTREAM_GG

0000000060FC29F0
cd23ace5790ecc9a5e77d8862bb29364

000000008CAA5938
7dbd101bb2c89955cefbb979bb8b676b

000000008B074570
SELECT KSPPCV.KSPPST

0000000088E57D88
9d54e2404ea4561ac8c82e778b29ccb8

000000008CABBCD0
b7ada89eb959bc13f558c0479a173b7

000000008B0B0FC0 SYS
EDITION$

0000000060F50FE0
SELECT ID FROM WWV_F

0000000060E07348
feda23fd904280cd45aaf86fe2584e

000000008C9EEBD8
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

000000008C9CF268
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

0000000092C697E8
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

000000008B2653E8
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

0000000088CB5328
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

000000008CBD03A0
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

000000008B22DB90
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

0000000088D1F460
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

0000000088E765E0
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

000000008CA61320
SELECT dbin.instance_number,        dbin.db_name, dbin.instance_name, dbin.host_name, dbin.version,        CASE WHEN s1.startup_time =
s2.startup_time             THEN 0 ELSE 1 END as bounce,        CAST(s1.end_interval_time AS DATE) as begin_time,        CAST(s2.end_in
terval_time AS DATE) as end_time,        ROUND((cast(                (case when s2.end_interval_time > s1.end_interval_time
         then s2.end_interval_time else s1.end_interval_time                 end) as date) -               cast(s1.end_interval_time as
 date)) * 86400) as int_secs,        CASE WHEN (s1.status <> 0 OR s2.status <> 0)             THEN 1 ELSE 0 END as err_detect,        r
ound(          greatest(           (extract(day from s2.flush_elapsed) * 86400) +            (extract(hour from s2.flush_elapsed) * 360
0) +             (extract(minute from s2.flush_elapsed) * 60) +              extract(second from s2.flush_elapsed),           (extract(
day from s1.flush_elapsed) * 86400) +            (extra

000000008CA65EA8
869107fdb338c3c08279f961b4cd29d2

000000008B1B0D60
BP

0000000060FFEFE0
56702055b39a5ce2a8c470ff55890df2

00000000652DB490
5a7e94332ff649c1a9b4b0f3bf0468

000000008CB5F480 SYS
WRM$_COLORED_SQL

000000008CA03008 SYS
SYS_IXMLAGG

000000008C9CE328 SYS
TABSUBPARTV$

000000008B3EB2E0
UPDATE STREAMS$_SPLI

0000000060D5E8C8
c32483e57d80ecac7335ac1a61441ab7

0000000060D771B8
72be447c7285373334cc98ea6461ad42

0000000060E53C80 $BUILD$
982a7d441166744d

000000008CA02D78
SELECT XMLELEMENT( "

0000000088C75F50
ea8a843b4dfdd507cb42190826736687

0000000088E9F000
604c6cd392e52792dabb550c97dbfca0

000000008B1BCBD0
beb16e0c9ee2d4ce9fe20cd981dd7464

000000008CA34408
SELECT B.INSERTS,B.UPDATES,B.DELETES,B.TIMESTAMP FROM DBA_TAB_MODIFICATIONS B WHERE B.TABLE_NAME = UPPER(:B2 ) AND B.TABLE_OWNER = UPPE
R(:B1 ) ORDER BY B.TIMESTAMP

0000000088D331E8
SELECT B.INSERTS,B.UPDATES,B.DELETES,B.TIMESTAMP FROM DBA_TAB_MODIFICATIONS B WHERE B.TABLE_NAME = UPPER(:B2 ) AND B.TABLE_OWNER = UPPE
R(:B1 ) ORDER BY B.TIMESTAMP

0000000060FAE318
SELECT B.INSERTS,B.UPDATES,B.DELETES,B.TIMESTAMP FROM DBA_TAB_MODIFICATIONS B WHERE B.TABLE_NAME = UPPER(:B2 ) AND B.TABLE_OWNER = UPPE
R(:B1 ) ORDER BY B.TIMESTAMP

0000000088E4A108
DELETE FROM BSLN_THR

000000008CAF6988 SYS
GV$MEMORY_DYNAMIC_COMPONENTS

0000000060ECFEC0
cb89c38ccd91d888706b2fd08a83ce18

0000000060F9BDA8
664d9da0bd73b83989cbb33eae03fd40

0000000092D7F228
7b4a4ecf7c359ae36ef3f844c5daf4d3

000000008C8B7168
82bcbf52f018b243147b5c4d2adbf78c

0000000088D9FEC8
90240e97355a0bf43ce680c269c3dfe

000000008C983AE0
fb2817f3fa2785bcd5f9961583c9e85

000000008C85E390 PUBLIC
DBA_HIST_BASELINE

000000008B064D50
SELECT TS.NAME FROM

000000008B08FD20
761ca14f59acec864ce700699f12a5bd

000000008C9E2128
9fe4e0239cc520782558100be5ce93bd

0000000092C683C0
798fae2edbbc58905d8b9552a80f7d12

000000008B084C00
SELECT PO.SUBNAME PN

0000000088C96468
SELECT MESSAGE, MORE


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
000000008C94D3F0
747b132b58e48dbb859520036915d1fb

00000000653F6070
b090fa55189e9e155c9f499341e30aad

0000000088F92558
b05e67c3d1cedcd7f0019112b19bf1c

0000000060F4AF20 $BUILD$
65b8fbaabaac5b02

00000000653D97E0
1238eff8bbfb245c390186113ae1502

000000008CB11088 SYS
CPOOL$

000000008C939B50
select substrb(dump(

0000000060D31EA8 SCOTT
TEST

0000000088CA3908 SYS
WRI$_SQLSET_STS_TOPACK

000000008CAF2B68
select action# from trigger$ where obj# = :1

0000000088D2FDA8
select action# from trigger$ where obj# = :1

000000008CAF2FE8
select action# from trigger$ where obj# = :1

00000000652C3D30 $BUILD$
617bdfe0c604b4ca

0000000088C937F8
SELECT XMLELEMENT( "

0000000060FA7F20
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_RO
WS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B  WHERE A.OWNER = B.OWN
ER    AND A.TABLE_NAME = B.TABLE_NAME    AND A.TABLE_NAME = upper(:table_name) and a.owner = upper(:owner) order by A.OWNER,A.COLUMN_NA
ME;    v_stats c_stats%rowtype;     cursor c_hwm is SELECT table_name,ROUND((blocks * (select value from v$parameter where name='db_blo
ck_size'))/1024/1024, 2) "HWM",    ROUND ((num_rows * a

000000008CAF12A8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_RO
WS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B  WHERE A.OWNER = B.OWN
ER    AND A.TABLE_NAME = B.TABLE_NAME    AND A.TABLE_NAME = upper(:table_name) and a.owner = upper(:owner) order by A.OWNER,A.COLUMN_NA
ME;    v_stats c_stats%rowtype;     cursor c_hwm is SELECT table_name,ROUND((blocks * (select value from v$parameter where name='db_blo
ck_size'))/1024/1024, 2) "HWM",    ROUND ((num_rows * a

000000008B28A038 B
NUM_DISTINCT

0000000060E84440
select substrb(dump(

000000008B2A2440
77b8b8915c5f5faeb63ce04122c26a66

000000008C9030A0
DELETE SYSTEM.AQ$_IN

0000000088FF8210
select substrb(dump(

000000008B0429C0
SELECT MAX(ID), MAX(

0000000092D79CE8
insert into hist_head$(obj#, intcol#, bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt,lowv
al, hival, density, spare1, spare2, avgcln, col#) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)

0000000088DA86E8
insert into hist_head$(obj#, intcol#, bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt,lowv
al, hival, density, spare1, spare2, avgcln, col#) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)

0000000060D86FC8
insert into hist_head$(obj#, intcol#, bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt,lowv
al, hival, density, spare1, spare2, avgcln, col#) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)

000000008B3028A8
875c00da886952da9c1d62e641eef1d3

0000000092C825C8
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008C989C48
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008B290B98
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088D7C0D0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088D95E68
7f28acbbc78981c3e36a87ec109bb8c6

0000000088DA2998
a5d0689f23e4d1dacadc3ef7eae9704a

000000008C866B38 SYS
DBMS_LOGSTDBY_LIB

000000008B32FDE8
delete from WRH$_CURRENT_BLOCK_SERVER tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060E6A730
delete from WRH$_CURRENT_BLOCK_SERVER tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060EA1650
1c09f75da2e73755b42a8959c484ba43

000000008C97B938 $BUILD$
f52629ec8acf2700

00000000653AA750
select name, block_size, buffers , (block_size * buffers) /1024 /1024 buffer_size_mb from v$buffer_pool

0000000088F39180
select name, block_size, buffers , (block_size * buffers) /1024 /1024 buffer_size_mb from v$buffer_pool

0000000088CBA2B8
select name, block_size, buffers , (block_size * buffers) /1024 /1024 buffer_size_mb from v$buffer_pool

0000000088C957C8
SELECT XMLCONCAT( (C

0000000088F9DE48 SYS
DBA_SCHEDULER_JOB_DESTS

000000008B17C6C0
c25f40e6c301b03a299d5d03e60d836

000000008C8BD858 EXFSYS
DBMS_EXPFIL_IR

000000008B1D24D8
5ca02bb59725147d425819cb5dae5f

0000000060EF4A40
select  PADDR , TYPE , QUEUED , WAIT , TOTALQ from GV$QUEUE where inst_id = USERENV('Instance')

0000000060F2B790
select  PADDR , TYPE , QUEUED , WAIT , TOTALQ from GV$QUEUE where inst_id = USERENV('Instance')

000000008CA01128
select substrb(dump(

000000008C9F7560
SELECT COUNT(*) FROM

000000008CB63638
42d450b0bd12699237fac9cabede990e

000000008CBAA2F0
select /*+  no_paral

000000008B03F2D8
91e80f80b3295067a97f934bf765e66b

0000000060F6E420
/* SQL Analyze(1) */

0000000060E89D60
SELECT /* DS_SVC */

0000000092D4AEE0
2c9996701a33a4a61060771b82763343

0000000060EB5C50 PUBLIC
V$SESSTAT

0000000088E894C0
dff2761a8a10f2b91866335d8d300cca

0000000065320AB0
ff7ca14974be7e1d5d18177ff6282d3e

0000000060EAC620
7c140974b656fe9a397b9479461733ba

000000008C85F280 DBSNMP
BSLN_BASELINES

000000008CAF5298
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN "T"."CLUCOLS" IS NOT NULL THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269
 , 1) SEED (1) "T") SAMPLESUB

0000000092EB3B60
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN "T"."CLUCOLS" IS NOT NULL THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269
 , 1) SEED (1) "T") SAMPLESUB

000000008B034A08
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN "T"."CLUCOLS" IS NOT NULL THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269
 , 1) SEED (1) "T") SAMPLESUB

0000000088D2FF68
SELECT LO.OBJ# FROM

000000008B058CF0
UPDATE SYS.OPTSTAT_H

000000008C9EC448
15ae833f56691688ad82518ae0c31056

0000000060C5C4F8
33fcf548c06487b2cc998480844af5ff

0000000060FF8CC8
select /*+ FIRST_ROWS(1) PARALLEL("WRH$_FILESTATXS", 1) */ 1 from "SYS"."WRH$_FILESTATXS" PARTITION ("WRH$_FILEST_2188720451_110")  whe
re ( (  (  ( "DBID" > 2188720451 )  )  OR  ( "DBID" = 2188720451 AND  ( "SNAP_ID" >= 134 OR "SNAP_ID" IS NULL  )  )  ) ) and rownum < 2

0000000088E1D888
select /*+ FIRST_ROWS(1) PARALLEL("WRH$_FILESTATXS", 1) */ 1 from "SYS"."WRH$_FILESTATXS" PARTITION ("WRH$_FILEST_2188720451_110")  whe
re ( (  (  ( "DBID" > 2188720451 )  )  OR  ( "DBID" = 2188720451 AND  ( "SNAP_ID" >= 134 OR "SNAP_ID" IS NULL  )  )  ) ) and rownum < 2

0000000088C9BD78
SELECT ID, NAME FROM

0000000088C505E8
SELECT F.PRIORITY PR

0000000060C97900
170de9e0c1e301ed3182c92e27ae5369

0000000060FE8AD0
SELECT Q.ROWID, SUBS

0000000060ED43E0
UPDATE KET$_CLIENT_TASKS     SET STATUS = CASE STATUS WHEN 13 THEN 2 ELSE STATUS END,         WINDOW_NAME = NULL,         CURR_JOB_NAME
 = NULL,         RETRY_COUNT = 0,         GOOD_COUNT = GOOD_COUNT + 1,         LT_JOB_LOG_ID = :log,         LG_JOB_LOG_ID = :log,
    LG_PRIORITY = TASK_PRIORITY,         LT_TERM_CODE = 10,         LT_ERROR = 0,         LG_DATE = :end,         LT_DATE = :end,
   LG_DURATION = :ela,         LG_CPU_TIME = :cpu,         LT_DURATION = :ela,         LT_CPU_TIME = :cpu,         MG_DURATION = ((MG_D
URATION * GOOD_COUNT) + :ela)/(GOOD_COUNT+1),         MG_CPU_TIME = ((MG_CPU_TIME * GOOD_COUNT) + :cpu)/(GOOD_COUNT+1)   WHERE CLIENT_I
D = :cid     AND OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

0000000060EDDBB8
UPDATE KET$_CLIENT_TASKS     SET STATUS = CASE STATUS WHEN 13 THEN 2 ELSE STATUS END,         WINDOW_NAME = NULL,         CURR_JOB_NAME
 = NULL,         RETRY_COUNT = 0,         GOOD_COUNT = GOOD_COUNT + 1,         LT_JOB_LOG_ID = :log,         LG_JOB_LOG_ID = :log,
    LG_PRIORITY = TASK_PRIORITY,         LT_TERM_CODE = 10,         LT_ERROR = 0,         LG_DATE = :end,         LT_DATE = :end,
   LG_DURATION = :ela,         LG_CPU_TIME = :cpu,         LT_DURATION = :ela,         LT_CPU_TIME = :cpu,         MG_DURATION = ((MG_D
URATION * GOOD_COUNT) + :ela)/(GOOD_COUNT+1),         MG_CPU_TIME = ((MG_CPU_TIME * GOOD_COUNT) + :cpu)/(GOOD_COUNT+1)   WHERE CLIENT_I
D = :cid     AND OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

0000000088C61C38
UPDATE KET$_CLIENT_TASKS     SET STATUS = CASE STATUS WHEN 13 THEN 2 ELSE STATUS END,         WINDOW_NAME = NULL,         CURR_JOB_NAME
 = NULL,         RETRY_COUNT = 0,         GOOD_COUNT = GOOD_COUNT + 1,         LT_JOB_LOG_ID = :log,         LG_JOB_LOG_ID = :log,
    LG_PRIORITY = TASK_PRIORITY,         LT_TERM_CODE = 10,         LT_ERROR = 0,         LG_DATE = :end,         LT_DATE = :end,
   LG_DURATION = :ela,         LG_CPU_TIME = :cpu,         LT_DURATION = :ela,         LT_CPU_TIME = :cpu,         MG_DURATION = ((MG_D
URATION * GOOD_COUNT) + :ela)/(GOOD_COUNT+1),         MG_CPU_TIME = ((MG_CPU_TIME * GOOD_COUNT) + :cpu)/(GOOD_COUNT+1)   WHERE CLIENT_I
D = :cid     AND OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

000000008B1514A8
UPDATE KET$_CLIENT_TASKS     SET STATUS = CASE STATUS WHEN 13 THEN 2 ELSE STATUS END,         WINDOW_NAME = NULL,         CURR_JOB_NAME
 = NULL,         RETRY_COUNT = 0,         GOOD_COUNT = GOOD_COUNT + 1,         LT_JOB_LOG_ID = :log,         LG_JOB_LOG_ID = :log,
    LG_PRIORITY = TASK_PRIORITY,         LT_TERM_CODE = 10,         LT_ERROR = 0,         LG_DATE = :end,         LT_DATE = :end,
   LG_DURATION = :ela,         LG_CPU_TIME = :cpu,         LT_DURATION = :ela,         LT_CPU_TIME = :cpu,         MG_DURATION = ((MG_D
URATION * GOOD_COUNT) + :ela)/(GOOD_COUNT+1),         MG_CPU_TIME = ((MG_CPU_TIME * GOOD_COUNT) + :cpu)/(GOOD_COUNT+1)   WHERE CLIENT_I
D = :cid     AND OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

0000000092EB2EE0
5d0e8d872ddcd2f2113ce430fbf578f9

000000008B367FD8
INSERT INTO sys.wri$_adv_recommendations (id, task_id, finding_id, rank, benefit_msg_id, benefit_val, type,flags, exec_name) VALUES (:1
,:2,:3,:4,:5,:6,:7,:8,:9)

0000000092C6B980
INSERT INTO sys.wri$_adv_recommendations (id, task_id, finding_id, rank, benefit_msg_id, benefit_val, type,flags, exec_name) VALUES (:1
,:2,:3,:4,:5,:6,:7,:8,:9)

0000000088D14168
34f2a31a4d5371dd3462ac407275c79e

0000000092C973F8
3896ecb5cbab5f95bf9f8891abe1a39

000000008CBC0698 SYS
AQ$_AGENT

000000008CB5E410
c4e5219063d284cd903d2e5d47a5a19

000000008B1B8360
select substrb(dump(

000000008B20EB08 SYS
V$IR_FAILURE_SET

000000008CA9BBD0
/* SQL Analyze(1) */

0000000088DA33D8 SYS
ORACLE_OCM_CONFIG_DIR

0000000088DBB508
11706218175067960855

0000000060C5B9C8 PUBLIC
XDB

0000000088F32AF8 SYS
WRH$_ACTIVE_SESSION_HISTORY_PK

0000000088F42C08 SYS
DBA_SCHEDULER_RUNNING_JOBS

0000000088EA0AA0
select u.name,o.name from tab$ t,user$ u,obj$ o where t.bobj#=:1 and t.obj#=o.obj# and o.owner#=u.user#

000000008B3D6758
select u.name,o.name from tab$ t,user$ u,obj$ o where t.bobj#=:1 and t.obj#=o.obj# and o.owner#=u.user#

000000008C953F58
select u.name,o.name from tab$ t,user$ u,obj$ o where t.bobj#=:1 and t.obj#=o.obj# and o.owner#=u.user#

0000000092D3B388
SELECT /*+ ordered*/

0000000060FCD440
e1ec3cc5de156e38938775903353aa13

000000008CB11398
3896c92fc2b7ba82e828c5bcfc7772a2

0000000060C95DB0
select substrb(dump(

0000000060C92D90
1ac4260b46ce29821d752a28e62abc36

000000008CB59DA0 SYS
V$ARCHIVED_LOG

000000008B3E3430
select substrb(dump(

000000008CB339A8 SYS
WRH$_SERVICE_STAT_BL

0000000088C4F1A8
select substrb(dump(

0000000060FF6070
23ddbeda603741ce9f8563d4d20db1d3

000000008B308C98
select id, name, block_size, resize_state, current_size, buffers,            target_size, target_buffers, prev_size, prev_buffers,
            lo_bnum, hi_bnum, lo_setid, hi_setid, set_count                from gv$buffer_pool  where inst_id = USERENV('Instance')

0000000060D17620
select id, name, block_size, resize_state, current_size, buffers,            target_size, target_buffers, prev_size, prev_buffers,
            lo_bnum, hi_bnum, lo_setid, hi_setid, set_count                from gv$buffer_pool  where inst_id = USERENV('Instance')

0000000060F95880
56702055b39a5ce2a8c470ff55890df2

0000000088D941D8
UPDATE WRH$_OPTIMIZER_ENV SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (OPTIMIZER_ENV_HASH_VALUE) IN (SELECT NUM1_KEWRATTR FRO
M X$KEWRATTRSTALE)

000000008B236590
UPDATE WRH$_OPTIMIZER_ENV SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (OPTIMIZER_ENV_HASH_VALUE) IN (SELECT NUM1_KEWRATTR FRO
M X$KEWRATTRSTALE)

0000000088EA72C0
UPDATE WRH$_OPTIMIZER_ENV SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (OPTIMIZER_ENV_HASH_VALUE) IN (SELECT NUM1_KEWRATTR FRO
M X$KEWRATTRSTALE)

0000000088D94658
UPDATE WRH$_OPTIMIZER_ENV SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (OPTIMIZER_ENV_HASH_VALUE) IN (SELECT NUM1_KEWRATTR FRO
M X$KEWRATTRSTALE)

00000000653F7FE0
SELECT UNIQUE(CLONED

000000008CAD60F0 SYS
SYS

0000000088DBAEA8
INSERT INTO RLM$SCHA

0000000060EFB870 SYS
V$TEMPSEG_USAGE

000000008C92BD68
SELECT ID FROM SYS.W

0000000088CD5208
SELECT XMLFOREST( XM

0000000088FA7558
3725274961cdfbfacbe53e305af88276

0000000088F3CBE8 $BUILD$
1afe9936971db298

000000008C91E1C8
SELECT STATUS#, LAST

0000000088F0F638
351f5484a8cae9303e981dcc123de8c0

000000008C8481C0
2b7313745935366b51e14a17e5737183

0000000060E24040
update tabpart$ set dataobj# = :1, part# = :2, ts# = :3, file# = :4, block# = :5, pctfree$ = :6, pctused$ = :7, initrans = :8, maxtrans
 = :9, flags = :10, analyzetime = :11, samplesize = :12, rowcnt = :13, blkcnt = :14, empcnt = :15, avgspc = :16, chncnt = :17, avgrln =
 :18 where obj# = :19

000000008B180330
update tabpart$ set dataobj# = :1, part# = :2, ts# = :3, file# = :4, block# = :5, pctfree$ = :6, pctused$ = :7, initrans = :8, maxtrans
 = :9, flags = :10, analyzetime = :11, samplesize = :12, rowcnt = :13, blkcnt = :14, empcnt = :15, avgspc = :16, chncnt = :17, avgrln =
 :18 where obj# = :19

0000000060E7D760
update tabpart$ set dataobj# = :1, part# = :2, ts# = :3, file# = :4, block# = :5, pctfree$ = :6, pctused$ = :7, initrans = :8, maxtrans
 = :9, flags = :10, analyzetime = :11, samplesize = :12, rowcnt = :13, blkcnt = :14, empcnt = :15, avgspc = :16, chncnt = :17, avgrln =
 :18 where obj# = :19

0000000088F8E988
update tabpart$ set dataobj# = :1, part# = :2, ts# = :3, file# = :4, block# = :5, pctfree$ = :6, pctused$ = :7, initrans = :8, maxtrans
 = :9, flags = :10, analyzetime = :11, samplesize = :12, rowcnt = :13, blkcnt = :14, empcnt = :15, avgspc = :16, chncnt = :17, avgrln =
 :18 where obj# = :19

000000008B3382C8
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_aux_history          where savtime < :1 and rownum <= NVL(:2, rownum)

0000000060FFE6F0
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_aux_history          where savtime < :1 and rownum <= NVL(:2, rownum)

000000008B338438
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_aux_history          where savtime < :1 and rownum <= NVL(:2, rownum)

0000000092CA5878
 SELECT nvl(e1,0) as e1,        nvl(e2,0) as e2,        nvl(e3,0) as e3,        nvl(e4,0) as e4,        nvl(e5,0) as e5,        nvl(e6,
0) as e6 FROM  (SELECT e.event_id as event_id, e.event_name as event_name        FROM  WRH$_EVENT_NAME e         WHERE  e.dbid = :dbid
         AND  e.event_name in               ('log file sync',                'gc buffer busy',                'gc buffer busy acquire',
                'gc buffer busy release',                'Streams: resolve low memory condition',                'Streams capture: reso
lve low memory condition')       ) PIVOT (max(event_id) FOR event_name IN              ('log file sync' as e1,               'gc buffer
 busy' as e2,               'gc buffer busy acquire' as e3,               'gc buffer busy release' as e4,               'Streams: resol
ve low memory condition' as e5,               'Streams capture: resolve low memory condition' as e6)       )

000000008C9EC188
 SELECT nvl(e1,0) as e1,        nvl(e2,0) as e2,        nvl(e3,0) as e3,        nvl(e4,0) as e4,        nvl(e5,0) as e5,        nvl(e6,
0) as e6 FROM  (SELECT e.event_id as event_id, e.event_name as event_name        FROM  WRH$_EVENT_NAME e         WHERE  e.dbid = :dbid
         AND  e.event_name in               ('log file sync',                'gc buffer busy',                'gc buffer busy acquire',
                'gc buffer busy release',                'Streams: resolve low memory condition',                'Streams capture: reso
lve low memory condition')       ) PIVOT (max(event_id) FOR event_name IN              ('log file sync' as e1,               'gc buffer
 busy' as e2,               'gc buffer busy acquire' as e3,               'gc buffer busy release' as e4,               'Streams: resol
ve low memory condition' as e5,               'Streams capture: resolve low memory condition' as e6)       )

000000008B28ED38
 SELECT nvl(e1,0) as e1,        nvl(e2,0) as e2,        nvl(e3,0) as e3,        nvl(e4,0) as e4,        nvl(e5,0) as e5,        nvl(e6,
0) as e6 FROM  (SELECT e.event_id as event_id, e.event_name as event_name        FROM  WRH$_EVENT_NAME e         WHERE  e.dbid = :dbid
         AND  e.event_name in               ('log file sync',                'gc buffer busy',                'gc buffer busy acquire',
                'gc buffer busy release',                'Streams: resolve low memory condition',                'Streams capture: reso
lve low memory condition')       ) PIVOT (max(event_id) FOR event_name IN              ('log file sync' as e1,               'gc buffer
 busy' as e2,               'gc buffer busy acquire' as e3,               'gc buffer busy release' as e4,               'Streams: resol
ve low memory condition' as e5,               'Streams capture: resolve low memory condition' as e6)       )

0000000092CA3838
 SELECT nvl(e1,0) as e1,        nvl(e2,0) as e2,        nvl(e3,0) as e3,        nvl(e4,0) as e4,        nvl(e5,0) as e5,        nvl(e6,
0) as e6 FROM  (SELECT e.event_id as event_id, e.event_name as event_name        FROM  WRH$_EVENT_NAME e         WHERE  e.dbid = :dbid
         AND  e.event_name in               ('log file sync',                'gc buffer busy',                'gc buffer busy acquire',
                'gc buffer busy release',                'Streams: resolve low memory condition',                'Streams capture: reso
lve low memory condition')       ) PIVOT (max(event_id) FOR event_name IN              ('log file sync' as e1,               'gc buffer
 busy' as e2,               'gc buffer busy acquire' as e3,               'gc buffer busy release' as e4,               'Streams: resol
ve low memory condition' as e5,               'Streams capture: resolve low memory condition' as e6)       )

0000000092D4E558
select substrb(dump(

0000000088F923E8
delete from WRH$_MUTEX_SLEEP tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B1C7808
delete from WRH$_MUTEX_SLEEP tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C78E08
adbeb7ad396fff7c4654ae916efe22c

0000000088F945B8
6e9655efebc04585e83628b8518e5ef

0000000092C942C8
c0c442b172e2436ab2b2e48428d9af4e

000000008CBAD438
INSERT INTO STREAMS$

00000000652FD510
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 ROUND(100 * T.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SE
LECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, DECODE(TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI'),
NULL,'None',TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A
.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME AND A.TABLE_NAME = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAM
E AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B

0000000060C76B20
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 ROUND(100 * T.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SE
LECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, DECODE(TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI'),
NULL,'None',TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A
.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME AND A.TABLE_NAME = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAM
E AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B

0000000088E2EBB8
insert into wrh$_tablespace_stat    (snap_id, dbid, instance_number, ts#, tsname, contents,     status, segment_space_management, exten
t_management,     is_backup)  select    :snap_id, :dbid, :instance_number,    ts.ts#, ts.name as tsname,    decode(ts.contents$, 0, (de
code(bitand(ts.flags, 16), 16, 'UNDO',           'PERMANENT')), 1, 'TEMPORARY')            as contents,    decode(ts.online$, 1, 'ONLIN
E', 2, 'OFFLINE',           4, 'READ ONLY', 'UNDEFINED')              as status,    decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as
 segspace_mgmt,    decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management,    (case when b.active_count > 0          the
n 'TRUE' else 'FALSE' end)              as is_backup  from sys.ts$ ts,       (select dfile.ts#,               sum( case when bkup.statu
s = 'ACTIVE'                         then 1 else 0 end ) as active_count         from v$backup bkup, file$ dfile         where bkup.fil
e# = dfile.file#           and dfile.status$ = 2

0000000092C8E3E8
insert into wrh$_tablespace_stat    (snap_id, dbid, instance_number, ts#, tsname, contents,     status, segment_space_management, exten
t_management,     is_backup)  select    :snap_id, :dbid, :instance_number,    ts.ts#, ts.name as tsname,    decode(ts.contents$, 0, (de
code(bitand(ts.flags, 16), 16, 'UNDO',           'PERMANENT')), 1, 'TEMPORARY')            as contents,    decode(ts.online$, 1, 'ONLIN
E', 2, 'OFFLINE',           4, 'READ ONLY', 'UNDEFINED')              as status,    decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as
 segspace_mgmt,    decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management,    (case when b.active_count > 0          the
n 'TRUE' else 'FALSE' end)              as is_backup  from sys.ts$ ts,       (select dfile.ts#,               sum( case when bkup.statu
s = 'ACTIVE'                         then 1 else 0 end ) as active_count         from v$backup bkup, file$ dfile         where bkup.fil
e# = dfile.file#           and dfile.status$ = 2

000000008B0D52F8
insert into wrh$_tablespace_stat    (snap_id, dbid, instance_number, ts#, tsname, contents,     status, segment_space_management, exten
t_management,     is_backup)  select    :snap_id, :dbid, :instance_number,    ts.ts#, ts.name as tsname,    decode(ts.contents$, 0, (de
code(bitand(ts.flags, 16), 16, 'UNDO',           'PERMANENT')), 1, 'TEMPORARY')            as contents,    decode(ts.online$, 1, 'ONLIN
E', 2, 'OFFLINE',           4, 'READ ONLY', 'UNDEFINED')              as status,    decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as
 segspace_mgmt,    decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management,    (case when b.active_count > 0          the
n 'TRUE' else 'FALSE' end)              as is_backup  from sys.ts$ ts,       (select dfile.ts#,               sum( case when bkup.statu
s = 'ACTIVE'                         then 1 else 0 end ) as active_count         from v$backup bkup, file$ dfile         where bkup.fil
e# = dfile.file#           and dfile.status$ = 2

000000008B0BF7F0
insert into wrh$_tablespace_stat    (snap_id, dbid, instance_number, ts#, tsname, contents,     status, segment_space_management, exten
t_management,     is_backup)  select    :snap_id, :dbid, :instance_number,    ts.ts#, ts.name as tsname,    decode(ts.contents$, 0, (de
code(bitand(ts.flags, 16), 16, 'UNDO',           'PERMANENT')), 1, 'TEMPORARY')            as contents,    decode(ts.online$, 1, 'ONLIN
E', 2, 'OFFLINE',           4, 'READ ONLY', 'UNDEFINED')              as status,    decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as
 segspace_mgmt,    decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management,    (case when b.active_count > 0          the
n 'TRUE' else 'FALSE' end)              as is_backup  from sys.ts$ ts,       (select dfile.ts#,               sum( case when bkup.statu
s = 'ACTIVE'                         then 1 else 0 end ) as active_count         from v$backup bkup, file$ dfile         where bkup.fil
e# = dfile.file#           and dfile.status$ = 2

000000008B045CB0
insert into wrh$_tablespace_stat    (snap_id, dbid, instance_number, ts#, tsname, contents,     status, segment_space_management, exten
t_management,     is_backup)  select    :snap_id, :dbid, :instance_number,    ts.ts#, ts.name as tsname,    decode(ts.contents$, 0, (de
code(bitand(ts.flags, 16), 16, 'UNDO',           'PERMANENT')), 1, 'TEMPORARY')            as contents,    decode(ts.online$, 1, 'ONLIN
E', 2, 'OFFLINE',           4, 'READ ONLY', 'UNDEFINED')              as status,    decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as
 segspace_mgmt,    decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management,    (case when b.active_count > 0          the
n 'TRUE' else 'FALSE' end)              as is_backup  from sys.ts$ ts,       (select dfile.ts#,               sum( case when bkup.statu
s = 'ACTIVE'                         then 1 else 0 end ) as active_count         from v$backup bkup, file$ dfile         where bkup.fil
e# = dfile.file#           and dfile.status$ = 2

0000000088E2F038
insert into wrh$_tablespace_stat    (snap_id, dbid, instance_number, ts#, tsname, contents,     status, segment_space_management, exten
t_management,     is_backup)  select    :snap_id, :dbid, :instance_number,    ts.ts#, ts.name as tsname,    decode(ts.contents$, 0, (de
code(bitand(ts.flags, 16), 16, 'UNDO',           'PERMANENT')), 1, 'TEMPORARY')            as contents,    decode(ts.online$, 1, 'ONLIN
E', 2, 'OFFLINE',           4, 'READ ONLY', 'UNDEFINED')              as status,    decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as
 segspace_mgmt,    decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management,    (case when b.active_count > 0          the
n 'TRUE' else 'FALSE' end)              as is_backup  from sys.ts$ ts,       (select dfile.ts#,               sum( case when bkup.statu
s = 'ACTIVE'                         then 1 else 0 end ) as active_count         from v$backup bkup, file$ dfile         where bkup.fil
e# = dfile.file#           and dfile.status$ = 2

000000008B3E2E80
db47032273e7e0a9557dfc77575388df

000000008CB40BC8
DELETE FROM SYS.SCHE

000000008B07F840
SELECT C.DEFAULT$ FR

0000000088F1C478 $BUILD$
450a9753d6086433

0000000088E488E8
5a09d6bdd3eb07dfeddc2feb33ffdc74

0000000060D76CA8
14205386bd9d903e21c27be511fbcc90

000000008B0E2788
6696d34c6885b0b88650073554a6a2f

0000000060CEB998
14c46f20d3483982e38433f64163326a

000000008B219D80
87a7d7a9c0e0284db7d4e5628032880

0000000060FF5BF8 SYS
DBA_DATA_FILES

000000008B08F1A0 SYS
WRI$_OPTSTAT_IND_HISTORY

000000008B1E06C0
 select event,total_waits,total_timeouts,time_waited,average_wait,  time_waited_micro, total_waits_fg, total_timeouts_fg, time_waited_f
g,  average_wait_fg, time_waited_micro_fg,  event_id, wait_class_id, wait_class#, wait_class   from gv$system_event where inst_id = USE
RENV('Instance')

0000000092C40098
 select event,total_waits,total_timeouts,time_waited,average_wait,  time_waited_micro, total_waits_fg, total_timeouts_fg, time_waited_f
g,  average_wait_fg, time_waited_micro_fg,  event_id, wait_class_id, wait_class#, wait_class   from gv$system_event where inst_id = USE
RENV('Instance')

000000008C955170
select substrb(dump(

0000000088FC98D8 $BUILD$
20666fbe7e5a140d

0000000092CC8578
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088C38F78
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CA78980
select /*+  no_paral

000000008B04B310
DELETE FROM SYS.COL_

000000008B26A520
c9bc2a96917b4c53ff6702acce210a63

0000000060D4E3D0
549f3f9987012bd597910553282a0c13

0000000060EAFEE0 SYS
ALL_SQLSET_STATEMENTS

0000000060FF6270 $BUILD$
2b6838d2f1c69982

0000000092C67350 $BUILD$
e6a6cb86bc183efd

000000008B3BEC78
f79d226eb7519e8b0f1851b5ad34075

000000008B2FFF80
b52afb2b213109e4bf50b395f4984d62

0000000060E1D730
DELETE FROM RLM$RULE

000000008B3088C8 SYS
WRH$_SHARED_POOL_ADVICE

000000008B157CB8
28e06a7345c41adbd392b61fec26964

0000000088CC71E8
WITH SQL_RAWSTAT AS

000000008B3A8A38
SELECT COUNT(*) FROM

000000008B1C33A0
SELECT COUNT(*) FROM

000000008CAB8410
SELECT COMPUTATION_E

000000008C941748
84f93fd34bc4e20a5f25d27a377d5e5

000000008B22BE20
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 150

000000008C898ED8
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 150

0000000060F285C0
ee991c9ea0f312507c74b50e9e553c22

0000000060F4FC90
9acdc455870a5f559e0d75fdb4b04d9

0000000088C9FEF8
SELECT P.BIND_DATA,

0000000060F5F820
3137e563c404483db86fdf4adfebc162

0000000092C4AD00
7734d10f54b6dbfe9541b7196010e639

000000008B3A33F8
select /*+  no_paral

000000008B102808
/* SQL Analyze(1) */

0000000060E3E450 $BUILD$
49148f9e72c9ab93

0000000092D50F60
select inst_id, sp_size, round(sp_size / basesp_size, 4),  kglsim_size, kglsim_objs, kglsim_timesave,  decode(kglsim_basetimesave, 0, t
o_number(null),         round(kglsim_timesave / kglsim_basetimesave, 4)),  kglsim_parsetime, decode(kglsim_baseparsetime, 0, to_number(
null),         round(kglsim_parsetime / kglsim_baseparsetime, 4)),  kglsim_hits from x$kglsim

000000008CBC3AF8
select inst_id, sp_size, round(sp_size / basesp_size, 4),  kglsim_size, kglsim_objs, kglsim_timesave,  decode(kglsim_basetimesave, 0, t
o_number(null),         round(kglsim_timesave / kglsim_basetimesave, 4)),  kglsim_parsetime, decode(kglsim_baseparsetime, 0, to_number(
null),         round(kglsim_parsetime / kglsim_baseparsetime, 4)),  kglsim_hits from x$kglsim

00000000653506F0
b1957ea4417a39cc924063c6392c325

0000000060EDF9F0
/* SQL Analyze(1) */

0000000060F77960 SYS
DBMS_HDM_LIB

0000000060DBF600
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060EB4A30
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C84D570
SELECT T.FLAGS, Q.US

0000000092C7F278 SYS
I_H_OBJ#_COL#

000000008C9D2920
5053301527d8574268632774f77f459

0000000088CA34B8 SYS
WRI$_SQLSET_WORKSPACE_PLANS

000000008B1DAC98 SYS
WRI$_SQLSET_REFERENCES

000000008B3B7AB8 SYS
DBA_IND_PARTITIONS

0000000060DEBBC8
31904ab7108c284242af68afc3fa4a17

000000008C9A8E98
SELECT T.NAME, T.OBJ

0000000060F590A0 SYS
WRI$_ADV_SQLT_PLAN_SEQ

0000000088ED52F0
SELECT 1 FROM DUAL WHERE mm.obj# = v.obj#

000000008B16DB20
SELECT 1 FROM DUAL WHERE mm.obj# = v.obj#

0000000060EF54C0
SELECT FINDING_ID, M

000000008C929F28
SELECT A.VALUE FROM

000000008B182D70
b8c386265b6c44d09f649250e82c6e6c

000000008CAD1A60
b227e8c53113383e437ecaf0e0b1d0ed

000000008CADB688
SELECT NLS_CHARSET_I

0000000088EAB6C0 $BUILD$
76bff0e96aa8f8f9

0000000060D92250
b7ada89eb959bc13f558c0479a173b7

0000000088C94FA8
SELECT XMLCONCAT(:B2

000000008B1B6DD0
SELECT * FROM SYS.SC

000000008B399540
5c4ff29adb30312aba693ccda2410c0

0000000060E58038
/* SQL Analyze(1) */

0000000092D7DF58 SYS
RECO_SCRIPT_BLOCK$

000000008B05D4A0
DELETE FROM SYS.WRI$

0000000060F74580
9037cf1937d5077c614c845fa6173618

0000000092D06C18
bb59cf38481e1e5e43dc3e47a8324671

0000000060CDD420
select user uservar from dual

0000000088D51B18
select user uservar from dual

0000000092C3C798
618e8d07a51af70a9413fb5a5d1f227

000000008C930378 SYS
WRI$_ADV_INST_FDG

0000000060FB5F50
9daf6586fb88ead1cc54195641539fd

0000000060CE7FB8
/* SQL Analyze(1) */

0000000065333290
select inst_id, to_number(ADDID), ADDXX, decode(ADSTS,1,'VALID',              2,'INACTIVE',              3,'DEFERRED',              4,'
ERROR',              5,'DISABLED',              6,'BAD PARAM',              7,'ALTERNATE',              8,'FULL',                'UNKNO
WN'), decode(ADMND,0,'OPTIONAL','MANDATORY'), decode(ADSES,0,'SYSTEM','SESSION'), decode(ADRMT,0,'PRIMARY',              1,'STANDBY',
            2,'LOCAL',              3,'REMOTE',              4,'AVM',                'UNKNOWN'), decode(ADPRC,0,'ARCH',              1,
'LGWR',              2,'FOREGROUND',              3,'RFS',              4,'ONDEMAND',                'UNKNOWN'), decode(ADSCH,0,'INACTI
VE',              1,'PENDING',              2,'ACTIVE',              3,'LATENT',                'UNKNOWN'), decode(ADOMF, 0, ADDNM, 'US
E_DB_RECOVERY_FILE_DEST'), to_number(ADLSQ), to_number(ADROP), to_number(ADDLY), to_number(ADMCS), to_number(ADNTT), decode(ADWHO,0,'AR
CH',              1,'LGWR',              2,'FOREGROUND'

0000000065357640
select inst_id, to_number(ADDID), ADDXX, decode(ADSTS,1,'VALID',              2,'INACTIVE',              3,'DEFERRED',              4,'
ERROR',              5,'DISABLED',              6,'BAD PARAM',              7,'ALTERNATE',              8,'FULL',                'UNKNO
WN'), decode(ADMND,0,'OPTIONAL','MANDATORY'), decode(ADSES,0,'SYSTEM','SESSION'), decode(ADRMT,0,'PRIMARY',              1,'STANDBY',
            2,'LOCAL',              3,'REMOTE',              4,'AVM',                'UNKNOWN'), decode(ADPRC,0,'ARCH',              1,
'LGWR',              2,'FOREGROUND',              3,'RFS',              4,'ONDEMAND',                'UNKNOWN'), decode(ADSCH,0,'INACTI
VE',              1,'PENDING',              2,'ACTIVE',              3,'LATENT',                'UNKNOWN'), decode(ADOMF, 0, ADDNM, 'US
E_DB_RECOVERY_FILE_DEST'), to_number(ADLSQ), to_number(ADROP), to_number(ADDLY), to_number(ADMCS), to_number(ADNTT), decode(ADWHO,0,'AR
CH',              1,'LGWR',              2,'FOREGROUND'

0000000088F8E0A8
/* SQL Analyze(1) */

000000008C8C9480
f3352b417589ba0c9a23ac1849d6cc19

0000000088C44318
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TABLE_SCANS_DELTA != 0

000000008B307B10
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TABLE_SCANS_DELTA != 0

000000008B308B18
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TABLE_SCANS_DELTA != 0

0000000088E15408
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TABLE_SCANS_DELTA != 0

0000000092D43748
SELECT T.FLAGS, T.OBJNO, T.SORT_COLS FROM SYSTEM.AQ$_QUEUE_TABLES T WHERE T.SCHEMA = :B2 AND T.NAME = :B1

0000000088DB5C38
SELECT T.FLAGS, T.OBJNO, T.SORT_COLS FROM SYSTEM.AQ$_QUEUE_TABLES T WHERE T.SCHEMA = :B2 AND T.NAME = :B1

000000008B080A40
SELECT NAME FROM COL

0000000060D310A8
d304d6818b17620b4e1103afc8ae6a4

0000000060CC0BD8
7db4e065947424f2baa19042522cc3

000000008C91DCE8
UPDATE SYS.WRI$_ADV_

0000000088FA0148
select  p.PARTITION_NAME,t.SUBPARTITION_NAME,t.COLUMN_NAME,t.NUM_DISTINCT,t.DENSITY,  t.NUM_BUCKETS,t.NUM_NULLS,t.GLOBAL_STATS,t.USER_S
TATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_SUBPART_COL_STATISTICS t,dba_tab_subpartitions p where     t.tabl
e_name = :table_name and t.owner = upper(nvl(:owner,user)) and t.subpartition_name = p.subpartition_name and t.owner = p.table_owner an
d t.table_name=p.table_name

0000000092EC1810
select  p.PARTITION_NAME,t.SUBPARTITION_NAME,t.COLUMN_NAME,t.NUM_DISTINCT,t.DENSITY,  t.NUM_BUCKETS,t.NUM_NULLS,t.GLOBAL_STATS,t.USER_S
TATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_SUBPART_COL_STATISTICS t,dba_tab_subpartitions p where     t.tabl
e_name = :table_name and t.owner = upper(nvl(:owner,user)) and t.subpartition_name = p.subpartition_name and t.owner = p.table_owner an
d t.table_name=p.table_name

00000000652CC500
select  p.PARTITION_NAME,t.SUBPARTITION_NAME,t.COLUMN_NAME,t.NUM_DISTINCT,t.DENSITY,  t.NUM_BUCKETS,t.NUM_NULLS,t.GLOBAL_STATS,t.USER_S
TATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_SUBPART_COL_STATISTICS t,dba_tab_subpartitions p where     t.tabl
e_name = :table_name and t.owner = upper(nvl(:owner,user)) and t.subpartition_name = p.subpartition_name and t.owner = p.table_owner an
d t.table_name=p.table_name

0000000060FC3D50
1238eff8bbfb245c390186113ae1502

000000008B27DB28
b090fa55189e9e155c9f499341e30aad

0000000088EC3190
SELECT CASE WHEN BITAND(FLAGS,16) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,512) FROM SYS.TAB$ T WHERE T.OBJ# = :B1


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
0000000088CF9978
SELECT CASE WHEN BITAND(FLAGS,16) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,512) FROM SYS.TAB$ T WHERE T.OBJ# = :B1

000000008B06F910
SELECT CASE WHEN BITAND(FLAGS,16) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,512) FROM SYS.TAB$ T WHERE T.OBJ# = :B1

0000000088CB6968
SELECT SEGMENT_SPACE

000000008C8A7CD0
SELECT MAX(E.EXECUTION_NAME) FROM DBA_ADVISOR_EXECUTIONS E WHERE E.TASK_ID = :B1

000000008CB10A28
SELECT MAX(E.EXECUTION_NAME) FROM DBA_ADVISOR_EXECUTIONS E WHERE E.TASK_ID = :B1

0000000060FB9670
SELECT MAX(E.EXECUTION_NAME) FROM DBA_ADVISOR_EXECUTIONS E WHERE E.TASK_ID = :B1

0000000088EFA898
SELECT MAX(E.EXECUTION_NAME) FROM DBA_ADVISOR_EXECUTIONS E WHERE E.TASK_ID = :B1

0000000092D26138
SELECT MAX(E.EXECUTION_NAME) FROM DBA_ADVISOR_EXECUTIONS E WHERE E.TASK_ID = :B1

0000000092D58E18
SELECT MAX(E.EXECUTION_NAME) FROM DBA_ADVISOR_EXECUTIONS E WHERE E.TASK_ID = :B1

0000000088FA8090
SELECT DISTINCT :B1

000000008B056A50
INSERT INTO SYS.WRI$

000000008B285F90
fea0b3854397334743f873b6fd0acb78

000000008B0D2AF8
select ADDRESS, HASH_VALUE, SQL_ID, CHILD_ADDRESS,                 CHILD_NUMBER, NAME,
       POSITION, DUP_POSITION, DATATYPE, DATATYPE_STRING,                         CHARACTER_SID, PRECISION, SCALE, MAX_LENGTH, WAS_CAPT
URED,                 LAST_CAPTURED, VALUE_STRING, VALUE_ANYDATA                          from go$sql_bind_capture
                              where inst_id = USERENV('Instance')

0000000088FD9B70
select ADDRESS, HASH_VALUE, SQL_ID, CHILD_ADDRESS,                 CHILD_NUMBER, NAME,
       POSITION, DUP_POSITION, DATATYPE, DATATYPE_STRING,                         CHARACTER_SID, PRECISION, SCALE, MAX_LENGTH, WAS_CAPT
URED,                 LAST_CAPTURED, VALUE_STRING, VALUE_ANYDATA                          from go$sql_bind_capture
                              where inst_id = USERENV('Instance')

000000008CA13CB0
SELECT USER FROM DUA

0000000060F52730
941ab1773c1656f2d128d0154a4d7804

000000008CAD94F8
select substrb(dump(

000000006539DF90
update con$ set con#=:3,spare1=:4 where owner#=:1 and name=:2

0000000088EBBE10
update con$ set con#=:3,spare1=:4 where owner#=:1 and name=:2

000000008B368CC8
SELECT SYSTIMESTAMP

0000000060ECCE18
ba002f4cde4560c23a30a18135b31831

00000000653E72E0
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000060C66150
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008B1BE1F0 SYS
DBMS_XSTREAM_ADM

000000008C875BD8
UPDATE RLM$PRIMEVTTY

0000000088E8F9C0
DELETE FROM sys.sumdelta$ sd   WHERE sd.tableobj# = :1

000000008CBDB2B0
DELETE FROM sys.sumdelta$ sd   WHERE sd.tableobj# = :1

000000008CBF0248
SELECT COUNT(*) FROM

000000008B355B40
ba002f4cde4560c23a30a18135b31831

00000000653A1FC0
select substrb(dump(

000000008CB8C2F8 PUBLIC
DBA_HIST_WR_CONTROL

0000000088E70070 SYS
WRH$_ROWCACHE_SUMMARY

0000000060D48608
bce467765fda956cb4296b81ed8441b0

0000000060EF68B0 FLOWS_FILES
WWV_FLOW_FILE_OBJECTS$

0000000092D52B68
delete from WRH$_SGA tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not exis
ts (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start_sna
p_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060E3E950
delete from WRH$_SGA tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not exis
ts (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start_sna
p_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C91148
SELECT WRI$_SQLSET_I

000000008B0972F0
INSERT INTO SYS.AUX_

000000008B3FB268 SYS
WRH$_SYSMETRIC_SUMMARY

0000000092D3DC58 SYS
X$KGLST

0000000088ED4C60
23a2e89b874fc3342566a75717b63f54

0000000060D03D78 $BUILD$
 bad965a6aa1a5a1

0000000060EF5AB0
847dd948a0ba43328868eea46d16545c

0000000088FC08B8
SELECT NAME FROM USE

000000008C92C228
SELECT MAX(EXECUTION

0000000092C86F78 SYS
V$TABLESPACE

0000000088ED4520 SYS
SCHEDULER$_FILEWATCHER_RESEND

000000008B0D5758
846b5f15f88512a5c165ffeedaa06dd4

000000008B052420
INSERT INTO FINALHIS

0000000088EFA698
44e4594553a895b0881cf49650ba6a50

000000008CB5B390
16bb15465bb8aca7b107b2878d915e8e

0000000088E53B18
insert into wrh$_shared_pool_advice   (snap_id, dbid, instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_
lc_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd
_lc_memory_object_hits)  select    :snap_id, :dbid, :instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_l
c_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd_
lc_memory_object_hits  from    v$shared_pool_advice

0000000092D838C8
insert into wrh$_shared_pool_advice   (snap_id, dbid, instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_
lc_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd
_lc_memory_object_hits)  select    :snap_id, :dbid, :instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_l
c_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd_
lc_memory_object_hits  from    v$shared_pool_advice

000000008B20F898
insert into wrh$_shared_pool_advice   (snap_id, dbid, instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_
lc_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd
_lc_memory_object_hits)  select    :snap_id, :dbid, :instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_l
c_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd_
lc_memory_object_hits  from    v$shared_pool_advice

0000000060E2A950
insert into wrh$_shared_pool_advice   (snap_id, dbid, instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_
lc_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd
_lc_memory_object_hits)  select    :snap_id, :dbid, :instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_l
c_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd_
lc_memory_object_hits  from    v$shared_pool_advice

0000000088E53F98
insert into wrh$_shared_pool_advice   (snap_id, dbid, instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_
lc_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd
_lc_memory_object_hits)  select    :snap_id, :dbid, :instance_number, shared_pool_size_for_estimate,    shared_pool_size_factor, estd_l
c_size, estd_lc_memory_objects,    estd_lc_time_saved, estd_lc_time_saved_factor, estd_lc_load_time,    estd_lc_load_time_factor, estd_
lc_memory_object_hits  from    v$shared_pool_advice

0000000088E227D8
3cba918e527c1e02f761296f0ce071

0000000092CB0FD8
SELECT OBJ# FROM OBJ

0000000060EDF0F0
select substrb(dump(

0000000088F5E6B8
281094c2bdbc6f26450a9753d6086433

0000000060F53530
delete from WRH$_FILESTATXS_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    an
d not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b
.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3767B8
delete from WRH$_FILESTATXS_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    an
d not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b
.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C925F98
DELETE FROM WRI$_ADV

0000000092D27388
68685db999d58b85f303f1beb616b688

000000008C9DBFB0
 SELECT ext_username FROM sys.user$ where name = :1

0000000088E45018
 SELECT ext_username FROM sys.user$ where name = :1

0000000092D21DF8
 SELECT ext_username FROM sys.user$ where name = :1

0000000088F41BD8
UPDATE WWV_FLOW_PLAT

00000000653C0B30
select substrb(dump(

0000000092CCF6B8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("T") FULL("T") NO_PARALLEL_INDEX("T") */ 1 AS C1, 1 AS
C2  FROM "SYS"."TABCOMPART$" "T" WHERE BITAND("T"."FLAGS",32)<>32) SAMPLESUB

0000000088FBA318
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("T") FULL("T") NO_PARALLEL_INDEX("T") */ 1 AS C1, 1 AS
C2  FROM "SYS"."TABCOMPART$" "T" WHERE BITAND("T"."FLAGS",32)<>32) SAMPLESUB

000000008B342330
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F4EBC8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C92D638
SELECT COUNT(*) FROM

0000000060F59A30
581aabd2e47366d57dfa445ab55e8a84

0000000060E6B810 SYS
V_$SQL_BIND_CAPTURE

000000008B347318
INSERT INTO THE (SEL

000000008B2AC9E8
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

0000000092C9FAD8
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

0000000088FFF200
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

000000008CB96A58
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

000000008B237680
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

0000000088D81488
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

000000008CBB6FD0
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

0000000088EA6FE0
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

000000008CB02658
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

000000008CBF9B40
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

000000008B2ACE68
insert into sys.scheduler$_event_log  (log_id, log_date, type#, name, owner, operation, status, user_name,   client_id, guid, dbid, add
itional_info, destination, credential, class_id,   flags)   values  (:1, SYSTIMESTAMP,   :2, :3, :4, :5, :6, :7, :8, :9, NULL, :10, :11
, :12, :13, :14)

0000000088E71E40
SELECT (CASE WHEN OP

0000000088E01B48
f0cfa2e63e1fda46fbf3cdf9535d1a6c

0000000060EED650
select max(snap_id) from wrm$_snapshot  where dbid = :dbid and     (cast(SYSTIMESTAMP as TIMESTAMP) - end_interval_time) > :retention a
nd     snap_id < :max_snap

0000000060EB54D0
select max(snap_id) from wrm$_snapshot  where dbid = :dbid and     (cast(SYSTIMESTAMP as TIMESTAMP) - end_interval_time) > :retention a
nd     snap_id < :max_snap

000000008B1C9EB8 $BUILD$
4b73aa14 1b009f8

000000008B1906F0
26f1ff24edbc0abfbdd0082f61d7512e

000000008B0D1388
SELECT P.GRANTEE GRA

000000008B152B68 SYS
V$DATAFILE_COPY

0000000060DBAA28
A

000000008B052800
INSERT INTO FINALHIS

00000000653BE850
2ce6d4eba42a136d123bc431edc0c4f9

0000000060EDC770
SELECT COUNT(*) FROM

000000008CA1CA28
SELECT PLUG_SOURCE T

000000008C94A440
select last_sample_date_num, last_sample_date, total_samples from WRI$_DBU_USAGE_SAMPLE where dbid     = :dbid and version  = :version

0000000092CA11A8
select last_sample_date_num, last_sample_date, total_samples from WRI$_DBU_USAGE_SAMPLE where dbid     = :dbid and version  = :version

000000008C94A8C0
select last_sample_date_num, last_sample_date, total_samples from WRI$_DBU_USAGE_SAMPLE where dbid     = :dbid and version  = :version

000000006531D330
select substrb(dump(

0000000092D58598 SYS
PLITBLM

000000008C99DD80
84e99f598da0d2715bd75746a5c4493f

0000000088EE8940
dbb0469c2d46bd95b6917fa597638e12

0000000060F57E10 SYS
X$KZDOS

000000008C8659F8
SELECT DATABASE_ROLE

0000000092C7C228
select con#,type#,condlength,intcols,robj#,rcon#,match#,refact,nvl(enabled,0),rowid,cols,nvl(defer,0),mtime,nvl(spare1,0),spare2,spare3
 from cdef$ where obj#=:1

0000000088D638E0
select con#,type#,condlength,intcols,robj#,rcon#,match#,refact,nvl(enabled,0),rowid,cols,nvl(defer,0),mtime,nvl(spare1,0),spare2,spare3
 from cdef$ where obj#=:1

0000000088CF9808
select con#,type#,condlength,intcols,robj#,rcon#,match#,refact,nvl(enabled,0),rowid,cols,nvl(defer,0),mtime,nvl(spare1,0),spare2,spare3
 from cdef$ where obj#=:1

000000008B26E798
select con#,type#,condlength,intcols,robj#,rcon#,match#,refact,nvl(enabled,0),rowid,cols,nvl(defer,0),mtime,nvl(spare1,0),spare2,spare3
 from cdef$ where obj#=:1

0000000092EC0900
select con#,type#,condlength,intcols,robj#,rcon#,match#,refact,nvl(enabled,0),rowid,cols,nvl(defer,0),mtime,nvl(spare1,0),spare2,spare3
 from cdef$ where obj#=:1

0000000092C7C6A8
select con#,type#,condlength,intcols,robj#,rcon#,match#,refact,nvl(enabled,0),rowid,cols,nvl(defer,0),mtime,nvl(spare1,0),spare2,spare3
 from cdef$ where obj#=:1

000000008B17D410
3b642487a7c95796c43e978766a26558

000000008B0B5C80
delete from icoldep$ where obj# in (select obj# from ind$ where bo#=:1)

0000000060E9B8D0
delete from icoldep$ where obj# in (select obj# from ind$ where bo#=:1)

0000000088FB1DD8
delete from icoldep$ where obj# in (select obj# from ind$ where bo#=:1)

000000008CAA6DF0 SYS
X$KCCDC

0000000088D32928 EXFSYS
RLM$COLLGRPBYSPEC

000000008B32BF68
26623fdcdf766db85b11fbeed3850a3b

000000008CA50FF8
select substrb(dump(

000000008C93FCF0
e348cb431817899b413e6b587ce49ac

000000008CA3DDB8
d3b442c86edccdd5314e431dfc1798c5

0000000060FD5C10
SELECT CV.FLAGS FROM

000000008B0AFA80
call ORACLE_OCM.MGMT_CONFIG.collect_config (  )

0000000088C5CA78
call ORACLE_OCM.MGMT_CONFIG.collect_config (  )

0000000088C873D8
SELECT O.ID, O.TYPE

00000000653DF0C0
4501485a7983a1e43f9517d14b59d4d2

0000000092D40C28 APEX_030200
WWV_RENDER_REPORT3

0000000060E3A210
SELECT REPAIR_SCRIPT

000000008B3AF3A0
DELETE FROM EXF$JAVA

000000008C9DDE10
a5913950363e6f0351cc8fe16ad73b5

0000000088E88A50
select * from scott.

000000008B215BE8
select * from scott.

0000000088D4FD78
select plan, group_or_subplan, is_subplan,description, mandatory,mgmt_p1, mgmt_p2, mgmt_p3, mgmt_p4, mgmt_p5, mgmt_p6, mgmt_p7, mgmt_p8
,active_sess_pool_p1, queueing_p1, parallel_degree_limit_p1, switch_group, switch_for_call, switch_time, switch_estimate,max_est_exec_t
ime, switch_io_megabytes, switch_io_reqs, undo_pool, max_idle_time, max_idle_blocker_time, max_utilization_limit, max_active_sess_targe
t_p1, parallel_queue_timeout from resource_plan_directive$ where obj#=:1 and status = 'ACTIVE'

000000008B326080
select plan, group_or_subplan, is_subplan,description, mandatory,mgmt_p1, mgmt_p2, mgmt_p3, mgmt_p4, mgmt_p5, mgmt_p6, mgmt_p7, mgmt_p8
,active_sess_pool_p1, queueing_p1, parallel_degree_limit_p1, switch_group, switch_for_call, switch_time, switch_estimate,max_est_exec_t
ime, switch_io_megabytes, switch_io_reqs, undo_pool, max_idle_time, max_idle_blocker_time, max_utilization_limit, max_active_sess_targe
t_p1, parallel_queue_timeout from resource_plan_directive$ where obj#=:1 and status = 'ACTIVE'

000000008C9855D0
ALTER SESSION SET TI

0000000060F85E00 SYS
DBA_ADDM_TASK_DIRECTIVES

0000000060E52D80
2ba2d9a7f8e842aaab077c51c64e7011

000000008B08E6F0 SYS
USTATS$

000000008C972A68
SELECT C.USERNAME FR

0000000092D19C78
db6eb94c3b88c0b2d8dbb9b42b5153

0000000088F328C8 SYSTEM
AQ$_INTERNET_AGENT_PRIVS

000000008B16E9A0
select /*+  no_paral

0000000060C77F10
delete from WRH$_CLUSTER_INTERCON tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060FADC58
delete from WRH$_CLUSTER_INTERCON tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F99ED8
INSERT INTO WWV_FLOW

000000008B0F81E8 SYS
DBA_ADVISOR_EXEC_PARAMETERS

0000000088E02AE8
9d7cdfe216a4d151191585cf3a2edc01

0000000088EF2CE0
  UPDATE wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, subobject_name, tablespace_name,           object_type, index_type
, base_obj#, base_object_name,           base_object_owner) =       (SELECT so.snap_id + 1,               so.oj.owner_name, so.oj.objec
t_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,               index_type, coalesce(io.base_obj#,
so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),              coalesce(io.base_object_owner, so.base_ob
ject_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, base_obj#,                    base_object_name, ba
se_object_owner, snap_id,                    dbms_swrf_internal.awr_get_object_info(                      ts#, obj#, dataobj#,
             AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,                                           tablespace_name, object
_type)) oj               FROM wrh$_seg_stat_obj) so

0000000088E9E370
  UPDATE wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, subobject_name, tablespace_name,           object_type, index_type
, base_obj#, base_object_name,           base_object_owner) =       (SELECT so.snap_id + 1,               so.oj.owner_name, so.oj.objec
t_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,               index_type, coalesce(io.base_obj#,
so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),              coalesce(io.base_object_owner, so.base_ob
ject_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, base_obj#,                    base_object_name, ba
se_object_owner, snap_id,                    dbms_swrf_internal.awr_get_object_info(                      ts#, obj#, dataobj#,
             AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,                                           tablespace_name, object
_type)) oj               FROM wrh$_seg_stat_obj) so

000000008CAB8860
  UPDATE wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, subobject_name, tablespace_name,           object_type, index_type
, base_obj#, base_object_name,           base_object_owner) =       (SELECT so.snap_id + 1,               so.oj.owner_name, so.oj.objec
t_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,               index_type, coalesce(io.base_obj#,
so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),              coalesce(io.base_object_owner, so.base_ob
ject_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, base_obj#,                    base_object_name, ba
se_object_owner, snap_id,                    dbms_swrf_internal.awr_get_object_info(                      ts#, obj#, dataobj#,
             AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,                                           tablespace_name, object
_type)) oj               FROM wrh$_seg_stat_obj) so

0000000088E9EC20
  UPDATE wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, subobject_name, tablespace_name,           object_type, index_type
, base_obj#, base_object_name,           base_object_owner) =       (SELECT so.snap_id + 1,               so.oj.owner_name, so.oj.objec
t_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,               index_type, coalesce(io.base_obj#,
so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),              coalesce(io.base_object_owner, so.base_ob
ject_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, base_obj#,                    base_object_name, ba
se_object_owner, snap_id,                    dbms_swrf_internal.awr_get_object_info(                      ts#, obj#, dataobj#,
             AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,                                           tablespace_name, object
_type)) oj               FROM wrh$_seg_stat_obj) so

0000000060F2D140
  UPDATE wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, subobject_name, tablespace_name,           object_type, index_type
, base_obj#, base_object_name,           base_object_owner) =       (SELECT so.snap_id + 1,               so.oj.owner_name, so.oj.objec
t_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,               index_type, coalesce(io.base_obj#,
so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),              coalesce(io.base_object_owner, so.base_ob
ject_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, base_obj#,                    base_object_name, ba
se_object_owner, snap_id,                    dbms_swrf_internal.awr_get_object_info(                      ts#, obj#, dataobj#,
             AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,                                           tablespace_name, object
_type)) oj               FROM wrh$_seg_stat_obj) so

0000000088EF3160
  UPDATE wrh$_seg_stat_obj ob      SET (snap_id, owner, object_name, subobject_name, tablespace_name,           object_type, index_type
, base_obj#, base_object_name,           base_object_owner) =       (SELECT so.snap_id + 1,               so.oj.owner_name, so.oj.objec
t_name,               so.oj.subobject_name, so.oj.tablespace_name, so.oj.object_type,               index_type, coalesce(io.base_obj#,
so.base_obj#),               coalesce(io.base_object_name, so.base_object_name),              coalesce(io.base_object_owner, so.base_ob
ject_owner)          FROM            (SELECT dbid, ts#, obj#, dataobj#, object_type, base_obj#,                    base_object_name, ba
se_object_owner, snap_id,                    dbms_swrf_internal.awr_get_object_info(                      ts#, obj#, dataobj#,
             AWR_OBJECT_INFO_TYPE(owner, object_name, subobject_name,                                           tablespace_name, object
_type)) oj               FROM wrh$_seg_stat_obj) so

000000008B387D80
delete from WRH$_SYSTEM_EVENT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B12FDA8
delete from WRH$_SYSTEM_EVENT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3B7CD8 SYS
DBA_TAB_PARTITIONS

0000000092D69BB8
SELECT COUNT(*) FROM

000000008C97B600 SYS
DBMS_SPM_INTERNAL

000000008C901FC0
/* SQL Analyze(1) */

0000000088EA5CD0 $BUILD$
a8609bfa3d0279bd

0000000088C9DC78
SELECT EXTRACTVALUE(

0000000088D2C7E0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("OT") FULL("OT"
) NO_PARALLEL_INDEX("OT") */ 1 AS C1, CASE WHEN (BITAND("OT"."FLAGS",16)<>16 OR "OT"."NAME" NOT LIKE 'DR$%' AND "OT"."NAME" NOT LIKE 'D
R#%') AND BITAND("OT"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "OT") SAMPLESUB

000000008B0ABB10
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("OT") FULL("OT"
) NO_PARALLEL_INDEX("OT") */ 1 AS C1, CASE WHEN (BITAND("OT"."FLAGS",16)<>16 OR "OT"."NAME" NOT LIKE 'DR$%' AND "OT"."NAME" NOT LIKE 'D
R#%') AND BITAND("OT"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "OT") SAMPLESUB

0000000088F7FC68
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("OT") FULL("OT"
) NO_PARALLEL_INDEX("OT") */ 1 AS C1, CASE WHEN (BITAND("OT"."FLAGS",16)<>16 OR "OT"."NAME" NOT LIKE 'DR$%' AND "OT"."NAME" NOT LIKE 'D
R#%') AND BITAND("OT"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "OT") SAMPLESUB

0000000088FC8DC8
SELECT T.SCHEMA, T.F

0000000092D61828 EXFSYS
DBMS_EXPFIL_DR

0000000088D41D40
SELECT TO_NUMBER(:B1 ) FROM DUAL

000000008B099070
SELECT TO_NUMBER(:B1 ) FROM DUAL

0000000060F71030
fb2817f3fa2785bcd5f9961583c9e85

000000008B1B5160
866824eefe06eefb5f0619c2ea3dfda

000000008CA6EC20
732d1523e906e89a5839117a4fa53ef

0000000060D2B438 SYS
DEFAULT_TIMEZONE

000000008B32D4D8
6ba2a2356e758c3e346475a5ea906bbe

000000008B1EA7B8
select min(minbkt),m

000000008C91D058
SELECT COUNT(*) FROM

0000000060CD5550
SELECT OBJECT_ID FRO

0000000088F99AA8 SYS
WRH$_TABLESPACE_STAT_BL

000000008B0555D0
SELECT SUM(PNDV) FRO

000000008B03BA08
select substrb(dump(

000000008B21CF10
select /*+  no_paral

000000008B212F08
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U2")  */ 1 AS C1 FROM SYS."USER$" "
U2" WHERE ("U2"."TYPE#"=2) AND ("U2"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id')))) innerQuery

00000000652E4DF0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U2")  */ 1 AS C1 FROM SYS."USER$" "
U2" WHERE ("U2"."TYPE#"=2) AND ("U2"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id')))) innerQuery

0000000092C83258
e43af7dd699d423af9a726f326b0fb46

0000000092D3BA78
aafbbdb03697e6bf7cb74f56a4214519

000000008B2FF9C0 SYS
V_$SGA

000000008B0CF588
4c936501938e4c6c1f6714a37c3aadb

0000000060C5C108 SYS
XDB

0000000060FBFD40
493cd250cc27a1a671836dfc28f34ccf

000000008CB32270
8290934469530671968

0000000088E89E30 SYS
PURGE_LOG_PROG

000000008CAEE248
select tc.type#,tc.intcol#,tc.position#,c.type#, c.length,c.scale,c.precision#,c.charsetid,c.charsetform, decode(bitand(c.property,8388
608),8388608, c.spare3, 0) from triggercol$ tc,col$ c, trigger$ tr where tc.obj#=:1 and tc.intcol#=c.intcol# and tr.obj# = tc.obj# and
(bitand(tr.property,32) != 32 or bitand(tc.type#,20) = 20) and (   c.obj#=:2 and (bitand(tc.type#, 1024) = :3 or tc.type# = 0)      or
c.obj#=:4 and bitand(tc.type#, 1024) = :5      or c.obj#=:6 and tc.type# = 0 and tc.position# = 0) union select type#,intcol#,position#
,69,0,0,0,0,0,0 from triggercol$ where obj#=:7 and intcol#=1001 union select tc.type#,tc.intcol#,tc.position#,121,0,0,0,0,0,0 from trig
gercol$ tc,trigger$ tr where tr.obj# = tc.obj# and bitand(tr.property,32) = 32 and tc.obj# = :8 and bitand(tc.type#,20) != 20

0000000088D2F308
select tc.type#,tc.intcol#,tc.position#,c.type#, c.length,c.scale,c.precision#,c.charsetid,c.charsetform, decode(bitand(c.property,8388
608),8388608, c.spare3, 0) from triggercol$ tc,col$ c, trigger$ tr where tc.obj#=:1 and tc.intcol#=c.intcol# and tr.obj# = tc.obj# and
(bitand(tr.property,32) != 32 or bitand(tc.type#,20) = 20) and (   c.obj#=:2 and (bitand(tc.type#, 1024) = :3 or tc.type# = 0)      or
c.obj#=:4 and bitand(tc.type#, 1024) = :5      or c.obj#=:6 and tc.type# = 0 and tc.position# = 0) union select type#,intcol#,position#
,69,0,0,0,0,0,0 from triggercol$ where obj#=:7 and intcol#=1001 union select tc.type#,tc.intcol#,tc.position#,121,0,0,0,0,0,0 from trig
gercol$ tc,trigger$ tr where tr.obj# = tc.obj# and bitand(tr.property,32) = 32 and tc.obj# = :8 and bitand(tc.type#,20) != 20

000000008CAEE6C8
select tc.type#,tc.intcol#,tc.position#,c.type#, c.length,c.scale,c.precision#,c.charsetid,c.charsetform, decode(bitand(c.property,8388
608),8388608, c.spare3, 0) from triggercol$ tc,col$ c, trigger$ tr where tc.obj#=:1 and tc.intcol#=c.intcol# and tr.obj# = tc.obj# and
(bitand(tr.property,32) != 32 or bitand(tc.type#,20) = 20) and (   c.obj#=:2 and (bitand(tc.type#, 1024) = :3 or tc.type# = 0)      or
c.obj#=:4 and bitand(tc.type#, 1024) = :5      or c.obj#=:6 and tc.type# = 0 and tc.position# = 0) union select type#,intcol#,position#
,69,0,0,0,0,0,0 from triggercol$ where obj#=:7 and intcol#=1001 union select tc.type#,tc.intcol#,tc.position#,121,0,0,0,0,0,0 from trig
gercol$ tc,trigger$ tr where tr.obj# = tc.obj# and bitand(tr.property,32) = 32 and tc.obj# = :8 and bitand(tc.type#,20) != 20

000000008B24B568 $BUILD$
fc303f1f52a48d71

000000008C97B400
4266425ecc47c73065225808a5b5e660

0000000060C9D560
select /*+  no_paral

000000008B325DC0
DELETE FROM RLM$SCHA

0000000092C89F10
SELECT COUNT(*),MAX(A.FLAGS) FROM SYS.WRI$_ADV_PARAMETERS A WHERE A.TASK_ID = :B2 AND A.NAME = :B1

000000008C876FA8
SELECT COUNT(*),MAX(A.FLAGS) FROM SYS.WRI$_ADV_PARAMETERS A WHERE A.TASK_ID = :B2 AND A.NAME = :B1

000000008B09CFC0
SELECT COUNT(*),MAX(A.FLAGS) FROM SYS.WRI$_ADV_PARAMETERS A WHERE A.TASK_ID = :B2 AND A.NAME = :B1

0000000088D8AD68
SELECT COUNT(*),MAX(A.FLAGS) FROM SYS.WRI$_ADV_PARAMETERS A WHERE A.TASK_ID = :B2 AND A.NAME = :B1

000000008B0AFCE0
SELECT COUNT(*),MAX(A.FLAGS) FROM SYS.WRI$_ADV_PARAMETERS A WHERE A.TASK_ID = :B2 AND A.NAME = :B1

000000008C92A438
SELECT COUNT(*),MAX(A.FLAGS) FROM SYS.WRI$_ADV_PARAMETERS A WHERE A.TASK_ID = :B2 AND A.NAME = :B1

000000008B109B88
791e28d266f9df761f56cbfc6109b00c

000000008B237460
e45909ba8a185710be63e403470622c7

000000008C92E118 SYS
DBA_ADVISOR_DIR_DEFINITIONS

000000008B04CC60
SELECT COUNT(*) FROM

0000000060CC7190
b4346dae6f42ea4dfb6cf687a11ee0b9

000000008C973028
UPDATE WRI$_ADV_ADDM_INST SET DATABASE_TIME = :B4 , ACTIVE_SESSIONS = :B4 / (1000000 * GREATEST(:B3 ,1)), PERC_ACTIVE_SESS = 100, PERC_
FLUSH_TIME = :B2 WHERE TASK_ID = :B1

000000008CB5AF70
UPDATE WRI$_ADV_ADDM_INST SET DATABASE_TIME = :B4 , ACTIVE_SESSIONS = :B4 / (1000000 * GREATEST(:B3 ,1)), PERC_ACTIVE_SESS = 100, PERC_
FLUSH_TIME = :B2 WHERE TASK_ID = :B1

000000008B304028
UPDATE WRI$_ADV_ADDM_INST SET DATABASE_TIME = :B4 , ACTIVE_SESSIONS = :B4 / (1000000 * GREATEST(:B3 ,1)), PERC_ACTIVE_SESS = 100, PERC_
FLUSH_TIME = :B2 WHERE TASK_ID = :B1

0000000060DDB2F0
UPDATE WRI$_ADV_ADDM_INST SET DATABASE_TIME = :B4 , ACTIVE_SESSIONS = :B4 / (1000000 * GREATEST(:B3 ,1)), PERC_ACTIVE_SESS = 100, PERC_
FLUSH_TIME = :B2 WHERE TASK_ID = :B1

0000000060DC1E18
UPDATE WRI$_ADV_ADDM_INST SET DATABASE_TIME = :B4 , ACTIVE_SESSIONS = :B4 / (1000000 * GREATEST(:B3 ,1)), PERC_ACTIVE_SESS = 100, PERC_
FLUSH_TIME = :B2 WHERE TASK_ID = :B1

0000000092D48688
UPDATE WRI$_ADV_ADDM_INST SET DATABASE_TIME = :B4 , ACTIVE_SESSIONS = :B4 / (1000000 * GREATEST(:B3 ,1)), PERC_ACTIVE_SESS = 100, PERC_
FLUSH_TIME = :B2 WHERE TASK_ID = :B1

0000000088FB9038
b21073388c363f0ee28db85a8c6bdf9

00000000652E41B0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  B.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060ED0580
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  B.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008CB33CB8
9c05b88ef8c8986a2ce70bde95e470c

0000000088EA4470 SYS
UTL_INADDR

0000000088FFE200 SYS
WRH$_BG_EVENT_SUMMARY

000000008B39C9B8
70583220d58fe4e44a4ecd3fc3880435

000000008B33C808 $BUILD$
ecd5c66ffe5910cb

000000008C8DA6D8
9922594484807840074

000000008C8394A8 $BUILD$
a0f9d93a8d2eb67b

000000008B080FC0
SELECT O2.NAME INDEX

0000000088DC7678
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.0211023307
9) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO
#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823
) OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0")
, "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS
=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ5", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQu
ery", NLJ_INDEX_FILTER, "S#1", ("F#0"), "I_FILE#_BLOCK#

0000000060E8C0D0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.0211023307
9) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO
#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823
) OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0")
, "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS
=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ5", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQu
ery", NLJ_INDEX_FILTER, "S#1", ("F#0"), "I_FILE#_BLOCK#

0000000088D21160
insert into obj$(owner#,name,namespace,obj#,type#,ctime,mtime,stime,status,remoteowner,linkname,subname,dataobj#,flags,oid$,spare1,spar
e2,spare3) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)

000000008CBD2E40
insert into obj$(owner#,name,namespace,obj#,type#,ctime,mtime,stime,status,remoteowner,linkname,subname,dataobj#,flags,oid$,spare1,spar
e2,spare3) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)

000000008B03E4E8
insert into obj$(owner#,name,namespace,obj#,type#,ctime,mtime,stime,status,remoteowner,linkname,subname,dataobj#,flags,oid$,spare1,spar
e2,spare3) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)

0000000088D215E0
insert into obj$(owner#,name,namespace,obj#,type#,ctime,mtime,stime,status,remoteowner,linkname,subname,dataobj#,flags,oid$,spare1,spar
e2,spare3) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)

000000008B1554B8
SELECT OWNER, SEGMENT_NAME, PARTITION_NAME, SEGMENT_TYPE, TABLESPACE_NAME, TABLESPACE_ID FROM SYS_DBA_SEGS WHERE SEGMENT_OBJD = :B1 AND
 SEGMENT_TYPE <> 'ROLLBACK' AND SEGMENT_TYPE <> 'TYPE2 UNDO' AND SEGMENT_TYPE <> 'DEFERRED ROLLBACK' AND SEGMENT_TYPE <> 'TEMPORARY' AN
D SEGMENT_TYPE <> 'CACHE' AND SEGMENT_TYPE <> 'SPACE HEADER' AND SEGMENT_TYPE <> 'UNDEFINED' AND TABLESPACE_NAME NOT IN ('SYSAUX' , 'SY
STEM')

0000000088EA06A8
SELECT OWNER, SEGMENT_NAME, PARTITION_NAME, SEGMENT_TYPE, TABLESPACE_NAME, TABLESPACE_ID FROM SYS_DBA_SEGS WHERE SEGMENT_OBJD = :B1 AND
 SEGMENT_TYPE <> 'ROLLBACK' AND SEGMENT_TYPE <> 'TYPE2 UNDO' AND SEGMENT_TYPE <> 'DEFERRED ROLLBACK' AND SEGMENT_TYPE <> 'TEMPORARY' AN
D SEGMENT_TYPE <> 'CACHE' AND SEGMENT_TYPE <> 'SPACE HEADER' AND SEGMENT_TYPE <> 'UNDEFINED' AND TABLESPACE_NAME NOT IN ('SYSAUX' , 'SY
STEM')

000000008C88BC50
SELECT OWNER, SEGMENT_NAME, PARTITION_NAME, SEGMENT_TYPE, TABLESPACE_NAME, TABLESPACE_ID FROM SYS_DBA_SEGS WHERE SEGMENT_OBJD = :B1 AND
 SEGMENT_TYPE <> 'ROLLBACK' AND SEGMENT_TYPE <> 'TYPE2 UNDO' AND SEGMENT_TYPE <> 'DEFERRED ROLLBACK' AND SEGMENT_TYPE <> 'TEMPORARY' AN
D SEGMENT_TYPE <> 'CACHE' AND SEGMENT_TYPE <> 'SPACE HEADER' AND SEGMENT_TYPE <> 'UNDEFINED' AND TABLESPACE_NAME NOT IN ('SYSAUX' , 'SY
STEM')

0000000088FAC698
SELECT OWNER, SEGMENT_NAME, PARTITION_NAME, SEGMENT_TYPE, TABLESPACE_NAME, TABLESPACE_ID FROM SYS_DBA_SEGS WHERE SEGMENT_OBJD = :B1 AND
 SEGMENT_TYPE <> 'ROLLBACK' AND SEGMENT_TYPE <> 'TYPE2 UNDO' AND SEGMENT_TYPE <> 'DEFERRED ROLLBACK' AND SEGMENT_TYPE <> 'TEMPORARY' AN
D SEGMENT_TYPE <> 'CACHE' AND SEGMENT_TYPE <> 'SPACE HEADER' AND SEGMENT_TYPE <> 'UNDEFINED' AND TABLESPACE_NAME NOT IN ('SYSAUX' , 'SY
STEM')

0000000060CAEF40
select REGEXP_SUBSTR(:1,'\s+rename\s+to\s+',1,1,'i') from dual

000000008B245C90
select REGEXP_SUBSTR(:1,'\s+rename\s+to\s+',1,1,'i') from dual

0000000088CEF968 SYS
DBA_SQLSET_STATEMENTS

0000000088EFE700
begin dbms_stats.lock_partition_stats('SYS', :bind1, :bind2); end;

0000000088F966C0
begin dbms_stats.lock_partition_stats('SYS', :bind1, :bind2); end;

000000008B19AC68
9be7fd90b505f4882e77a83a377766d

0000000088E12268
SELECT OWNER FROM DB

000000008CA1EC48 PUBLIC
DBMS_JOB

0000000088EF0890 SYS
WRH$_SEG_STAT

000000008C890710
select * from gv$logfile order by INST_ID,GROUP#

0000000065306AB0
select * from gv$logfile order by INST_ID,GROUP#

000000008B063820
SELECT CACHE_STATS_S

0000000092C4B8F0
SELECT COUNT(*) FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND A.OWNER# = :B2 AND BITAND(A.PROPERTY, :B1 ) = :B1

000000008CB54F90
SELECT COUNT(*) FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND A.OWNER# = :B2 AND BITAND(A.PROPERTY, :B1 ) = :B1

000000008C8BEB80
SELECT COUNT(*) FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND A.OWNER# = :B2 AND BITAND(A.PROPERTY, :B1 ) = :B1


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
0000000088DA9868
SELECT COUNT(*) FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND A.OWNER# = :B2 AND BITAND(A.PROPERTY, :B1 ) = :B1

0000000060F4C500
SELECT COUNT(*) FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND A.OWNER# = :B2 AND BITAND(A.PROPERTY, :B1 ) = :B1

000000008C916DB8
SELECT COUNT(*) FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND A.OWNER# = :B2 AND BITAND(A.PROPERTY, :B1 ) = :B1

000000008CB30AB8 SYS
ASSOCIATION$

0000000088FBEB08
10a0910e37b72cf612dd6f811a29689a

0000000088C96F88
SELECT XMLELEMENT( "

000000008CBE3508
1d4a51a2c89ab6b07a3c64bebc5573b6

000000008B287F50
SELECT :B8 TYPE_CON,

0000000088D05AF8
7f28acbbc78981c3e36a87ec109bb8c6

0000000092D57DB8
SELECT O.OBJ# FROM O

0000000088DE0028
967a06069f00218ab026dc22c87db79f

000000008CAF4CD8
SELECT C.USERNAME, C

0000000060C9E060
3272f675c4c1036016f909666711fd17

0000000060E21430
768ebdc9915366e751cd0fa39a35c699

0000000088EDB5B0
732d1523e906e89a5839117a4fa53ef

0000000092CBF138 SYS
PROXY_ROLE_DATA$

000000008CAE6C18
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CA51E28
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B265B28 $BUILD$
cb23a683d22e908a

0000000060FC3710
SELECT ID FROM WWV_F

0000000060F76840
SELECT MAX(NAME) FRO

00000000652BA2D0
SELECT inst_id, COMPONENT_ID_KSFDSTCMP,                                     decode(COMPONENT_ID_KSFDSTCMP,
               0, 'RMAN', 1, 'DBWR', 2, 'LGWR', 3, 'ARCH',                               4, 'XDB',  5, 'Streams AQ',
                            6, 'Data Pump', 7, 'Recovery', 8, 'Buffer Cache Reads',                   9, 'Direct Reads', 10, 'Direct Wr
ites',                                   11, 'Smart Scan', 12, 'Archive Manager', 13, 'Others'),
   sum(round((SBRDATA_KSFDSTCMP + A_SBRDATA_KSFDSTCMP) / 2048)),             sum(round((SBWDATA_KSFDSTCMP + A_SBWDATA_KSFDSTCMP) / 2048
)),             sum(round((MBRDATA_KSFDSTCMP + A_MBRDATA_KSFDSTCMP) / 2048)),             sum(round((MBWDATA_KSFDSTCMP + A_MBWDATA_KSFD
STCMP) / 2048)),             sum(SBRREQS_KSFDSTCMP + A_SBRREQS_KSFDSTCMP),                             sum(SBWREQS_KSFDSTCMP + A_SBWREQ
S_KSFDSTCMP),                             sum(MBRREQS_K

000000008CAA9338
SELECT inst_id, COMPONENT_ID_KSFDSTCMP,                                     decode(COMPONENT_ID_KSFDSTCMP,
               0, 'RMAN', 1, 'DBWR', 2, 'LGWR', 3, 'ARCH',                               4, 'XDB',  5, 'Streams AQ',
                            6, 'Data Pump', 7, 'Recovery', 8, 'Buffer Cache Reads',                   9, 'Direct Reads', 10, 'Direct Wr
ites',                                   11, 'Smart Scan', 12, 'Archive Manager', 13, 'Others'),
   sum(round((SBRDATA_KSFDSTCMP + A_SBRDATA_KSFDSTCMP) / 2048)),             sum(round((SBWDATA_KSFDSTCMP + A_SBWDATA_KSFDSTCMP) / 2048
)),             sum(round((MBRDATA_KSFDSTCMP + A_MBRDATA_KSFDSTCMP) / 2048)),             sum(round((MBWDATA_KSFDSTCMP + A_MBWDATA_KSFD
STCMP) / 2048)),             sum(SBRREQS_KSFDSTCMP + A_SBRREQS_KSFDSTCMP),                             sum(SBWREQS_KSFDSTCMP + A_SBWREQ
S_KSFDSTCMP),                             sum(MBRREQS_K

000000008C9D70D0
fb2817f3fa2785bcd5f9961583c9e85

0000000088C6B520
INSERT INTO SYS.SCHE

0000000088F45948
SELECT BP.RECID, BP.

0000000060C86030
b4f4de412cfdd548e440a201a96cc53b

0000000088E7E750
f031b3da77f4065efe927b31abb88fbf

0000000060D460C8
967a06069f00218ab026dc22c87db79f

000000008C90D980
select con#,spare1 from con$ where owner#=:1 and name=:2

000000008B21F2E0
select con#,spare1 from con$ where owner#=:1 and name=:2

0000000088C8FC98
SELECT WRI$_SQLSET_S

0000000088E80BB0 $BUILD$
 c2d594e7c612711

000000008B23FCC8
4406393a83e08658fdc6222542f1099c

000000008CB486B0
335dfaebffd4b22aa211a3fd6dbc845f

000000008C90D810
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000653CB298
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092CA5138
SELECT MIN(START_DAT

0000000060F48E80
SELECT VALUE, ORDINA

000000008B16ED30
select min(minbkt),m

000000008C92ABB8
UPDATE SYS.WRI$_ADV_

000000008C980680 APEX_030200
WWV_FLOW_IMPORT_EXPORT

0000000092EBFEF0
b670d0bec8dd4595f6cfedc5f1ee9ef

0000000088D2F9F8
SELECT C.RULE_SET, C

0000000088E72440
insert into wrh$_rowcache_summary   (snap_id, dbid, instance_number, parameter, total_usage, usage,    gets, getmisses, scans, scanmiss
es, scancompletes, modifications,    flushes, dlm_requests, dlm_conflicts, dlm_releases)  select    :snap_id, :dbid, :instance_number,
parameter, sum("COUNT"),    sum(usage), sum(gets), sum(getmisses), sum(scans), sum(scanmisses),    sum(scancompletes), sum(modification
s), sum(flushes), sum(dlm_requests),    sum(dlm_conflicts), sum(dlm_releases)  from    v$rowcache  group by    parameter  order by    p
arameter

0000000088FE6360
insert into wrh$_rowcache_summary   (snap_id, dbid, instance_number, parameter, total_usage, usage,    gets, getmisses, scans, scanmiss
es, scancompletes, modifications,    flushes, dlm_requests, dlm_conflicts, dlm_releases)  select    :snap_id, :dbid, :instance_number,
parameter, sum("COUNT"),    sum(usage), sum(gets), sum(getmisses), sum(scans), sum(scanmisses),    sum(scancompletes), sum(modification
s), sum(flushes), sum(dlm_requests),    sum(dlm_conflicts), sum(dlm_releases)  from    v$rowcache  group by    parameter  order by    p
arameter

0000000088E9EDA0
insert into wrh$_rowcache_summary   (snap_id, dbid, instance_number, parameter, total_usage, usage,    gets, getmisses, scans, scanmiss
es, scancompletes, modifications,    flushes, dlm_requests, dlm_conflicts, dlm_releases)  select    :snap_id, :dbid, :instance_number,
parameter, sum("COUNT"),    sum(usage), sum(gets), sum(getmisses), sum(scans), sum(scanmisses),    sum(scancompletes), sum(modification
s), sum(flushes), sum(dlm_requests),    sum(dlm_conflicts), sum(dlm_releases)  from    v$rowcache  group by    parameter  order by    p
arameter

0000000060FD7580
insert into wrh$_rowcache_summary   (snap_id, dbid, instance_number, parameter, total_usage, usage,    gets, getmisses, scans, scanmiss
es, scancompletes, modifications,    flushes, dlm_requests, dlm_conflicts, dlm_releases)  select    :snap_id, :dbid, :instance_number,
parameter, sum("COUNT"),    sum(usage), sum(gets), sum(getmisses), sum(scans), sum(scanmisses),    sum(scancompletes), sum(modification
s), sum(flushes), sum(dlm_requests),    sum(dlm_conflicts), sum(dlm_releases)  from    v$rowcache  group by    parameter  order by    p
arameter

0000000088E728C0
insert into wrh$_rowcache_summary   (snap_id, dbid, instance_number, parameter, total_usage, usage,    gets, getmisses, scans, scanmiss
es, scancompletes, modifications,    flushes, dlm_requests, dlm_conflicts, dlm_releases)  select    :snap_id, :dbid, :instance_number,
parameter, sum("COUNT"),    sum(usage), sum(gets), sum(getmisses), sum(scans), sum(scanmisses),    sum(scancompletes), sum(modification
s), sum(flushes), sum(dlm_requests),    sum(dlm_conflicts), sum(dlm_releases)  from    v$rowcache  group by    parameter  order by    p
arameter

0000000088DB3F98
f3bf7a82af101b8e1b0d6a8db8f4959f

0000000060F14830 PUBLIC
A

000000008C968C10
3896ecb5cbab5f95bf9f8891abe1a39

0000000088D358F0
fd330516529c4d986ed71746c47acfc2

0000000088C54F78
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT SEG, TS$ TS, SEG$ S2 WHERE SNAP_ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# =
 SEG.TS# AND SEG.TS# = TS.TS# AND TS.NAME NOT IN ('SYSTEM', 'SYSAUX') AND ((PHYSICAL_WRITE_REQUESTS_DELTA + PHYSICAL_READ_REQUESTS_DELT
A) > 0)

0000000088E7A150
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT SEG, TS$ TS, SEG$ S2 WHERE SNAP_ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# =
 SEG.TS# AND SEG.TS# = TS.TS# AND TS.NAME NOT IN ('SYSTEM', 'SYSAUX') AND ((PHYSICAL_WRITE_REQUESTS_DELTA + PHYSICAL_READ_REQUESTS_DELT
A) > 0)

000000008B19D328
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT SEG, TS$ TS, SEG$ S2 WHERE SNAP_ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# =
 SEG.TS# AND SEG.TS# = TS.TS# AND TS.NAME NOT IN ('SYSTEM', 'SYSAUX') AND ((PHYSICAL_WRITE_REQUESTS_DELTA + PHYSICAL_READ_REQUESTS_DELT
A) > 0)

000000008CB0F848
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT SEG, TS$ TS, SEG$ S2 WHERE SNAP_ID > :B1 AND S2.HWMINCR = SEG.DATAOBJ# AND S2.TS# =
 SEG.TS# AND SEG.TS# = TS.TS# AND TS.NAME NOT IN ('SYSTEM', 'SYSAUX') AND ((PHYSICAL_WRITE_REQUESTS_DELTA + PHYSICAL_READ_REQUESTS_DELT
A) > 0)

0000000088FD6588 APEX_030200
WWV_FLOW_CONDITIONS

0000000088ECA520
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("IND") FULL("IN
D") NO_PARALLEL_INDEX("IND") */ 1 AS C1, CASE WHEN BITAND("IND"."FLAGS",5145)=0 AND "IND"."TYPE#"<>4 AND "IND"."TYPE#"<>8 THEN 1 ELSE 0
 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "IND") SAMPLESUB

000000008CB92938
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("IND") FULL("IN
D") NO_PARALLEL_INDEX("IND") */ 1 AS C1, CASE WHEN BITAND("IND"."FLAGS",5145)=0 AND "IND"."TYPE#"<>4 AND "IND"."TYPE#"<>8 THEN 1 ELSE 0
 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "IND") SAMPLESUB

000000008C9F37C0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("IND") FULL("IN
D") NO_PARALLEL_INDEX("IND") */ 1 AS C1, CASE WHEN BITAND("IND"."FLAGS",5145)=0 AND "IND"."TYPE#"<>4 AND "IND"."TYPE#"<>8 THEN 1 ELSE 0
 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "IND") SAMPLESUB

0000000060E6EEE0
587d607d22dc087fd8c8faa22eeaf292

0000000060F86538
8b01979a83cf57eb195dd4bb1fe5df

000000008B102C68
e416dfe67ba43f3c8006d9e2a37268

000000008B2D0410
SELECT VALUE V FROM WWV_FLOW_PLATFORM_PREFS WHERE NAME = :B1

000000008B3EBFC0
SELECT VALUE V FROM WWV_FLOW_PLATFORM_PREFS WHERE NAME = :B1

000000008CAE4170 PUBLIC
DBMS_SCHEDULER

0000000060CC3A18
e6a578e6edeb50af6c5b1098fbd7916b

000000008C955E80
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("F#0", "S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02
110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4"), "I_TS#", SCALE_ROWS=0.03367951986) OPT_ESTIMAT
E(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SC
AN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2", "TS#
3"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2", "O#4"), "I_FILE2", SCALE
_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_EST
IMATE(@"innerQuery", NLJ_INDEX_FILTER, "S#1", ("F#0"),

00000000653C5C70
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("F#0", "S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02
110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4"), "I_TS#", SCALE_ROWS=0.03367951986) OPT_ESTIMAT
E(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SC
AN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2", "TS#
3"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2", "O#4"), "I_FILE2", SCALE
_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_EST
IMATE(@"innerQuery", NLJ_INDEX_FILTER, "S#1", ("F#0"),

000000008B199E58 V_J
COLUMN_NAME

000000008B265D48
DELETE FROM RLM$SCHA

0000000060C8EC10
select bp.lo_setid,bp.hi_setid from    v$buffer_pool

0000000060FC4620
select bp.lo_setid,bp.hi_setid from    v$buffer_pool

000000008B3F9E98
SELECT BP.RECID, BP.

0000000092D82540 APEX_030200
WWV_HTF

0000000060E438D0
3896ecb5cbab5f95bf9f8891abe1a39

000000008CADC1A8
SELECT USERENV('ISDB

000000008CB5FC50
delete from WRH$_SERVICE_WAIT_CLASS_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbi
d)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap
_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B39BC80
delete from WRH$_SERVICE_WAIT_CLASS_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbi
d)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap
_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CA16700
select A.OBJNUM, decode(bitand(A.FLGS,549755813888),0,0,1) from  (select obj# OBJNUM, class_oid CLSOID, flags FLGS from sys.scheduler$_
job   union all   select obj#, class_oid, flags from sys.scheduler$_lightweight_job) A  where A.CLSOID = :1 and bitand(A.FLGS,137438953
472) = 0 order by A.OBJNUM

0000000088F1C028
select A.OBJNUM, decode(bitand(A.FLGS,549755813888),0,0,1) from  (select obj# OBJNUM, class_oid CLSOID, flags FLGS from sys.scheduler$_
job   union all   select obj#, class_oid, flags from sys.scheduler$_lightweight_job) A  where A.CLSOID = :1 and bitand(A.FLGS,137438953
472) = 0 order by A.OBJNUM

0000000088C79618
select A.OBJNUM, decode(bitand(A.FLGS,549755813888),0,0,1) from  (select obj# OBJNUM, class_oid CLSOID, flags FLGS from sys.scheduler$_
job   union all   select obj#, class_oid, flags from sys.scheduler$_lightweight_job) A  where A.CLSOID = :1 and bitand(A.FLGS,137438953
472) = 0 order by A.OBJNUM

0000000088DA8280
select A.OBJNUM, decode(bitand(A.FLGS,549755813888),0,0,1) from  (select obj# OBJNUM, class_oid CLSOID, flags FLGS from sys.scheduler$_
job   union all   select obj#, class_oid, flags from sys.scheduler$_lightweight_job) A  where A.CLSOID = :1 and bitand(A.FLGS,137438953
472) = 0 order by A.OBJNUM

0000000060FE0868
722f7c0049c65d6c77a7849d9ea70789

000000008CA30410
62edd6cedf951470ab5a075620b35a11

000000008B21C230
SELECT O.OBJ#, CO.NA

0000000088F68DD8
SELECT NAME AS INDEX

0000000065340000 $BUILD$
b2025cf7 c93e249

0000000088F33DF8 SYS
WRH$_ACTIVE_SESSION_HISTORY

0000000060D47F48
SELECT QT.OBJNO FROM

0000000088EE7D20
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CB092F0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F8CD10
bbef25e4b433fac0629afc9c1723c09c

000000008C92A6A8
SELECT DECODE(:B1 ,0

000000008C901558
UPDATE SYS.WRI$_ADV_EXECUTIONS SET EXEC_MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), EXEC_END = NVL(:B3 , EXEC_END) WHERE TASK_ID = :B2
 AND NAME = :B1

000000008CA23418
UPDATE SYS.WRI$_ADV_EXECUTIONS SET EXEC_MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), EXEC_END = NVL(:B3 , EXEC_END) WHERE TASK_ID = :B2
 AND NAME = :B1

0000000088D6EED8
UPDATE SYS.WRI$_ADV_EXECUTIONS SET EXEC_MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), EXEC_END = NVL(:B3 , EXEC_END) WHERE TASK_ID = :B2
 AND NAME = :B1

000000008B132768
UPDATE SYS.WRI$_ADV_EXECUTIONS SET EXEC_MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), EXEC_END = NVL(:B3 , EXEC_END) WHERE TASK_ID = :B2
 AND NAME = :B1

0000000060FFD910
UPDATE SYS.WRI$_ADV_EXECUTIONS SET EXEC_MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), EXEC_END = NVL(:B3 , EXEC_END) WHERE TASK_ID = :B2
 AND NAME = :B1

000000008C903F70
UPDATE SYS.WRI$_ADV_EXECUTIONS SET EXEC_MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), EXEC_END = NVL(:B3 , EXEC_END) WHERE TASK_ID = :B2
 AND NAME = :B1

000000008C92BAC8
UPDATE SYS.WRI$_ADV_EXECUTIONS SET EXEC_MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), EXEC_END = NVL(:B3 , EXEC_END) WHERE TASK_ID = :B2
 AND NAME = :B1

0000000060D470B8
2d16c3521b485d8075001c0387e32b95

0000000088F6DED0
UPDATE SYS.WRI$_SEGADV_OBJLIST SET STATUS = 'NEW' WHERE STATUS = 'BEING_PROCESSED'

0000000088FC9068
UPDATE SYS.WRI$_SEGADV_OBJLIST SET STATUS = 'NEW' WHERE STATUS = 'BEING_PROCESSED'

0000000088E559D8
UPDATE SYS.WRI$_SEGADV_OBJLIST SET STATUS = 'NEW' WHERE STATUS = 'BEING_PROCESSED'

0000000060E01FF0
SELECT COUNT(*) FROM

000000008CADADA8
SELECT SYS_CONTEXT(:

0000000092C81D68
5a09d6bdd3eb07dfeddc2feb33ffdc74

0000000092D50108
SELECT A.TASK_ID AS

0000000092D567D8 SYS
X$KCFTIO

0000000092D33A10
SELECT UNIQUE O.NAME

0000000060D1A650
call sdo_geor_def.doAlterRenameTable()

0000000092D429E8
call sdo_geor_def.doAlterRenameTable()

0000000060EA3B70
c4feca09a9e51d3c542c0cfcc71f3e0

000000008B0B9B40
SELECT ITEM_NAME, WW

000000008C871E88
b4346dae6f42ea4dfb6cf687a11ee0b9

0000000088F200C0
/* SQL Analyze(1) */

0000000060F70AA0
select name ,count(*) from v$buffer_pool group by name order by 2

000000008B08F4C0
select name ,count(*) from v$buffer_pool group by name order by 2

000000008B121D78
begin dbms_stats.unlock_partition_stats('SYS', :bind1, :bind2); end;

000000008B1AF650
begin dbms_stats.unlock_partition_stats('SYS', :bind1, :bind2); end;

000000008CA3F500
select bl.baseline_id, bl.start_snap_id, min(s1.begin_interval_time), bl.end_snap_id, max(s2.end_interval_time) from wrm$_baseline bl,
wrm$_snapshot s1, wrm$_snapshot s2 where (bl.start_snap_id = s1.snap_id) and (bl.end_snap_id = s2.snap_id) and (bl.dbid = :dbid) and (b
l.dbid = s1.dbid) and (bl.dbid = s2.dbid) and (bl.baseline_id != 0) group by bl.baseline_id, bl.start_snap_id, bl.end_snap_id

0000000088FDF2D0
select bl.baseline_id, bl.start_snap_id, min(s1.begin_interval_time), bl.end_snap_id, max(s2.end_interval_time) from wrm$_baseline bl,
wrm$_snapshot s1, wrm$_snapshot s2 where (bl.start_snap_id = s1.snap_id) and (bl.end_snap_id = s2.snap_id) and (bl.dbid = :dbid) and (b
l.dbid = s1.dbid) and (bl.dbid = s2.dbid) and (bl.baseline_id != 0) group by bl.baseline_id, bl.start_snap_id, bl.end_snap_id

0000000060F78290 SYS
V$BUFFER_POOL?

0000000092D536E8
97439c48452c64498bc48455c369699f

0000000088DB7448 SYS
WRH$_PLAN_OPERATION_NAME

0000000088E76EC0
SELECT S.VALUE FROM

000000008C98A070
c7e380e2d0008b6047cf4710354d8a4c

000000008B13C878
a66d58797b447360d4179150a16f7c70

000000008B381010
SELECT * FROM SYS.SC

0000000088FECF70
DELETE DBMS_LOCK_ALL

0000000092D6EAA8
558efbca1489645648b8cdc4a0f67bf

0000000088E10808
2fb162dbf6de4baab8856d1513b2e443

000000008B05E450
SELECT SUBNAME FROM

0000000060C98480
select inst_id,alrid,alstm,alnam,aldst,althp,alseq,to_number(alrls),to_date(alrlc,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),to_nu
mber(alxlc),to_number(allos),to_date(allot,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),to_number(alnxs),to_date(alnxt,'MM/DD/RR HH2
4:MI:SS','NLS_CALENDAR=Gregorian'),albct,albsz,decode(bitand(alflg, 16+32+64+128+256),    16, 'ARCH',    32, 'FGRD',    64, 'RMAN',
128,'SRMN',    256,'LGWR',        'UNKNOWN'),decode(bitand(alflg, 4),    4,  'RFS',    decode(bitand(alflg, 16+32+64+128+256),    16, '
ARCH',    32, 'FGRD',    64, 'RMAN',    128,'SRMN',    256,'LGWR',        'UNKNOWN')),decode(bitand(alflg, 8),0,'NO','YES'),decode(bita
nd(alflg, 2),0,'NO','YES'),decode(bitand(alflg, 1024),0,              (decode(bitand(alfl2, 16384),0,'NO','IN-MEMORY')),'YES'),decode(b
itand(alflg, 1),0,'NO','YES'),decode(bitand(alflg, 1+2048+4096),    0,   'A',    1,   'D',    2048,'X',    4096,'U',         '?'),to_da
te(altsm,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'

0000000092D5FB98
select inst_id,alrid,alstm,alnam,aldst,althp,alseq,to_number(alrls),to_date(alrlc,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),to_nu
mber(alxlc),to_number(allos),to_date(allot,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),to_number(alnxs),to_date(alnxt,'MM/DD/RR HH2
4:MI:SS','NLS_CALENDAR=Gregorian'),albct,albsz,decode(bitand(alflg, 16+32+64+128+256),    16, 'ARCH',    32, 'FGRD',    64, 'RMAN',
128,'SRMN',    256,'LGWR',        'UNKNOWN'),decode(bitand(alflg, 4),    4,  'RFS',    decode(bitand(alflg, 16+32+64+128+256),    16, '
ARCH',    32, 'FGRD',    64, 'RMAN',    128,'SRMN',    256,'LGWR',        'UNKNOWN')),decode(bitand(alflg, 8),0,'NO','YES'),decode(bita
nd(alflg, 2),0,'NO','YES'),decode(bitand(alflg, 1024),0,              (decode(bitand(alfl2, 16384),0,'NO','IN-MEMORY')),'YES'),decode(b
itand(alflg, 1),0,'NO','YES'),decode(bitand(alflg, 1+2048+4096),    0,   'A',    1,   'D',    2048,'X',    4096,'U',         '?'),to_da
te(altsm,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'

000000008CA27D10 SYS
REGISTRY$SCHEMAS

0000000088D8FE58 SYS
WRH$_SQLSTAT_INDEX

0000000088DE7B28 $BUILD$
9ce8f8b8efc69b00

000000008B07FCE0
SELECT TYP_OWN.NAME,

000000008B0D2C88
SELECT Q.OID, T.FLAG

000000008B3B08E8
9708d096a0ed7895210ca65c9f86b290

000000008CA4DE58
delete from WRH$_SERVICE_STAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060DB0718
delete from WRH$_SERVICE_STAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C5F108 $BUILD$
207a67424584db29

000000008B1D7728
update wrm$_snapshot tab set status = 2  where (:beg_snap <= tab.snap_id and tab.snap_id <= :end_snap         and tab.dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.snap_id >= b.start_snap_id)                          and (t
ab.snap_id <= b.end_snap_id)                          and (b.dbid = :dbid2))

000000008B18DB10
update wrm$_snapshot tab set status = 2  where (:beg_snap <= tab.snap_id and tab.snap_id <= :end_snap         and tab.dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.snap_id >= b.start_snap_id)                          and (t
ab.snap_id <= b.end_snap_id)                          and (b.dbid = :dbid2))

0000000060FAB4A0 $BUILD$
564abe2267a25645

0000000060EFBDC0
6696d34c6885b0b88650073554a6a2f

0000000088DB6A18
SELECT * FROM RLM$JOBQUEUE WHERE SCHED_AT < SYSTIMESTAMP AND ROWNUM < 2 FOR UPDATE

0000000088DFDC58
SELECT * FROM RLM$JOBQUEUE WHERE SCHED_AT < SYSTIMESTAMP AND ROWNUM < 2 FOR UPDATE

000000008C922068
DELETE FROM WRI$_ADV

0000000060F7B350
SELECT UNIQUE OWNER,

0000000088E8EB90
DELETE FROM sys.sumpartlog$ sp   WHERE sp.bo# = :1

0000000088C5B658
DELETE FROM sys.sumpartlog$ sp   WHERE sp.bo# = :1

000000008C889358
SELECT C.NAME AS COLUMN_NAME, CU.TIMESTAMP AS TIMESTAMP, CU.EQUALITY_PREDS AS WHERE_EQUAL_SEARCH, CU.EQUIJOIN_PREDS AS EQUAL_JOIN, CU.N
ONEQUIJOIN_PREDS AS NONE_EQUAL_JOIN, CU.RANGE_PREDS AS WHERE_RANGE_SEARCH, CU.LIKE_PREDS AS WHERE_LIKE_SEARCH, CU.NULL_PREDS AS WHERE_N
ULL_SEARCH FROM SYS.COL$ C, SYS.COL_USAGE$ CU, SYS.OBJ$ O, SYS.USER$ U WHERE C.OBJ# = CU.OBJ# (+) AND C.INTCOL# = CU.INTCOL# (+) AND C.
OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND O.NAME = :B2 AND U.NAME = :B1 ORDER BY C.COL#

000000008B19DD98
SELECT C.NAME AS COLUMN_NAME, CU.TIMESTAMP AS TIMESTAMP, CU.EQUALITY_PREDS AS WHERE_EQUAL_SEARCH, CU.EQUIJOIN_PREDS AS EQUAL_JOIN, CU.N
ONEQUIJOIN_PREDS AS NONE_EQUAL_JOIN, CU.RANGE_PREDS AS WHERE_RANGE_SEARCH, CU.LIKE_PREDS AS WHERE_LIKE_SEARCH, CU.NULL_PREDS AS WHERE_N
ULL_SEARCH FROM SYS.COL$ C, SYS.COL_USAGE$ CU, SYS.OBJ$ O, SYS.USER$ U WHERE C.OBJ# = CU.OBJ# (+) AND C.INTCOL# = CU.INTCOL# (+) AND C.
OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND O.NAME = :B2 AND U.NAME = :B1 ORDER BY C.COL#

000000008CA71760 SYS
DBMS_SPACE_ADMIN_LIB

000000008CBC68B8
SELECT COUNT(*) FROM

000000008B088E60
SELECT /*+ ordered f

000000008B18A290
c36d5a579fdc3e19733192893dec6f4a

0000000060CF7FC8
c40023e74668cd0711cb8f2151077dcb

0000000088CEF308 SYS
DBMS_WORKLOAD_REPLAY

0000000088D17D30
SELECT TO_CHAR(II.IN

0000000060C996C0
3a9b479e3630f1912a9d9d1b2e275a0

0000000088C8C8F8
UPDATE WRI$_SQLSET_S

000000008B1A57E8
335dfaebffd4b22aa211a3fd6dbc845f

0000000088E13D78
select /*+  no_paral

0000000088C37B28
select action, number_of_args, comments, flags, schedule_limit,         priority, job_weight, max_runs, max_failures,         max_run_d
uration, nls_env, env  from sys.scheduler$_program  where obj# = :1

0000000088C37FA8
select action, number_of_args, comments, flags, schedule_limit,         priority, job_weight, max_runs, max_failures,         max_run_d
uration, nls_env, env  from sys.scheduler$_program  where obj# = :1

0000000088F626E8
SELECT NVL(MAX(NEXT_

0000000092EC0D90
select obj#, prgoid, creation_time, mod_time, spec_time, flags    from sys.scheduler$_lwjob_obj where userid = :1 and name = :2 and
subname is null

0000000088E44698
select obj#, prgoid, creation_time, mod_time, spec_time, flags    from sys.scheduler$_lwjob_obj where userid = :1 and name = :2 and
subname is null

000000008CB955C8
select obj#, prgoid, creation_time, mod_time, spec_time, flags    from sys.scheduler$_lwjob_obj where userid = :1 and name = :2 and
subname is null

0000000060FC74B0
a3483614c7f860e5bf31822bdf29ae7c

0000000060F2BF80
SELECT COUNT(*) FROM

000000008CAE3800
select case when (bitand(u.spare1, 16) = 0) then         0        when (u.type# = 2) then         (u.spare2)        else         1
   end from obj$ o, user$ u where o.obj# = :1 and o.owner# = u.user#

0000000088D2EDB8
select case when (bitand(u.spare1, 16) = 0) then         0        when (u.type# = 2) then         (u.spare2)        else         1
   end from obj$ o, user$ u where o.obj# = :1 and o.owner# = u.user#

00000000653CA710
select case when (bitand(u.spare1, 16) = 0) then         0        when (u.type# = 2) then         (u.spare2)        else         1
   end from obj$ o, user$ u where o.obj# = :1 and o.owner# = u.user#

000000008CAE3C80
select case when (bitand(u.spare1, 16) = 0) then         0        when (u.type# = 2) then         (u.spare2)        else         1
   end from obj$ o, user$ u where o.obj# = :1 and o.owner# = u.user#

0000000092C685C0
SELECT MAX(DB_NAME), MAX(VERSION) FROM WRM$_DATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME = (SELECT MAX(STARTUP_TIME) FROM WRM$_D
ATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME <= :B2 )

000000008C9EF798
SELECT MAX(DB_NAME), MAX(VERSION) FROM WRM$_DATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME = (SELECT MAX(STARTUP_TIME) FROM WRM$_D
ATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME <= :B2 )

0000000092D11C28
SELECT MAX(DB_NAME), MAX(VERSION) FROM WRM$_DATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME = (SELECT MAX(STARTUP_TIME) FROM WRM$_D
ATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME <= :B2 )

000000008C938AE0
SELECT MAX(DB_NAME), MAX(VERSION) FROM WRM$_DATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME = (SELECT MAX(STARTUP_TIME) FROM WRM$_D
ATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME <= :B2 )

000000008B1B76B0
SELECT MAX(DB_NAME), MAX(VERSION) FROM WRM$_DATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME = (SELECT MAX(STARTUP_TIME) FROM WRM$_D
ATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME <= :B2 )

000000008B145698
SELECT MAX(DB_NAME), MAX(VERSION) FROM WRM$_DATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME = (SELECT MAX(STARTUP_TIME) FROM WRM$_D
ATABASE_INSTANCE WHERE DBID = :B1 AND STARTUP_TIME <= :B2 )

0000000060D76EA8 $BUILD$
a0fff3939ff63841

0000000088C53538 SYS
PROFILE$

0000000088FD0258
delete from sdo_geor_ddl__table$$ where id=2

0000000088FC63C8
delete from sdo_geor_ddl__table$$ where id=2

000000008B0E5D28
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000060E93CF8
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000060E07558
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

000000008CA35C48
e1f6ed2465f93525a5993973aaa69b82

000000008CA01C48
69a3d9ed2dda92f936965e1cf9d094c

000000008C8A2B70
99da9acfaef4e42132827ed7ba0c85a6

0000000092CD48B8 SYS
C_USER#

0000000092D596D8
660d68b9a514268f215c8b595ed5aba6

0000000060EF2550
select file#, block#, ts#, blocks from seg$ where type# = 3

000000008B0DF428
select file#, block#, ts#, blocks from seg$ where type# = 3

0000000092C8BF78
select file#, block#, ts#, blocks from seg$ where type# = 3

000000008CAE0620
select count(*) from edition$

0000000088EF4818
select count(*) from edition$

000000008C8A30D0
INSERT INTO WRI$_ADV

000000008C9974A8 APEX_030200
WWV_FLOW_STEP_ITEM_HELP

0000000088E63138
8fb12607aa69c005c0c99213410588f

0000000088EA2020
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B2825A8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0B0DC0
6b3b02556e06a2bcca8df569fe83a388

000000008B1F53F0
INSERT INTO SYS.SCHE

0000000088CB9578
5f84fc8bcde9003432772f0cf70f6830

000000008CB9F388
738ab6b48c9a637085e13d5a16f012c5

0000000088E774A0
select /*+  no_paral

0000000088F53178
T

0000000088E2B278 SYS
WRH$_TABLESPACE_STAT_PK

00000000653F1270
BEGIN DBMS_OUTPUT.DISABLE; END;

0000000088FCFB28
BEGIN DBMS_OUTPUT.DISABLE; END;

0000000088D79880
BEGIN DBMS_OUTPUT.DISABLE; END;

0000000088EB0780
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQLTEXT t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE) WHERE nvl(snap_id, 0) < :snap_id

0000000088EE1280
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQLTEXT t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE) WHERE nvl(snap_id, 0) < :snap_id

0000000060E416A0
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQLTEXT t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE) WHERE nvl(snap_id, 0) < :snap_id

0000000088FD1418
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQLTEXT t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE) WHERE nvl(snap_id, 0) < :snap_id

0000000088EB0C00
SELECT snap_id , SQL_ID FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.SQLID_KEWRSIE  SQL_ID FROM X$KEWRSQLIDTAB t1
, WRH$_SQLTEXT t2      WHERE t2.dbid(+)  = :dbid  AND t2.SQL_ID(+) = t1.SQLID_KEWRSIE) WHERE nvl(snap_id, 0) < :snap_id

0000000088CEF0E8 SYS
PRVT_SQLPA

0000000060E7EAF0
4ec38d4c2e804f5e76b28f32ef02d954

0000000060D97528 SYS
ORA_DICT_OBJ_NAME

0000000088FBC1A8
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND CHAIN_ROW_EXCESS_DELTA != 0

000000008B3AD138
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND CHAIN_ROW_EXCESS_DELTA != 0

000000008B268FF0
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND CHAIN_ROW_EXCESS_DELTA != 0

0000000088D6F368
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND CHAIN_ROW_EXCESS_DELTA != 0

00000000652C1FA0
LOCK TABLE "SYS"."OR

0000000060FE65F0
SELECT PARAMETER_VAL

0000000060E60930
6760fb1da0133f65379f1dcc52d37da3

0000000088DF4E48
DELETE FROM SYS.SCHE

0000000088FD46C8
2de1a286d2ef4b59117739fb1091b04f

000000008C8A9880
db6eb94c3b88c0b2d8dbb9b42b5153

000000008B1E2088
SELECT ID FROM WWV_F

0000000088D4CD18
UPDATE RLM$PRIMEVTTY

000000008B3B6118
SELECT PARTITION_NAM

0000000060C99A30 PUBLIC
HASH_TABLE

0000000060CBDD38
a8ef11a1f5921feca9026512456e0da3

000000008CB8ACB8 $BUILD$
97910553282a0c13

000000008B1DC568
delete from WRH$_BUFFERED_SUBSCRIBERS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060DCEFD8
delete from WRH$_BUFFERED_SUBSCRIBERS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B0FCAE8 SYS
WRM$_SNAP_ERROR

000000008C884E10
delete from idl_char$ where obj#=:1 and part=:2

000000008C885290
delete from idl_char$ where obj#=:1 and part=:2

000000008CB61BE8
274166c08be8eac1495412a12370c764

000000008CB28B78
11d642af7c82d6c2e6a6cb86bc183efd

000000008C915918
SELECT COUNT(*) FROM

0000000065346810 SYS
KU$_OBJNUMNAMSET

0000000092C3BA28 $BUILD$
2f732823 861d1cc

0000000088FA17F8
select /*+  no_paral

0000000060F01180
69bf097bf152f5d03d2794ad4b910bf8

0000000088FF5810
c379913f8bcfda79614a73d1c4893f46

0000000060ECEBF0
81296e3425484f1fc9a19e3f7ae3c10

0000000088FC7828
/* SQL Analyze(1) */

000000008CBB45B0 SYS
SYSAUTH$

000000008C97EDE0

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
a29569b0fae3de621d7a61de549497cb

0000000060E76720
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088EEB8C0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CA74F60
select max(procedure#) from procedurec$ where obj#=:1

0000000092D39288
select max(procedure#) from procedurec$ where obj#=:1

000000008B0383D8
select max(procedure#) from procedurec$ where obj#=:1

000000008CB1D868
select max(procedure#) from procedurec$ where obj#=:1

000000008CA753E0
select max(procedure#) from procedurec$ where obj#=:1

000000008B3318D8
select substrb(dump(

00000000652D2FD0 SYS
DBA_PART_COL_STATISTICS

0000000060CDC840
INSERT INTO STREAMS$

000000008CB1AB88
2561fe546ddba4601f223dbd4644aefd

0000000060D50150
d12157065e68de64e1bd048993406630

0000000088E62418
26f1ff24edbc0abfbdd0082f61d7512e

0000000088E59738
717b5599b2f2610226a3422d61da39ff

0000000060FE0C08
10cbdccb900c34493de65a98b86111a

0000000088D04760
74dc8540f49832c3cdf2da4d6db4e1b4

000000008B1C7E08
SELECT COUNT(*) FROM

0000000088C91B88
SELECT EXTRACTVALUE(

0000000088C76380
2625a2d4a05029bd2a7d8558cb068bf

000000008CB46178
SELECT PRIM_ESLIAS F

000000008B35A6C8
select userid, name, subname, flags    from sys.scheduler$_lwjob_obj where obj# = :1

0000000088F6CFE8
select userid, name, subname, flags    from sys.scheduler$_lwjob_obj where obj# = :1

0000000088FD6CE8
select userid, name, subname, flags    from sys.scheduler$_lwjob_obj where obj# = :1

0000000088E51B88
select userid, name, subname, flags    from sys.scheduler$_lwjob_obj where obj# = :1

000000008B349F58
select userid, name, subname, flags    from sys.scheduler$_lwjob_obj where obj# = :1

0000000092D25C18
3b642487a7c95796c43e978766a26558

0000000088F215C8
b6718cb6669ae90115069fe4f9ae6d34

000000008B2792B8
SELECT COUNT(*) FROM

0000000065359330 SYS
WRH$_FILESTATXS_PK

0000000088D24F20
6daf368234e562bdd0976755d14ab42

000000008B1E3B78 SCOTT
DBMSOUTPUT_LINESARRAY

000000008C9F19D0
select substrb(dump(

0000000060EF2E60
e90cf42d4ff5884c9a99760eca490471

0000000088D87598 PUBLIC
DBMS_SERVER_ALERT

000000008C9F07E8 $BUILD$
a1937592d3a606f3

0000000088C8FED8
SELECT MAX(ID) FROM

0000000060F45880
6164dfe37a7d25488f1c71421abe61d4

0000000092CAD888 SYS
X$KSMNS

0000000088E14D28
a258776b2387eed459c53ea1afd49bd

000000008B0ED398 SYS
WRH$_SQLTEXT

0000000060E8F6B8
select  INSTANCE_NUMBER , INSTANCE_NAME , HOST_NAME , VERSION , STARTUP_TIME , STATUS , PARALLEL , THREAD# , ARCHIVER , LOG_SWITCH_WAIT
 , LOGINS , SHUTDOWN_PENDING, DATABASE_STATUS, INSTANCE_ROLE, ACTIVE_STATE, BLOCKED from GV$INSTANCE where inst_id = USERENV('Instance'
)

0000000060CBE968
select  INSTANCE_NUMBER , INSTANCE_NAME , HOST_NAME , VERSION , STARTUP_TIME , STATUS , PARALLEL , THREAD# , ARCHIVER , LOG_SWITCH_WAIT
 , LOGINS , SHUTDOWN_PENDING, DATABASE_STATUS, INSTANCE_ROLE, ACTIVE_STATE, BLOCKED from GV$INSTANCE where inst_id = USERENV('Instance'
)

0000000088FD9030
UPDATE EXFSYS.EXF$AT

0000000088F0E6F8
insert into wrh$_sessmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, sessid, serial#,      intsize, grou
p_id, metric_id, value)  select      :snap_id, :dbid, :instance_number,      begtime, endtime, eid, eidsq, intsize_csec,      groupid,
metricid, value  from x$kewmdrmv where groupid = 4

0000000092C3AA98
insert into wrh$_sessmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, sessid, serial#,      intsize, grou
p_id, metric_id, value)  select      :snap_id, :dbid, :instance_number,      begtime, endtime, eid, eidsq, intsize_csec,      groupid,
metricid, value  from x$kewmdrmv where groupid = 4

0000000088F0EB78
insert into wrh$_sessmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, sessid, serial#,      intsize, grou
p_id, metric_id, value)  select      :snap_id, :dbid, :instance_number,      begtime, endtime, eid, eidsq, intsize_csec,      groupid,
metricid, value  from x$kewmdrmv where groupid = 4

0000000092D63C90
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("JOB")),to_char(substrb(dump(min("JOB"),16,0,32),1,120)),to_char(substrb(
dump(max("JOB"),16,0,32),1,120)),to_char(count("LOWNER")),to_char(substrb(dump(min("LOWNER"),16,0,32),1,120)),to_char(substrb(dump(max(
"LOWNER"),16,0,32),1,120)),to_char(count("POWNER")),to_char(substrb(dump(min("POWNER"),16,0,32),1,120)),to_char(substrb(dump(max("POWNE
R"),16,0,32),1,120)),to_char(count("COWNER")),to_char(substrb(dump(min("COWNER"),16,0,32),1,120)),to_char(substrb(dump(max("COWNER"),16
,0,32),1,120)),to_char(count("LAST_DATE")),to_char(substrb(dump(min("LAST_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("LAST_DATE")
,16,0,32),1,120)),to_char(count("THIS_DATE")),to_char(substrb(dump(min("THIS_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("THIS_DAT
E"),16,0,32),1,120)),to_char(count("NEXT_DATE")),to_cha

000000008B10E088
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("JOB")),to_char(substrb(dump(min("JOB"),16,0,32),1,120)),to_char(substrb(
dump(max("JOB"),16,0,32),1,120)),to_char(count("LOWNER")),to_char(substrb(dump(min("LOWNER"),16,0,32),1,120)),to_char(substrb(dump(max(
"LOWNER"),16,0,32),1,120)),to_char(count("POWNER")),to_char(substrb(dump(min("POWNER"),16,0,32),1,120)),to_char(substrb(dump(max("POWNE
R"),16,0,32),1,120)),to_char(count("COWNER")),to_char(substrb(dump(min("COWNER"),16,0,32),1,120)),to_char(substrb(dump(max("COWNER"),16
,0,32),1,120)),to_char(count("LAST_DATE")),to_char(substrb(dump(min("LAST_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("LAST_DATE")
,16,0,32),1,120)),to_char(count("THIS_DATE")),to_char(substrb(dump(min("THIS_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("THIS_DAT
E"),16,0,32),1,120)),to_char(count("NEXT_DATE")),to_cha

000000008B2E1F80
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("JOB")),to_char(substrb(dump(min("JOB"),16,0,32),1,120)),to_char(substrb(
dump(max("JOB"),16,0,32),1,120)),to_char(count("LOWNER")),to_char(substrb(dump(min("LOWNER"),16,0,32),1,120)),to_char(substrb(dump(max(
"LOWNER"),16,0,32),1,120)),to_char(count("POWNER")),to_char(substrb(dump(min("POWNER"),16,0,32),1,120)),to_char(substrb(dump(max("POWNE
R"),16,0,32),1,120)),to_char(count("COWNER")),to_char(substrb(dump(min("COWNER"),16,0,32),1,120)),to_char(substrb(dump(max("COWNER"),16
,0,32),1,120)),to_char(count("LAST_DATE")),to_char(substrb(dump(min("LAST_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("LAST_DATE")
,16,0,32),1,120)),to_char(count("THIS_DATE")),to_char(substrb(dump(min("THIS_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("THIS_DAT
E"),16,0,32),1,120)),to_char(count("NEXT_DATE")),to_cha

000000008C9EA0C0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("JOB")),to_char(substrb(dump(min("JOB"),16,0,32),1,120)),to_char(substrb(
dump(max("JOB"),16,0,32),1,120)),to_char(count("LOWNER")),to_char(substrb(dump(min("LOWNER"),16,0,32),1,120)),to_char(substrb(dump(max(
"LOWNER"),16,0,32),1,120)),to_char(count("POWNER")),to_char(substrb(dump(min("POWNER"),16,0,32),1,120)),to_char(substrb(dump(max("POWNE
R"),16,0,32),1,120)),to_char(count("COWNER")),to_char(substrb(dump(min("COWNER"),16,0,32),1,120)),to_char(substrb(dump(max("COWNER"),16
,0,32),1,120)),to_char(count("LAST_DATE")),to_char(substrb(dump(min("LAST_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("LAST_DATE")
,16,0,32),1,120)),to_char(count("THIS_DATE")),to_char(substrb(dump(min("THIS_DATE"),16,0,32),1,120)),to_char(substrb(dump(max("THIS_DAT
E"),16,0,32),1,120)),to_char(count("NEXT_DATE")),to_cha

0000000088EC4370
insert into WRH$_SERVICE_STAT   (snap_id, dbid, instance_number,    service_name_hash, stat_id, value) select   :snap_id, :dbid, :insta
nce_number,   stat.service_name_hash, stat.stat_id, stat.value from  v$active_services asvc, v$service_stats stat where  asvc.name_hash
 = stat.service_name_hash

0000000088EC8710
insert into WRH$_SERVICE_STAT   (snap_id, dbid, instance_number,    service_name_hash, stat_id, value) select   :snap_id, :dbid, :insta
nce_number,   stat.service_name_hash, stat.stat_id, stat.value from  v$active_services asvc, v$service_stats stat where  asvc.name_hash
 = stat.service_name_hash

0000000088D072F8
insert into WRH$_SERVICE_STAT   (snap_id, dbid, instance_number,    service_name_hash, stat_id, value) select   :snap_id, :dbid, :insta
nce_number,   stat.service_name_hash, stat.stat_id, stat.value from  v$active_services asvc, v$service_stats stat where  asvc.name_hash
 = stat.service_name_hash

0000000088C7C510
insert into WRH$_SERVICE_STAT   (snap_id, dbid, instance_number,    service_name_hash, stat_id, value) select   :snap_id, :dbid, :insta
nce_number,   stat.service_name_hash, stat.stat_id, stat.value from  v$active_services asvc, v$service_stats stat where  asvc.name_hash
 = stat.service_name_hash

0000000088EC47F0
insert into WRH$_SERVICE_STAT   (snap_id, dbid, instance_number,    service_name_hash, stat_id, value) select   :snap_id, :dbid, :insta
nce_number,   stat.service_name_hash, stat.stat_id, stat.value from  v$active_services asvc, v$service_stats stat where  asvc.name_hash
 = stat.service_name_hash

0000000060FF7A70
7bca5ce219d8b8add07674a81178396f

000000008B1CE4F0
a7e9da0d77a6cc6c8f54f0ac8453a70d

0000000060F01A70
delete from WRH$_SQL_PLAN tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C888140
delete from WRH$_SQL_PLAN tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060EF12A0 $BUILD$
3bab820eede5fe9c

000000008B211B38
/* SQL Analyze(1) */

000000008CB88DF8
4ec342bf5fe2a6e9193480eefd3beaea

0000000088E46F38 SYS
WRH$_PGA_TARGET_ADVICE

000000008B1618E8
cf8fb4d76385be8c672171a6e50a3848

0000000088C79008
SELECT COUNT(*) FROM

0000000088CFED20
2adba16322aa4af64efa1c96a3baf98d

000000008B3427D0
SELECT TO_CHAR(INSTA

0000000060D13828
SELECT O.TYPE# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME = :B2 AND O.SUBNAME = :B1 MINUS SELECT
 O.TYPE# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME = :B2 AND O.SUBNAME = :B4

000000008B060140
SELECT O.TYPE# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME = :B2 AND O.SUBNAME = :B1 MINUS SELECT
 O.TYPE# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME = :B2 AND O.SUBNAME = :B4

000000008C9DF8A0
ed4e8a99bcc8103e70660768110b45c7

0000000088C621D0
60d4592318f7346d6f438a15c337da9e

000000008B1E22E8
100bba5635626f0faa0ba35ee12e34f1

0000000088DCC2B0
/* SQL Analyze(1) */

0000000088D60AF8
select  STATISTIC# , NAME , CLASS , VALUE, STAT_ID from GV$SYSSTAT where inst_id = USERENV('Instance')

0000000060F4C670
select  STATISTIC# , NAME , CLASS , VALUE, STAT_ID from GV$SYSSTAT where inst_id = USERENV('Instance')

000000008B0AE160
SELECT S.SCHEMA, S.Q

0000000088CEFFC8 SYS
DBMS_SQLTUNE_LIB

000000008C91C6B8
SELECT COUNT(*) FROM

000000008C8BAA58
SELECT P.VALCHAR FROM SYS.OPTSTAT_USER_PREFS$ P WHERE P.OBJ#=:B2 AND P.PNAME=:B1

000000008B06E650
SELECT P.VALCHAR FROM SYS.OPTSTAT_USER_PREFS$ P WHERE P.OBJ#=:B2 AND P.PNAME=:B1

000000008B1376A8 SYS
GV$SYSTEM_PARAMETER2

000000008B13D448
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_ind_history h        where savtime < :1 and rownum <= NVL(:2, rownum)

000000008B1B17F0
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_ind_history h        where savtime < :1 and rownum <= NVL(:2, rownum)

000000008B0AD1A0
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_ind_history h        where savtime < :1 and rownum <= NVL(:2, rownum)

0000000088FC4F58
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_ind_history h        where savtime < :1 and rownum <= NVL(:2, rownum)

0000000060FDFD60
a7d0a75ff4baf3a2197c26f430948e02

0000000092D7A2B8 SYS
ALL_TABLES

0000000088FBB948 $BUILD$
8d3de7a388339165

000000008CBE2860 $BUILD$
619f0a67f9ab91a5

000000008CB024E8
delete from WRH$_BUFFER_POOL_STATISTICS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060FA8200
delete from WRH$_BUFFER_POOL_STATISTICS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060E11BC0
b7ada89eb959bc13f558c0479a173b7

0000000060D75A28
1a9caa64fc3f95ca9ed5ba2456c64cd1

000000008B3A5538
SELECT COUNT(*) FROM

0000000088E99BF0
SELECT Y.BSLN_GUID ,

0000000092CC9128 SYS
OBJ$

0000000088FEAAC0
991e8a29534028cec2ed2cc4bbe1a89

000000008CA82D78 SYS
WRH$_SERVICE_WAIT_CLASS

0000000088F77B48
SELECT count(*) FROM sys.snap_loadertime$  WHERE tableobj# = :1 AND rownum = 1

000000008C9ED428
SELECT count(*) FROM sys.snap_loadertime$  WHERE tableobj# = :1 AND rownum = 1

0000000088C40140 PUBLIC
DBSNMP

0000000088FEBA20
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 159

0000000060D56D48
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 159

0000000060ECABD0
a738ad6547e98496dbf7e813bc4b0af

000000008CBDE5D0
8ffbf5f4fa0b541b158910fce3aa1720

0000000092CDAE78 SYS
TAB$

0000000060F61E80 SYS
X$KSUMYSTA

0000000060F74060
4c6855784e08880730b0adc51f7ff59

0000000060FFCC70
INSERT INTO SYS.SCHE

000000008C950D40 SYS
AQ$_ALERT_QT_E

0000000088FA02B8
cf6f82a78f770b3d89d1d3e5c411da7e

000000008B151C58
SELECT RECID, RECID,

000000008C94BDC0
/* SQL Analyze(1) */

0000000060E192B0
27ffd5be3ae1b14626f718f1941432aa

0000000088E15E28
INSERT INTO EXF$PARA

000000008B185238
deea3f9c47e600a454a652381845ce72

0000000088DA2FF8 SYS
V$SQL_PLAN

000000008B063EB0
DELETE FROM USTATS$

0000000092C89358
select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(scale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,
181,scale,182,scale,183,scale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,property, nvl(charsetid,0),nvl(chars
etform,0),spare1,spare2,nvl(spare3,0) from col$ where obj#=:1 order by intcol#

000000008B336018
select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(scale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,
181,scale,182,scale,183,scale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,property, nvl(charsetid,0),nvl(chars
etform,0),spare1,spare2,nvl(spare3,0) from col$ where obj#=:1 order by intcol#

0000000088D23310
select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(scale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,
181,scale,182,scale,183,scale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,property, nvl(charsetid,0),nvl(chars
etform,0),spare1,spare2,nvl(spare3,0) from col$ where obj#=:1 order by intcol#

0000000092C3D008
select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(scale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,
181,scale,182,scale,183,scale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,property, nvl(charsetid,0),nvl(chars
etform,0),spare1,spare2,nvl(spare3,0) from col$ where obj#=:1 order by intcol#

0000000092C897D8
select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(scale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,
181,scale,182,scale,183,scale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,property, nvl(charsetid,0),nvl(chars
etform,0),spare1,spare2,nvl(spare3,0) from col$ where obj#=:1 order by intcol#

000000008CA3D3C0
5a803ef5eb09fa31652f309074127967

0000000088D219C0
92873f91e95e427b2ccb8117b23236d

0000000060EB9D20
da957bc475a303b95574bdd24da17f2d

0000000088CBAE70
2e9525a2a327e204206f66ce551f47f6

000000008B0A24B0
select table_name from dict where table_name like '%DBA%COL%'

000000008B167020
select table_name from dict where table_name like '%DBA%COL%'

000000008CA82008 SYS
SYN$

0000000060C91490
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 161

000000008C963D38
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 161

0000000088DF9C68
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."TS$"
"TS#3", "SYS"."SEG$" "S#1" WHERE ("S#1"."TS#"="TS#3"."TS#")) innerQuery

0000000060E73230
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."TS$"
"TS#3", "SYS"."SEG$" "S#1" WHERE ("S#1"."TS#"="TS#3"."TS#")) innerQuery

0000000088F8DA48
SELECT BSLN.TARGET_U

0000000092CBB038 SYS
DBMS_BACKUP_RESTORE

0000000060C8EE70
186bf2f2a183eeb51c6a0864cc6ac7d

0000000088DE07C8
2a7cdc2394513b6d7716b11c73656e94

000000008B0B0080
select /*+  no_paral

0000000088CC5AE8
cc3747bace3bc8c8e9f7083725549ec5

0000000060F61A70
6e284360ddbfa60aefd331a6b5436b9f

0000000088EE8580
select substrb(dump(

0000000060D01538
select map.inst_id, map.extid, map.sname, sysv.kewsval  from x$kewssmap map, x$kewssysv sysv  where map.offst = sysv.indx and map.aggid
 = 1 and  (map.stype = 2 or map.stype = 3)

0000000060F500C0
select map.inst_id, map.extid, map.sname, sysv.kewsval  from x$kewssmap map, x$kewssysv sysv  where map.offst = sysv.indx and map.aggid
 = 1 and  (map.stype = 2 or map.stype = 3)

000000008B378F78 SYS
X$KETCL

000000008B20AC98 SYS
WRI$_SQLMON_USAGE

0000000088FFB170
UPDATE KET$_AUTOTASK_STATUS     SET ABA_STATE = :1,         ABA_STATE_TIME = :3   WHERE DUMMY_KEY = 99999

0000000060E54930
UPDATE KET$_AUTOTASK_STATUS     SET ABA_STATE = :1,         ABA_STATE_TIME = :3   WHERE DUMMY_KEY = 99999

000000008B268E58
UPDATE KET$_AUTOTASK_STATUS     SET ABA_STATE = :1,         ABA_STATE_TIME = :3   WHERE DUMMY_KEY = 99999

000000008B0B4F90
UPDATE KET$_AUTOTASK_STATUS     SET ABA_STATE = :1,         ABA_STATE_TIME = :3   WHERE DUMMY_KEY = 99999

000000008B0842A0
SELECT PO.SUBNAME PN

000000008B0C85F8
15262899938297832225

000000008B1F8488
dd4421075509628d9df226f18764f29

000000008B28C0F8
SELECT DEVELOPER_ROL

0000000088C64870
62815aefd38d89e6709fc2c9b1efc8d

0000000060DDFC08
df427c82a57416e6ac55fdcf1475e324

000000008B2BB858
select /*+  no_paral

0000000060D318F8
539c4e2b345582bc74896c5de64071f

0000000088F5D228
SELECT ONLINE$ FROM TS$ WHERE NAME = 'SYSAUX'

000000008B092770
SELECT ONLINE$ FROM TS$ WHERE NAME = 'SYSAUX'

0000000065348420
select 1 from sys.streams$_prepare_object po, sys.obj$ o where po.obj#= :1 and po.obj#=o.obj# and bitand(o.flags,128) = 0

000000008B31DB80
select 1 from sys.streams$_prepare_object po, sys.obj$ o where po.obj#= :1 and po.obj#=o.obj# and bitand(o.flags,128) = 0

000000008B121B78
25dd300813f54e858248c6cb8583f82c

0000000088F8EF48 SYS
WRH$_EVENT_HISTOGRAM_PK

0000000088E38728
insert into wrh$_parameter    (snap_id, dbid, instance_number, parameter_hash, value,     isdefault, ismodified)  select    :snap_id, :
dbid, :instance_number, hash,    substr(value, 1, 512), isdefault,       case when ismodified <> 'FALSE' or isadjusted <> 'FALSE'
       then 'MODIFIED' else 'FALSE' end  from v$system_parameter

0000000092CC1108
insert into wrh$_parameter    (snap_id, dbid, instance_number, parameter_hash, value,     isdefault, ismodified)  select    :snap_id, :
dbid, :instance_number, hash,    substr(value, 1, 512), isdefault,       case when ismodified <> 'FALSE' or isadjusted <> 'FALSE'
       then 'MODIFIED' else 'FALSE' end  from v$system_parameter

000000008B296A70
insert into wrh$_parameter    (snap_id, dbid, instance_number, parameter_hash, value,     isdefault, ismodified)  select    :snap_id, :
dbid, :instance_number, hash,    substr(value, 1, 512), isdefault,       case when ismodified <> 'FALSE' or isadjusted <> 'FALSE'
       then 'MODIFIED' else 'FALSE' end  from v$system_parameter

0000000088E38388
insert into wrh$_parameter    (snap_id, dbid, instance_number, parameter_hash, value,     isdefault, ismodified)  select    :snap_id, :
dbid, :instance_number, hash,    substr(value, 1, 512), isdefault,       case when ismodified <> 'FALSE' or isadjusted <> 'FALSE'
       then 'MODIFIED' else 'FALSE' end  from v$system_parameter

000000008C97D3C8
insert into wrh$_parameter    (snap_id, dbid, instance_number, parameter_hash, value,     isdefault, ismodified)  select    :snap_id, :
dbid, :instance_number, hash,    substr(value, 1, 512), isdefault,       case when ismodified <> 'FALSE' or isadjusted <> 'FALSE'
       then 'MODIFIED' else 'FALSE' end  from v$system_parameter

0000000088E38BA8
insert into wrh$_parameter    (snap_id, dbid, instance_number, parameter_hash, value,     isdefault, ismodified)  select    :snap_id, :
dbid, :instance_number, hash,    substr(value, 1, 512), isdefault,       case when ismodified <> 'FALSE' or isadjusted <> 'FALSE'
       then 'MODIFIED' else 'FALSE' end  from v$system_parameter

0000000088FD17E8 SYS
UTL_FIL_LIB

000000008B302CC8 SYS
X$KSPPSV2

000000008CB58BE8
select substrb(dump(

0000000088FC0EB8 EXFSYS
NAMELIST

000000008C8735D8
646244caebc64aa7bec837eeff551e51

000000008B2DCD80
549f3f9987012bd597910553282a0c13

000000008CAFBD60
SELECT A.RECID, A.RE

000000008B3B5ED8
SELECT INSTANCE_NUMB

000000008B07A770 SYS
WRI$_OPTSTAT_HISTHEAD_HISTORY

0000000060F8CA00
beb90cb33b11613359bc8b95236136cc

0000000088F9AAB8
81296e3425484f1fc9a19e3f7ae3c10

0000000060FD5440
3ee28aff65869679d416058f8a4ac09

000000008C834240
SELECT MIN(OPCODE_ID

0000000060C5E370
3bc859d8a69c3c8f109c282309dbaff

0000000060CFA1C8
288ca5c6c0ab29a8c2ae380d9f5e15c

0000000088FED480
cdc20aa2c790579dceb26eb8e5c8418b

0000000065362440
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."FILE
$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="
UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYP
E2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#")) innerQuery

000000008C8D98D8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."FILE
$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="
UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYP
E2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#")) innerQuery

0000000060FBC670
c37caef01d72a3ed5db9215e4f2de034

000000008CBCB818
85c7c04d07363c37cac5c1a16ea21e

000000008C9CFA98
UPDATE wrh$_sqltext stx   SET stx.snap_id = :lah_snap_id   WHERE stx.dbid   = :dbid     AND stx.sql_id = :sql_id

000000008CA44B00
UPDATE wrh$_sqltext stx   SET stx.snap_id = :lah_snap_id   WHERE stx.dbid   = :dbid     AND stx.sql_id = :sql_id

0000000060CA0380
UPDATE wrh$_sqltext stx   SET stx.snap_id = :lah_snap_id   WHERE stx.dbid   = :dbid     AND stx.sql_id = :sql_id

000000008B2AEC98 $BUILD$
2d915fb87f224cd4

000000008B2A7888
f277769454638ffc63102bb2acc1760e

000000008B2EB508
6b51647babdb70478e81daa39094b64a

000000008CB1DAC8 SYS
X$KCVFHTMP

0000000060EC31C0
12458ba116ee3d8248a19fb81e426505

0000000092CB6738 SYS
WRH$_SYSTEM_EVENT

0000000088C52968
SELECT A.PARTITION_NAME, A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')
', T.DATA_PRECISION||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLS
LABEL',T.DATA_TYPE, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_
ROWS, A.NUM_NULLS, ROUND(100 * A.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_
ROWS) * 100, 2) SELECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, DECODE(A.SAMPLE_SIZE,NULL,0,A.SAMPLE_SIZE) AS SAMPLE_SIZE, A.GLOBAL_STATS, A.U
SER_STATS, DECODE(TO_CHAR(A.LAST_ANALYZED,'YYYYMMDD HH24:MI'),NULL,'None',TO_CHAR(A.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DB
A_PART_COL_STATISTICS A, DBA_TAB_PARTITIONS B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.TABLE_OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME =
T.TABLE_NAME AND A.TABLE_NAME = B.TABLE_NAME AND A.PART

0000000088CFAEC0
SELECT A.PARTITION_NAME, A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')
', T.DATA_PRECISION||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLS
LABEL',T.DATA_TYPE, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_
ROWS, A.NUM_NULLS, ROUND(100 * A.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_
ROWS) * 100, 2) SELECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, DECODE(A.SAMPLE_SIZE,NULL,0,A.SAMPLE_SIZE) AS SAMPLE_SIZE, A.GLOBAL_STATS, A.U
SER_STATS, DECODE(TO_CHAR(A.LAST_ANALYZED,'YYYYMMDD HH24:MI'),NULL,'None',TO_CHAR(A.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DB
A_PART_COL_STATISTICS A, DBA_TAB_PARTITIONS B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.TABLE_OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME =
T.TABLE_NAME AND A.TABLE_NAME = B.TABLE_NAME AND A.PART

00000000653D21A0
SELECT A.PARTITION_NAME, A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')
', T.DATA_PRECISION||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLS
LABEL',T.DATA_TYPE, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_
ROWS, A.NUM_NULLS, ROUND(100 * A.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_
ROWS) * 100, 2) SELECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, DECODE(A.SAMPLE_SIZE,NULL,0,A.SAMPLE_SIZE) AS SAMPLE_SIZE, A.GLOBAL_STATS, A.U
SER_STATS, DECODE(TO_CHAR(A.LAST_ANALYZED,'YYYYMMDD HH24:MI'),NULL,'None',TO_CHAR(A.LAST_ANALYZED,'YYYYMMDD HH24:MI')) AS LAST1 FROM DB
A_PART_COL_STATISTICS A, DBA_TAB_PARTITIONS B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.TABLE_OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME =
T.TABLE_NAME AND A.TABLE_NAME = B.TABLE_NAME AND A.PART

000000008CBDF880 SYS
TABCOMPART$

0000000088C9EF08
SELECT PLAN_TABLE_OU

000000008B3B5C68
SELECT INST_NUMBER,

0000000060F3E230 $BUILD$
e795ebd6545a5529

0000000060EDA880
bce467765fda956cb4296b81ed8441b0

0000000088FB6AB8
2c7528674e849036b2025cf7c93e249

0000000060FEDFF0
2b6e9a77a817225f9ce1989c13ecbcd6

0000000088DB5568
select sql_id from wrm$_colored_sql where (dbid = :dbid)

000000008C8DA1C8
select sql_id from wrm$_colored_sql where (dbid = :dbid)

0000000088DB59E8
select sql_id from wrm$_colored_sql where (dbid = :dbid)

0000000088F3E228
select substrb(dump(

000000008B353040
SELECT PRIOR_RESETLO

000000008B17E430
e0661c38f9a94c71966721c327c5cd6f

000000008C8ACC70
select local_tran_id, global_tran_fmt, global_oracle_id, global_foreign_id,        state, status, heuristic_dflt,        session_vector
, reco_vector, 3600*24*(sysdate-reco_time),        3600*24*(sysdate-nvl(heuristic_time,fail_time)), global_commit#,        type#   from
 pending_trans$  where session_vector != '00000000'

000000008B361F58
select local_tran_id, global_tran_fmt, global_oracle_id, global_foreign_id,        state, status, heuristic_dflt,        session_vector
, reco_vector, 3600*24*(sysdate-reco_time),        3600*24*(sysdate-nvl(heuristic_time,fail_time)), global_commit#,        type#   from
 pending_trans$  where session_vector != '00000000'

000000008C8AD0F0
select local_tran_id, global_tran_fmt, global_oracle_id, global_foreign_id,        state, status, heuristic_dflt,        session_vector
, reco_vector, 3600*24*(sysdate-reco_time),        3600*24*(sysdate-nvl(heuristic_time,fail_time)), global_commit#,        type#   from
 pending_trans$  where session_vector != '00000000'

0000000088FA1278
select   vector_index, vector from   WRI$_SCH_VOTES where   schedule_id  = :id and   vector_index = :vidx

0000000060F1B880
select   vector_index, vector from   WRI$_SCH_VOTES where   schedule_id  = :id and   vector_index = :vidx

000000008B1B5700
select   vector_index, vector from   WRI$_SCH_VOTES where   schedule_id  = :id and   vector_index = :vidx

000000008B21BDF0
select   vector_index, vector from   WRI$_SCH_VOTES where   schedule_id  = :id and   vector_index = :vidx

0000000088E0F958 SYS
WRH$_OSSTAT_PK

000000008CAA4D90 $BUILD$
91935745cf9b2e3d

0000000088DF9328 $BUILD$
1f0fa6117575bf15

00000000653B2950
b40caa8d715ad10acd4e36208400e467

000000008B3E5200 APEX_030200
WWV_FLOW

0000000088C863D8
SELECT SQLSET_ROW(S.

0000000088CA09C8
SELECT EXTRACTVALUE(

000000008B16BAA0
2a8a2de9ad7e2048242e65f1474d477f

0000000088D97348
bb10a317903e9da6a0fff3939ff63841

0000000088F97160
select substrb(dump(

0000000088C9A3E8
SELECT XMLELEMENT( "

0000000060DC1640
a738ad6547e98496dbf7e813bc4b0af

000000008C87D048
e7e04a13b7fb7ff764c8ab84c22c7d28

000000008B1A7F48
SELECT COUNT(*) FROM

000000008CA191D0 SYS
WRI$_ALERT_OUTSTANDING

0000000088CA5758 SYS
DBMS_XPLAN_TYPE_TABLE

0000000088D227A0 SYS
RE$NV_ARRAY

0000000092CACBB8
SELECT COUNT(*) FROM

0000000060EFD940
33112c7778d88fba837089936c443e49

0000000060DD1898
SELECT T.PROTOCOL FR

000000008CA39CE0
780ae28b3ede9c75c506dde1c373fd4a

0000000092CC3458 SYS
USER$

0000000088E91C30
delete from WRH$_LIBRARYCACHE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3AEEC0
delete from WRH$_LIBRARYCACHE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092C9B158
delete from WRH$_SGASTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3AFE38
delete from WRH$_SGASTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F4E550
35d9a3d6da53ba96e320f5ca11b9d146

000000008CA37B90 PUBLIC
ORA_SQL_TXT

0000000060F6DCC0 PUBLIC
UTL_FILE

000000008B352500 SYS
GV$LICENSE

000000008B259DA8
SELECT COLUMN_NAME F

000000008C884B20
9ee94409c6c16b0fd2c5a958bacc9fbf

000000008CB51490
6ad57d93ba3b12865ae240d6d79fa938

000000008C865E58 SYS
DBMS_LOGMNR_SESSION

000000008CBECAB8
69b208e2a08e260adcba55b42e975696

0000000060EC7380 SYS
WRH$_SGASTAT

000000008B0C9368
SELECT signature, inuse_features, flags                                       FROM sql$
                     WHERE signature = :1

0000000088C57288
SELECT signature, inuse_features, flags                                       FROM sql$
                     WHERE signature = :1

000000008B237850
SELECT signature, inuse_features, flags                                       FROM sql$
                     WHERE signature = :1

0000000088D58660
SELECT signature, inuse_features, flags                                       FROM sql$
                     WHERE signature = :1

0000000060FA8CC0
1808be9a60fa934d7da00b19661a149a

0000000060E5BE90
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_RO
WS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B  WHERE A.OWNER = B.OWN
ER    AND A.TABLE_NAME = B.TABLE_NAME    AND A.TABLE_NAME = upper(:table_name) and a.owner = upper(:owner) order by A.OWNER,A.COLUMN_NA
ME;    v_stats c_stats%rowtype;     cursor c_hwm is SELECT table_name,ROUND((blocks * (select value from v$parameter where name='db_blo
ck_size'))/1024/1024, 2) "HWM",    ROUND ((num_rows * a

0000000060EF8370
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_RO
WS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B  WHERE A.OWNER = B.OWN
ER    AND A.TABLE_NAME = B.TABLE_NAME    AND A.TABLE_NAME = upper(:table_name) and a.owner = upper(:owner) order by A.OWNER,A.COLUMN_NA
ME;    v_stats c_stats%rowtype;     cursor c_hwm is SELECT table_name,ROUND((blocks * (select value from v$parameter where name='db_blo
ck_size'))/1024/1024, 2) "HWM",    ROUND ((num_rows * a

0000000088C76160
61ea75ab26c4983c7d217da4cf2d3fed

0000000088CF53B8 SYS
DBMS_SQLDIAG

000000008CBBA6C0
6854104167049572323

000000008B2FD388
a6ed62c04899fa626b10510028e1f28

0000000088C951F8
SELECT XMLELEMENT( "

0000000092C847A8 SYS
TAB_STATS$

0000000092CC4BA8 SYS
COL$

0000000088FD94B0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."TRIGFLAG",67108864)<>67108864 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE
 BLOCK (2.203269 , 1) SEED (1) "T") SAMPLESUB

0000000060D6B3D0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."TRIGFLAG",67108864)<>67108864 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE
 BLOCK (2.203269 , 1) SEED (1) "T") SAMPLESUB

0000000092C8F0E8
4293d3d05913bf64b61900fc4954c938

00000000652DB9A0

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
select     PARTITION_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_tab_partitions t where     table_owner = upper
(nvl(:owner,user)) and table_name = upper(:table_name) order by partition_position

000000008CA16F38
select     PARTITION_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_tab_partitions t where     table_owner = upper
(nvl(:owner,user)) and table_name = upper(:table_name) order by partition_position

00000000652E0CA0
select     PARTITION_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_tab_partitions t where     table_owner = upper
(nvl(:owner,user)) and table_name = upper(:table_name) order by partition_position

000000008CAF8298
SELECT PEM.PRIM_EVNT

0000000092C41CC8
e673aee551a963fe795ebd6545a5529

000000008C93D728
76129d8af53693142a3193c13b01ca7c

000000008CA356D8 $BUILD$
cdd0a459fdf0611a

0000000060D645F8
e8d54638796dcb00f9b24680f53482d2

0000000088C37C98
85a26424b3ab973b26872f30955be8a9

000000008B277F88
SELECT TN.NAME AS TA

0000000088ECE058
7fc21028fe23db0c88506ca182daf415

0000000088FE0A50 $BUILD$
91a5eb9bfde41c2a

0000000092CD9958
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'START_SNAPSHOT'

000000008B2DD400
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'START_SNAPSHOT'

000000008CAD7A28
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'START_SNAPSHOT'

0000000088F27E38
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'START_SNAPSHOT'

000000008B1465C8
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'START_SNAPSHOT'

00000000652B5B10
52cdc05399e55f257edaf456f0dbeddc

000000008CBB3F60 $BUILD$
c2c7de17dd05fa55

0000000088CF43F8 SYS
DBMS_SQLTUNE_UTIL1

000000008B117A30
6696d34c6885b0b88650073554a6a2f

0000000088D7BB08
UPDATE WRI$_ADV_ACTI

0000000088C40600
f5eccfff6cbea621f89b4c28215a5c35

000000008B053370
SELECT ROWCNT FROM T

000000008CBEEC48
SELECT CV.VAR_NAME F

000000008B0E8158
fff338e4707dc26d2b6838d2f1c69982

0000000088FEE438 $BUILD$
8e6c4e04d4669e4b

000000008CAD9888
DELETE FROM SYSTEM.A

000000008B0751C0
SELECT C.INTCOL# FRO

000000008CBDF140 SYS
TABPART$

0000000092D04E88
96dda3773d9f9b93b8a21d135f9f0ab5

0000000060CC7570
28f17c1f41cccee01910a734572412b1

0000000088E3BD68
insert into wrh$_sysstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_id, valu
e  from    v$sysstat  order by    stat_id

000000008CB4C090
insert into wrh$_sysstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_id, valu
e  from    v$sysstat  order by    stat_id

000000008B09F6D0
insert into wrh$_sysstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_id, valu
e  from    v$sysstat  order by    stat_id

0000000060E55600
insert into wrh$_sysstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_id, valu
e  from    v$sysstat  order by    stat_id

0000000092C71A48
insert into wrh$_sysstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_id, valu
e  from    v$sysstat  order by    stat_id

0000000088E3C1E8
insert into wrh$_sysstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_id, valu
e  from    v$sysstat  order by    stat_id

0000000060D9B938
666daf53409782313b640d968600f780

0000000060F2A920 SYS
DBMS_SPACE

000000008B1A4CD8
delete from WRH$_DISPATCHER tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092D81538
delete from WRH$_DISPATCHER tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092C87198
delete from object_usage where obj# in  (select a.obj# from object_usage a, ind$ b where  a.obj# = b.obj# and b.bo# = :1)

0000000092CB3E38
delete from object_usage where obj# in  (select a.obj# from object_usage a, ind$ b where  a.obj# = b.obj# and b.bo# = :1)

000000008B28AE98
delete from object_usage where obj# in  (select a.obj# from object_usage a, ind$ b where  a.obj# = b.obj# and b.bo# = :1)

0000000092D798D8
delete from object_usage where obj# in  (select a.obj# from object_usage a, ind$ b where  a.obj# = b.obj# and b.bo# = :1)

000000008B083120
SELECT PO.SUBNAME PN

000000008B1CD6E8
44cd9f645f3728493c59f2651e6df517

000000008B1BBAE8
delete from WRH$_MTTR_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B2BD428
delete from WRH$_MTTR_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B2A0C78 DBSNMP
BSLN_INTERNAL

000000008B1CF398
c40023e74668cd0711cb8f2151077dcb

000000008CA67CC0
delete from WRH$_WAITSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F44BD8
delete from WRH$_WAITSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B27B258
436a415b2251827617e919499a05b67a

0000000060D580C0
477fd279eba04f0eb3df0d85c51926

000000008C9255F8
DELETE FROM WRI$_ADV

000000008B295D50
DELETE FROM WWV_FLOW

000000008C85DAF0 PUBLIC
DBA_HIST_DATABASE_INSTANCE

0000000088E6E1F0 SYS
DBA_USERS

000000008B065210
SELECT TS.NAME FROM

000000008CA00EF8 $BUILD$
65225808a5b5e660

0000000060F3CD70
aea7176a68850b10e671e2582f8faa52

000000008CB43FB8
41a2a9dccf6e243e1cd743b3b8254303

000000008CB59668
select substrb(dump(

0000000060DDCD48
47655194560b7fbe19ca7f13d4ba00d

0000000060E8FA58
5c941ae9d7e4d7bce80b18ab6c8bcd35

000000008B3EF958
3c9eaf9cae77874a3e12d8065759f6e6

000000006533DC50
80e9c802846a2575a79210f42e8fcf

000000008B3E1CF0 SYS
DBMS_LOCK_ALLOCATED

000000008C85CBE0 DBSNMP
BSLN_OBSERVATION_SET

0000000092D31498 SYS
X$QKSBGSES

000000008C92F698 SYS
WRI$_ADV_JOURNAL

000000008B0AF790
14205386bd9d903e21c27be511fbcc90

000000008C92DCC8 SYS
WRI$_ADV_SEQ_MSGGROUP

00000000652E7840 $BUILD$
d9bea9e43dc31fa9

000000008B2A8B38 $BUILD$
92ceb2a17bf48001

000000008B0C3CB0
SELECT COUNT(*) FROM

0000000088D31000
c377c0b04fc65dfda0bf955bb8b3cc2f

0000000088F52458
SELECT 1 FROM DUAL WHERE signature = :1                                                                AND category = :2
                                              AND obj_type = :3                                                             AND plan_id
 = :4

0000000088C72B58
SELECT 1 FROM DUAL WHERE signature = :1                                                                AND category = :2
                                              AND obj_type = :3                                                             AND plan_id
 = :4

0000000088E52FB8
5545f86ad53b984b6d749efdb7dbe82

0000000092D1A388
update WRI$_SCH_CONTROL    set num_votes = :votes,        last_vote = :lvotetm  where schedule_id = :id

000000008B165BC0
update WRI$_SCH_CONTROL    set num_votes = :votes,        last_vote = :lvotetm  where schedule_id = :id

000000008CB75788
update WRI$_SCH_CONTROL    set num_votes = :votes,        last_vote = :lvotetm  where schedule_id = :id

0000000088F96910
update WRI$_SCH_CONTROL    set num_votes = :votes,        last_vote = :lvotetm  where schedule_id = :id

0000000092D30798
update WRI$_SCH_CONTROL    set num_votes = :votes,        last_vote = :lvotetm  where schedule_id = :id

000000008B34BAC0
update WRI$_SCH_CONTROL    set num_votes = :votes,        last_vote = :lvotetm  where schedule_id = :id

0000000060E1EDC0
e4900b4ace74d9dabbab32ac91c54632

0000000060D7D588
alter table scott.em

0000000088DA5AA8
select /*+  no_paral

0000000060EBAE30
57fc921053c042f4450d8cc67720631c

000000008C97B0E0
SELECT C.CLIENT_ID,         C.OPERATION_ID,         C.STATUS,         NVL(C.ATTRIBUTES, 0),         NVL(C.PRIORITY_OVERRIDE, 0),
  C.GENERATOR_JOB_NAME    FROM KET$_CLIENT_CONFIG C   WHERE (C.CLIENT_ID = 0           AND C.OPERATION_ID = 0)      OR (C.CLIENT_ID IN
(SELECT CID_KETCL                             FROM X$KETCL X)          AND C.OPERATION_ID = 0)      OR (C.OPERATION_ID != 0           A
ND C.OPERATION_ID IN (SELECT O.OPID_KETOP                                    FROM X$KETOP O                                  WHERE O.CI
D_KETOP = C.CLIENT_ID))  ORDER BY 2,1  FOR UPDATE OF C.STATUS

000000008CA4CEF0
SELECT C.CLIENT_ID,         C.OPERATION_ID,         C.STATUS,         NVL(C.ATTRIBUTES, 0),         NVL(C.PRIORITY_OVERRIDE, 0),
  C.GENERATOR_JOB_NAME    FROM KET$_CLIENT_CONFIG C   WHERE (C.CLIENT_ID = 0           AND C.OPERATION_ID = 0)      OR (C.CLIENT_ID IN
(SELECT CID_KETCL                             FROM X$KETCL X)          AND C.OPERATION_ID = 0)      OR (C.OPERATION_ID != 0           A
ND C.OPERATION_ID IN (SELECT O.OPID_KETOP                                    FROM X$KETOP O                                  WHERE O.CI
D_KETOP = C.CLIENT_ID))  ORDER BY 2,1  FOR UPDATE OF C.STATUS

000000008C8AB230
6e78bf7eeda8c7df1468aba2d2bfee0a

000000008CBA39F8
dccdafa35a82b4347f9b1f31d2b89186

0000000092C8D518
1af1bdbc4085268991935745cf9b2e3d

0000000060E40620
c44bb606e6e08bad36f965fd7139d2

000000008B1F9BA0
delete from WRH$_LATCH_PARENT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D8A220
delete from WRH$_LATCH_PARENT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B078FE0 SYS
V$PQ_SESSTAT

000000008B318008
f1d9d0c08715889d7dc5c1fa9fd080e7

0000000088DEB708
SELECT T.PARTITION_POSITION,T.PARTITION_NAME, T.HIGH_VALUE , CASE WHEN T.NUM_ROWS IS NULL THEN 'None' ELSE TO_CHAR(T.NUM_ROWS) END AS N
UM_ROWS, CASE WHEN T.SAMPLE_SIZE IS NULL THEN 0 ELSE T.SAMPLE_SIZE END AS SAMPLE_SIZE, CASE WHEN TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') IS
 NULL THEN 'None' ELSE TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') END AS LAST_ANALYZED, ROUND(S.G,2) AS G, T.SUBPARTITION_COUNT AS SUBPARTITIO
N_CNT,T.COMPRESSION FROM DBA_TAB_PARTITIONS T, (SELECT SUM(BYTES/1024/1024/1024) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME
 = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY PARTITION_NAME) S WHERE S.PARTITION_NAME = T.PARTITION_NAME AND TABLE_OWNER = UPPER(:B1
 ) AND TABLE_NAME = UPPER(:B2 ) ORDER BY T.PARTITION_POSITION

0000000092C92828
SELECT T.PARTITION_POSITION,T.PARTITION_NAME, T.HIGH_VALUE , CASE WHEN T.NUM_ROWS IS NULL THEN 'None' ELSE TO_CHAR(T.NUM_ROWS) END AS N
UM_ROWS, CASE WHEN T.SAMPLE_SIZE IS NULL THEN 0 ELSE T.SAMPLE_SIZE END AS SAMPLE_SIZE, CASE WHEN TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') IS
 NULL THEN 'None' ELSE TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD') END AS LAST_ANALYZED, ROUND(S.G,2) AS G, T.SUBPARTITION_COUNT AS SUBPARTITIO
N_CNT,T.COMPRESSION FROM DBA_TAB_PARTITIONS T, (SELECT SUM(BYTES/1024/1024/1024) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME
 = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY PARTITION_NAME) S WHERE S.PARTITION_NAME = T.PARTITION_NAME AND TABLE_OWNER = UPPER(:B1
 ) AND TABLE_NAME = UPPER(:B2 ) ORDER BY T.PARTITION_POSITION

000000008B3ADFC8
SELECT PARTITION_NAME FROM DBA_TAB_PARTITIONS WHERE TABLE_OWNER = :B2 AND TABLE_NAME = :B1 AND PARTITION_POSITION = (SELECT PARTITION_P
OSITION - 1 FROM DBA_TAB_PARTITIONS WHERE TABLE_OWNER = :B2 AND TABLE_NAME = :B1 AND PARTITION_NAME = :B3 )

000000008B078370
SELECT PARTITION_NAME FROM DBA_TAB_PARTITIONS WHERE TABLE_OWNER = :B2 AND TABLE_NAME = :B1 AND PARTITION_POSITION = (SELECT PARTITION_P
OSITION - 1 FROM DBA_TAB_PARTITIONS WHERE TABLE_OWNER = :B2 AND TABLE_NAME = :B1 AND PARTITION_NAME = :B3 )

0000000088D212D0
DELETE FROM EXF$JAVA

0000000088FFDDC0
17879879122557751200

0000000060D88340
7374286531b149771fab3c29be316d8f

000000008B32A008
SELECT Q.OID FROM SY

0000000088D91A58
insert into wrh$_sqlstat  (snap_id, dbid, instance_number,   sql_id, plan_hash_value,   optimizer_cost, optimizer_mode, optimizer_env_h
ash_value,   sharable_mem, loaded_versions, version_count,   module, action,   sql_profile, force_matching_signature,   parsing_schema_
id, parsing_schema_name, parsing_user_id,   fetches_total, fetches_delta,   end_of_fetch_count_total, end_of_fetch_count_delta,   sorts
_total, sorts_delta,   executions_total, executions_delta,   px_servers_execs_total, px_servers_execs_delta,   loads_total, loads_delta
,   invalidations_total, invalidations_delta,   parse_calls_total, parse_calls_delta,   disk_reads_total, disk_reads_delta,   buffer_ge
ts_total, buffer_gets_delta,   rows_processed_total, rows_processed_delta,   cpu_time_total, cpu_time_delta,   elapsed_time_total, elap
sed_time_delta,   iowait_total, iowait_delta,   clwait_total, clwait_delta,   apwait_total, apwait_delta,   ccwait_total, ccwait_delta,
   direct_writes_total, direct_writes_delta,   plsexec_

0000000092D80538
insert into wrh$_sqlstat  (snap_id, dbid, instance_number,   sql_id, plan_hash_value,   optimizer_cost, optimizer_mode, optimizer_env_h
ash_value,   sharable_mem, loaded_versions, version_count,   module, action,   sql_profile, force_matching_signature,   parsing_schema_
id, parsing_schema_name, parsing_user_id,   fetches_total, fetches_delta,   end_of_fetch_count_total, end_of_fetch_count_delta,   sorts
_total, sorts_delta,   executions_total, executions_delta,   px_servers_execs_total, px_servers_execs_delta,   loads_total, loads_delta
,   invalidations_total, invalidations_delta,   parse_calls_total, parse_calls_delta,   disk_reads_total, disk_reads_delta,   buffer_ge
ts_total, buffer_gets_delta,   rows_processed_total, rows_processed_delta,   cpu_time_total, cpu_time_delta,   elapsed_time_total, elap
sed_time_delta,   iowait_total, iowait_delta,   clwait_total, clwait_delta,   apwait_total, apwait_delta,   ccwait_total, ccwait_delta,
   direct_writes_total, direct_writes_delta,   plsexec_

000000008B281340
insert into wrh$_sqlstat  (snap_id, dbid, instance_number,   sql_id, plan_hash_value,   optimizer_cost, optimizer_mode, optimizer_env_h
ash_value,   sharable_mem, loaded_versions, version_count,   module, action,   sql_profile, force_matching_signature,   parsing_schema_
id, parsing_schema_name, parsing_user_id,   fetches_total, fetches_delta,   end_of_fetch_count_total, end_of_fetch_count_delta,   sorts
_total, sorts_delta,   executions_total, executions_delta,   px_servers_execs_total, px_servers_execs_delta,   loads_total, loads_delta
,   invalidations_total, invalidations_delta,   parse_calls_total, parse_calls_delta,   disk_reads_total, disk_reads_delta,   buffer_ge
ts_total, buffer_gets_delta,   rows_processed_total, rows_processed_delta,   cpu_time_total, cpu_time_delta,   elapsed_time_total, elap
sed_time_delta,   iowait_total, iowait_delta,   clwait_total, clwait_delta,   apwait_total, apwait_delta,   ccwait_total, ccwait_delta,
   direct_writes_total, direct_writes_delta,   plsexec_

000000008C873A58
insert into wrh$_sqlstat  (snap_id, dbid, instance_number,   sql_id, plan_hash_value,   optimizer_cost, optimizer_mode, optimizer_env_h
ash_value,   sharable_mem, loaded_versions, version_count,   module, action,   sql_profile, force_matching_signature,   parsing_schema_
id, parsing_schema_name, parsing_user_id,   fetches_total, fetches_delta,   end_of_fetch_count_total, end_of_fetch_count_delta,   sorts
_total, sorts_delta,   executions_total, executions_delta,   px_servers_execs_total, px_servers_execs_delta,   loads_total, loads_delta
,   invalidations_total, invalidations_delta,   parse_calls_total, parse_calls_delta,   disk_reads_total, disk_reads_delta,   buffer_ge
ts_total, buffer_gets_delta,   rows_processed_total, rows_processed_delta,   cpu_time_total, cpu_time_delta,   elapsed_time_total, elap
sed_time_delta,   iowait_total, iowait_delta,   clwait_total, clwait_delta,   apwait_total, apwait_delta,   ccwait_total, ccwait_delta,
   direct_writes_total, direct_writes_delta,   plsexec_

0000000092D3B8E8
insert into wrh$_sqlstat  (snap_id, dbid, instance_number,   sql_id, plan_hash_value,   optimizer_cost, optimizer_mode, optimizer_env_h
ash_value,   sharable_mem, loaded_versions, version_count,   module, action,   sql_profile, force_matching_signature,   parsing_schema_
id, parsing_schema_name, parsing_user_id,   fetches_total, fetches_delta,   end_of_fetch_count_total, end_of_fetch_count_delta,   sorts
_total, sorts_delta,   executions_total, executions_delta,   px_servers_execs_total, px_servers_execs_delta,   loads_total, loads_delta
,   invalidations_total, invalidations_delta,   parse_calls_total, parse_calls_delta,   disk_reads_total, disk_reads_delta,   buffer_ge
ts_total, buffer_gets_delta,   rows_processed_total, rows_processed_delta,   cpu_time_total, cpu_time_delta,   elapsed_time_total, elap
sed_time_delta,   iowait_total, iowait_delta,   clwait_total, clwait_delta,   apwait_total, apwait_delta,   ccwait_total, ccwait_delta,
   direct_writes_total, direct_writes_delta,   plsexec_

0000000088D91ED8
insert into wrh$_sqlstat  (snap_id, dbid, instance_number,   sql_id, plan_hash_value,   optimizer_cost, optimizer_mode, optimizer_env_h
ash_value,   sharable_mem, loaded_versions, version_count,   module, action,   sql_profile, force_matching_signature,   parsing_schema_
id, parsing_schema_name, parsing_user_id,   fetches_total, fetches_delta,   end_of_fetch_count_total, end_of_fetch_count_delta,   sorts
_total, sorts_delta,   executions_total, executions_delta,   px_servers_execs_total, px_servers_execs_delta,   loads_total, loads_delta
,   invalidations_total, invalidations_delta,   parse_calls_total, parse_calls_delta,   disk_reads_total, disk_reads_delta,   buffer_ge
ts_total, buffer_gets_delta,   rows_processed_total, rows_processed_delta,   cpu_time_total, cpu_time_delta,   elapsed_time_total, elap
sed_time_delta,   iowait_total, iowait_delta,   clwait_total, clwait_delta,   apwait_total, apwait_delta,   ccwait_total, ccwait_delta,
   direct_writes_total, direct_writes_delta,   plsexec_

0000000088D50058
SELECT OWNER, DECODE

000000008B2E49E8 SYS
X$KCCIC

0000000092D532C8
cd23ace5790ecc9a5e77d8862bb29364

0000000088FA1E68
SELECT COUNT(*) FROM X$KSPPI A, X$KSPPCV2 B WHERE A.INDX + 1 = KSPFTCTXPN AND KSPPINM = '_deferred_log_dest_is_valid' AND UPPER(KSPFTCT
XVL)='TRUE'

000000008B34F8A8
SELECT COUNT(*) FROM X$KSPPI A, X$KSPPCV2 B WHERE A.INDX + 1 = KSPFTCTXPN AND KSPPINM = '_deferred_log_dest_is_valid' AND UPPER(KSPFTCT
XVL)='TRUE'

000000006534DBA0
f810de94482a705fa45ab7cd2fba2066

000000008B130868
9acdc455870a5f559e0d75fdb4b04d9

000000008CB51180 SYS
KOTTB$

0000000088EC7E90 EXFSYS
RLM$PROCESSCOLLPREDS

0000000060E46C18
SELECT USERID FROM W

000000008CABB440
6aa92f78e1d1a22cb4927316c95c9524

000000008B0A2CB0
select substrb(dump(

0000000088DDBCC0 MDSYS
DBA_TAB_COLUMNS

0000000060DC23E8
b2a66f0b447c610281e2c364828e1be

0000000088EBD4A0
70e289804c93846cc3836da43a5e231c

000000008B2FE690 SYS
V$SQLAREA_PLAN_HASH

000000008B0C0030
9a73bb7dd3a509263577bda46a58c791

000000008B29F090
d0b6ed24a015dc4eb04e0d6d96afa21b

00000000653517B0
6337b32727ade5f2a5b7c5948decd72

0000000088E81520 SYS
WRH$_DB_CACHE_ADVICE

0000000088D0F688 SYS
DBA_STREAMS_SPLIT_MERGE

0000000088E9B500
68e6c80ec5e9078a7a7a2d85bfe35067

000000008C9E6718
10a0910e37b72cf612dd6f811a29689a

000000008B05E950
SELECT COUNT(*) FROM

0000000088D86570
SELECT type, attr1, attr2, attr3, attr4, attr5, exec_name, attr6, attr7, attr8, attr9, attr10 FROM sys.wri$_adv_objects WHERE task_id =
 :1 and id = :2

0000000088E3B0D8
SELECT type, attr1, attr2, attr3, attr4, attr5, exec_name, attr6, attr7, attr8, attr9, attr10 FROM sys.wri$_adv_objects WHERE task_id =
 :1 and id = :2

000000008CA0C200
SELECT type, attr1, attr2, attr3, attr4, attr5, exec_name, attr6, attr7, attr8, attr9, attr10 FROM sys.wri$_adv_objects WHERE task_id =
 :1 and id = :2

0000000088C8DA78
UPDATE WRI$_SQLSET_S

000000008B0D0288
SELECT COUNT(*) FROM

000000008B11A920
3161377125052574288

000000008B19E848
SELECT COUNT(*) FROM

0000000060DB0518
95965dff6dfa9d6e8cbb7cf6dd32b234

0000000088CC5578
SELECT VALUE FROM V$SESSION_FIX_CONTROL WHERE BUGNO = :B1 AND SESSION_ID = USERENV('SID')

000000008CB46938
SELECT VALUE FROM V$SESSION_FIX_CONTROL WHERE BUGNO = :B1 AND SESSION_ID = USERENV('SID')

0000000088CF2138
SELECT VALUE FROM V$SESSION_FIX_CONTROL WHERE BUGNO = :B1 AND SESSION_ID = USERENV('SID')

0000000088CECA88 SYS
DBA_HIST_SQLTEXT

000000008B283420
e16067c0985cb1cb83bd4ecf2f3140c8

000000008B22D960 APEX_030200
WWV_FLOW_SESSIONS$

000000008B14D438
cfa899a7bb0669765e525998ddc98f4

000000008CACFCA8 SYS
WRH$_DYN_REMASTER_STATS

0000000060FBF6F0
FLOWS_FILES

000000008B3AB1B8 SYS
DBMS_MANAGEMENT_PACKS

0000000060D1EA88
49c6410e71c3b231b41862a9a3d2c5eb

000000008B3A6FD8
SELECT MAX(TASK_ID),

000000008CB58F68
select substrb(dump(

0000000060C994A0
1e4013f81f1d52db61c9c355510564c

0000000088E457C8
1b5e74ab17e54624cd9bf8aaeb2ffe4a

000000008B1BFE90 $BUILD$
5912015ac161a48f

000000008CBDFB90
50e0e16c8f9a0a9697cac7bdf5e66235

000000008B1F7AF0
eb6543058b08997b165876b9ce466885

000000008CA51B78
INSERT INTO RLM$RSPR

000000008B0ECCB8
30c0eb93b5d258fce1b7d7024bf8f61

000000008B063A60
SELECT USERENV('inst

0000000060C61730
select substrb(dump(

000000008CA74960 SYS
PROCEDUREC$

000000008C8DE5C8 APEX_030200
WWV_FLOW_COLLECTIONS$

000000008C8A0408
INSERT INTO wri$_adv_addm_inst ( TASK_ID, INSTANCE_NUMBER, INSTANCE_NAME, HOST_NAME, STATUS,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACT
IVE_SESS,   METER_LEVEL, LOCAL_TASK_ID) VALUES ( :tid, :inst_num, :inst_name, :host_name, :st,          NULL, NULL, NULL, NULL, NULL)

0000000088C50D98
INSERT INTO wri$_adv_addm_inst ( TASK_ID, INSTANCE_NUMBER, INSTANCE_NAME, HOST_NAME, STATUS,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACT
IVE_SESS,   METER_LEVEL, LOCAL_TASK_ID) VALUES ( :tid, :inst_num, :inst_name, :host_name, :st,          NULL, NULL, NULL, NULL, NULL)

0000000088D9E6C0
INSERT INTO wri$_adv_addm_inst ( TASK_ID, INSTANCE_NUMBER, INSTANCE_NAME, HOST_NAME, STATUS,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACT
IVE_SESS,   METER_LEVEL, LOCAL_TASK_ID) VALUES ( :tid, :inst_num, :inst_name, :host_name, :st,          NULL, NULL, NULL, NULL, NULL)

000000008C9FC078
INSERT INTO wri$_adv_addm_inst ( TASK_ID, INSTANCE_NUMBER, INSTANCE_NAME, HOST_NAME, STATUS,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACT
IVE_SESS,   METER_LEVEL, LOCAL_TASK_ID) VALUES ( :tid, :inst_num, :inst_name, :host_name, :st,          NULL, NULL, NULL, NULL, NULL)

0000000092CC20D8
INSERT INTO wri$_adv_addm_inst ( TASK_ID, INSTANCE_NUMBER, INSTANCE_NAME, HOST_NAME, STATUS,   DATABASE_TIME, ACTIVE_SESSIONS, PERC_ACT
IVE_SESS,   METER_LEVEL, LOCAL_TASK_ID) VALUES ( :tid, :inst_num, :inst_name, :host_name, :st,          NULL, NULL, NULL, NULL, NULL)

0000000088EA8720 PUBLIC
DBMS_XMLDOM

000000008B1DB9B8
f3bf7a82af101b8e1b0d6a8db8f4959f

000000008CBB3A30 SYS
SCHEDULER$_BATCHERR_ARRAY

000000006530E840
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B24C860
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B18C4F0
delete from WRM$_DATABASE_INSTANCE dbinst where dbinst.dbid = :dbid   and NOT EXISTS       (select 1 from WRM$_SNAPSHOT snap          w
here snap.dbid = :dbid            and snap.instance_number = dbinst.instance_number            and snap.startup_time = dbinst.startup_t
ime)   and dbinst.startup_time <       (select max(startup_time)          from WRM$_DATABASE_INSTANCE         where dbid = :dbid
    and instance_number = dbinst.instance_number           and startup_time < (cast(SYSTIMESTAMP as TIMESTAMP) -
        :retention))

0000000092EBBB78
delete from WRM$_DATABASE_INSTANCE dbinst where dbinst.dbid = :dbid   and NOT EXISTS       (select 1 from WRM$_SNAPSHOT snap          w
here snap.dbid = :dbid            and snap.instance_number = dbinst.instance_number            and snap.startup_time = dbinst.startup_t
ime)   and dbinst.startup_time <       (select max(startup_time)          from WRM$_DATABASE_INSTANCE         where dbid = :dbid
    and instance_number = dbinst.instance_number           and startup_time < (cast(SYSTIMESTAMP as TIMESTAMP) -
        :retention))

000000008B08CD30
SELECT /*+ ordered

0000000088DE87C8 SYS
SCHEDULER$_STEP_TYPE

000000008C91E748
70adff3eead07391bc6d4328645218c

0000000088E2D8A8
a5874278df1163c7541962d36c66ae8f

0000000088CF6D28
67e778ea1f8699cf7e71a9fc57b7be70

000000008B03BFB8
select substrb(dump(

000000008B07CDF0
SELECT DISTINCT NAME

0000000092EBCE98 APEX_030200
WWV_FLOW_WORKSHEET_RPTS

000000008CBB31F0 SYS
WRH$_RESOURCE_LIMIT

000000008B12FC38
table_4_d_1909_0_0_0

000000008B397E70
table_4_d_1909_0_0_0

0000000092CEFEE8 WMSYS
NO_VM_DDL

000000008B12D8F8 $BUILD$
88506ca182daf415

0000000060F68BF0
b05e67c3d1cedcd7f0019112b19bf1c

0000000060D38D28
82718c9044d2d86359993e0425439af

000000008C9D26C0
SELECT ERROR_PAGE_TE

000000008B0C6508
a23491536388dc5a6b364c2e1b80afb

0000000092EB3520
SELECT * FROM SYS.WRI$_ADV_DEF_PARAMETERS A WHERE A.ADVISOR_ID IN (:B1 ,0)

000000008C9285F8
SELECT * FROM SYS.WRI$_ADV_DEF_PARAMETERS A WHERE A.ADVISOR_ID IN (:B1 ,0)

0000000060E69EC0
5bcf9f49f8ae39470a6d57e18242a83

000000008CADA948
SELECT DBTIMEZONE FR

000000008B259928
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "COWNER" is not null  group by nlssort("COWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

0000000092D47CD8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "COWNER" is not null  group by nlssort("COWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

0000000088E4DF78
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "COWNER" is not null  group by nlssort("COWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

000000008CB9C3D8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "COWNER" is not null  group by nlssort("COWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

0000000065329198
45dbebad54905e93a0f9d93a8d2eb67b

000000008CBD2210
d71d2c04a98aa68a23c8387a77b6595

0000000088F87E78
a59118451eb642bfdba4f4f3826aca1b

0000000088E14BB8
insert into wrh$_thread     (snap_id, dbid, instance_number,      thread#, thread_instance_number, status,      open_time, current_grou
p#, sequence#)  select      :snap_id, :dbid, :instance_number,      rt.rtnum, ks.inst_id, decode(bitand(rtsta,1),1,'OPEN','CLOSED'),
  to_date(rt.rtots,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),      rt.rtcln, rt.rtseq    from  x$kccrt rt, x$ksuxsinst ks   where
 ks.ksuxsthr(+) = rt.rtnum     and rtnlf != 0

000000008B0FD3F8
insert into wrh$_thread     (snap_id, dbid, instance_number,      thread#, thread_instance_number, status,      open_time, current_grou
p#, sequence#)  select      :snap_id, :dbid, :instance_number,      rt.rtnum, ks.inst_id, decode(bitand(rtsta,1),1,'OPEN','CLOSED'),
  to_date(rt.rtots,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),      rt.rtcln, rt.rtseq    from  x$kccrt rt, x$ksuxsinst ks   where
 ks.ksuxsthr(+) = rt.rtnum     and rtnlf != 0

000000008B0EF5A8
insert into wrh$_thread     (snap_id, dbid, instance_number,      thread#, thread_instance_number, status,      open_time, current_grou
p#, sequence#)  select      :snap_id, :dbid, :instance_number,      rt.rtnum, ks.inst_id, decode(bitand(rtsta,1),1,'OPEN','CLOSED'),
  to_date(rt.rtots,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),      rt.rtcln, rt.rtseq    from  x$kccrt rt, x$ksuxsinst ks   where
 ks.ksuxsthr(+) = rt.rtnum     and rtnlf != 0

0000000060E91F50
insert into wrh$_thread     (snap_id, dbid, instance_number,      thread#, thread_instance_number, status,      open_time, current_grou
p#, sequence#)  select      :snap_id, :dbid, :instance_number,      rt.rtnum, ks.inst_id, decode(bitand(rtsta,1),1,'OPEN','CLOSED'),
  to_date(rt.rtots,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),      rt.rtcln, rt.rtseq    from  x$kccrt rt, x$ksuxsinst ks   where
 ks.ksuxsthr(+) = rt.rtnum     and rtnlf != 0

0000000088E15038
insert into wrh$_thread     (snap_id, dbid, instance_number,      thread#, thread_instance_number, status,      open_time, current_grou
p#, sequence#)  select      :snap_id, :dbid, :instance_number,      rt.rtnum, ks.inst_id, decode(bitand(rtsta,1),1,'OPEN','CLOSED'),
  to_date(rt.rtots,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),      rt.rtcln, rt.rtseq    from  x$kccrt rt, x$ksuxsinst ks   where
 ks.ksuxsthr(+) = rt.rtnum     and rtnlf != 0

000000008B2B0FF8 SYS
IND_ONLINE$

00000000653BD2F0
15af3f50fe128a50ac520c7888175c5e

000000008B2F8098
select null from obj$ where obj#=:1 and type#=:2 and obj# not in (select p_obj# from dependency$ where p_obj# = obj$.obj#)

0000000092D6F1A8
select null from obj$ where obj#=:1 and type#=:2 and obj# not in (select p_obj# from dependency$ where p_obj# = obj$.obj#)

0000000088E58DE8
select null from obj$ where obj#=:1 and type#=:2 and obj# not in (select p_obj# from dependency$ where p_obj# = obj$.obj#)

00000000653E20E0
c24cb314c06781754403597d2c0c9a6e

0000000092C7A248
SELECT MAX(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

000000008C9F22C0
SELECT MAX(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

000000008B104E88
SELECT MAX(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

0000000092D13528
SELECT MAX(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

0000000060D171A0
SELECT MAX(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

000000008B145968
SELECT MAX(END_INTERVAL_TIME), COUNT(*) FROM WRM$_SNAPSHOT WHERE SNAP_ID = :B2 AND DBID = :B1

000000008B1FA370
SELECT :B11 TYPE_CON

0000000088C8D6D8
UPDATE WRI$_SQLSET_S

000000008CA2D580
SELECT TO_CHAR(INSTA

000000008C8BE980
ffabab7a1546b8df114b83eb3bb0daaf

000000008B28FBA8
SELECT RECID, STAMP,

0000000092D80108 SYS
X$KQFTA

000000008B2ACB58 $BUILD$
620b6502c37dd927

0000000060F11460
/* SQL Analyze(1) */

000000008CB00548
select substrb(dump(

000000008B31EF08
SELECT BITAND(RSET_P

000000008B25BF28
INSERT INTO EXF$ATTR

000000008C919328
UPDATE SYS.WRI$_ADV_

00000000652C7940
4cc9e8a0cc13723ef7c1bd9c9d516e59

0000000088F3CE08
feda23fd904280cd45aaf86fe2584e

0000000060F873E0
SELECT MAX(ID) FROM

0000000088D8B158
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088FA4CB8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088DE1528
MERGE /*+ INDEX(@sel$2 sqlobj$                                                                       (signature category obj_type plan_
id)) */              INTO sqlobj$                                                                  USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET name = :5,
                                        flags = :6,                                                                   last_executed = :
7                                               WHEN NOT MATCHED THEN                                                           INSERT
(signature, category, obj_type, plan_id, name,

0000000060FB4750
MERGE /*+ INDEX(@sel$2 sqlobj$                                                                       (signature category obj_type plan_
id)) */              INTO sqlobj$                                                                  USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET name = :5,
                                        flags = :6,                                                                   last_executed = :
7                                               WHEN NOT MATCHED THEN                                                           INSERT
(signature, category, obj_type, plan_id, name,

000000008B118890
SELECT KSPPCV.KSPPSTVL FROM X$KSPPCV KSPPCV, X$KSPPI KSPPI WHERE KSPPI.INDX = KSPPCV.INDX AND KSPPI.KSPPINM = 'db_block_size'

000000008B078920
SELECT KSPPCV.KSPPSTVL FROM X$KSPPCV KSPPCV, X$KSPPI KSPPI WHERE KSPPI.INDX = KSPPCV.INDX AND KSPPI.KSPPINM = 'db_block_size'

0000000088D180E0
SELECT NVL(MAX(LENGT

0000000060D00A30 EXIT
VIM

000000008C8BCE88
/* SQL Analyze(1) */

0000000088CA04D8
SELECT POSITION, VAL

000000008B16E630
select substrb(dump(

000000008CB2D220
select substrb(dump(

0000000088E505F0 SYS
V$STANDBY_LOG

0000000088F18D58 SYS
AUD$

0000000088FFB2E0 PUBLIC
DBMS_ASSERT

0000000060F8F2F0
DELETE FROM SYS.SCHEDULER$_EVENT_LOG WHERE DBID IS NULL AND LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E, SYS.SCHEDULER$_
CLASS C WHERE E.TYPE# = 66 AND E.CLASS_ID = C.OBJ#(+) AND (E.FLAGS IS NULL OR BITAND(E.FLAGS, 2)=0) AND OPERATION NOT LIKE 'CHAIN%' AND
 E.LOG_DATE < :B2 - NUMTODSINTERVAL(NVL(C.LOG_HISTORY, :B1 ), 'DAY'))

000000008B193E18
DELETE FROM SYS.SCHEDULER$_EVENT_LOG WHERE DBID IS NULL AND LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E, SYS.SCHEDULER$_
CLASS C WHERE E.TYPE# = 66 AND E.CLASS_ID = C.OBJ#(+) AND (E.FLAGS IS NULL OR BITAND(E.FLAGS, 2)=0) AND OPERATION NOT LIKE 'CHAIN%' AND
 E.LOG_DATE < :B2 - NUMTODSINTERVAL(NVL(C.LOG_HISTORY, :B1 ), 'DAY'))

000000008B079200 SYS
GROUP_NUM_SEQ

000000008B1887A8 SYS
WRH$_STREAMS_CAPTURE

0000000060F50720 APEX_030200
WWV_FLOW_DEVELOPERS

0000000060F498D0
9cfd2727f30195e759a1d5c68bb699b4

0000000088D2C5C0
declare  error boolean;   st_syn_detected EXCEPTION;    PRAGMA EXCEPTION_INIT(st_syn_detected, -995);  BEGIN    if((sys.dbms_standard.d
ictionary_obj_type!='SYNONYM')or(sys.dbms_standard.dictionary_obj_owner!='PUBLIC'))    then      return;    end if;    error :=       C
ASE sys.dbms_standard.dictionary_obj_name          WHEN 'ST_GEOMETRY' THEN TRUE          WHEN 'ST_SURFACE' THEN TRUE          WHEN 'ST_
POLYGON' THEN TRUE          WHEN 'ST_POINT' THEN TRUE          WHEN 'ST_MULTISURFACE' THEN TRUE          WHEN 'ST_MULTIPOINT' THEN TRUE
          WHEN 'ST_MULTILINESTRING' THEN TRUE          WHEN 'ST_MULTICURVE' THEN TRUE          WHEN 'ST_LINESTRING' THEN TRUE
WHEN 'ST_GEOMCOLLECTION' THEN TRUE          WHEN 'ST_CURVE' THEN TRUE          WHEN 'ST_CURVEPOLYGON' THEN TRUE          WHEN 'ST_COMPO
UNDCURVE' THEN TRUE          WHEN 'ST_CIRCULARSTRING' THEN TRUE          WHEN 'ST_INTERSECTS' THEN TRUE          WHEN 'ST_RELATE' THEN
TRUE          WHEN 'ST_TOUCH' THEN TRUE          WHEN '

0000000092EB2840
declare  error boolean;   st_syn_detected EXCEPTION;    PRAGMA EXCEPTION_INIT(st_syn_detected, -995);  BEGIN    if((sys.dbms_standard.d
ictionary_obj_type!='SYNONYM')or(sys.dbms_standard.dictionary_obj_owner!='PUBLIC'))    then      return;    end if;    error :=       C
ASE sys.dbms_standard.dictionary_obj_name          WHEN 'ST_GEOMETRY' THEN TRUE          WHEN 'ST_SURFACE' THEN TRUE          WHEN 'ST_
POLYGON' THEN TRUE          WHEN 'ST_POINT' THEN TRUE          WHEN 'ST_MULTISURFACE' THEN TRUE          WHEN 'ST_MULTIPOINT' THEN TRUE
          WHEN 'ST_MULTILINESTRING' THEN TRUE          WHEN 'ST_MULTICURVE' THEN TRUE          WHEN 'ST_LINESTRING' THEN TRUE

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
WHEN 'ST_GEOMCOLLECTION' THEN TRUE          WHEN 'ST_CURVE' THEN TRUE          WHEN 'ST_CURVEPOLYGON' THEN TRUE          WHEN 'ST_COMPO
UNDCURVE' THEN TRUE          WHEN 'ST_CIRCULARSTRING' THEN TRUE          WHEN 'ST_INTERSECTS' THEN TRUE          WHEN 'ST_RELATE' THEN
TRUE          WHEN 'ST_TOUCH' THEN TRUE          WHEN '

0000000088D2CA40
declare  error boolean;   st_syn_detected EXCEPTION;    PRAGMA EXCEPTION_INIT(st_syn_detected, -995);  BEGIN    if((sys.dbms_standard.d
ictionary_obj_type!='SYNONYM')or(sys.dbms_standard.dictionary_obj_owner!='PUBLIC'))    then      return;    end if;    error :=       C
ASE sys.dbms_standard.dictionary_obj_name          WHEN 'ST_GEOMETRY' THEN TRUE          WHEN 'ST_SURFACE' THEN TRUE          WHEN 'ST_
POLYGON' THEN TRUE          WHEN 'ST_POINT' THEN TRUE          WHEN 'ST_MULTISURFACE' THEN TRUE          WHEN 'ST_MULTIPOINT' THEN TRUE
          WHEN 'ST_MULTILINESTRING' THEN TRUE          WHEN 'ST_MULTICURVE' THEN TRUE          WHEN 'ST_LINESTRING' THEN TRUE
WHEN 'ST_GEOMCOLLECTION' THEN TRUE          WHEN 'ST_CURVE' THEN TRUE          WHEN 'ST_CURVEPOLYGON' THEN TRUE          WHEN 'ST_COMPO
UNDCURVE' THEN TRUE          WHEN 'ST_CIRCULARSTRING' THEN TRUE          WHEN 'ST_INTERSECTS' THEN TRUE          WHEN 'ST_RELATE' THEN
TRUE          WHEN 'ST_TOUCH' THEN TRUE          WHEN '

000000008B25CA30 $BUILD$
b64ac1c08383f2dd

0000000088CA6438 SYS
DBA_SQLTUNE_PLANS

0000000060FA3580
SELECT PRIORITY PRIO

00000000653DFA40 $BUILD$
15069fe4f9ae6d34

000000008C848050
select name,password,datats#,tempts#,type#,defrole,resource$, ptime, decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where user#=:1

000000008CA454E8
select name,password,datats#,tempts#,type#,defrole,resource$, ptime, decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where user#=:1

000000008C9DE470
select name,password,datats#,tempts#,type#,defrole,resource$, ptime, decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where user#=:1

000000008C8484D0
select name,password,datats#,tempts#,type#,defrole,resource$, ptime, decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where user#=:1

0000000060C81BF8
9491400f1206dfd1e1851d6f5b4055ac

0000000060C50490
cd3744da5e17066dd59d0eedbbcee4f7

0000000092D06278
SELECT PROPERTY FROM WRI$_ADV_TASKS WHERE ID = :B1

0000000092CD2198
SELECT PROPERTY FROM WRI$_ADV_TASKS WHERE ID = :B1

000000008B163270
SELECT PROPERTY FROM WRI$_ADV_TASKS WHERE ID = :B1

0000000088E7DD10
SELECT PROPERTY FROM WRI$_ADV_TASKS WHERE ID = :B1

000000008CB93EB8
SELECT PROPERTY FROM WRI$_ADV_TASKS WHERE ID = :B1

000000008B267B48
SELECT PROPERTY FROM WRI$_ADV_TASKS WHERE ID = :B1

000000008C929CE8
SELECT PROPERTY FROM WRI$_ADV_TASKS WHERE ID = :B1

0000000060F66890
select substrb(dump(

0000000060E28F70
SELECT O.TYPE# FROM SYS.OBJ$ O WHERE O.OBJ# = :B1

000000008B05FF00
SELECT O.TYPE# FROM SYS.OBJ$ O WHERE O.OBJ# = :B1

0000000088DDDBF8
16ca272060087b658c73d55aee098ce2

0000000060F721D0
select /*+  no_paral

000000008B034128
insert into histgrm$(obj#,intcol#,row#,bucket,endpoint,col#,epvalue)values(:1,:2,:3,:4,:5,:6,:7)

000000008C951918
insert into histgrm$(obj#,intcol#,row#,bucket,endpoint,col#,epvalue)values(:1,:2,:3,:4,:5,:6,:7)

000000008B0EE948
insert into histgrm$(obj#,intcol#,row#,bucket,endpoint,col#,epvalue)values(:1,:2,:3,:4,:5,:6,:7)

000000008C966250
insert into histgrm$(obj#,intcol#,row#,bucket,endpoint,col#,epvalue)values(:1,:2,:3,:4,:5,:6,:7)

0000000092D17728
insert into histgrm$(obj#,intcol#,row#,bucket,endpoint,col#,epvalue)values(:1,:2,:3,:4,:5,:6,:7)

000000008B2F0A00
insert into histgrm$(obj#,intcol#,row#,bucket,endpoint,col#,epvalue)values(:1,:2,:3,:4,:5,:6,:7)

000000008B3DFF18
insert into histgrm$(obj#,intcol#,row#,bucket,endpoint,col#,epvalue)values(:1,:2,:3,:4,:5,:6,:7)

000000008C93D418 PUBLIC
V$SESSION

000000008B0EB1D8 APEX_030200
WWV_FLOW_TREES

000000008B36BAC0
5e605316f36ef2a3b633672df3d99cf1

0000000088DE79B8
update sys.scheduler$_job set  flags = :1, dist_flags = :2 where  obj# = :3

0000000088F1A828
update sys.scheduler$_job set  flags = :1, dist_flags = :2 where  obj# = :3

0000000088C5CEE8
update sys.scheduler$_job set  flags = :1, dist_flags = :2 where  obj# = :3

0000000060FD39C0
update sys.scheduler$_job set  flags = :1, dist_flags = :2 where  obj# = :3

0000000088DE7D48
update sys.scheduler$_job set  flags = :1, dist_flags = :2 where  obj# = :3

000000008C92B0A8
INSERT INTO SYS.WRI$

000000008B2B1218
4536aba0e07c05ee4439de94a723e1ec

0000000088DCA338
1797413f9f118a43dcc524d263115a24

000000008CA020D8
SELECT DISTINCT BS.S

0000000088E5C8F8
346f70cda3227d855a05d824c5417817

0000000088F70BD0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("STALENESS")),to_char(substrb(dump(min("STALENESS"),16,0,32),1,120)),to_c
har(substrb(dump(max("STALENESS"),16,0,32),1,120)),to_char(count("OSIZE")),to_char(substrb(dump(min("OSIZE"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("OSIZE"),16,0,32),1,120)),to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substrb(dump
(max("OBJ#"),16,0,32),1,120)),to_char(count("TYPE#")),to_char(substrb(dump(min("TYPE#"),16,0,32),1,120)),to_char(substrb(dump(max("TYPE
#"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAGS"),16,0,
32),1,120)),to_char(count("STATUS")),to_char(substrb(dump(min("STATUS"),16,0,32),1,120)),to_char(substrb(dump(max("STATUS"),16,0,32),1,
120)),to_char(count("SID")),to_char(substrb(dump(min("S

000000008CA21578
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("STALENESS")),to_char(substrb(dump(min("STALENESS"),16,0,32),1,120)),to_c
har(substrb(dump(max("STALENESS"),16,0,32),1,120)),to_char(count("OSIZE")),to_char(substrb(dump(min("OSIZE"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("OSIZE"),16,0,32),1,120)),to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substrb(dump
(max("OBJ#"),16,0,32),1,120)),to_char(count("TYPE#")),to_char(substrb(dump(min("TYPE#"),16,0,32),1,120)),to_char(substrb(dump(max("TYPE
#"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAGS"),16,0,
32),1,120)),to_char(count("STATUS")),to_char(substrb(dump(min("STATUS"),16,0,32),1,120)),to_char(substrb(dump(max("STATUS"),16,0,32),1,
120)),to_char(count("SID")),to_char(substrb(dump(min("S

000000008CB43418
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("STALENESS")),to_char(substrb(dump(min("STALENESS"),16,0,32),1,120)),to_c
har(substrb(dump(max("STALENESS"),16,0,32),1,120)),to_char(count("OSIZE")),to_char(substrb(dump(min("OSIZE"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("OSIZE"),16,0,32),1,120)),to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substrb(dump
(max("OBJ#"),16,0,32),1,120)),to_char(count("TYPE#")),to_char(substrb(dump(min("TYPE#"),16,0,32),1,120)),to_char(substrb(dump(max("TYPE
#"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAGS"),16,0,
32),1,120)),to_char(count("STATUS")),to_char(substrb(dump(min("STATUS"),16,0,32),1,120)),to_char(substrb(dump(max("STATUS"),16,0,32),1,
120)),to_char(count("SID")),to_char(substrb(dump(min("S

000000008CAB44B0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("STALENESS")),to_char(substrb(dump(min("STALENESS"),16,0,32),1,120)),to_c
har(substrb(dump(max("STALENESS"),16,0,32),1,120)),to_char(count("OSIZE")),to_char(substrb(dump(min("OSIZE"),16,0,32),1,120)),to_char(s
ubstrb(dump(max("OSIZE"),16,0,32),1,120)),to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substrb(dump
(max("OBJ#"),16,0,32),1,120)),to_char(count("TYPE#")),to_char(substrb(dump(min("TYPE#"),16,0,32),1,120)),to_char(substrb(dump(max("TYPE
#"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAGS"),16,0,
32),1,120)),to_char(count("STATUS")),to_char(substrb(dump(min("STATUS"),16,0,32),1,120)),to_char(substrb(dump(max("STATUS"),16,0,32),1,
120)),to_char(count("SID")),to_char(substrb(dump(min("S

000000008C938E50
SELECT VALUE FROM NL

000000008B1CB978
be1e6ab92df204c540905e7dab3669

0000000060DC2188
26f1ff24edbc0abfbdd0082f61d7512e

0000000060CDCC80 $BUILD$
36901a2dc517330d

0000000092CCD978
90dc8b8b9ba07deda2a43e2527a84f1

000000008C87FC80
UPDATE STREAMS$_CAPT

000000008B2A7F28
select PARTITION_NAME,     COLUMN_NAME,NUM_DISTINCT,DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STATS,     USER_STATS,     SAMP
LE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_PART_COL_STATISTICS t where     table_name = :table_name and owner = up
per(nvl(:owner,user))

0000000088E15AD8
select PARTITION_NAME,     COLUMN_NAME,NUM_DISTINCT,DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STATS,     USER_STATS,     SAMP
LE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_PART_COL_STATISTICS t where     table_name = :table_name and owner = up
per(nvl(:owner,user))

00000000652DCF80
select PARTITION_NAME,     COLUMN_NAME,NUM_DISTINCT,DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STATS,     USER_STATS,     SAMP
LE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_PART_COL_STATISTICS t where     table_name = :table_name and owner = up
per(nvl(:owner,user))

0000000060EC4580
SELECT C.RULE_SET, C

000000008B273E78
95965dff6dfa9d6e8cbb7cf6dd32b234

000000008B3E22F0 SYS
X$KEWMFLMV

0000000088D26880
ec0e4e2b4ead3d3778ec8f05cd6b91c

00000000652C7FC0 SYS
TSP$

0000000060F357D0
3ec61a3af78a7e7b7ede1f9a0b8ea3

0000000088C86AD8
SELECT D.ATTR1, D.AT

0000000088FD6148 SYS
GV$RESOURCE_LIMIT

0000000065350F50
eea6d215afffb53451ec9da68d15981

0000000088FD6368 $BUILD$
8b1b39eca8e1f927

000000008B3C1B50
9f126cdaaf2a44b0550c0af488c1033f

0000000088CF6638
select name, block_size, buffers from v$buffer_pool

0000000088E576C8
select name, block_size, buffers from v$buffer_pool

000000008B219C10
select name, block_size, buffers from v$buffer_pool

0000000088F1CDA8
select name, block_size, buffers from v$buffer_pool

0000000088F50DC8 SYS
SQLOBJ$AUXDATA

000000008CA435C0 APEX_030200
WWV_FLOW_SW_DETAIL_RESULTS

0000000065354860
7af4b4372d1fffa68e1188d274dc6bde

000000008B0538B0
SELECT COUNT(*) FROM

0000000092D2AC98
e6a0c9e759694930af4b7884cffc296d

000000008CB91188
bd8ff7f116095cd04f07c4184237ed0e

000000008CA0E2F0
3ec61a3af78a7e7b7ede1f9a0b8ea3

0000000060D5DCB8
select substrb(dump(

000000008B1B2CA0
93e68bd5f62696436065a5b1b1a56b6

000000008B20F678 SYS
V$SYSTEM_PARAMETER

0000000088D1C750
f265d5e838d61eea262c745e87356bf5

0000000060C906C0 $BUILD$
d892108fa10b3900

000000008B086410
SELECT /*+ leading(t

000000008C932388 SYS
WRI$_ADV_PARAMETERS

000000008B297A90
648b3d4546bb4a802d495f784244aec5

0000000088DD4228
SELECT A.INDEX_NAME, A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T
.DATA_PRECISION||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABE
L',T.DATA_TYPE, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL_TYPE, A.COLU
MN_POSITION,DECODE(B.TABLESPACE_NAME,NULL,'None',B.TABLESPACE_NAME) AS TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE, ROUND(C.BYTES / 1024 / 10
24) AS INDEX_MB, A.DESCEND, CASE WHEN B.STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, DECODE(TO_CHAR(B.LAST_ANALYZED,'yymmdd hh2
4:mi'),NULL,'None', TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi')) AS LAST_ANALYZED, CASE WHEN B.VISIBILITY = 'VISIBLE' THEN 'YES' ELSE 'NO
 ' END VISIBILITY, CASE WHEN UNIQUENESS = 'UNIQUE' THEN 'YES' ELSE 'NO ' END UNIQUENESS FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGM
ENTS C ,DBA_TAB_COLUMNS T WHERE A.INDEX_NAME = B.INDEX_

000000008C891110
SELECT A.INDEX_NAME, A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T
.DATA_PRECISION||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABE
L',T.DATA_TYPE, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL_TYPE, A.COLU
MN_POSITION,DECODE(B.TABLESPACE_NAME,NULL,'None',B.TABLESPACE_NAME) AS TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE, ROUND(C.BYTES / 1024 / 10
24) AS INDEX_MB, A.DESCEND, CASE WHEN B.STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, DECODE(TO_CHAR(B.LAST_ANALYZED,'yymmdd hh2
4:mi'),NULL,'None', TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi')) AS LAST_ANALYZED, CASE WHEN B.VISIBILITY = 'VISIBLE' THEN 'YES' ELSE 'NO
 ' END VISIBILITY, CASE WHEN UNIQUENESS = 'UNIQUE' THEN 'YES' ELSE 'NO ' END UNIQUENESS FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGM
ENTS C ,DBA_TAB_COLUMNS T WHERE A.INDEX_NAME = B.INDEX_

000000008CA513D8
SELECT A.INDEX_NAME, A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T
.DATA_PRECISION||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABE
L',T.DATA_TYPE, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL_TYPE, A.COLU
MN_POSITION,DECODE(B.TABLESPACE_NAME,NULL,'None',B.TABLESPACE_NAME) AS TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE, ROUND(C.BYTES / 1024 / 10
24) AS INDEX_MB, A.DESCEND, CASE WHEN B.STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, DECODE(TO_CHAR(B.LAST_ANALYZED,'yymmdd hh2
4:mi'),NULL,'None', TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi')) AS LAST_ANALYZED, CASE WHEN B.VISIBILITY = 'VISIBLE' THEN 'YES' ELSE 'NO
 ' END VISIBILITY, CASE WHEN UNIQUENESS = 'UNIQUE' THEN 'YES' ELSE 'NO ' END UNIQUENESS FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGM
ENTS C ,DBA_TAB_COLUMNS T WHERE A.INDEX_NAME = B.INDEX_

000000008B19FBF8
UPDATE WWV_FLOW_SESS

0000000060EA02C0
select substrb(dump(

000000008B21DAE0
SELECT THREAD#,PROCE

00000000652E09A0
SELECT QT.OBJNO, QT.

0000000088DE8318
a84bb2375dd0d998332c94fb76ac7a9

0000000060FDB590
14d363c47981aea9a9b8fc2c5789d896

000000008C943C48 SYS
SCHEDULER$_WINDOW

000000008CA6AEB0
select ownername,classname,methodname,signature,flags from procedurejava$ where obj#=:1 and procedure#=:2 order by procedure#

000000008C8B7AE8
select ownername,classname,methodname,signature,flags from procedurejava$ where obj#=:1 and procedure#=:2 order by procedure#

000000008B09FF30
select ownername,classname,methodname,signature,flags from procedurejava$ where obj#=:1 and procedure#=:2 order by procedure#

000000008CBD1920
select ownername,classname,methodname,signature,flags from procedurejava$ where obj#=:1 and procedure#=:2 order by procedure#

000000008CA6B330
select ownername,classname,methodname,signature,flags from procedurejava$ where obj#=:1 and procedure#=:2 order by procedure#

000000008B138868 SYS
X$KCCLE

000000008B051D80
SELECT ENDPOINT, EPV

0000000060EC6B40
e86655cc970b7dc072112a22871e3db3

0000000060D5A6F8
e02c21009fbc50134f91c772c4e3e2a5

000000008B2B84D8
select substrb(dump(

0000000088F0D968
SELECT EXTRACTVALUE(

000000008CB4F268
table_1_ff_227_0_0_0

000000008CB4F4C8
table_1_ff_227_0_0_0

000000008C9E4960 SYS
X$KSMSTRS

0000000060F0FF30
12a6293ef607cee606b82dcd64ee82

000000008C92D888 SYS
DBMS_MANAGEMENT_PACKS

000000008B233DE0 APEX_030200
WWV_FLOW_MAIL_QUEUE

0000000092CF8F58 EXFSYS
RLM$APVARCLST

0000000092C77260
809b02e8876363be5d20f58cb218dc64

0000000092D09A80
5a53b140fea8dfc2238781c4b3a8bad2

0000000088CD3EA8
SELECT XMLELEMENT( "

0000000088F99548
select /*+  no_paral

000000008C8A6AA0
f5eccfff6cbea621f89b4c28215a5c35

000000008B0D2318
select intcol#, col# , type#, spare1, segcol#, charsetform from partcol$  where obj# = :1 order by pos#

0000000092C8E1C8
select intcol#, col# , type#, spare1, segcol#, charsetform from partcol$  where obj# = :1 order by pos#

000000008B1EE9C8
select intcol#, col# , type#, spare1, segcol#, charsetform from partcol$  where obj# = :1 order by pos#

000000008B0D2798
select intcol#, col# , type#, spare1, segcol#, charsetform from partcol$  where obj# = :1 order by pos#

0000000060E13130
3137e563c404483db86fdf4adfebc162

000000008C89F178 SYS
V$BUFFER_POOL

0000000092D60D88 SYS
X$KCCTF

000000008B286BA0
SELECT CAPTURE_USER

0000000088F85FD8
SELECT STATE, (CASE

00000000653E8320 $BUILD$
d2a85316aa237c33

0000000060F151F0
select substrb(dump(

0000000092D6F328
3d5d234d25a38dc4499e60c99d1660bd

0000000060D2A7C8
71bc999f612564c419c5a9ed500deaca

0000000088D28DE0
5bcf9f49f8ae39470a6d57e18242a83

0000000060C8A440 SYS
INDEX_STATS

000000008B26F268
SELECT 1 FROM WWV_FL

000000008B330AF8 SYS
X$KQRST

000000008B365698
select /*+  no_parallel_index(t, "I_STATS_TARGET1")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET1") */ count(*) as nrw,count(distinct sys_op_lbid(469,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "STALENESS" is not null or "OSIZE" is not null o
r "OBJ#" is not null or "STATUS" is not null

000000008CB08A68
select /*+  no_parallel_index(t, "I_STATS_TARGET1")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET1") */ count(*) as nrw,count(distinct sys_op_lbid(469,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "STALENESS" is not null or "OSIZE" is not null o
r "OBJ#" is not null or "STATUS" is not null

0000000092D5BCB8
select /*+  no_parallel_index(t, "I_STATS_TARGET1")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET1") */ count(*) as nrw,count(distinct sys_op_lbid(469,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "STALENESS" is not null or "OSIZE" is not null o
r "OBJ#" is not null or "STATUS" is not null

000000008CA0D0A0
select /*+  no_parallel_index(t, "I_STATS_TARGET1")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitori
ng no_substrb_pad  no_expand index(t,"I_STATS_TARGET1") */ count(*) as nrw,count(distinct sys_op_lbid(469,'L',t.rowid)) as nlb,null as
ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."STATS_TARGET$" t where "STALENESS" is not null or "OSIZE" is not null o
r "OBJ#" is not null or "STATUS" is not null

000000008B24A748 ORACLE_OCM
V$DATABASE

0000000060F08F40
SELECT EXTRACTVALUE(

000000008CA40C30
7bca5ce219d8b8add07674a81178396f

0000000088EFAA68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000006539FE88
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B2DA330 $BUILD$
9854d30bcf111cab

000000008B0761A0
SELECT /*+ ordered i

000000008B120568
f53a14f3d8d771b414d80154d55d9a7

0000000060E823F0
SELECT NVL(LOWER(EXT

0000000060F350C0 $BUILD$
ae72444fa6793b79

0000000092C95968
select /*+  no_paral

00000000652D28E0 SYS
INDPART_PARAM$

000000008B350CE0
cb89c38ccd91d888706b2fd08a83ce18

000000008C8AE020
SELECT A.AWSEQ# FROM

000000008C998F50 SYS
X$KFGRP

0000000088FAD0E8
select /*+  no_paral

000000008CA7F2D8
8b57fc6115d21182d6633719ae0dfc0d

0000000088F3BD98
DELETE FROM RLM$SCHA

000000008CA4D920 PUBLIC
ORA_DICT_OBJ_NAME

000000008B180BC0 APEX_030200
WWV_FLOW_PAGE_PLUGS

0000000092C97818 APEX_030200
WWV_FLOW_INIT_HTP_BUFFER

000000008B329908
select substrb(dump(

000000008B246900 SYS
SCHEDULER$_CHAIN

0000000088FAF008
SELECT DISTINCT :B3

000000008B306948 $BUILD$
6b3d29639e234b8b

0000000060FC1CE0
SELECT O.NAME, O.SUB

000000008B061F10
SELECT /*+ ordered u

0000000088E74168
select substrb(dump(

0000000088C8A298
DELETE WRI$_SQLSET_R

000000006534CCB0
c4bffa17571caf85244aa9ccd6e6d96a

0000000088CA3D68 SYS
WRI$_SQLSET_MASK

0000000088C67380 APEX_030200
WWV_SPELING

00000000652E5270 $BUILD$
34088361336bcbb3

0000000060EF0500
SELECT OID, DESTINAT

0000000092CFDE18 SYS
DBMS_ISCHED_CHAIN_CONDITION

000000008CA9A748
2b794b594b32f9851e59c951ec2d89a7

0000000060F82DC0 SYS
SYS_TEMP_0FD9D6617_EB3C8

0000000088EBD280
6812820072384422400

0000000088CA6B78 SYS
DBMS_SQLTUNE_INTERNAL

0000000060D540D8 $BUILD$
914d032c185f85b7

0000000060D388C8
5123cc1ba48530d384c3efae236e7b78

000000008CB27DD8
2b7313745935366b51e14a17e5737183

00000000652CF300
select substrb(dump(

0000000088D8F6E8 SYS
WRH$_SQLSTAT_INDEX

0000000065354E60
37fd89f777884116a4e8181bd23710ff

0000000088F8FBC8
52877022d88e077e7a5c3259f2e0091

0000000060F9B020
76129d8af53693142a3193c13b01ca7c

000000008C87BDA8
select d.inst_id, d.kslednam, (s.ksleswts_un + s.ksleswts_fg + s.ksleswts_bg), (s.kslestmo_un + s.kslestmo_fg + s.kslestmo_bg), round((
s.kslestim_un + s.kslestim_fg + s.kslestim_bg)/10000),  round((s.kslestim_un + s.kslestim_fg + s.kslestim_bg)/ (10000 * (s.ksleswts_un
+ s.ksleswts_fg + s.ksleswts_bg)), 2), (s.kslestim_un + s.kslestim_fg + s.kslestim_bg), s.ksleswts_fg, s.kslestmo_fg, round(s.kslestim_
fg/10000), round(s.kslestim_fg/decode(s.ksleswts_fg, 0, 1, 10000 * s.ksleswts_fg), 2), s.kslestim_fg, d.ksledhash, d.ksledclassid, d.ks
ledclass#, d.ksledclass  from x$kslei s, x$ksled d  where (s.ksleswts_un > 0 or s.ksleswts_fg > 0 or s.ksleswts_bg > 0) and s.kslesevt
= d.indx

0000000088F7A588
select d.inst_id, d.kslednam, (s.ksleswts_un + s.ksleswts_fg + s.ksleswts_bg), (s.kslestmo_un + s.kslestmo_fg + s.kslestmo_bg), round((
s.kslestim_un + s.kslestim_fg + s.kslestim_bg)/10000),  round((s.kslestim_un + s.kslestim_fg + s.kslestim_bg)/ (10000 * (s.ksleswts_un
+ s.ksleswts_fg + s.ksleswts_bg)), 2), (s.kslestim_un + s.kslestim_fg + s.kslestim_bg), s.ksleswts_fg, s.kslestmo_fg, round(s.kslestim_
fg/10000), round(s.kslestim_fg/decode(s.ksleswts_fg, 0, 1, 10000 * s.ksleswts_fg), 2), s.kslestim_fg, d.ksledhash, d.ksledclassid, d.ks
ledclass#, d.ksledclass  from x$kslei s, x$ksled d  where (s.ksleswts_un > 0 or s.ksleswts_fg > 0 or s.ksleswts_bg > 0) and s.kslesevt
= d.indx

000000008C86F298
UPDATE SYSTEM.AQ$_QU

000000008C907040
8f7b8bcb55547419ad49d106ae64985f

000000008CA65C88 SYS
X$KCVDF

000000008C8BC6C8
select substrb(dump(

00000000653DE7C0 $BUILD$
bea8e92367537cfc

0000000088D1BE00
select min(minbkt),m

0000000065383570
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "I")  */ 1 AS C1 FROM "SYS"."IND$" "
I" WHERE (DECODE("I"."TYPE#",8,'LOBINDEX','INDEX') LIKE 'TABLE%') AND ("I"."TYPE#"=1 OR "I"."TYPE#"=2 OR "I"."TYPE#"=3 OR "I"."TYPE#"=4
 OR "I"."TYPE#"=6 OR "I"."TYPE#"=7 OR "I"."TYPE#"=8 OR "I"."TYPE#"=9)) innerQuery

0000000060C8FCF8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "I")  */ 1 AS C1 FROM "SYS"."IND$" "
I" WHERE (DECODE("I"."TYPE#",8,'LOBINDEX','INDEX') LIKE 'TABLE%') AND ("I"."TYPE#"=1 OR "I"."TYPE#"=2 OR "I"."TYPE#"=3 OR "I"."TYPE#"=4
 OR "I"."TYPE#"=6 OR "I"."TYPE#"=7 OR "I"."TYPE#"=8 OR "I"."TYPE#"=9)) innerQuery

000000008B31EAF8
SELECT REGEXP_SUBSTR

000000008CA6C6C0
select procedure#,ownerlength,classlength,methodlength,siglength, flagslength,cookiesize from procedurejava$ where obj#=:1 order by pro
cedure#

000000008C8B8D98
select procedure#,ownerlength,classlength,methodlength,siglength, flagslength,cookiesize from procedurejava$ where obj#=:1 order by pro
cedure#

000000008B0DFA18
select procedure#,ownerlength,classlength,methodlength,siglength, flagslength,cookiesize from procedurejava$ where obj#=:1 order by pro
cedure#

000000008CBA7308
select procedure#,ownerlength,classlength,methodlength,siglength, flagslength,cookiesize from procedurejava$ where obj#=:1 order by pro
cedure#

000000008CA6CB40
select procedure#,ownerlength,classlength,methodlength,siglength, flagslength,cookiesize from procedurejava$ where obj#=:1 order by pro
cedure#

000000008C98C360
27ec99533aa3a2d1eed691e1fde1961c

0000000060F3DFD0
select p_obj#, flags, code, audit$ from edition$ where obj#=:1

0000000088C4D238
select p_obj#, flags, code, audit$ from edition$ where obj#=:1

0000000060D542F8
SELECT NVL(V.ENQUEUE

00000000653509E0
select intcol# from ustats$ where obj# = :1

000000008B11C330
select intcol# from ustats$ where obj# = :1

000000008CA26F70 SYS
X$KFFXP

0000000060E6C090
b05e67c3d1cedcd7f0019112b19bf1c

0000000092C91178
SELECT COUNT(*) FROM

0000000088F5D6A8
SELECT MAX(SNAP_ID)

000000008B25B168
SELECT HAVNGATTRS FR

000000008B39C798
505c2c0f5c7a8bc76486a250618e4813

00000000652B3500
2adba16322aa4af64efa1c96a3baf98d

0000000092CF9DE8
2c444d22e330995d10af5c53b236d232

000000008CB30398
cf61233d971b091cc2520d0d335cf6c7

000000008B3DC290 SYS
DBA_RULE_SETS

000000008B096270
INSERT INTO SYS.AUX_

000000008B2E7E80
d12c918414c302b62a5637b7f9184853

000000008B2C26B8 APEX_030200
WWV_FLOW_WORKSHEET_API

000000008C9521E0
select bind#, functionname, property, returnschema, returntype, impschema, imptype  from opbinding$ where obj# = :1

000000008B239280
select bind#, functionname, property, returnschema, returntype, impschema, imptype  from opbinding$ where obj# = :1

00000000652C5470
7fc6130b5c56ca94632e4eb9435385dd

000000008CAE3F60
5101050b3bc98f40cacbbfca1716dbbb

0000000065350B50 SYS
X$KZSRO

0000000088C74128 $BUILD$
25973d83f0b4f6b8

000000008B0AC0E0
7ceddc927960094f6711031a6bfe5281

000000008B0645B0
SELECT T.ROWCNT FROM

0000000060D5B358
d751142c3b7971bd655864a445f58a87

0000000060FE8550
SELECT INCARNATION#, RESETLOGS_CHANGE#, RESETLOGS_TIME, PRIOR_RESETLOGS_CHANGE#, PRIOR_RESETLOGS_TIME, STATUS, RESETLOGS_ID, PRIOR_INCA
RNATION# FROM V$DATABASE_INCARNATION WHERE STATUS <> 'ORPHAN' ORDER BY RESETLOGS_CHANGE# DESC

0000000088ED05A0
SELECT INCARNATION#, RESETLOGS_CHANGE#, RESETLOGS_TIME, PRIOR_RESETLOGS_CHANGE#, PRIOR_RESETLOGS_TIME, STATUS, RESETLOGS_ID, PRIOR_INCA
RNATION# FROM V$DATABASE_INCARNATION WHERE STATUS <> 'ORPHAN' ORDER BY RESETLOGS_CHANGE# DESC

000000008C929A68
INSERT INTO SYS.WRI$

000000008CA1C7A8
SELECT COUNT(*) FROM

000000008CB76E18
SELECT USER# FROM SY

0000000088F3AB98
45afa0e563b22a4e29f9d947ce5dad75

000000008B0801A0
SELECT COL_INF.NAME

0000000060D8C288
select table_name from dict where table_name like '%DBA%PART%'

000000008B1C7C88
select table_name from dict where table_name like '%DBA%PART%'

00000000652CA380
select table_name from dict where table_name like '%DBA%PART%'

0000000060DEEF70 PUBLIC
GLOBAL_NAME

000000008B0B2100
416fe8a1ab58cb57edb28450ea090ed1

0000000060DB9FE8
select min(minbkt),m

000000008B278708
1c3fc2b357a0f861bad965a6aa1a5a1

0000000060D54E58
45b5ea77f78a8282b1fdfd0f592bf3ba

000000008C8A2D70
SELECT F.FINDING_ID

0000000092C8D718
60c76c5bd9c7446d55979c1bb3388af1

0000000088D20660
select 1 from sys.streams$_prepare_ddl p  where  ((p.global_flag = 1 and :1 is null) or           (p.global_flag = 0 and p.usrid = :2))
 and rownum = 1

000000008CBD4AC0
select 1 from sys.streams$_prepare_ddl p  where  ((p.global_flag = 1 and :1 is null) or           (p.global_flag = 0 and p.usrid = :2))
 and rownum = 1

0000000088D20AE0
select 1 from sys.streams$_prepare_ddl p  where  ((p.global_flag = 1 and :1 is null) or           (p.global_flag = 0 and p.usrid = :2))
 and rownum = 1

000000008CA4C270
select min(minbkt),m

000000008CB222F0
INSERT INTO wri$_adv_sqlt_plan_stats  (plan_id, parse_time, exec_time, cpu_time, user_io_time, buffer_gets,  disk_reads, direct_writes,
 rows_processed, fetches, executions,  end_of_fetch_count, optimizer_cost, other, io_interconnect_bytes,  spare_n1, spare_n2, spare_n3,
 spare_n4, testexec_total_execs, flags)VALUES  (:pid1, :ptime2, :etime3, :ctime4, :iotime5, :bgets6,   :dr7, :dw8, :rp9, :ft10, :exe11,
   :ef12, :cost13, :other14, :storageB15,   :physReadReq16, :physWriteReq17, :physBytesR18, :physBytesW19,   :mexec_cnt20, :first_ignor
ed21)

0000000060E40EB0
INSERT INTO wri$_adv_sqlt_plan_stats  (plan_id, parse_time, exec_time, cpu_time, user_io_time, buffer_gets,  disk_reads, direct_writes,
 rows_processed, fetches, executions,  end_of_fetch_count, optimizer_cost, other, io_interconnect_bytes,  spare_n1, spare_n2, spare_n3,
 spare_n4, testexec_total_execs, flags)VALUES  (:pid1, :ptime2, :etime3, :ctime4, :iotime5, :bgets6,   :dr7, :dw8, :rp9, :ft10, :exe11,
   :ef12, :cost13, :other14, :storageB15,   :physReadReq16, :physWriteReq17, :physBytesR18, :physBytesW19,   :mexec_cnt20, :first_ignor
ed21)

0000000088DA7AE8 PUBLIC
V$TEMPSEG_USAGE

000000008C8B98E8
SELECT ROWID, ACTSCH

0000000092CCEEA8 SYS
SEG$

0000000060EF3150
ae8ee8e92f0abdff78d479639b8b5de1

0000000060DC67D8
7cccadf6bfb3f4eb4dc31981c786de38

0000000092C88298 SYS
REGISTRY$

0000000065332D50 $BUILD$
34ef515defa4e2bd

00000000652B9410
a77bda9c76c68f75317340295a4c8b2f

0000000060DB61A8
11706218175067960855

0000000092D5C138
SELECT FILE#, BLOCK#

0000000088DEDCD8
5ac3a78b80338c5189740da01983f85

0000000060D916C0
DELETE FROM SYSTEM.A

0000000092D7BF28
ef97c3ec1a5cd64a51b0522383fb1dd

0000000088C83498
select /*+  no_paral

0000000092D58808
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088DB61A8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B13B1E8
SELECT TS#, OBJ#, DATAOBJ#, SUM(TABLE_SCANS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DATAOBJ
# ORDER BY SUM(TABLE_SCANS_DELTA) DESC

000000008CB352A0
SELECT TS#, OBJ#, DATAOBJ#, SUM(TABLE_SCANS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DATAOBJ
# ORDER BY SUM(TABLE_SCANS_DELTA) DESC

000000008B2C8830
SELECT TS#, OBJ#, DATAOBJ#, SUM(TABLE_SCANS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DATAOBJ
# ORDER BY SUM(TABLE_SCANS_DELTA) DESC

0000000088E64C30
SELECT TS#, OBJ#, DATAOBJ#, SUM(TABLE_SCANS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DATAOBJ
# ORDER BY SUM(TABLE_SCANS_DELTA) DESC

0000000088CB3268
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

000000008CB0AE98
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000092D457C8
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000088C578B8
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000060E11108
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000060D27890
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000092EBD218
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000060E08898
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000060D23028
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

000000008B1EF970
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

00000000652C26B0
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

0000000088CB36E8
                                       merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_
sampling(m 4) dynamic_sampling_est_cdn(m) */                    into mon_mods_all$ mm
     using                                                                         (select
                             decode(grouping_id(tp.bo#,m.obj#),1,tp.bo#,m.obj#) obj#,                      sum(m.inserts) inserts, sum(
m.updates) updates, sum(m.deletes) deletes,       case when grouping_id(tp.bo#, m.obj#) = 0 then                                (/* IF
THIS IS A PARTITION AGGREGATE THE TRUNCATE BIT */                       decode(sum(bitand(m.flags,1)),0,0,1)
               +decode(sum(bitand(m.flags,2)),0,0,2)                                         +decode(sum(bitand(m.flags,4)),0,0,4)
                                    /* ADD NEW KSXM BIT

000000008C934440 SYS
JOB$

0000000088C434B0 SYS
SCHEDULER$_VARIABLE_VALUE

0000000088DCF378
52ab7046b096cc5c764421052e9633a8

000000008C8E12F8 $BUILD$
1a86826e24f595b4

000000008C99DF90 SYS
SQLLOG$

0000000060D36CE8 SYS
SCHEDULER$_EVENT_QTAB

0000000088FBB7D8
declare    stmt varchar2(200);    cnt number; BEGIN      if sys.dbms_standard.dictionary_obj_type = 'USER' THEN        stmt := 'DELETE
FROM SDO_GEOM_METADATA_TABLE ' ||      ' WHERE SDO_OWNER = :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_o
bj_name;         stmt := 'DELETE FROM SDO_MAPS_TABLE ' ||     ' WHERE SDO_OWNER = :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbm
s_standard.dictionary_obj_name;         stmt := 'DELETE FROM SDO_CACHED_MAPS_TABLE ' ||     ' WHERE SDO_OWNER = :owner ';        EXECUT
E IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;         stmt := 'DELETE FROM SDO_STYLES_TABLE ' ||     ' WHERE SDO_OWNER
= :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;         stmt := 'DELETE FROM SDO_THEMES_TABLE '
||    ' WHERE SDO_OWNER = :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;         stmt := 'DELETE
FROM SDO_LRS_METADATA_TABLE ' ||    ' WHERE SDO_OWNER =

0000000088FBBB68
declare    stmt varchar2(200);    cnt number; BEGIN      if sys.dbms_standard.dictionary_obj_type = 'USER' THEN        stmt := 'DELETE
FROM SDO_GEOM_METADATA_TABLE ' ||      ' WHERE SDO_OWNER = :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_o
bj_name;         stmt := 'DELETE FROM SDO_MAPS_TABLE ' ||     ' WHERE SDO_OWNER = :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbm
s_standard.dictionary_obj_name;         stmt := 'DELETE FROM SDO_CACHED_MAPS_TABLE ' ||     ' WHERE SDO_OWNER = :owner ';        EXECUT
E IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;         stmt := 'DELETE FROM SDO_STYLES_TABLE ' ||     ' WHERE SDO_OWNER
= :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;         stmt := 'DELETE FROM SDO_THEMES_TABLE '
||    ' WHERE SDO_OWNER = :owner ';        EXECUTE IMMEDIATE stmt USING sys.dbms_standard.dictionary_obj_name;         stmt := 'DELETE
FROM SDO_LRS_METADATA_TABLE ' ||    ' WHERE SDO_OWNER =

0000000088D09678
SELECT (FIRST_CHANGE

0000000088FD5F28 SYS
ORA$AGE_AUTOTASK_DATA

0000000088DD3498 SYS
X$KMGSBSMEMADV

000000008C908EC8
99da9acfaef4e42132827ed7ba0c85a6

0000000088DFAE68 SYS
DBMS_AQ_IMPORT_INTERNAL

000000008CA7A250
a305ac233d6e97b631416aa8b799b8a3

000000008B15A358
select ADDRESS, HASH_VALUE, SQL_ID, PLAN_HASH_VALUE, CHILD_ADDRESS,          CHILD_NUMBER,  TIMESTAMP, OPERATION,
                   OPTIONS, OBJECT_NODE, OBJECT#, OBJECT_OWNER, OBJECT_NAME,                    OBJECT_ALIAS, OBJECT_TYPE, OPTIMIZER,
                                      ID, PARENT_ID, DEPTH, POSITION, SEARCH_COLUMNS, COST, CARDINALITY,           BYTES, OTHER_TAG, PA
RTITION_START, PARTITION_STOP, PARTITION_ID,             OTHER, DISTRIBUTION, CPU_COST, IO_COST, TEMP_SPACE,                          A
CCESS_PREDICATES, FILTER_PREDICATES, PROJECTION, TIME, QBLOCK_NAME,         REMARKS, OTHER_XML
                  from GV$SQL_PLAN                                                             where inst_id = USERENV('Instance')

0000000088F2EDF8
select ADDRESS, HASH_VALUE, SQL_ID, PLAN_HASH_VALUE, CHILD_ADDRESS,          CHILD_NUMBER,  TIMESTAMP, OPERATION,
                   OPTIONS, OBJECT_NODE, OBJECT#, OBJECT_OWNER, OBJECT_NAME,                    OBJECT_ALIAS, OBJECT_TYPE, OPTIMIZER,
                                      ID, PARENT_ID, DEPTH, POSITION, SEARCH_COLUMNS, COST, CARDINALITY,           BYTES, OTHER_TAG, PA
RTITION_START, PARTITION_STOP, PARTITION_ID,             OTHER, DISTRIBUTION, CPU_COST, IO_COST, TEMP_SPACE,                          A
CCESS_PREDICATES, FILTER_PREDICATES, PROJECTION, TIME, QBLOCK_NAME,         REMARKS, OTHER_XML
                  from GV$SQL_PLAN                                                             where inst_id = USERENV('Instance')

000000008C878728
cb87c155ccf5baeb795113ddb9af199f

000000008CB61ED8
table_1_ff_21f_0_0_0

000000008CB62138
table_1_ff_21f_0_0_0

000000008B37A708
delete from ind_stats$ where obj#=:1

000000008B116DB0
delete from ind_stats$ where obj#=:1

0000000088D128D0
delete from ind_stats$ where obj#=:1

000000008B37AB88
delete from ind_stats$ where obj#=:1

0000000092CFCFA8 SYS
SCHEDULER$_INT_ARRAY_TYPE

000000008B2F0630
SELECT LAST_ERROR_MS

0000000088FF46D8
SELECT 1 from "SYS"."AQ$SCHEDULER$_EVENT_QTAB" qtview  WHERE (queue = 'SYS.AQ$_SCHEDULER$_EVENT_QTAB_E' ) AND rownum < 2

000000008CBA0368
SELECT 1 from "SYS"."AQ$SCHEDULER$_EVENT_QTAB" qtview  WHERE (queue = 'SYS.AQ$_SCHEDULER$_EVENT_QTAB_E' ) AND rownum < 2

0000000088F9CB78
INSERT INTO BSLN_STA

0000000088D80288
e2edfad321ba2e271557d16851bdfa02

0000000088C90138
INSERT INTO WRI$_SQL

000000008C920528
INSERT INTO WRI$_ADV

0000000092C7A978 SYS
PARTOBJ$

0000000088D6CD00 SYS
V$ROWCACHE

0000000088FC2218
call dbms_space.auto_space_advisor_job_proc (  )

0000000088D99BE0
call dbms_space.auto_space_advisor_job_proc (  )

000000008C921DD8
DELETE FROM WRI$_ADV

000000008B138CA8 SYS
GV$LOG

0000000088D90078
a6ed62c04899fa626b10510028e1f28

000000008B3129E0
SELECT EXTRACTVALUE(

0000000092C800F8 SYS
I_HH_OBJ#_INTCOL#

00000000652D1680
8fd205d8b022b2797af01c5aa33129

000000008C92D3B8
SELECT COUNT(*) FROM

0000000060F40EB0
UPDATE DBMS_LOCK_ALLOCATED SET EXPIRATION = SYSDATE + (:B1 /86400) WHERE ROWID = :B2

000000008C9E6B90
UPDATE DBMS_LOCK_ALLOCATED SET EXPIRATION = SYSDATE + (:B1 /86400) WHERE ROWID = :B2

0000000088CC3AD8
UPDATE DBMS_LOCK_ALLOCATED SET EXPIRATION = SYSDATE + (:B1 /86400) WHERE ROWID = :B2

000000008B313D50
UPDATE DBMS_LOCK_ALLOCATED SET EXPIRATION = SYSDATE + (:B1 /86400) WHERE ROWID = :B2

000000008B3E11A0
UPDATE DBMS_LOCK_ALLOCATED SET EXPIRATION = SYSDATE + (:B1 /86400) WHERE ROWID = :B2

000000008CBFE430
8da34d6b8fa520b4ef0e6773b4aafeaf

000000008B0C6FE8 SYS
DICTIONARY

000000008B1D33C8 SYS
GLOBAL_CONTEXT

0000000088E8D628
1e4013f81f1d52db61c9c355510564c

000000008B33D008
select * from hash_table

00000000653FD9A0
select * from hash_table

000000008C861CF0
select numbind, nextbindnum, property from operator$ where obj#=:1

000000008C8A4230
select numbind, nextbindnum, property from operator$ where obj#=:1

0000000060F3BBD0 SYS
GV$PGASTAT

0000000088F345E8
INSERT /*+  LEADING(@"SEL$F5BB74E1" "H"@"SEL$2" "A"@"SEL$1")  USE_NL(@"SEL$F5BB74E1" "A"@"SEL$1")         */ INTO WRH$_ACTIVE_SESSION_H
ISTORY ( snap_id, dbid, instance_number, sample_id, sample_time , session_id, session_serial#, session_type , flags , user_id , sql_id,
 sql_child_number, sql_opcode, force_matching_signature , top_level_sql_id, top_level_sql_opcode , sql_plan_hash_value, sql_plan_line_i
d , sql_plan_operation#, sql_plan_options# , sql_exec_id, sql_exec_start , plsql_entry_object_id, plsql_entry_subprogram_id , plsql_obj
ect_id,       plsql_subprogram_id , qc_instance_id, qc_session_id, qc_session_serial#, px_flags , event_id, seq#, p1, p2, p3 , wait_tim
e, time_waited , blocking_session, blocking_session_serial#, blocking_inst_id , current_obj#, current_file#, current_block#, current_ro
w# , top_level_call#, consumer_group_id, xid, remote_instance#, time_model , service_hash, program, module, action, client_id, machine,
 port,   ecid , dbreplay_file_id, dbreplay_call_counter

0000000092CCAEB8
INSERT /*+  LEADING(@"SEL$F5BB74E1" "H"@"SEL$2" "A"@"SEL$1")  USE_NL(@"SEL$F5BB74E1" "A"@"SEL$1")         */ INTO WRH$_ACTIVE_SESSION_H
ISTORY ( snap_id, dbid, instance_number, sample_id, sample_time , session_id, session_serial#, session_type , flags , user_id , sql_id,
 sql_child_number, sql_opcode, force_matching_signature , top_level_sql_id, top_level_sql_opcode , sql_plan_hash_value, sql_plan_line_i
d , sql_plan_operation#, sql_plan_options# , sql_exec_id, sql_exec_start , plsql_entry_object_id, plsql_entry_subprogram_id , plsql_obj
ect_id,       plsql_subprogram_id , qc_instance_id, qc_session_id, qc_session_serial#, px_flags , event_id, seq#, p1, p2, p3 , wait_tim
e, time_waited , blocking_session, blocking_session_serial#, blocking_inst_id , current_obj#, current_file#, current_block#, current_ro
w# , top_level_call#, consumer_group_id, xid, remote_instance#, time_model , service_hash, program, module, action, client_id, machine,
 port,   ecid , dbreplay_file_id, dbreplay_call_counter

0000000088F34A68
INSERT /*+  LEADING(@"SEL$F5BB74E1" "H"@"SEL$2" "A"@"SEL$1")  USE_NL(@"SEL$F5BB74E1" "A"@"SEL$1")         */ INTO WRH$_ACTIVE_SESSION_H
ISTORY ( snap_id, dbid, instance_number, sample_id, sample_time , session_id, session_serial#, session_type , flags , user_id , sql_id,
 sql_child_number, sql_opcode, force_matching_signature , top_level_sql_id, top_level_sql_opcode , sql_plan_hash_value, sql_plan_line_i
d , sql_plan_operation#, sql_plan_options# , sql_exec_id, sql_exec_start , plsql_entry_object_id, plsql_entry_subprogram_id , plsql_obj
ect_id,       plsql_subprogram_id , qc_instance_id, qc_session_id, qc_session_serial#, px_flags , event_id, seq#, p1, p2, p3 , wait_tim
e, time_waited , blocking_session, blocking_session_serial#, blocking_inst_id , current_obj#, current_file#, current_block#, current_ro
w# , top_level_call#, consumer_group_id, xid, remote_instance#, time_model , service_hash, program, module, action, client_id, machine,
 port,   ecid , dbreplay_file_id, dbreplay_call_counter

0000000088FFD790
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2#1", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_
FILTER, "O2#1", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_FILTER, "O2#1", "I_OBJ5", SCALE_ROWS=0.1275732567)
 OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2#1", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "
O2#1", "I_OBJ1", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2#1", "I_OBJ5", SCALE_ROWS=0.1275732567) */ CO
UNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U2#0")  */ 1 AS C1 FROM SYS."OBJ$" "O2#1", SYS."USER$" "U2#0" WHERE ("U2#
0"."TYPE#"=2) AND ("U2#0"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id'))) AND ("O2#1"."TYPE#"=88) AND ("O2#1"."OWNER#"
="U2#0"."USER#")) innerQuery

000000008B1E96F8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2#1", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_
FILTER, "O2#1", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_FILTER, "O2#1", "I_OBJ5", SCALE_ROWS=0.1275732567)
 OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2#1", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "
O2#1", "I_OBJ1", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2#1", "I_OBJ5", SCALE_ROWS=0.1275732567) */ CO
UNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U2#0")  */ 1 AS C1 FROM SYS."OBJ$" "O2#1", SYS."USER$" "U2#0" WHERE ("U2#
0"."TYPE#"=2) AND ("U2#0"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id'))) AND ("O2#1"."TYPE#"=88) AND ("O2#1"."OWNER#"
="U2#0"."USER#")) innerQuery

000000008B1871C0 SYS
DBA_HIST_ACTIVE_SESS_HISTORY

00000000653BBA70
12a6293ef607cee606b82dcd64ee82

0000000060F372D0
select inst_id, tabl

0000000092D17418 SYS
X$KEWMSMDV

000000008B085C20
SELECT S.SNAME, S.PN

000000008C88CA20 $BUILD$
655864a445f58a87

00000000652F8150
732d1523e906e89a5839117a4fa53ef

000000008B0AB200
ef1bde5e272f82619753f06cf6d792c9

000000008C9190C8
DELETE FROM SYS.WRI$

0000000060C65BC0 SYS
V_$BUFFER_POOL

000000008B21B2B0
delete from WRH$_SYS_TIME_MODEL_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D8CF38
delete from WRH$_SYS_TIME_MODEL_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C81638 SYS
SQL_OBJECTS

000000008CB24810
SELECT MIN(SCHED_AT) FROM RLM$JOBQUEUE

000000008CB81658
SELECT MIN(SCHED_AT) FROM RLM$JOBQUEUE

000000008B0B84A0 PUBLIC
USER_JOBS

000000008CAC26A0
SELECT AFT.OWNER_INS

000000008B396B28 SYS
GV$SQLAREA

0000000060E5C000
SELECT MAX(ID) FROM

0000000092C787A8 SYS
X$KGLCURSOR_CHILD_SQLID

0000000088F596A8
UPDATE WRI$_ADV_TASK

000000008B0DC858
select substrb(dump(

000000008C87CE18 SYS
SYS_TEMP_0FD9D6629_EB3C8

000000006535CCE0
155a475be022ee6b8ebda2b860095c64

0000000060D8D298
select substrb(dump(

000000008C901338 EXFSYS
RLM$RSPRIMEVENTS

0000000088D08048
select substrb(dump(

0000000060F2AB40
SELECT JOBNO FROM AQ

000000008B3FDB68
SELECT BSLN_VARIANCE

000000008B3823C0 APEX_030200
WWV_FLOW_ISC

0000000088DF7908
69a3d9ed2dda92f936965e1cf9d094c

0000000088FF7E30
f43120f08378b393c863d703f185eace

0000000060D1FE48 SYS
SYS_TEMP_0FD9D661F_EB3C8

0000000060EC1CC0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"INTCOL#" val,count(*) cnt  from
"SYS"."COL_USAGE$" t  where "INTCOL#" is not null  group by "INTCOL#") order by val

000000008B2BF568
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"INTCOL#" val,count(*) cnt  from
"SYS"."COL_USAGE$" t  where "INTCOL#" is not null  group by "INTCOL#") order by val

000000008C995668
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"INTCOL#" val,count(*) cnt  from
"SYS"."COL_USAGE$" t  where "INTCOL#" is not null  group by "INTCOL#") order by val

0000000060EC2140
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"INTCOL#" val,count(*) cnt  from
"SYS"."COL_USAGE$" t  where "INTCOL#" is not null  group by "INTCOL#") order by val

0000000060D33878
5ee2202fd7d7d951fd228069c3467b3e

0000000088F89428
701e7d7f576f24a66f7d6cf0fa0f5c31

0000000060DFA260
1a74aa7a3714846526414f46216dc8c

0000000092CE23F8
SELECT obj_type, plan_id, name, flags, last_executed                          FROM sqlobj$
                     WHERE signature = :1                                                                AND category = :2

0000000092D46BF0
SELECT obj_type, plan_id, name, flags, last_executed                          FROM sqlobj$
                     WHERE signature = :1                                                                AND category = :2

000000008B2FE520
SELECT obj_type, plan_id, name, flags, last_executed                          FROM sqlobj$
                     WHERE signature = :1                                                                AND category = :2

0000000060DE4578
SELECT obj_type, plan_id, name, flags, last_executed                          FROM sqlobj$
                     WHERE signature = :1                                                                AND category = :2

000000008B2BC438
SELECT obj_type, plan_id, name, flags, last_executed                          FROM sqlobj$
                     WHERE signature = :1                                                                AND category = :2

0000000092CB8B48
SELECT obj_type, plan_id, name, flags, last_executed                          FROM sqlobj$
                     WHERE signature = :1                                                                AND category = :2

000000008B135F68 EXFSYS
EXF$JAVAMSG

000000008CB376B0
select /*+  no_paral

0000000088DA35F8
INSERT INTO wrh$_sql_plan sp         (snap_id, dbid, sql_id, plan_hash_value, id,          operation, options, object_node, object#, ob
ject_owner,          object_name, object_alias, object_type,          optimizer, parent_id, depth, position,          search_columns, c
ost, cardinality, bytes, other_tag,          partition_start, partition_stop, partition_id, other,          distribution, cpu_cost, io_
cost, temp_space,          access_predicates, filter_predicates,          projection, time, qblock_name, remarks, timestamp, other_xml)
    SELECT /*+ ordered use_nl(p)               PARAM('_flush_plan_in_awr_sql', 1)               PARAM('_cursor_plan_unparse_enabled', '
FALSE') */           :lah_snap_id lsnid, :dbid dbid,           p.sql_id,           p.plan_hash_value,           p.id,           p.opera
tion,           p.options,           p.object_node,           p.object#,           p.object_owner,           p.object_name,           p
.object_alias,           p.object_type,           p.opt

000000008B230C40
INSERT INTO wrh$_sql_plan sp         (snap_id, dbid, sql_id, plan_hash_value, id,          operation, options, object_node, object#, ob
ject_owner,          object_name, object_alias, object_type,          optimizer, parent_id, depth, position,          search_columns, c
ost, cardinality, bytes, other_tag,          partition_start, partition_stop, partition_id, other,          distribution, cpu_cost, io_
cost, temp_space,          access_predicates, filter_predicates,          projection, time, qblock_name, remarks, timestamp, other_xml)
    SELECT /*+ ordered use_nl(p)               PARAM('_flush_plan_in_awr_sql', 1)               PARAM('_cursor_plan_unparse_enabled', '
FALSE') */           :lah_snap_id lsnid, :dbid dbid,           p.sql_id,           p.plan_hash_value,           p.id,           p.opera
tion,           p.options,           p.object_node,           p.object#,           p.object_owner,           p.object_name,           p
.object_alias,           p.object_type,           p.opt

0000000092C4AF00
INSERT INTO wrh$_sql_plan sp         (snap_id, dbid, sql_id, plan_hash_value, id,          operation, options, object_node, object#, ob
ject_owner,          object_name, object_alias, object_type,          optimizer, parent_id, depth, position,          search_columns, c
ost, cardinality, bytes, other_tag,          partition_start, partition_stop, partition_id, other,          distribution, cpu_cost, io_
cost, temp_space,          access_predicates, filter_predicates,          projection, time, qblock_name, remarks, timestamp, other_xml)
    SELECT /*+ ordered use_nl(p)               PARAM('_flush_plan_in_awr_sql', 1)               PARAM('_cursor_plan_unparse_enabled', '
FALSE') */           :lah_snap_id lsnid, :dbid dbid,           p.sql_id,           p.plan_hash_value,           p.id,           p.opera
tion,           p.options,           p.object_node,           p.object#,           p.object_owner,           p.object_name,           p
.object_alias,           p.object_type,           p.opt

0000000088DA3A78
INSERT INTO wrh$_sql_plan sp         (snap_id, dbid, sql_id, plan_hash_value, id,          operation, options, object_node, object#, ob
ject_owner,          object_name, object_alias, object_type,          optimizer, parent_id, depth, position,          search_columns, c
ost, cardinality, bytes, other_tag,          partition_start, partition_stop, partition_id, other,          distribution, cpu_cost, io_
cost, temp_space,          access_predicates, filter_predicates,          projection, time, qblock_name, remarks, timestamp, other_xml)
    SELECT /*+ ordered use_nl(p)               PARAM('_flush_plan_in_awr_sql', 1)               PARAM('_cursor_plan_unparse_enabled', '
FALSE') */           :lah_snap_id lsnid, :dbid dbid,           p.sql_id,           p.plan_hash_value,           p.id,           p.opera
tion,           p.options,           p.object_node,           p.object#,           p.object_owner,           p.object_name,           p
.object_alias,           p.object_type,           p.opt

000000008B1C4980
INSERT INTO SYS.SCHE

000000008CB3E650 $BUILD$
e38314a5cbe30f55

0000000088CC4338 SYS
GV$SESSION_FIX_CONTROL

000000008C9156C8
SELECT COUNT(*) FROM

0000000088E145B8
INSERT INTO EXFSYS.R

0000000060E79880
create table abc as

000000008B0D8368
create table abc as

000000008CBB1228
SELECT TABLESPACE_NA

0000000060D29660
b53b543b6a65d6b141df4a8cf9b4bb58

000000008B0CE5A8
SELECT MAX(TO_NUMBER

0000000060F587D0
42f5d039d0fa854b4f590751605a2a75

0000000060C77820
401a1a3977022ac8ae7ebaa5fd9b16e

000000008B23F438
SELECT BP.RECID, BP.

0000000060E12F10 $BUILD$
17e919499a05b67a

0000000088DCA1C8
insert into wrh$_shared_server_summary   (snap_id, dbid, instance_number,    num_samples, sample_time,    sampled_total_conn, sampled_a
ctive_conn,    sampled_total_srv, sampled_active_srv,    sampled_total_disp, sampled_active_disp,    srv_busy, srv_idle, srv_in_net, sr
v_out_net, srv_messages, srv_bytes,    cq_wait, cq_totalq,    dq_totalq)  select   :snap_id, :dbid, :instance_number,   a.kmmsasnum, a.
kmmsastime,   a.kmmsastvc, a.kmmsasavc,   a.kmmsastsrv, a.kmmsasasrv,   a.kmmsastdisp, a.kmmsasadisp,   s.busy, s.idle, s.in_net, s.out
_net, s.messages, s.bytes,   cq.wait, cq.totalq,   dq.totalq  from x$kmmsas a,       (select sum(wait) as wait, sum(totalq) as totalq
        from v$queue         where type = 'COMMON') cq,       (select sum(busy) as busy, sum(idle) as idle,               sum(in_net) a
s in_net, sum(out_net) as out_net,               sum(messages) as messages, sum(bytes) as bytes          from (select sum(busy) as busy
, sum(idle) as idle,                       sum(in_net)

000000008C97F830
insert into wrh$_shared_server_summary   (snap_id, dbid, instance_number,    num_samples, sample_time,    sampled_total_conn, sampled_a
ctive_conn,    sampled_total_srv, sampled_active_srv,    sampled_total_disp, sampled_active_disp,    srv_busy, srv_idle, srv_in_net, sr
v_out_net, srv_messages, srv_bytes,    cq_wait, cq_totalq,    dq_totalq)  select   :snap_id, :dbid, :instance_number,   a.kmmsasnum, a.
kmmsastime,   a.kmmsastvc, a.kmmsasavc,   a.kmmsastsrv, a.kmmsasasrv,   a.kmmsastdisp, a.kmmsasadisp,   s.busy, s.idle, s.in_net, s.out
_net, s.messages, s.bytes,   cq.wait, cq.totalq,   dq.totalq  from x$kmmsas a,       (select sum(wait) as wait, sum(totalq) as totalq
        from v$queue         where type = 'COMMON') cq,       (select sum(busy) as busy, sum(idle) as idle,               sum(in_net) a
s in_net, sum(out_net) as out_net,               sum(messages) as messages, sum(bytes) as bytes          from (select sum(busy) as busy
, sum(idle) as idle,                       sum(in_net)

000000008CBBA538
insert into wrh$_shared_server_summary   (snap_id, dbid, instance_number,    num_samples, sample_time,    sampled_total_conn, sampled_a
ctive_conn,    sampled_total_srv, sampled_active_srv,    sampled_total_disp, sampled_active_disp,    srv_busy, srv_idle, srv_in_net, sr
v_out_net, srv_messages, srv_bytes,    cq_wait, cq_totalq,    dq_totalq)  select   :snap_id, :dbid, :instance_number,   a.kmmsasnum, a.
kmmsastime,   a.kmmsastvc, a.kmmsasavc,   a.kmmsastsrv, a.kmmsasasrv,   a.kmmsastdisp, a.kmmsasadisp,   s.busy, s.idle, s.in_net, s.out
_net, s.messages, s.bytes,   cq.wait, cq.totalq,   dq.totalq  from x$kmmsas a,       (select sum(wait) as wait, sum(totalq) as totalq
        from v$queue         where type = 'COMMON') cq,       (select sum(busy) as busy, sum(idle) as idle,               sum(in_net) a
s in_net, sum(out_net) as out_net,               sum(messages) as messages, sum(bytes) as bytes          from (select sum(busy) as busy
, sum(idle) as idle,                       sum(in_net)

0000000088FA7F20
insert into wrh$_shared_server_summary   (snap_id, dbid, instance_number,    num_samples, sample_time,    sampled_total_conn, sampled_a
ctive_conn,    sampled_total_srv, sampled_active_srv,    sampled_total_disp, sampled_active_disp,    srv_busy, srv_idle, srv_in_net, sr
v_out_net, srv_messages, srv_bytes,    cq_wait, cq_totalq,    dq_totalq)  select   :snap_id, :dbid, :instance_number,   a.kmmsasnum, a.
kmmsastime,   a.kmmsastvc, a.kmmsasavc,   a.kmmsastsrv, a.kmmsasasrv,   a.kmmsastdisp, a.kmmsasadisp,   s.busy, s.idle, s.in_net, s.out
_net, s.messages, s.bytes,   cq.wait, cq.totalq,   dq.totalq  from x$kmmsas a,       (select sum(wait) as wait, sum(totalq) as totalq
        from v$queue         where type = 'COMMON') cq,       (select sum(busy) as busy, sum(idle) as idle,               sum(in_net) a
s in_net, sum(out_net) as out_net,               sum(messages) as messages, sum(bytes) as bytes          from (select sum(busy) as busy
, sum(idle) as idle,                       sum(in_net)

0000000088DCA648
insert into wrh$_shared_server_summary   (snap_id, dbid, instance_number,    num_samples, sample_time,    sampled_total_conn, sampled_a
ctive_conn,    sampled_total_srv, sampled_active_srv,    sampled_total_disp, sampled_active_disp,    srv_busy, srv_idle, srv_in_net, sr
v_out_net, srv_messages, srv_bytes,    cq_wait, cq_totalq,    dq_totalq)  select   :snap_id, :dbid, :instance_number,   a.kmmsasnum, a.
kmmsastime,   a.kmmsastvc, a.kmmsasavc,   a.kmmsastsrv, a.kmmsasasrv,   a.kmmsastdisp, a.kmmsasadisp,   s.busy, s.idle, s.in_net, s.out
_net, s.messages, s.bytes,   cq.wait, cq.totalq,   dq.totalq  from x$kmmsas a,       (select sum(wait) as wait, sum(totalq) as totalq
        from v$queue         where type = 'COMMON') cq,       (select sum(busy) as busy, sum(idle) as idle,               sum(in_net) a
s in_net, sum(out_net) as out_net,               sum(messages) as messages, sum(bytes) as bytes          from (select sum(busy) as busy
, sum(idle) as idle,                       sum(in_net)

000000008C9957E8
9d29ba3f5b970c24ee2b0a93ed548447

0000000088CEC3A8
SELECT COUNT(*) FROM

000000008B1E7B58
SELECT PROP, (SYSDAT

000000008B3A82F8
SELECT DECODE(COUNT(

0000000088FB8108
SELECT ID FROM WWV_F

000000008CB3F360
6d11d7de2049577d933d2385337fc737

0000000088FA42F8
begin dbms_stats.gather_table_stats('SYS', :bind1, :bind2, cascade => TRUE, method_opt => 'FOR ALL COLUMNS SIZE 1', estimate_percent =>
 DBMS_STATS.AUTO_SAMPLE_SIZE); end;

000000008CAC2C70
begin dbms_stats.gather_table_stats('SYS', :bind1, :bind2, cascade => TRUE, method_opt => 'FOR ALL COLUMNS SIZE 1', estimate_percent =>
 DBMS_STATS.AUTO_SAMPLE_SIZE); end;

0000000092D5D4A0
386170d930f1c1ec1afe9936971db298

000000008CAC5CA8
c9a0ec749f4f3313e9e79bf874355644

0000000088FC3878
SELECT COUNT(*) FROM

0000000088E6C160 SYS
X$KMGSCT

000000008B2BDB28
select substrb(dump(

0000000060F3C4E0
INSERT INTO SYS.AQ$_

000000008B257DC8 $BUILD$
6df1d9c0eb9e9b82

000000008CAD7108
select null from sys.optstat_hist_control$ where sval2 >= :1  and sname = 'SKIP_TIME'

000000008C8BDCC8
select null from sys.optstat_hist_control$ where sval2 >= :1  and sname = 'SKIP_TIME'

0000000088F00C38
select null from sys.optstat_hist_control$ where sval2 >= :1  and sname = 'SKIP_TIME'

000000008B33B170
select null from sys.optstat_hist_control$ where sval2 >= :1  and sname = 'SKIP_TIME'

000000008CA40660 SYS
DBA_APPLY_ERROR

0000000088FDEC80
3137e563c404483db86fdf4adfebc162

0000000092D63660
abce3aa6e312da4653bf5a4056d22d85

0000000088F62418
select FLAGS from SYS_FBA_TRACKEDTABLES where OBJ# = :1

0000000088EBE400
select FLAGS from SYS_FBA_TRACKEDTABLES where OBJ# = :1

000000008CB44E78
3ec61a3af78a7e7b7ede1f9a0b8ea3

000000008B124338 SYS
DBA_SCHEDULER_WINDOW_GROUPS

000000008C845708
18369123656701261055

0000000060F97F80 SYS
DBA_CAPTURE_PARAMETERS

0000000092D7BB98
SELECT SYS.WRI$_ADV_SEQ_TASK.NEXTVAL FROM DUAL

000000008C929138
SELECT SYS.WRI$_ADV_SEQ_TASK.NEXTVAL FROM DUAL

0000000088D22630
select obj#, owner, node from syn$ where name=:1 and owner=:2

000000008CBD10B0
select obj#, owner, node from syn$ where name=:1 and owner=:2

000000008CB8B1F8
select obj#, owner, node from syn$ where name=:1 and owner=:2

0000000088E438E8
select obj#, owner, node from syn$ where name=:1 and owner=:2

0000000088D22AB0
select obj#, owner, node from syn$ where name=:1 and owner=:2

0000000060F42A70
INSERT INTO WWV_FLOW

0000000088C51418
SELECT NEXT_RUN_DATE

000000008CB34718 APEX_030200
WWV_FLOW_ITEM

0000000060FE0E08 SYS
DBA_SCHEDULER_RUNNING_CHAINS

000000008C9147F8
SELECT COUNT(*) FROM

0000000088C9CB28
SELECT MESSAGE, FLAG

000000008B3B6F88
SELECT O.OBJ# FROM O

000000008C980460 SYS
X$KSMSS

0000000088FD07B8
9940489f7dd4a54617b95127cb0a064e

000000008C880F40
539c4e2b345582bc74896c5de64071f

000000008B0DBA38
SELECT COUNT(*) FROM

000000008CAFF8C8 SYS
WRH$_WAITCLASSMETRIC_HISTORY

0000000088D5D408
delete from WRH$_SYSMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B1E6A68
delete from WRH$_SYSMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C9C9430 SYS
AQ$_SUBSCRIBERS

000000008C9589B8 SYS
X$KQLFBC

0000000060F50DC0
9748d51ddb19cb21779c62bf4268a22c

0000000060C37F10
SELECT DISTINCT INST

000000008C9F9660
ac611bfab4671cfb32a8caa6c2351e1

000000008B371740
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B37FBE8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F9AEB0
delete from wrm$_wr_usage tab   where usage_time <=    (select nvl(max(last_sample_date), sysdate-7)       from wri$_dbu_usage_sample)

0000000088FED680
delete from wrm$_wr_usage tab   where usage_time <=    (select nvl(max(last_sample_date), sysdate-7)       from wri$_dbu_usage_sample)

000000008C945288
select substrb(dump(

000000008B1C5A50
SELECT COUNT(*) FROM

0000000060F1B9F0
SELECT OWNER_INSTANC

000000008B2BC5A8
SELECT COUNT(*) FROM

000000008B1B5590
delete from WRH$_BG_EVENT_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C9D1F40
delete from WRH$_BG_EVENT_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3A7998
SELECT COUNT(*) FROM

000000008CAA54B0
e55df0e2765fd7d85b6ab225fb6fdef

000000008B1C3C20
SELECT R.OPTION_IDX

000000008B2B0578
a6540abbb5419b3f2cc0ba6fde19d61

000000008B363DA0 SYS
DBMS_STREAMS_AUTO_INT

000000008B07A330 SYS
MLOG$

0000000060D65808 $BUILD$
ef456252eee8789a

0000000088D53A68
d8084fc6daaa028671bf09869167514b

0000000088DEDEF8
insert into WRH$_IOSTAT_FUNCTION    (snap_id, dbid, instance_number,     function_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_reqs,     numb
er_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id,      sum(small_read_megabytes) small_read_m
egabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,      sum(large_wr
ite_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_reqs,      sum(
large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_write_reqs,      sum(number_of_waits) number_of_waits,      sum(wait
_time) wait_time      from v$iostat_function      group by function_id)

000000008B1FBA90
insert into WRH$_IOSTAT_FUNCTION    (snap_id, dbid, instance_number,     function_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_reqs,     numb
er_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id,      sum(small_read_megabytes) small_read_m
egabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,      sum(large_wr
ite_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_reqs,      sum(
large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_write_reqs,      sum(number_of_waits) number_of_waits,      sum(wait
_time) wait_time      from v$iostat_function      group by function_id)

000000008C9F9FE0
insert into WRH$_IOSTAT_FUNCTION    (snap_id, dbid, instance_number,     function_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_reqs,     numb
er_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id,      sum(small_read_megabytes) small_read_m
egabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,      sum(large_wr
ite_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_reqs,      sum(
large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_write_reqs,      sum(number_of_waits) number_of_waits,      sum(wait
_time) wait_time      from v$iostat_function      group by function_id)

0000000088DEE378
insert into WRH$_IOSTAT_FUNCTION    (snap_id, dbid, instance_number,     function_id,     small_read_megabytes, small_write_megabytes,
    large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_reqs,     numb
er_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id,      sum(small_read_megabytes) small_read_m
egabytes,      sum(small_write_megabytes) small_write_megabytes,      sum(large_read_megabytes) large_read_megabytes,      sum(large_wr
ite_megabytes) large_write_megabytes,      sum(small_read_reqs) small_read_reqs,      sum(small_write_reqs) small_write_reqs,      sum(
large_read_reqs) large_read_reqs,      sum(large_write_reqs) large_write_reqs,      sum(number_of_waits) number_of_waits,      sum(wait
_time) wait_time      from v$iostat_function      group by function_id)

0000000088E80DD0 SYS
WRH$_DB_CACHE_ADVICE_PK

0000000088F52F68
81843634f6f4e20d3bab820eede5fe9c

00000000653BE050
select substrb(dump(

000000008B194268
feda23fd904280cd45aaf86fe2584e

000000008CA9A298
3f4a4cf7d4ea3d25ab8bf54e473a4da6

0000000088CA5978 SYS
WRI$_ADV_SQLT_RTN_PLAN

0000000060EDD370
dae7b38ee5c0c01df01d71c085963ce2

0000000092CBCC08
b42bad9a1e97077d880e9325dc148d4e

000000008C92B7F8
SELECT E.NAME FROM W

000000008B3D7628 $BUILD$
8a41e2ab6ffc0f9c

0000000088EFC498
B

0000000088E32978 SYS
WRH$_PROCESS_MEMORY_SUMMARY

0000000092C6E130
6760fb1da0133f65379f1dcc52d37da3

0000000088F17DA8
f423af9d567fdfcd5fdf4c26cde189c9

0000000092CC7F38
48c1a92d4f3186f9fde6b483bce06f4

000000008B215618 SYS
DBMS_APPLICATION_INFO

0000000092C6DC30
DELETE FROM SYS.SCHE

0000000088CC1B20 $BUILD$
1d10273110fbaeb9

000000008B1DF098
c25f40e6c301b03a299d5d03e60d836

000000008B293D68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C9C66C8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060C4C020 SYS
DBMS_WORKLOAD_REPLAY_LIB

0000000088C51CC8
select bp.lo_setid,bp.hi_setid from    v$buffer_pool

000000008C9DD230
select bp.lo_setid,bp.hi_setid from    v$buffer_pool

0000000092EB3F58
96dda3773d9f9b93b8a21d135f9f0ab5

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

000000008B22B0D0
82e4ce628a14adf943a8a06edafa7582

000000008B0D4258
9491400f1206dfd1e1851d6f5b4055ac

0000000088C61A08 SYS
DBMS_AUTOTASK_PRVT_LIB

0000000088D194A0
613e7fde2f45249d589182d8d66c2d6

0000000060FE4F10
select substrb(dump(

000000008B3D9428
SELECT TABLE_NAME,ROUND((BLOCKS * (SELECT VALUE FROM V$PARAMETER WHERE NAME='db_block_size'))/1024/1024, 2) "HWM", ROUND ((NUM_ROWS * A
VG_ROW_LEN / 1024/ 1024 ), 2) AS REAL_USED, ROUND ((BLOCKS * (SELECT PCT_FREE FROM DBA_TABLES WHERE TABLE_NAME = :B1 AND ROWNUM = 1) /
100) * 8 /1024, 2) "PCT_FREE", ROUND ( (BLOCKS * 8 - (NUM_ROWS * AVG_ROW_LEN / 1024) - BLOCKS * 8 * 10 / 100) /1024, 2) "WASTE_SPACE" F
ROM DBA_TABLES WHERE TEMPORARY = 'N' AND TABLE_NAME = :B1 ORDER BY 5 DESC

000000008B0FA208
SELECT TABLE_NAME,ROUND((BLOCKS * (SELECT VALUE FROM V$PARAMETER WHERE NAME='db_block_size'))/1024/1024, 2) "HWM", ROUND ((NUM_ROWS * A
VG_ROW_LEN / 1024/ 1024 ), 2) AS REAL_USED, ROUND ((BLOCKS * (SELECT PCT_FREE FROM DBA_TABLES WHERE TABLE_NAME = :B1 AND ROWNUM = 1) /
100) * 8 /1024, 2) "PCT_FREE", ROUND ( (BLOCKS * 8 - (NUM_ROWS * AVG_ROW_LEN / 1024) - BLOCKS * 8 * 10 / 100) /1024, 2) "WASTE_SPACE" F
ROM DBA_TABLES WHERE TEMPORARY = 'N' AND TABLE_NAME = :B1 ORDER BY 5 DESC

00000000653179E0
SELECT TABLE_NAME,ROUND((BLOCKS * (SELECT VALUE FROM V$PARAMETER WHERE NAME='db_block_size'))/1024/1024, 2) "HWM", ROUND ((NUM_ROWS * A
VG_ROW_LEN / 1024/ 1024 ), 2) AS REAL_USED, ROUND ((BLOCKS * (SELECT PCT_FREE FROM DBA_TABLES WHERE TABLE_NAME = :B1 AND ROWNUM = 1) /
100) * 8 /1024, 2) "PCT_FREE", ROUND ( (BLOCKS * 8 - (NUM_ROWS * AVG_ROW_LEN / 1024) - BLOCKS * 8 * 10 / 100) /1024, 2) "WASTE_SPACE" F
ROM DBA_TABLES WHERE TEMPORARY = 'N' AND TABLE_NAME = :B1 ORDER BY 5 DESC

0000000060EC9590
43734fbda276b98620666fbe7e5a140d

000000008CAE5638 SYS
DBMS_HA_ALERTS_PRVT

000000008CA09700
BEGIN  dbms_ha_alerts_prvt.clear_instance_resources(   :dbdomain, :dbuniquename, :instance_name, :event_time);END;

000000008CA09B80
BEGIN  dbms_ha_alerts_prvt.clear_instance_resources(   :dbdomain, :dbuniquename, :instance_name, :event_time);END;

000000008CBC37F8 SYS
DBA_LOB_SUBPARTITIONS

0000000060F61D10
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABL
E%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','
DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY
BYTES DESC) WHERE ROWNUM < 21

000000008C9018E0
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABL
E%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','
DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY
BYTES DESC) WHERE ROWNUM < 21

0000000060EF4BB0
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABL
E%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','
DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY
BYTES DESC) WHERE ROWNUM < 21

0000000088D49EB8
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABL
E%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','
DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY
BYTES DESC) WHERE ROWNUM < 21

0000000092D1C168
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABL
E%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','
DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY
BYTES DESC) WHERE ROWNUM < 21

0000000060FA5E70
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABL
E%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','
DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY
BYTES DESC) WHERE ROWNUM < 21

0000000088E86C70
/* SQL Analyze(32,1) */ SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PART
ITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABL
E%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','
DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY
BYTES DESC) WHERE ROWNUM < 21

000000008B15AB78
5821bb92dfedac013ba753765b15f3

000000008B32B098
SELECT B.INSTANCE_NA

0000000088F0AAC8
DELETE FROM SYS.SCHEDULER$_JOB_RUN_DETAILS WHERE LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E, SYS.SCHEDULER$_CLASS C WHE
RE E.TYPE# = 66 AND E.CLASS_ID = C.OBJ#(+) AND (E.FLAGS IS NULL OR BITAND(E.FLAGS, 2)=0) AND OPERATION NOT LIKE 'CHAIN%' AND E.LOG_DATE
 < :B2 - NUMTODSINTERVAL(NVL(C.LOG_HISTORY, :B1 ), 'DAY'))

000000008CB97D58
DELETE FROM SYS.SCHEDULER$_JOB_RUN_DETAILS WHERE LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E, SYS.SCHEDULER$_CLASS C WHE
RE E.TYPE# = 66 AND E.CLASS_ID = C.OBJ#(+) AND (E.FLAGS IS NULL OR BITAND(E.FLAGS, 2)=0) AND OPERATION NOT LIKE 'CHAIN%' AND E.LOG_DATE
 < :B2 - NUMTODSINTERVAL(NVL(C.LOG_HISTORY, :B1 ), 'DAY'))

0000000060C96CB0
select EQ_NAME, EQ_TYPE, REQ_REASON,           TOTAL_REQ#, TOTAL_WAIT#, SUCC_REQ#, FAILED_REQ#, CUM_WAIT_TIME,           REQ_DESCRIPTIO
N, EVENT#    from GV$ENQUEUE_STATISTICS    where INST_ID = USERENV('Instance')

0000000088E8AC50
select EQ_NAME, EQ_TYPE, REQ_REASON,           TOTAL_REQ#, TOTAL_WAIT#, SUCC_REQ#, FAILED_REQ#, CUM_WAIT_TIME,           REQ_DESCRIPTIO
N, EVENT#    from GV$ENQUEUE_STATISTICS    where INST_ID = USERENV('Instance')

000000008CB4C328
f158c1fbd4f1fe691c3d0a86a73cdd91

000000008CA28870
1e4013f81f1d52db61c9c355510564c

0000000088DB48E8
SELECT CONTROLFILE_C

000000008B333A88
INSERT INTO EXFSYS.R

0000000065331E60
80b9d80b9cd7e592e037dfd96b55cc87

0000000092D2BF98 SYS
X$KNLAROW

000000008CA7C490 SYS
ALERT_TYPE

0000000060E0A8C0
select /*+ connect_by_filtering */ privilege#,level from sysauth$ connect by grantee#=prior privilege# and privilege#>0 start with gran
tee#=:1 and privilege#>0

000000008C845B88
select /*+ connect_by_filtering */ privilege#,level from sysauth$ connect by grantee#=prior privilege# and privilege#>0 start with gran
tee#=:1 and privilege#>0

000000006534FC90
8b0e03079e9516ee775ea5b3e068d634

000000008C83E5F8
e005dda06e676f4239a313b8367d8666

000000008CAC6FB8
/* SQL Analyze(1) */

000000008B1D8858
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."USER$
" "U#4", "SYS"."FILE$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") A
ND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",
1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") AND ("S#1"."USER#"="U
#4"."USER#"(+))) innerQuery

000000008B3C92B8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."USER$
" "U#4", "SYS"."FILE$" "F#0", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") A
ND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",
1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") AND ("S#1"."USER#"="U
#4"."USER#"(+))) innerQuery

0000000060EE4680
9c05b88ef8c8986a2ce70bde95e470c

0000000060F802C0
b4e699683fdcf89643b8497a332590cf

0000000092D45578 SYS
X$KTUSMST2

000000008B118670 $BUILD$
fdc6222542f1099c

0000000088D708F0 SYS
WRH$_TOPLEVELCALL_NAME

000000008B375498 $BUILD$
12b0e104de08dc14

000000008CA85A68
select sys.dbms_standard.dictionary_obj_type from dual

0000000088D2AA70
select sys.dbms_standard.dictionary_obj_type from dual

0000000088CFD4B8
select sys.dbms_standard.dictionary_obj_type from dual

000000008CA85EE8
select sys.dbms_standard.dictionary_obj_type from dual

0000000088CF23A8 SYS
V$SESSION_FIX_CONTROL

000000008CB80650
SELECT 1  FROM sys.snap_reftime$ r, sys.snap$ s, sys.obj$ o, sys.user$ u  WHERE r.vname=s.vname AND r.sowner=s.sowner AND o.type#=42 AN
D        o.name=s.vname AND o.owner#= u.user# AND s.sowner=u.name AND        r.masobj# = :1

0000000060FF0480
SELECT 1  FROM sys.snap_reftime$ r, sys.snap$ s, sys.obj$ o, sys.user$ u  WHERE r.vname=s.vname AND r.sowner=s.sowner AND o.type#=42 AN
D        o.name=s.vname AND o.owner#= u.user# AND s.sowner=u.name AND        r.masobj# = :1

0000000060D45988
c8046f8e8250922eedebd42214761ea4

000000008CABE2D8
select min(minbkt),m

000000008CB136C0
select /*+  no_paral

0000000092D3F5F8
875c00da886952da9c1d62e641eef1d3

000000008C9151C8
SELECT ID,TYPE# FROM

000000008CA8BD60 $BUILD$
c1a9b981f882a032

0000000060CDBF00
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235
282) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4", "U#5"), SCALE_ROWS=165.5060901) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"
), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMAT
E(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("SO#2", "O#4"), "I_USER#", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_F
ILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OP
T_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"innerQuery", NLJ_
INDEX_SCAN, "U#5", ("SO#2", "O#4"), "I_USER#", SCALE_RO

000000008B1F4B80
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235
282) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4", "U#5"), SCALE_ROWS=165.5060901) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"
), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMAT
E(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("SO#2", "O#4"), "I_USER#", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_F
ILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OP
T_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"innerQuery", NLJ_
INDEX_SCAN, "U#5", ("SO#2", "O#4"), "I_USER#", SCALE_RO

0000000088FD50B8
SELECT TS_ID, TABLESPACE_NAME, REASON_VALUE FROM SYS.WRI$_SEGADV_OBJLIST WHERE REASON IN ('TBS WARNING ALERT', 'TBS CRITICAL ALERT') AN
D STATUS = 'NEW' ORDER BY CREATION_TIME,REASON ASC

0000000088FCE2F8
SELECT TS_ID, TABLESPACE_NAME, REASON_VALUE FROM SYS.WRI$_SEGADV_OBJLIST WHERE REASON IN ('TBS WARNING ALERT', 'TBS CRITICAL ALERT') AN
D STATUS = 'NEW' ORDER BY CREATION_TIME,REASON ASC

000000008B235840
SELECT TS_ID, TABLESPACE_NAME, REASON_VALUE FROM SYS.WRI$_SEGADV_OBJLIST WHERE REASON IN ('TBS WARNING ALERT', 'TBS CRITICAL ALERT') AN
D STATUS = 'NEW' ORDER BY CREATION_TIME,REASON ASC

000000008C8624B8 SYS
DBMS_RCVMAN

0000000088F403A0 SYS
DBMS_AQADM_SYSCALLS

000000008CAA8388 SYS
DBMS_RCVMAN

0000000088EF7C90 SYS
X$KCBMMAV

0000000088CB9AF8
f4d0e55a5ce008985b9edb4ba2916029

0000000060DEC8D8
select /*+  no_paral

000000008B0F3908 $BUILD$
2ba0db19ae3134a1

0000000092CF3098
SELECT PROPERTY FROM SYS.WRI$_ADV_TASKS WHERE ID = :B1

000000008CA2E100
SELECT PROPERTY FROM SYS.WRI$_ADV_TASKS WHERE ID = :B1

000000008B146EE8
SELECT PROPERTY FROM SYS.WRI$_ADV_TASKS WHERE ID = :B1

0000000060FBEBA0
SELECT PROPERTY FROM SYS.WRI$_ADV_TASKS WHERE ID = :B1

0000000060E9D120
SELECT PROPERTY FROM SYS.WRI$_ADV_TASKS WHERE ID = :B1

000000008C919C68
SELECT PROPERTY FROM SYS.WRI$_ADV_TASKS WHERE ID = :B1

0000000060DE48C8
ALTER SESSION SET EV

000000008B207E68
delete from WRH$_MEM_DYNAMIC_COMP tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C86D4B8
delete from WRH$_MEM_DYNAMIC_COMP tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C8C0E48
e7e04a13b7fb7ff764c8ab84c22c7d28

000000006530E2B0
581cc1b7ae34fc7a9cfbb7dd51ab911

0000000060D5C118
select substrb(dump(

000000008B20C2B8
SELECT EQUALATTRS FR

000000008C914068
SELECT WRI$_ADV_SEQ_

0000000088F75410
d8084fc6daaa028671bf09869167514b

0000000060F38DF0
UPDATE SYS.AQ$_QUEUE

000000008C99A8E0 SYS
X$KCVFHONL

0000000088CA7010
faacd91ba79384131d7b9ba5c9cac

0000000088C79DD8
ALTER SESSION SET EV

000000008B1BE410
SELECT O.* FROM DBA_

000000008C9D7D58 EXFSYS
ADM_EXPFIL_ATTRIBUTES

000000008B291BD0
UPDATE RLM$RULESET S

000000008C9472A8
SELECT ATTR1 FROM DB

000000008CAD1880
PUBLIC

0000000088DEE068
941ab1773c1656f2d128d0154a4d7804

0000000088F44488
32c39d1cf283e33dcfe029a05b9fd7f1

0000000092D1B808 SYS
X$KEWRSQLIDTAB

0000000092D4A1F8 SYS
X$QUIESCE

000000008C914CE8
SELECT COUNT(*) FROM

000000008B3AF808
6d7fee888683adaccae3944bd21e0fe

0000000060D312C8
9a73bb7dd3a509263577bda46a58c791

0000000092C8C9B8
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname is null

0000000092C5FB08
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname is null

0000000088D33038
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname is null

0000000088DC0648
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname is null

000000008CB851C8
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname is null

0000000092C8CE38
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname is null

0000000060C5EF40 SYS
WRH$_METRIC_NAME

000000008B3DFCF8
4266ad41f92a147ae48039bfb85647c0

0000000088D0D520
c3add426cf82acf1e69158ac972b609a

0000000088E33978 SYS
GV$PROCESS_MEMORY

0000000088CBE6D0
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

0000000092CFAC78
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

0000000088D4B4E8
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

0000000088F678D8
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

000000008B16D8C0
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

0000000060D21788
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

0000000060F938A0
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

000000008B1ED2F8
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

0000000088DC81E8
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

0000000088CBEB50
                                        merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic
_sampling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
      using                                                                         (select
                             m.obj# obj#,                                                                  m.inserts inserts, m.updates
 updates, m.deletes deletes,                      m.flags flags, m.timestamp timestamp, m.drop_segments drop_segments         from sys.
mon_mods$ m, tab$ t                                                  where m.obj# = t.obj#
            ) v on (mm.obj# = v.obj#)                                                     when matched then
                                   update

000000008CB36D88
select /*+ index(idl_char$ i_idl_char1) +*/ piece#,length,piece from idl_char$ where obj#=:1 and part=:2 and version=:3 order by piece#

0000000088CF5F08
select /*+ index(idl_char$ i_idl_char1) +*/ piece#,length,piece from idl_char$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB7FE38
select /*+ index(idl_char$ i_idl_char1) +*/ piece#,length,piece from idl_char$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008C90AB90
select /*+ index(idl_char$ i_idl_char1) +*/ piece#,length,piece from idl_char$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB37208
select /*+ index(idl_char$ i_idl_char1) +*/ piece#,length,piece from idl_char$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008B2BF908
select substrb(dump(

000000008C9EA9C0
SELECT redef_id FROM sys.redef_object$  WHERE obj_type = :1 AND  ((obj_owner = :2 AND obj_name = :3) OR   (int_obj_owner = :2 AND int_o
bj_name = :3))  AND rownum = 1

0000000088ECF030
SELECT redef_id FROM sys.redef_object$  WHERE obj_type = :1 AND  ((obj_owner = :2 AND obj_name = :3) OR   (int_obj_owner = :2 AND int_o
bj_name = :3))  AND rownum = 1

0000000088CAAB78
3f4c469163f377d54f7964089895f91

0000000060E1E1E0 SYS
SCHEDULER$_VAR_VALUE_LIST

0000000060DC7478
ebe813e13432c33bbf295797666582e1

00000000652FDCC0
9e721a86ea0e579849378d390f08567

0000000088EC7A70 EXFSYS
EXF$DEFIDXPARAM

0000000088C78120 SYS
BP

0000000060F6B5E0 SYS
WRH$_ROWCACHE_SUMMARY_BL

000000008C874FD8 PUBLIC
DBMS_SQL

0000000060FD32F0
select substrb(dump(

0000000088DDD9C8 ORACLE_OCM
DBA_SCHEDULER_JOBS

000000008B2EA3A8
delete from WRH$_IOSTAT_FILETYPE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060D44F78
delete from WRH$_IOSTAT_FILETYPE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CAE5C68
SELECT MAX(TO_NUMBER

0000000088EA9570
1a9caa64fc3f95ca9ed5ba2456c64cd1

0000000060CA7DB0
SELECT COUNT(*) FROM

0000000060DBE270
DBMS_RANDOM

000000008B054840
SELECT BITAND(FLAGS,

000000008CAE66E8
SELECT 1 FROM V$OFFL

000000008B116290 $BUILD$
5d30731082fa00f5

0000000060EEDEE0 SYS
WRH$_WAITSTAT_BL

000000008B1EC2D8 EXFSYS
EXFSYS

0000000088CB1AE8
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

000000008CAFEA18
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

000000008B396E38
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

0000000060F46BC0
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

0000000060E3E7E0
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

000000008B105B08
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

000000008B125D48
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

000000008B297D80
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

000000008B27BA38
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

0000000060F92020
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

00000000652F2170
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

000000008B2115C8
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

0000000088CB1F68
                                     delete /*+ dynamic_sampling(m 4) dynamic_sampling_est_cdn(m) */                 from sys.mon_mods$
 m                                                          where exists
   (select /*+ unnest */ * from sys.tabcompart$ t where t.obj# = m.obj#)

0000000060F60E80
664d9da0bd73b83989cbb33eae03fd40

0000000060E255F0
SELECT IC.INCARNATIO

0000000092C6F940 SYS
WRI$_ADV_ABSTRACT_T

000000008C9DBCC0
87e6c9f2b4eea3242beb2b3b7acd1da

000000008C9213D8
SELECT COUNT(*) FROM

0000000088D08C08
6baf1288053c9fc1181bbddcb842df4

0000000088D76F38
update wrm$_snapshot set status = 0,      flush_elapsed =         greatest((cast(SYSDATE as TIMESTAMP) - end_interval_time),
      interval '00.10' second)  where snap_id = :snap_id and dbid = :dbid and      instance_number = :instance_number

000000008CA23CB8
update wrm$_snapshot set status = 0,      flush_elapsed =         greatest((cast(SYSDATE as TIMESTAMP) - end_interval_time),
      interval '00.10' second)  where snap_id = :snap_id and dbid = :dbid and      instance_number = :instance_number

000000008B2662F8
update wrm$_snapshot set status = 0,      flush_elapsed =         greatest((cast(SYSDATE as TIMESTAMP) - end_interval_time),
      interval '00.10' second)  where snap_id = :snap_id and dbid = :dbid and      instance_number = :instance_number

000000008B29DA10
update wrm$_snapshot set status = 0,      flush_elapsed =         greatest((cast(SYSDATE as TIMESTAMP) - end_interval_time),
      interval '00.10' second)  where snap_id = :snap_id and dbid = :dbid and      instance_number = :instance_number

0000000088D139E8
update wrm$_snapshot set status = 0,      flush_elapsed =         greatest((cast(SYSDATE as TIMESTAMP) - end_interval_time),
      interval '00.10' second)  where snap_id = :snap_id and dbid = :dbid and      instance_number = :instance_number

0000000088D773B8
update wrm$_snapshot set status = 0,      flush_elapsed =         greatest((cast(SYSDATE as TIMESTAMP) - end_interval_time),
      interval '00.10' second)  where snap_id = :snap_id and dbid = :dbid and      instance_number = :instance_number

0000000060C94DB0
2c9996701a33a4a61060771b82763343

0000000060D2AFD8
756a5c95e2ddcd9b658e214310623f

00000000653D2D80 $BUILD$
5b11fbeed3850a3b

0000000088C96968
SELECT XMLCONCAT( :B

0000000060ECB7E0 EXFSYS
EXF$ASUDFLIST

0000000088FBFBB8
select /*+  no_paral

0000000088F65280
select count(*) from vtable$ where obj#=:1

000000008B2333E0
select count(*) from vtable$ where obj#=:1

000000008B1B8030
select count(*) from vtable$ where obj#=:1

000000008CA50E88
SELECT OWNER,TABLE_NAME,COLUMN_NAME,SEGMENT_NAME,SIZE_MB FROM (SELECT A.OWNER,B.TABLE_NAME,B.COLUMN_NAME,A.SEGMENT_NAME ,TRUNC(A.BYTES/
1024/1024) AS SIZE_MB FROM DBA_SEGMENTS A,DBA_LOBS B WHERE A.SEGMENT_TYPE LIKE 'LOB%' AND A.OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS
','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS
','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') AND A.SEGMENT_NAME=B.SEGMENT_NAME ORDER BY A.BYTES DESC) WHE
RE ROWNUM < 11

000000008CA47D20
SELECT OWNER,TABLE_NAME,COLUMN_NAME,SEGMENT_NAME,SIZE_MB FROM (SELECT A.OWNER,B.TABLE_NAME,B.COLUMN_NAME,A.SEGMENT_NAME ,TRUNC(A.BYTES/
1024/1024) AS SIZE_MB FROM DBA_SEGMENTS A,DBA_LOBS B WHERE A.SEGMENT_TYPE LIKE 'LOB%' AND A.OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS
','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS
','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') AND A.SEGMENT_NAME=B.SEGMENT_NAME ORDER BY A.BYTES DESC) WHE
RE ROWNUM < 11

000000006530D520
SELECT OWNER,TABLE_NAME,COLUMN_NAME,SEGMENT_NAME,SIZE_MB FROM (SELECT A.OWNER,B.TABLE_NAME,B.COLUMN_NAME,A.SEGMENT_NAME ,TRUNC(A.BYTES/
1024/1024) AS SIZE_MB FROM DBA_SEGMENTS A,DBA_LOBS B WHERE A.SEGMENT_TYPE LIKE 'LOB%' AND A.OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS
','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS
','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') AND A.SEGMENT_NAME=B.SEGMENT_NAME ORDER BY A.BYTES DESC) WHE
RE ROWNUM < 11

000000008B28FA38
update sys.scheduler$_job set  user_callback_ctx = :1, dist_flags = :2 where  obj# = :3

0000000092C9FCF8
update sys.scheduler$_job set  user_callback_ctx = :1, dist_flags = :2 where  obj# = :3

0000000088FDFF90
update sys.scheduler$_job set  user_callback_ctx = :1, dist_flags = :2 where  obj# = :3

0000000088D6CAA0
update sys.scheduler$_job set  user_callback_ctx = :1, dist_flags = :2 where  obj# = :3

000000006534CFA0
delete com$ where obj#=:1

0000000060F763C0
delete com$ where obj#=:1

000000008B1A6B68
90affab7732a7f083e5ef19a6d9b8a7e

0000000088F6E440
afe8d3526c8d155a427c9a76f2e7a715

0000000088D8DBB8 $BUILD$
928ac3c4fc8845d0

000000008C985800 SYS
DBMS_SPACE_ADMIN

000000008B3F0C00 APEX_030200
WWV_FLOW_CUSTOMIZE

000000008CA44EA0 SYS
RESOURCE_CONSUMER_GROUP$

000000008B1EDED8
INSERT INTO BSLN_STA

0000000092C410B8
16bb15465bb8aca7b107b2878d915e8e

000000008CB88858
567ed34e41772c20e5e3a065f8dd23f0

000000008B25AE68
d064a51cc88404f05611e80c56843e25

0000000088C9B318
SELECT XMLELEMENT( "

000000008B0A41F0
SELECT DBCNFREGID, D

0000000060EEA370
select substrb(dump(

0000000088EBF5E0
SELECT DBINC.INCARNA

0000000060C894C0 SYS
STREAMS$_APPLY_PROCESS

000000008B36CA98
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COL") val,count(*) cnt  from
 "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn and "COL" is not null  group by nlssort(
"COL", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binary')

000000008CAD0E30
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COL") val,count(*) cnt  from
 "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn and "COL" is not null  group by nlssort(
"COL", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binary')

0000000088EAF2E0
UPDATE WRH$_SQLTEXT SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRSTALE)

0000000088EF2F00
UPDATE WRH$_SQLTEXT SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRSTALE)

000000008B2853B0
UPDATE WRH$_SQLTEXT SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRSTALE)

0000000088EAF760
UPDATE WRH$_SQLTEXT SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRSTALE)

0000000092CE4018 SYS
BOOTSTRAP$

000000008CA3A200
SELECT TABLESPACE_NA

0000000088F9FF48
43a30940e102d6c8a1937592d3a606f3

0000000060FD4808
13832973079980719655

000000008B38D728 SYS
SCHEDULER_FILEWATCHER_REQ_LIST

0000000088E798E0
20d34e9fc6a4e32fcb66771315a5d303

0000000092D224A8
1cb59bc0340f2b79174a091cda040054

000000008CBC8438
9916e79f5688094cd8ae66224bf386a3

0000000088DC4D78
table_4_d_d0_0_0_0

000000008B365B98
table_4_d_d0_0_0_0

0000000060ED4550 SYS
DBA_HIST_METRIC_NAME

0000000088E77280 $BUILD$
8728d79d5db913c4

000000008CA6A410
select sys.dbms_standard.sysevent from dual

0000000088D2A520
select sys.dbms_standard.sysevent from dual

0000000092D840C8
select sys.dbms_standard.sysevent from dual

000000008CA6A890
select sys.dbms_standard.sysevent from dual

0000000088E4CF48 PUBLIC
V_J

0000000088EBD900
select a.default_selectivity                             from association$ a                                      where a.obj# = :1
                                      and a.property = :2

0000000088ED3390
select a.default_selectivity                             from association$ a                                      where a.obj# = :1
                                      and a.property = :2

000000008B2A0758 EXFSYS
RLM$RULESET

00000000652DED40
select substrb(dump(

000000008CAC2248 SYS
WRM$_SNAPSHOT_DETAILS

0000000088D2D648
SELECT NVL(TO_NUMBER

000000008B28E6D8
SELECT TO_NUMBER(ITE

0000000060C34030
305411622df8ab9d73d511b62ec48012

0000000092C43DC8
SELECT NVL(MAX(A.ID)

00000000652BD330
SELECT THREAD#,MAX(SEQUENCE#) AS MAX_SEQUENCE FROM V$ARCHIVED_LOG GROUP BY THREAD# ORDER BY THREAD#

00000000652CA800
SELECT THREAD#,MAX(SEQUENCE#) AS MAX_SEQUENCE FROM V$ARCHIVED_LOG GROUP BY THREAD# ORDER BY THREAD#

0000000088D00250 $BUILD$
befb9afef353722f

000000008C91C1F8
UPDATE SYS.WRI$_ADV_

0000000088CF26B8
SELECT GREATEST(NVL(

000000008C9E19C0
b179521aaa4d6913787b0381fd87b933

0000000088E81210 $BUILD$
9bbad301bb3d7340

000000008B078030
SELECT SUBPARTITION_

000000008CB23090 EXFSYS
EXF$PARAMETER

000000008B1F8778
da001182935df0fd5bbbf1c3821d1f5c

000000008C9E95C0
a7d0a75ff4baf3a2197c26f430948e02

000000008CA4F120
f9e9460e6aabc892754b74d2721321a3

000000008B05BE60
SELECT DISTINCT H.GR

0000000065340F80
9c6d71f8e551249231f081eda44b1ca

0000000088E013F8 SYS
WRH$_EVENT_HISTOGRAM_PK

000000008B264418
84f93fd34bc4e20a5f25d27a377d5e5

000000008B310020
delete from WRH$_MVPARAMETER_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    a
nd not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060DC79B8
delete from WRH$_MVPARAMETER_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    a
nd not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CA7F738 $BUILD$

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
19ca7f13 d4ba00d

0000000088E84AB0
d751142c3b7971bd655864a445f58a87

0000000088FB17B8
select /*+  no_paral

000000008B07E6C0
SELECT U.NAME, O.NAM

000000008B19DA28
insert into sys.scheduler$_job_run_details  (log_id, log_date, req_start_date, start_date, run_duration,   instance_id, session_id, sla
ve_pid, cpu_used, error#, additional_info)   values  (:1, SYSTIMESTAMP, :2, :3, :4, :5, :6, :7,   numtodsinterval(:8/100, 'second'), :9
, :10)

0000000088F3B580
insert into sys.scheduler$_job_run_details  (log_id, log_date, req_start_date, start_date, run_duration,   instance_id, session_id, sla
ve_pid, cpu_used, error#, additional_info)   values  (:1, SYSTIMESTAMP, :2, :3, :4, :5, :6, :7,   numtodsinterval(:8/100, 'second'), :9
, :10)

000000008CB20118
insert into sys.scheduler$_job_run_details  (log_id, log_date, req_start_date, start_date, run_duration,   instance_id, session_id, sla
ve_pid, cpu_used, error#, additional_info)   values  (:1, SYSTIMESTAMP, :2, :3, :4, :5, :6, :7,   numtodsinterval(:8/100, 'second'), :9
, :10)

000000008B2AA878
insert into sys.scheduler$_job_run_details  (log_id, log_date, req_start_date, start_date, run_duration,   instance_id, session_id, sla
ve_pid, cpu_used, error#, additional_info)   values  (:1, SYSTIMESTAMP, :2, :3, :4, :5, :6, :7,   numtodsinterval(:8/100, 'second'), :9
, :10)

000000008B1620F8
select inst_id,tstsn,tsnam,       decode(bitand(tsflg, 1+2), 1, 'NO', 2,'NO','YES'),  decode(bitand(tsflg, 4), 4,'YES','NO'),  decode(b
itand(tsflg, 8), 8,'NO','YES'),  decode(bitand(tsflg, 16+32), 16, 'ON', 32, 'OFF', to_char(null)) from x$kccts where tstsn != -1

0000000060DAD1E8
select inst_id,tstsn,tsnam,       decode(bitand(tsflg, 1+2), 1, 'NO', 2,'NO','YES'),  decode(bitand(tsflg, 4), 4,'YES','NO'),  decode(b
itand(tsflg, 8), 8,'NO','YES'),  decode(bitand(tsflg, 16+32), 16, 'ON', 32, 'OFF', to_char(null)) from x$kccts where tstsn != -1

0000000088CC3ED8
select     distinct

0000000060CBA7A8
select     distinct

0000000060F129B0
ca2d5ac1e6075263c578de6947155f4

0000000060FCD240
f2d9a2d1fa49801b7c619a5a172e930

000000008B08ED50 SYS
WRI$_OPTSTAT_AUX_HISTORY

000000008CAA2980
b227e8c53113383e437ecaf0e0b1d0ed

000000008B3A8EA8 SYS
PRVT_SQLPROF_INFRA

000000008B25A188
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("POWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "POWNER" is not null  group by nlssort("POWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

0000000088C6F530
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("POWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "POWNER" is not null  group by nlssort("POWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

0000000088DF7B08
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("POWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "POWNER" is not null  group by nlssort("POWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

000000008B25CC50
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("POWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "POWNER" is not null  group by nlssort("POWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

000000008CBF2170
SELECT PROP, (SYSDAT

000000008B335AB8
SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVI
TY,A.HISTOGRAM,A.NUM_BUCKETS FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B WHERE A.OWNER = B.OWNER AND A.TABLE_NAME = B.TABLE_NAME AND A.
TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) ORDER BY A.OWNER,A.COLUMN_NAME

0000000065312A70
SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVI
TY,A.HISTOGRAM,A.NUM_BUCKETS FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B WHERE A.OWNER = B.OWNER AND A.TABLE_NAME = B.TABLE_NAME AND A.
TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) ORDER BY A.OWNER,A.COLUMN_NAME

0000000088CEBC48
SELECT VALUE(T) FROM

0000000088FEF770 SYS
DBMS_STREAMS_DATAPUMP_UTIL

0000000060C722E8
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"COL" val, ntile(10) o
ver (order by nlssort("COL",'NLS_SORT = binary')) bkt  from "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,
0,"ROWID") = :objn and "COL" is not null) group by val) group by maxbkt order by maxbkt

000000008B372EA8
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"COL" val, ntile(10) o
ver (order by nlssort("COL",'NLS_SORT = binary')) bkt  from "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,
0,"ROWID") = :objn and "COL" is not null) group by val) group by maxbkt order by maxbkt

0000000060E382D0
b4346dae6f42ea4dfb6cf687a11ee0b9

0000000060F1AAF0
SELECT NVL(SPARE1, 0

0000000060FB9AF0
select substrb(dump(

0000000088E3BED8 SYS
V$SYS_TIME_MODEL

000000008CA9C630
71bf9a5f12113d1746f83d9929d601ee

000000008C8C3368 APEX_030200
WWV_FLOW_SW_STMTS

0000000060F944F0
select substrb(dump(

0000000088ED5F80 $BUILD$
6c5b1098fbd7916b

0000000088E63BE8 SYS
WRH$_SGASTAT

0000000088D0C4F0 APEX_030200
UTL_SMTP

0000000088ECAC80
DELETE FROM SYS.SCHE

000000008CB4AD70
SELECT MAX(FE.FENUM)

000000008C8664B8 SYS
SESSION_PRIVS

000000008B0D3E78
SELECT SUM(CASE WHEN

0000000088F83B88 SYS
WRH$_STREAMS_POOL_ADVICE

0000000088C7AC30
select t.rowcnt, t.blkcnt, t.empcnt, t.avgspc, t.chncnt, t.avgrln, t.avgspc_flb, t.flbcnt, t.analyzetime, t.samplesize, t.flags, ts.cac
hedblk, ts.cachehit, ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

0000000060E3E670
select t.rowcnt, t.blkcnt, t.empcnt, t.avgspc, t.chncnt, t.avgrln, t.avgspc_flb, t.flbcnt, t.analyzetime, t.samplesize, t.flags, ts.cac
hedblk, ts.cachehit, ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

000000008B309528
select t.rowcnt, t.blkcnt, t.empcnt, t.avgspc, t.chncnt, t.avgrln, t.avgspc_flb, t.flbcnt, t.analyzetime, t.samplesize, t.flags, ts.cac
hedblk, ts.cachehit, ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

0000000088D86140
d2c2b4023c4199c0e6daeb9cf7a03ab3

000000008C8388B8
5886b016a06f3cc2a3d82af180a95329

0000000088C91E98
WITH METADATA_REFBYS

000000008B076D40
SELECT /*+ ordered i

000000008B37A0F8 APEX_030200
WWV_FLOW_REGEXP

0000000060E66500
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 158

000000008CAE6448
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 158

0000000060DC81C8
a55bd1442d793113b16167bccfbca107

0000000060DC6AC8
SELECT PARALLEL FROM V$INSTANCE

000000008CA9F670
SELECT PARALLEL FROM V$INSTANCE

00000000653E0E60
select mttr_target_f

000000008CA2ADF0
table_c_a_1735_e_0_0

0000000060E71D88
table_c_a_1735_e_0_0

0000000088C93E78
SELECT DECODE(COUNT(

000000008C8E0048
540d9a6082fb6eea8b95e9782d21611f

000000008B052000
SELECT * FROM (SELEC

000000006534B6F0
d6661296a49ac6ead537621283dbe83e

0000000088FC9CF8
select * from scott.dept

000000008CA87E00
select * from scott.dept

0000000088E8CB90
b53b543b6a65d6b141df4a8cf9b4bb58

000000008C931698 SYS
DBA_ADVISOR_TASKS

000000008CBE96B8 $BUILD$
f228d26ce0d72045

0000000092CC62E8 SYS
ICOL$

0000000060CBDBC8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("TABLESPACE_NAME") val,count(
*) cnt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "TABLESPACE_NAME" is not null  group by nlssort("TABLESPACE_NAME", 'NLS_SORT = binary')
) order by nlssort(val,'NLS_SORT = binary')

0000000060E6AFC0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("TABLESPACE_NAME") val,count(
*) cnt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "TABLESPACE_NAME" is not null  group by nlssort("TABLESPACE_NAME", 'NLS_SORT = binary')
) order by nlssort(val,'NLS_SORT = binary')

0000000088C82F88
SELECT count(*) freq,        max(e.execution_name) keep (dense_rank last          order by e.execution_start) last_exec,        max(nvl
(o.attr9, :1)) keep (dense_rank last          order by e.execution_start) last_cpu,        max(nvl(o.attr10, :2)) keep (dense_rank last
          order by e.execution_start) last_nb_execs FROM   dba_advisor_executions e,        dba_advisor_objects o WHERE  e.task_id = :3
 AND        e.task_id = o.task_id AND        e.execution_name = o.execution_name AND        o.type_id = :4 AND        o.attr1 = :5 AND
       bitand(o.attr7, :6) = 0 AND        e.execution_start >= (SYSDATE - 30) GROUP BY o.attr1

000000008C868EF8
SELECT count(*) freq,        max(e.execution_name) keep (dense_rank last          order by e.execution_start) last_exec,        max(nvl
(o.attr9, :1)) keep (dense_rank last          order by e.execution_start) last_cpu,        max(nvl(o.attr10, :2)) keep (dense_rank last
          order by e.execution_start) last_nb_execs FROM   dba_advisor_executions e,        dba_advisor_objects o WHERE  e.task_id = :3
 AND        e.task_id = o.task_id AND        e.execution_name = o.execution_name AND        o.type_id = :4 AND        o.attr1 = :5 AND
       bitand(o.attr7, :6) = 0 AND        e.execution_start >= (SYSDATE - 30) GROUP BY o.attr1

000000008C9E76B0
SELECT count(*) freq,        max(e.execution_name) keep (dense_rank last          order by e.execution_start) last_exec,        max(nvl
(o.attr9, :1)) keep (dense_rank last          order by e.execution_start) last_cpu,        max(nvl(o.attr10, :2)) keep (dense_rank last
          order by e.execution_start) last_nb_execs FROM   dba_advisor_executions e,        dba_advisor_objects o WHERE  e.task_id = :3
 AND        e.task_id = o.task_id AND        e.execution_name = o.execution_name AND        o.type_id = :4 AND        o.attr1 = :5 AND
       bitand(o.attr7, :6) = 0 AND        e.execution_start >= (SYSDATE - 30) GROUP BY o.attr1

000000008CAE6038
SELECT count(*) freq,        max(e.execution_name) keep (dense_rank last          order by e.execution_start) last_exec,        max(nvl
(o.attr9, :1)) keep (dense_rank last          order by e.execution_start) last_cpu,        max(nvl(o.attr10, :2)) keep (dense_rank last
          order by e.execution_start) last_nb_execs FROM   dba_advisor_executions e,        dba_advisor_objects o WHERE  e.task_id = :3
 AND        e.task_id = o.task_id AND        e.execution_name = o.execution_name AND        o.type_id = :4 AND        o.attr1 = :5 AND
       bitand(o.attr7, :6) = 0 AND        e.execution_start >= (SYSDATE - 30) GROUP BY o.attr1

000000008C8780D8
847dd948a0ba43328868eea46d16545c

000000008C9F0A08
SELECT COUNT(*) FROM

000000008CA9CB80
select sum(used_blocks), ts.ts#   from GV$SORT_SEGMENT gv, ts$ ts   where gv.tablespace_name = ts.name and   ts.bitmapped  <> 0   group
 by ts.ts#

000000008B1A7AA8
select sum(used_blocks), ts.ts#   from GV$SORT_SEGMENT gv, ts$ ts   where gv.tablespace_name = ts.name and   ts.bitmapped  <> 0   group
 by ts.ts#

0000000088E87880 SYS
WRH$_LIBRARYCACHE

000000008C95B490 SYS
X$KCCRT

0000000088CEB378
SELECT COUNT(*) FROM

000000008B19ED48
SELECT ID FROM WWV_F

000000008C9D6ED0
a458465a8a2413ef11ba8b29c5d37d31

000000008CB530B0
select p.valchar from sys.optstat_user_prefs$ p, sys.obj$ o, sys.user$ u where p.obj#=o.obj#   and u.user#=o.owner#   and u.name=:1   a
nd o.name=:2   and p.pname=:3

0000000092D24F08
select p.valchar from sys.optstat_user_prefs$ p, sys.obj$ o, sys.user$ u where p.obj#=o.obj#   and u.user#=o.owner#   and u.name=:1   a
nd o.name=:2   and p.pname=:3

000000008B2A6F98
SELECT MAX(F.QUERY_T

000000008C9F85C0
5560120618742620687

000000008B339F30
SELECT PORT, SHARED_

000000008C9F0FD0 SYS
X$KCCRDI

0000000088EDE370
select /*+  no_paral

000000008B326900
declare   v_cnt number;   cursor c_group is SELECT     GROUP_NUMBER,     NAME as DISKGROUP_NAME,     lpad(round(ALLOCATION_UNIT_SIZE/10
24/1024) || 'M',7) as "AU_SIZE",     STATE,     TYPE,     round(TOTAL_MB/1024) as TOTAL_GB,     round(FREE_MB/1024) as FREE_GB,     lpa
d(round((TOTAL_MB-FREE_MB)/TOTAL_MB*100) || '%',9) as Used_Pct,     round(USABLE_FILE_MB/1024) as "USABLE_FILE_GB" ,     REQUIRED_MIRRO
R_FREE_MB from     V$ASM_DISKGROUP;   v_group c_group%rowtype;   cursor c_disk is select b.GROUP_NUMBER as GROUP_NUMBER,   b.name as DI
SKGROUP_NAME,   a.path,   a.FAILGROUP,a.name as DISK_NAME,a.STATE,a.MODE_STATUS,a.HEADER_STATUS,a.MOUNT_STATUS,a.REPAIR_TIMER from v$as
m_disk a,v$asm_diskgroup b where a.GROUP_NUMBER = b.GROUP_NUMBER order by b.GROUP_NUMBER,a.path;   v_disk c_disk%rowtype;    cursor c_c
lient is select GROUP_NUMBER,INSTANCE_NAME,DB_NAME,STATUS,SOFTWARE_VERSION,COMPATIBLE_VERSION from v$asm_client order by GROUP_NUMBER;
  v_client c_client%rowtype;  begin   select count(*) i

0000000060EA7110
declare   v_cnt number;   cursor c_group is SELECT     GROUP_NUMBER,     NAME as DISKGROUP_NAME,     lpad(round(ALLOCATION_UNIT_SIZE/10
24/1024) || 'M',7) as "AU_SIZE",     STATE,     TYPE,     round(TOTAL_MB/1024) as TOTAL_GB,     round(FREE_MB/1024) as FREE_GB,     lpa
d(round((TOTAL_MB-FREE_MB)/TOTAL_MB*100) || '%',9) as Used_Pct,     round(USABLE_FILE_MB/1024) as "USABLE_FILE_GB" ,     REQUIRED_MIRRO
R_FREE_MB from     V$ASM_DISKGROUP;   v_group c_group%rowtype;   cursor c_disk is select b.GROUP_NUMBER as GROUP_NUMBER,   b.name as DI
SKGROUP_NAME,   a.path,   a.FAILGROUP,a.name as DISK_NAME,a.STATE,a.MODE_STATUS,a.HEADER_STATUS,a.MOUNT_STATUS,a.REPAIR_TIMER from v$as
m_disk a,v$asm_diskgroup b where a.GROUP_NUMBER = b.GROUP_NUMBER order by b.GROUP_NUMBER,a.path;   v_disk c_disk%rowtype;    cursor c_c
lient is select GROUP_NUMBER,INSTANCE_NAME,DB_NAME,STATUS,SOFTWARE_VERSION,COMPATIBLE_VERSION from v$asm_client order by GROUP_NUMBER;
  v_client c_client%rowtype;  begin   select count(*) i

000000008C91D2C8
UPDATE SYS.WRI$_ADV_

0000000088E7E3D0
8256f9c392783d2ca915978f9f4ac8c0

0000000060D436E0
f2404ea776ae854bf1f2f29f65dfc1c2

000000008B25A2F8 $BUILD$
ad8e886714d33854

000000008C901028
72be447c7285373334cc98ea6461ad42

0000000060D10CE8 $BUILD$
4efa1c96a3baf98d

0000000060EF4F40
SELECT TASK_NAME FRO

000000008B0B8240
select o.obj#, u.name, o.name, ti.parent_obj#, ti.parent_ptn_obj#    from sys.obj$ o, sys.user$ u, sys.transient_iot$ ti    where o.obj
# = ti.obj# and o.owner# = u.user#

0000000088D14810
select o.obj#, u.name, o.name, ti.parent_obj#, ti.parent_ptn_obj#    from sys.obj$ o, sys.user$ u, sys.transient_iot$ ti    where o.obj
# = ti.obj# and o.owner# = u.user#

0000000092C4C870
select o.obj#, u.name, o.name, ti.parent_obj#, ti.parent_ptn_obj#    from sys.obj$ o, sys.user$ u, sys.transient_iot$ ti    where o.obj
# = ti.obj# and o.owner# = u.user#

000000008CA2EE30
2adc339680adc46ae7b3746380a5a5b0

000000008C942A68 SYS
ICOLDEP$

000000008C8DD298 SYS
DBMS_AQ

0000000088C436E0
574de68ebc4667f590f3e35ac5d151

000000008CA00348
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_RO
WS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B  WHERE A.OWNER = B.OWN
ER    AND A.TABLE_NAME = B.TABLE_NAME    AND A.TABLE_NAME = upper(:table_name) and a.owner = upper(:owner) order by A.OWNER,A.COLUMN_NA
ME;    v_stats c_stats%rowtype;     cursor c_hwm is SELECT table_name,ROUND((blocks * (select value from v$parameter where name='db_blo
ck_size'))/1024/1024, 2) "HWM",    ROUND ((num_rows * a

00000000653182F0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT A.COLUMN_NAME,B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_RO
WS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B  WHERE A.OWNER = B.OWN
ER    AND A.TABLE_NAME = B.TABLE_NAME    AND A.TABLE_NAME = upper(:table_name) and a.owner = upper(:owner) order by A.OWNER,A.COLUMN_NA
ME;    v_stats c_stats%rowtype;     cursor c_hwm is SELECT table_name,ROUND((blocks * (select value from v$parameter where name='db_blo
ck_size'))/1024/1024, 2) "HWM",    ROUND ((num_rows * a

000000008B171C40
16352072022617169886

000000008CB048C8
f3352b417589ba0c9a23ac1849d6cc19

0000000088FA2F98
SELECT COUNT(*) FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEXES >= 3 AND SEGSIZE > 10485760

0000000092CCF328
SELECT COUNT(*) FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEXES >= 3 AND SEGSIZE > 10485760

000000008C879648
SELECT COUNT(*) FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEXES >= 3 AND SEGSIZE > 10485760

000000008CAA7010
SELECT COUNT(*) FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEXES >= 3 AND SEGSIZE > 10485760

000000008B0EE118
ba6c710af0b705b05912015ac161a48f

0000000088E8F470
1717472059085521267

000000008B1D84A8
SELECT PRIM_ATTRPOS

0000000088F193C8 $BUILD$
e48039bfb85647c0

0000000088EE19C0
SELECT :B9 TYPE_CON,

0000000088E3A168
UPDATE RLM$RULESETPR

0000000060F9AA20
delete from WRH$_EVENT_HISTOGRAM_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060FEC040
delete from WRH$_EVENT_HISTOGRAM_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088EAE580
INSERT INTO wrh$_sqltext    (sql_id, dbid, sql_text,     command_type, snap_id)  SELECT    sqlid_kewrstx, :dbid, sqlfulltext_kewrstx,
  cmdtype_kewrstx, :lah_snap_id  FROM x$kewrtsqltext

0000000088EF9B18
INSERT INTO wrh$_sqltext    (sql_id, dbid, sql_text,     command_type, snap_id)  SELECT    sqlid_kewrstx, :dbid, sqlfulltext_kewrstx,
  cmdtype_kewrstx, :lah_snap_id  FROM x$kewrtsqltext

0000000060FFDD90
INSERT INTO wrh$_sqltext    (sql_id, dbid, sql_text,     command_type, snap_id)  SELECT    sqlid_kewrstx, :dbid, sqlfulltext_kewrstx,
  cmdtype_kewrstx, :lah_snap_id  FROM x$kewrtsqltext

0000000060EF6740
INSERT INTO wrh$_sqltext    (sql_id, dbid, sql_text,     command_type, snap_id)  SELECT    sqlid_kewrstx, :dbid, sqlfulltext_kewrstx,
  cmdtype_kewrstx, :lah_snap_id  FROM x$kewrtsqltext

0000000088EAEA00
INSERT INTO wrh$_sqltext    (sql_id, dbid, sql_text,     command_type, snap_id)  SELECT    sqlid_kewrstx, :dbid, sqlfulltext_kewrstx,
  cmdtype_kewrstx, :lah_snap_id  FROM x$kewrtsqltext

0000000088F9D3B8 SYS
DBMS_PRVTAQIS

000000008C9253A8
DELETE FROM WRI$_ADV

000000008B3C1720
commit

000000008B2AE058
UPDATE WWV_FLOW_SESS

0000000060ED8B70 SYS
X$JSKSLV

000000008B2F8B28
bc35567961d08d303114542225975cd6

000000008B038EE8
select /*+  no_paral

0000000088EE1060
insert into wrh$_tablespace         (snap_id, dbid, ts#, tsname, contents, segment_space_management,          extent_management)   sele
ct :lah_snap_id, :dbid, ts.ts#, ts.name as tsname,         decode(ts.contents$, 0, (decode(bitand(ts.flags, 16), 16, 'UNDO',
     'PERMANENT')), 1, 'TEMPORARY')            as contents,         decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as segspace_mgmt,
        decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management    from sys.ts$ ts   where ts.online$ != 3     and bitand
(ts.flags, 2048) != 2048     and not exists (select 1 from wrh$_tablespace wts                              where wts.dbid = :dbid
                           and wts.ts#  = ts.ts#)

000000008B327F28
insert into wrh$_tablespace         (snap_id, dbid, ts#, tsname, contents, segment_space_management,          extent_management)   sele
ct :lah_snap_id, :dbid, ts.ts#, ts.name as tsname,         decode(ts.contents$, 0, (decode(bitand(ts.flags, 16), 16, 'UNDO',
     'PERMANENT')), 1, 'TEMPORARY')            as contents,         decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as segspace_mgmt,
        decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management    from sys.ts$ ts   where ts.online$ != 3     and bitand
(ts.flags, 2048) != 2048     and not exists (select 1 from wrh$_tablespace wts                              where wts.dbid = :dbid
                           and wts.ts#  = ts.ts#)

0000000088EE14E0
insert into wrh$_tablespace         (snap_id, dbid, ts#, tsname, contents, segment_space_management,          extent_management)   sele
ct :lah_snap_id, :dbid, ts.ts#, ts.name as tsname,         decode(ts.contents$, 0, (decode(bitand(ts.flags, 16), 16, 'UNDO',
     'PERMANENT')), 1, 'TEMPORARY')            as contents,         decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as segspace_mgmt,
        decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management    from sys.ts$ ts   where ts.online$ != 3     and bitand
(ts.flags, 2048) != 2048     and not exists (select 1 from wrh$_tablespace wts                              where wts.dbid = :dbid
                           and wts.ts#  = ts.ts#)

000000008B0567B0
INSERT INTO SYS.WRI$

0000000088F605D8
cc36b1287db7178e932dbf2f37ac8a85

000000008C9279A8
UPDATE SYS.WRI$_ADV_

0000000060DCE548
b42bad9a1e97077d880e9325dc148d4e

000000008B2D5B30 SYS
SCHEDULER$_NOTIFICATION

000000006530DFA0 $BUILD$
3577bda46a58c791

0000000088DF3CA8
SELECT PRIM_EVNTST F

00000000652B9870
4b4c69c28fc8eb47d4348615834f93c

000000008CA3E0A8
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname = :4

000000008CB23EB0
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname = :4

000000008CA61048
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spare2 from obj$ where owner#=:1 and name=:2 and namespace=
:3 and remoteowner is null and linkname is null and subname = :4

000000008CBB5318
SELECT /* OPT_DYN_SA

0000000088D044F0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CB2F6A8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088CFEBB0
SELECT /*+ first_rows(1) */ '"'||OI.NAME||'"' FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI WHERE U.NAME = :B2 AND OT.OWNER# =
 U.USER# AND OT.NAME = :B1 AND I.BO# = OT.OBJ# AND I.TYPE# = 4 AND I.OBJ# = OI.OBJ#

0000000092CF7148
SELECT /*+ first_rows(1) */ '"'||OI.NAME||'"' FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI WHERE U.NAME = :B2 AND OT.OWNER# =
 U.USER# AND OT.NAME = :B1 AND I.BO# = OT.OBJ# AND I.TYPE# = 4 AND I.OBJ# = OI.OBJ#

0000000060FDEE80
SELECT /*+ first_rows(1) */ '"'||OI.NAME||'"' FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI WHERE U.NAME = :B2 AND OT.OWNER# =
 U.USER# AND OT.NAME = :B1 AND I.BO# = OT.OBJ# AND I.TYPE# = 4 AND I.OBJ# = OI.OBJ#

0000000060F854A0
SELECT /*+ first_rows(1) */ '"'||OI.NAME||'"' FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI WHERE U.NAME = :B2 AND OT.OWNER# =
 U.USER# AND OT.NAME = :B1 AND I.BO# = OT.OBJ# AND I.TYPE# = 4 AND I.OBJ# = OI.OBJ#

000000008B0893A0
SELECT /*+ first_rows(1) */ '"'||OI.NAME||'"' FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.IND$ I, SYS.OBJ$ OI WHERE U.NAME = :B2 AND OT.OWNER# =
 U.USER# AND OT.NAME = :B1 AND I.BO# = OT.OBJ# AND I.TYPE# = 4 AND I.OBJ# = OI.OBJ#

000000008B038B58
select /*+  no_paral

000000008CBB14C8 SYS
GV$STREAMS_CAPTURE

000000008C9D6918
f70a40e6b81497efef8a1969ea710ea5

000000008B2412F8
SELECT COUNT(*) FROM

0000000092C40C58
b1f4d6fc89ec9d217eb24f3c97d0cf6

0000000088ED5E10
UPDATE wrh$_tempfile tfh  SET (snap_id, filename, tsname) =      (SELECT :lah_snap_id, tf.name name, ts.name tsname       FROM v$tempfi
le tf, ts$ ts       WHERE tf.ts# = ts.ts#         AND tfh.file# = tf.file#         AND tfh.creation_change# = tf.creation_change#)  WHE
RE (file#, creation_change#) IN        (SELECT tf.tfnum, to_number(tf.tfcrc_scn) creation_change#           FROM x$kcctf tf           W
HERE tf.tfdup != 0)    AND dbid    = :dbid    AND snap_id < :snap_id

0000000088D13878
UPDATE wrh$_tempfile tfh  SET (snap_id, filename, tsname) =      (SELECT :lah_snap_id, tf.name name, ts.name tsname       FROM v$tempfi
le tf, ts$ ts       WHERE tf.ts# = ts.ts#         AND tfh.file# = tf.file#         AND tfh.creation_change# = tf.creation_change#)  WHE
RE (file#, creation_change#) IN        (SELECT tf.tfnum, to_number(tf.tfcrc_scn) creation_change#           FROM x$kcctf tf           W
HERE tf.tfdup != 0)    AND dbid    = :dbid    AND snap_id < :snap_id

0000000088ED6290
UPDATE wrh$_tempfile tfh  SET (snap_id, filename, tsname) =      (SELECT :lah_snap_id, tf.name name, ts.name tsname       FROM v$tempfi
le tf, ts$ ts       WHERE tf.ts# = ts.ts#         AND tfh.file# = tf.file#         AND tfh.creation_change# = tf.creation_change#)  WHE
RE (file#, creation_change#) IN        (SELECT tf.tfnum, to_number(tf.tfcrc_scn) creation_change#           FROM x$kcctf tf           W
HERE tf.tfdup != 0)    AND dbid    = :dbid    AND snap_id < :snap_id

0000000065355D20
1cdeca768ea9a0bef9a7f555e71e50e8

0000000088CF4838 SYS
DBMS_SQLDIAG_INTERNAL

000000008CB117F8 $BUILD$
b41862a9a3d2c5eb

0000000088E620A8
SELECT DECODE(COUNT(

000000008CA5F1B8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."PROPERTY",576)=0 AND BITAND("T"."TRIGFLAG",67108864)<>67108864 AND BITAND("T".
"FLAGS",536870912)<>536870912 AND BITAND("T"."FLAGS",2097152)<>2097152 AND BITAND("T"."PROPERTY",4194304)<>4194304 AND BITAND("T"."PROP
ERTY",8388608)<>8388608 AND BITAND("T"."PROPERTY",4294967296)<>4294967296 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203
269 , 1) SEED (1) "T") SAMPLESUB

000000008B234530
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."PROPERTY",576)=0 AND BITAND("T"."TRIGFLAG",67108864)<>67108864 AND BITAND("T".
"FLAGS",536870912)<>536870912 AND BITAND("T"."FLAGS",2097152)<>2097152 AND BITAND("T"."PROPERTY",4194304)<>4194304 AND BITAND("T"."PROP
ERTY",8388608)<>8388608 AND BITAND("T"."PROPERTY",4294967296)<>4294967296 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203
269 , 1) SEED (1) "T") SAMPLESUB

0000000088E9DB90
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."PROPERTY",576)=0 AND BITAND("T"."TRIGFLAG",67108864)<>67108864 AND BITAND("T".
"FLAGS",536870912)<>536870912 AND BITAND("T"."FLAGS",2097152)<>2097152 AND BITAND("T"."PROPERTY",4194304)<>4194304 AND BITAND("T"."PROP
ERTY",8388608)<>8388608 AND BITAND("T"."PROPERTY",4294967296)<>4294967296 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203
269 , 1) SEED (1) "T") SAMPLESUB

0000000060C8E380
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O")  */ 4294967295 AS C1, COUNT(*)
 AS C2, COUNT(CASE WHEN ("O"."LINKNAME" IS NULL) AND ("O"."NAME"=:B1) AND ("O"."TYPE#"<>10) AND ("O"."NAME"<>'_NEXT_OBJECT') AND ("O"."
NAME"<>'_default_auditing_options_') THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O" WHERE ("O"."NAM
E"=:B2) AND ("O"."LINKNAME" IS NULL)) innerQuery

000000008B18D540
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O")  */ 4294967295 AS C1, COUNT(*)
 AS C2, COUNT(CASE WHEN ("O"."LINKNAME" IS NULL) AND ("O"."NAME"=:B1) AND ("O"."TYPE#"<>10) AND ("O"."NAME"<>'_NEXT_OBJECT') AND ("O"."
NAME"<>'_default_auditing_options_') THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O" WHERE ("O"."NAM
E"=:B2) AND ("O"."LINKNAME" IS NULL)) innerQuery

000000008B383540
SELECT NVL(MAX(FIRST

000000008C9229E8
DELETE FROM SYS.WRI$

000000008CBD5410
90240e97355a0bf43ce680c269c3dfe

000000008C8700A8 SYS
DBMS_ANYTYPE_LIB

000000008B235560
SELECT DISPLAY_AS FR

000000008B34A730
f62ff30b38867e865452f06e98caec8

0000000088F4B3B8
27daf098ec4ed15d3ef66fd15c5d783d

000000008CA250B8 SYS
X$IR_WORKING_REPAIR_SET

0000000088EA3FE0
select  FILE# , CREATION_CHANGE# , CREATION_TIME , TS# , RFILE# , STATUS , ENABLED , CHECKPOINT_CHANGE# , CHECKPOINT_TIME, UNRECOVERABL
E_CHANGE#, UNRECOVERABLE_TIME, LAST_CHANGE# , LAST_TIME , OFFLINE_CHANGE# , ONLINE_CHANGE# , ONLINE_TIME , BYTES , BLOCKS , CREATE_BYTE
S , BLOCK_SIZE , NAME, PLUGGED_IN, BLOCK1_OFFSET , AUX_NAME , FIRST_NONLOGGED_SCN, FIRST_NONLOGGED_TIME, FOREIGN_DBID, FOREIGN_CREATION
_CHANGE#, FOREIGN_CREATION_TIME, PLUGGED_READONLY, PLUGIN_CHANGE#, PLUGIN_RESETLOGS_CHANGE#, PLUGIN_RESETLOGS_TIME from GV$DATAFILE whe
re inst_id = USERENV('Instance')

000000008CAD83D8
select  FILE# , CREATION_CHANGE# , CREATION_TIME , TS# , RFILE# , STATUS , ENABLED , CHECKPOINT_CHANGE# , CHECKPOINT_TIME, UNRECOVERABL
E_CHANGE#, UNRECOVERABLE_TIME, LAST_CHANGE# , LAST_TIME , OFFLINE_CHANGE# , ONLINE_CHANGE# , ONLINE_TIME , BYTES , BLOCKS , CREATE_BYTE
S , BLOCK_SIZE , NAME, PLUGGED_IN, BLOCK1_OFFSET , AUX_NAME , FIRST_NONLOGGED_SCN, FIRST_NONLOGGED_TIME, FOREIGN_DBID, FOREIGN_CREATION
_CHANGE#, FOREIGN_CREATION_TIME, PLUGGED_READONLY, PLUGIN_CHANGE#, PLUGIN_RESETLOGS_CHANGE#, PLUGIN_RESETLOGS_TIME from GV$DATAFILE whe
re inst_id = USERENV('Instance')

000000008CB28368 SYS
V$MANAGED_STANDBY

0000000060EB23F0
SELECT EXTRACTVALUE(

000000008CB281F8
select a.default_cpu_cost, a.default_io_cost             from association$ a                                      where a.obj# = :1
                                      and a.property = :2

0000000088E9F220
select a.default_cpu_cost, a.default_io_cost             from association$ a                                      where a.obj# = :1
                                      and a.property = :2

000000008CB28678
select a.default_cpu_cost, a.default_io_cost             from association$ a                                      where a.obj# = :1
                                      and a.property = :2

000000008C95D290
a5874278df1163c7541962d36c66ae8f

0000000088CB4D38 SYS
SQL_TXT

000000008CA93820 APEX_030200
WWV_FLOW

0000000060E71898
delete from WRH$_LOG tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not exis
ts (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start_sna
p_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B368558
delete from WRH$_LOG tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not exis
ts (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start_sna
p_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C882D8
SELECT ATTR1 SNAME,

000000008C9E0320
d751142c3b7971bd655864a445f58a87

000000008B06FDE0
SELECT /*+ ordered

000000008B081720
SELECT O2.NAME INDEX

000000008B158848 SYS
V$BACKUP_DATAFILE

000000008B3C3DE0
SELECT NAME FROM DBA

000000008B27B7E8
select  FILE# , NAME

0000000088F09C28 SYS
WRH$_SEG_STAT_OBJ

000000008B25A9E8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("LOWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "LOWNER" is not null  group by nlssort("LOWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

000000008B37DC98
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("LOWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "LOWNER" is not null  group by nlssort("LOWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

000000008CABEF20
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("LOWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "LOWNER" is not null  group by nlssort("LOWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

000000008C835618
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("LOWNER") val,count(*) cnt  f
rom "SYS"."JOB$" t  where "LOWNER" is not null  group by nlssort("LOWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binar
y')

000000008B340968 $BUILD$
bc01bdc422895690

000000008C9FAB70
9a7513a7a314f6753af577b5e312decd

000000008B057620
DELETE FROM SYS.WRI$

0000000092C8EA08
SELECT /*+ ordered*/

000000008C9545B8
eb00913f4b15148a956dde1bb62e585d

0000000060E3F280
e1906824d359d32aa3057a8c3f622452

000000008C895880
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 ROUND(100 * T.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SE
LECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI:SS') AS L
AST1 FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.T
ABLE_NAME AND A.TABLE_NAME = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) OR
DER BY A.OWNER,A.COLUMN_NAME

000000008CB8CDA8
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 ROUND(100 * T.DENSITY,2) AS DENSITY, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SE
LECTIVITY, A.HISTOGRAM, A.NUM_BUCKETS, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI:SS') AS L
AST1 FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.T
ABLE_NAME AND A.TABLE_NAME = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) OR
DER BY A.OWNER,A.COLUMN_NAME

000000008B36A3D0
SELECT CONTROLFILE_C

000000008B1C8378
select u1.user#, u2.user#, u3.user#, failures, flag, interval#,    what, nlsenv, env, field1, next_date  from sys.job$ j, sys.user$ u1,
 sys.user$ u2, sys.user$ u3  where job=:1 and (next_date <= sysdate or :2 != 0)  and lowner = u1.name and powner = u2.name and cowner =
 u3.name

0000000088CFDFA0
select u1.user#, u2.user#, u3.user#, failures, flag, interval#,    what, nlsenv, env, field1, next_date  from sys.job$ j, sys.user$ u1,
 sys.user$ u2, sys.user$ u3  where job=:1 and (next_date <= sysdate or :2 != 0)  and lowner = u1.name and powner = u2.name and cowner =
 u3.name

0000000088D4CFB0
select u1.user#, u2.user#, u3.user#, failures, flag, interval#,    what, nlsenv, env, field1, next_date  from sys.job$ j, sys.user$ u1,
 sys.user$ u2, sys.user$ u3  where job=:1 and (next_date <= sysdate or :2 != 0)  and lowner = u1.name and powner = u2.name and cowner =
 u3.name

0000000088DF5118
select u1.user#, u2.user#, u3.user#, failures, flag, interval#,    what, nlsenv, env, field1, next_date  from sys.job$ j, sys.user$ u1,
 sys.user$ u2, sys.user$ u3  where job=:1 and (next_date <= sysdate or :2 != 0)  and lowner = u1.name and powner = u2.name and cowner =
 u3.name

0000000088D44F10
select u1.user#, u2.user#, u3.user#, failures, flag, interval#,    what, nlsenv, env, field1, next_date  from sys.job$ j, sys.user$ u1,
 sys.user$ u2, sys.user$ u3  where job=:1 and (next_date <= sysdate or :2 != 0)  and lowner = u1.name and powner = u2.name and cowner =
 u3.name

0000000088FFC0B0
select u1.user#, u2.user#, u3.user#, failures, flag, interval#,    what, nlsenv, env, field1, next_date  from sys.job$ j, sys.user$ u1,
 sys.user$ u2, sys.user$ u3  where job=:1 and (next_date <= sysdate or :2 != 0)  and lowner = u1.name and powner = u2.name and cowner =
 u3.name

0000000060F56420
SELECT REPLACE(REPLA

0000000088CF9AF8
delete from WRH$_LATCH_MISSES_SUMMARY_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :d
bid)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sn
ap_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088FF5D30
delete from WRH$_LATCH_MISSES_SUMMARY_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :d
bid)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sn
ap_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B34E910
SELECT TO_CHAR(((:B3

000000008CA10BE0 $BUILD$
3fe2b6963518eb02

0000000092CFF4C8 SYS
ALL_SCHEDULER_CHAIN_STEPS

0000000060E241B0
d25ba01f53e60356ab23d6efbcb20294

0000000088E2C908
68f26f30df91043b654650d4a4745317

0000000088FFF000
a7d0a75ff4baf3a2197c26f430948e02

000000008B120108
558efbca1489645648b8cdc4a0f67bf

000000008CB3C7B8
select /*+ rule */ bucket, endpoint, col#, epvalue from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket

000000008B339D40
select /*+ rule */ bucket, endpoint, col#, epvalue from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket

0000000060FFF640
select /*+ rule */ bucket, endpoint, col#, epvalue from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket

0000000088CB8D78
select /*+ rule */ bucket, endpoint, col#, epvalue from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket

000000008B1281D8
select /*+ rule */ bucket, endpoint, col#, epvalue from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket

0000000060EF6F50
select /*+ rule */ bucket, endpoint, col#, epvalue from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket

000000008CB3CC38
select /*+ rule */ bucket, endpoint, col#, epvalue from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket

0000000060DA8B60
update sys.scheduler$_job set  last_enabled_time = :1, retry_count = :2, run_count = :3, failure_count = :4, job_status = :5 where  obj
# = :6

000000006531C190
update sys.scheduler$_job set  last_enabled_time = :1, retry_count = :2, run_count = :3, failure_count = :4, job_status = :5 where  obj
# = :6

000000008CBF3140
5efecb81e2ba4b62cbf3333185e64c9c

0000000092CA83A8 $BUILD$
8b95e9782d21611f

000000008CBBDAB8
select /*+  no_paral

000000008B082340
SELECT TO_NUMBER(VAL

0000000088EA3B70 SYS
IDGEN1$

000000008CBBC348 SYS
V$JAVA_POOL_ADVICE

0000000088D719E0
SELECT COUNT(*) FROM

0000000088DB1C58
c25f40e6c301b03a299d5d03e60d836

000000008B396548
27daf098ec4ed15d3ef66fd15c5d783d

000000008C93EE10 SYS
PRVT_ADVISOR

0000000060D59F00
3c9eaf9cae77874a3e12d8065759f6e6

00000000653CBBE0
f2d6cb38a80a635c45c79b2e2a949509

0000000088CECCA8 SYS
DBA_HIST_SQLSTAT

0000000088F836F8
select table_name from dict where table_name like '%DBA%TAB%'

0000000060CBA378

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
select table_name from dict where table_name like '%DBA%TAB%'

000000008B3D8078 APEX_030200
WWV_FLOW_META_DATA

000000008CA2B490 $BUILD$
a9dc3683c4ac5858

0000000088F18708
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(A.SAMPLE_SIZE,null,0,A.SAMPLE_SIZE) as SAMPLE_SIZE,  A.GLOBAL_STATS,  A.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060E1A670
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(A.SAMPLE_SIZE,null,0,A.SAMPLE_SIZE) as SAMPLE_SIZE,  A.GLOBAL_STATS,  A.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060C35AA0
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008B294CA0
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000092D0AE08 $BUILD$
 b658e214310623f

000000008C94A5B0 SYS
WRH$_LATCH

000000008C97A668 SYS
SQLSET_ROW

0000000092D10968
select    sql_id,

000000008B3847A0
select    sql_id,

000000008B1EF278 PUBLIC
V$PARAMETER

0000000092D1AF88 SYS
X$KEWRATTRNEW

000000008CA2B290
4eb8d7a05060aae1a1f8886f69c18abd

00000000652CF100
20943de3d3504542bdee86fa235bc2cf

0000000060F71250 $BUILD$
bf50b395f4984d62

000000008B176328
e1ec3cc5de156e38938775903353aa13

0000000060F9A8B0
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008CAC6308
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000060DFF250
70f310d923e756409cbe247a3c4bf3c8

0000000088C4F598
/* SQL Analyze(1) */

0000000088F42138 SYS
GV$BUFFER_POOL

0000000088FE5F80
select substrb(dump(

000000008CAC16C8
ddd39f8e830711e5aa99b8941e28acc5

0000000060DF35C8
4a5811abe9f13229437f0ac762e44169

0000000060F7ACB0
select /*+  no_paral

0000000088E4C0C8
f896b5b8dca1ace45a0323d778301d6d

000000008C932C18 SYS
WRI$_ADV_DIRECTIVE_INSTANCES

000000008B079CC0 SYS
WRI$_OPTSTAT_TAB_HISTORY

0000000088E2F7B8
cfb7da9575a0a8aaf5d18e42583d05e

000000008C8B4770
405077231d510dcbaa81e4bc5897c890

0000000088CBC8E0
select substrb(dump(

000000008B0B7CA0
9620cfe1e7966914715f75e388f2943b

000000008C913A38
SELECT ID FROM WRI$_

0000000060D42EB0 SYS
DBA_TAB_COLS

000000008B3611C0
SELECT ON_NEW_INSTAN

0000000092D7EBF0
9af563a22d8dfb1f23ea03bf22fa440

000000008C90AE20 APEX_030200
WWV_FLOW_COMPANY_SCHEMAS

0000000060D65608
4266ad41f92a147ae48039bfb85647c0

000000008B2EE8A0 APEX_030200
WWV_FLOW_GLOBAL

000000008CADCA88
SELECT USERENV('LANG

000000008C918E88
SELECT INDX FROM X$K

000000008B1C53C0
14146c4543417ca6928ac3c4fc8845d0

000000008CBD48A0
e02c21009fbc50134f91c772c4e3e2a5

000000008C9C9DE8
92873f91e95e427b2ccb8117b23236d

0000000088F74688 SYS
DBA_FREE_SPACE

0000000060FBD470
1243f25b4f5420f0d7fe72da626bba0f

000000008C9524C0
acc84660c4ff0cdebd5318b24a0c520e

000000008CA6D3F0
select procedure#,entrypoint# from procedureplsql$ where obj#=:1 order by procedure#

000000008C8B9558
select procedure#,entrypoint# from procedureplsql$ where obj#=:1 order by procedure#

000000008B0DFB98
select procedure#,entrypoint# from procedureplsql$ where obj#=:1 order by procedure#

000000008CBA01F8
select procedure#,entrypoint# from procedureplsql$ where obj#=:1 order by procedure#

000000008CA6D870
select procedure#,entrypoint# from procedureplsql$ where obj#=:1 order by procedure#

0000000060FFF7B0
SELECT REGION_ID FRO

0000000060E60B30
f1c997855b37e2d8ac0f5633deb1bfa6

0000000088CA2D18
SELECT COUNT(O.ID) F

0000000060F44D60
UPDATE SYS.SCHEDULER

0000000060E060B0
SELECT COUNT(*) FROM

0000000060FC9760 SYS
V$MEMORY_DYNAMIC_COMPONENTS

0000000088C9A888
SELECT XMLELEMENT( "

0000000060ED75A0
7c140974b656fe9a397b9479461733ba

0000000092EC01E0
select TIME_WAITED_MICRO from V$SYSTEM_EVENT  where event = 'Shared IO Pool Memory'

0000000092EC0660
select TIME_WAITED_MICRO from V$SYSTEM_EVENT  where event = 'Shared IO Pool Memory'

0000000088F3D008
select /*+  no_paral

000000008B1E7938
a4fbae80d7b97ce498c90cb6aa360727

0000000060CB9648
3820b7cef6d36efda674dfc8dc9036b2

000000008B07E0F0
SELECT STATSTYPE#, P

0000000092EBFBE0 SYS
V$SYSTEM_EVENT

0000000060FFD2E0
87e6c9f2b4eea3242beb2b3b7acd1da

000000008C89B698
3ec61a3af78a7e7b7ede1f9a0b8ea3

00000000652C0330
eaeb3e58b974fe0098f9ef7ed033980e

0000000088E5F278
DELETE FROM RLM$EQUA

000000008C92FAD8 SYS
WRI$_ADV_RATIONALE

000000008B0775F0
SELECT COLUMN_NAME F

000000008CA68ED0
select SYS_CONTEXT('USERENV','CURRENT_USER') from dual

0000000088D29A80
select SYS_CONTEXT('USERENV','CURRENT_USER') from dual

000000008CBBDE98
select SYS_CONTEXT('USERENV','CURRENT_USER') from dual

000000008CA69350
select SYS_CONTEXT('USERENV','CURRENT_USER') from dual

000000008B31E378
select /*+  no_paral

000000008CB92E48
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),:"SYS_B_0"), NVL(SUM(C2),:"SYS_B_1") FROM (SELECT /*+ NO_PARALLEL("HASH_TABLE") FUL
L("HASH_TABLE") NO_PARALLEL_INDEX("HASH_TABLE") */ :"SYS_B_2" AS C1, :"SYS_B_3" AS C2 FROM "SCOTT"."HASH_TABLE" SAMPLE BLOCK (:"SYS_B_4
" , :"SYS_B_5") SEED (:"SYS_B_6") "HASH_TABLE") SAMPLESUB

0000000060E4E7A0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),:"SYS_B_0"), NVL(SUM(C2),:"SYS_B_1") FROM (SELECT /*+ NO_PARALLEL("HASH_TABLE") FUL
L("HASH_TABLE") NO_PARALLEL_INDEX("HASH_TABLE") */ :"SYS_B_2" AS C1, :"SYS_B_3" AS C2 FROM "SCOTT"."HASH_TABLE" SAMPLE BLOCK (:"SYS_B_4
" , :"SYS_B_5") SEED (:"SYS_B_6") "HASH_TABLE") SAMPLESUB

0000000060CC2918
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("SNAP_ID")),to_char(substrb(dump(min("SNAP_ID"),16,0,32),1,120)),to_char(
substrb(dump(max("SNAP_ID"),16,0,32),1,120)),to_char(count("DBID")),to_char(substrb(dump(min("DBID"),16,0,32),1,120)),to_char(substrb(d
ump(max("DBID"),16,0,32),1,120)),to_char(count("TS#")),to_char(substrb(dump(min("TS#"),16,0,32),1,120)),to_char(substrb(dump(max("TS#")
,16,0,32),1,120)),to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substrb(dump(max("OBJ#"),16,0,32),1,
120)),to_char(count("DATAOBJ#")),to_char(substrb(dump(min("DATAOBJ#"),16,0,32),1,120)),to_char(substrb(dump(max("DATAOBJ#"),16,0,32),1,
120)),to_char(count("OWNER")),to_char(substrb(dump(min("OWNER"),16,0,32),1,120)),to_char(substrb(dump(max("OWNER"),16,0,32),1,120)),to_
char(count("OBJECT_NAME")),to_char(substrb(dump(min("OB

0000000060E5E990
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("SNAP_ID")),to_char(substrb(dump(min("SNAP_ID"),16,0,32),1,120)),to_char(
substrb(dump(max("SNAP_ID"),16,0,32),1,120)),to_char(count("DBID")),to_char(substrb(dump(min("DBID"),16,0,32),1,120)),to_char(substrb(d
ump(max("DBID"),16,0,32),1,120)),to_char(count("TS#")),to_char(substrb(dump(min("TS#"),16,0,32),1,120)),to_char(substrb(dump(max("TS#")
,16,0,32),1,120)),to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substrb(dump(max("OBJ#"),16,0,32),1,
120)),to_char(count("DATAOBJ#")),to_char(substrb(dump(min("DATAOBJ#"),16,0,32),1,120)),to_char(substrb(dump(max("DATAOBJ#"),16,0,32),1,
120)),to_char(count("OWNER")),to_char(substrb(dump(min("OWNER"),16,0,32),1,120)),to_char(substrb(dump(max("OWNER"),16,0,32),1,120)),to_
char(count("OBJECT_NAME")),to_char(substrb(dump(min("OB

000000008B064860
SELECT KSPPSTVL FROM

000000008B3BE1E8
f0cfa2e63e1fda46fbf3cdf9535d1a6c

000000008B2AABC8
db6eb94c3b88c0b2d8dbb9b42b5153

0000000088E2C568 SYS
WRH$_TABLESPACE_STAT

000000008CA02508
delete ntab$ where obj#=:1

000000008B226D20
delete ntab$ where obj#=:1

0000000088E3CDB0
96b727208b211e8ad664adcce4033f4

000000008C922E88
DELETE FROM SYS.WRI$

000000008CA63AE8 $BUILD$
61aed049b0b9a18d

0000000092D28038 $BUILD$
913e007ea188e628

0000000060D624B0
62edd6cedf951470ab5a075620b35a11

0000000060CB3FC0 $BUILD$
e9e79bf874355644

000000008B09A6B0 SYS
ODCIINDEXINFO

000000008CA86438
SELECT OPCODE_ID, EQ

0000000088CD0448
SELECT PREV_SQL_ID F

0000000092D08DF8 EXFSYS
RLM$PRIMEVTTYPEMAP

0000000065332A60
698815de298e8644868d910de9254539

0000000092D19E98 SYS
X$KEACMDN

00000000653426C0
SELECT COUNT(*) FROM

000000008B3942D0
f008bcfc973ba8f11ba988f9a820b824

000000008CB32C50
select substrb(dump(

000000008C8719D8
select substrb(dump(

000000008CADE690 SYS
STANDARD

000000008B0FB418
f8bce8f03ec00cfae07222305734628d

0000000088F71220 SYS
DBMS_RANDOM

0000000088CEE408 SYS
DBA_PROCEDURES

0000000092D6AC38
bd39444c4bd733eee956bf1047827df

000000008C866298 SYS
LOGSTDBY_INTERNAL

0000000088E30528
select t1.inst_id,t1.ksllasnam, t2.ksllwnam, t1.kslnowtf, t1.kslsleep, t1.kslwscwsl, t1.kslwsclthg, t2.ksllwnam         from  x$ksllw t
2, x$kslwsc t1         where t2.indx = t1.indx

000000008B1908F0
select t1.inst_id,t1.ksllasnam, t2.ksllwnam, t1.kslnowtf, t1.kslsleep, t1.kslwscwsl, t1.kslwsclthg, t2.ksllwnam         from  x$ksllw t
2, x$kslwsc t1         where t2.indx = t1.indx

0000000060F13D20
d320bb2456015be9ee68e74b69af48f7

000000008B3A92E8 SYS
DBA_AUTOTASK_CLIENT

0000000088FC9AF8
70e289804c93846cc3836da43a5e231c

000000008C89C3B8
f8bce8f03ec00cfae07222305734628d

000000008C9DDBF0 SYS
V$PARAMETER

0000000088DE0458
1a9caa64fc3f95ca9ed5ba2456c64cd1

000000008C965368
SELECT COUNT(*) FROM

000000008CBB87F8
select sysdate + 8/24 from dual

0000000060EDCFC8
select sysdate + 8/24 from dual

0000000060EB8F90
d6c37e1e48bcfcd6bd328d8d958f15

0000000060C63740
86dedeb385c6c279d9a81beaf90188b5

0000000088DA3768 SYS
WRH$_IOSTAT_FUNCTION

0000000092D83A38
delete from jirefreshsql$ where iobj# in ( select iobj# from jirefreshsql$ where tobj# = :1)

0000000088FFB5F0
delete from jirefreshsql$ where iobj# in ( select iobj# from jirefreshsql$ where tobj# = :1)

0000000088E98420
SELECT PRIM_EVNTST,

000000008CBD3EA0
WMSYS

0000000060EDE498
39486256adf0e69f982bb12e49e9f92

000000008B3B7238 SYS
ALL_OBJECTS_AE

000000008B1D7898 SYS
WRH$_RSRC_PLAN

000000008B3BFF50
36c925b268b1b95e70c8a0113f43b12a

000000008CA34260
select recurrence_expr, max_count, comments, flags, end_date, reference_date, queue_owner, queue_name, queue_agent, fw_name  from sys.s
cheduler$_schedule  where obj# = :1

000000008CA581B8
select recurrence_expr, max_count, comments, flags, end_date, reference_date, queue_owner, queue_name, queue_agent, fw_name  from sys.s
cheduler$_schedule  where obj# = :1

0000000088DD1008
SELECT REGEXP_SUBSTR

000000008B3AC2A8
SELECT VALUE FROM V$

000000008C8BDA78
DELETE FROM SYS.AQ$_

0000000060EE58A8
1221de747902965363a7a4b3df7f345b

000000008C8B7558
insert into col$(obj#,name,intcol#,segcol#,type#,length,precision#,scale,null$,offset,fixedstorage,segcollength,deflength,default$,col#
,property,charsetid,charsetform,spare1,spare2,spare3)values(:1,:2,:3,:4,:5,:6,decode(:5,182/*DTYIYM*/,:7,183/*DTYIDS*/,:7,decode(:7,0,n
ull,:7)),decode(:5,2,decode(:8,-127/*MAXSB1MINAL*/,null,:8),178,:8,179,:8,180,:8,181,:8,182,:8,183,:8,231,:8,null),:9,0,:10,:11,decode(
:12,0,null,:12),:13,:14,:15,:16,:17,:18,:19,:20)

000000008B258D28
insert into col$(obj#,name,intcol#,segcol#,type#,length,precision#,scale,null$,offset,fixedstorage,segcollength,deflength,default$,col#
,property,charsetid,charsetform,spare1,spare2,spare3)values(:1,:2,:3,:4,:5,:6,decode(:5,182/*DTYIYM*/,:7,183/*DTYIDS*/,:7,decode(:7,0,n
ull,:7)),decode(:5,2,decode(:8,-127/*MAXSB1MINAL*/,null,:8),178,:8,179,:8,180,:8,181,:8,182,:8,183,:8,231,:8,null),:9,0,:10,:11,decode(
:12,0,null,:12),:13,:14,:15,:16,:17,:18,:19,:20)

0000000088D177F0
insert into col$(obj#,name,intcol#,segcol#,type#,length,precision#,scale,null$,offset,fixedstorage,segcollength,deflength,default$,col#
,property,charsetid,charsetform,spare1,spare2,spare3)values(:1,:2,:3,:4,:5,:6,decode(:5,182/*DTYIYM*/,:7,183/*DTYIDS*/,:7,decode(:7,0,n
ull,:7)),decode(:5,2,decode(:8,-127/*MAXSB1MINAL*/,null,:8),178,:8,179,:8,180,:8,181,:8,182,:8,183,:8,231,:8,null),:9,0,:10,:11,decode(
:12,0,null,:12),:13,:14,:15,:16,:17,:18,:19,:20)

000000008C882E20
delete from ncomp_dll$ where obj#=:1 returning dllname into :2

000000008C8832A0
delete from ncomp_dll$ where obj#=:1 returning dllname into :2

0000000060DFFEE0
SELECT COUNT(*) FROM

0000000088F3B378
86ba3fadd217c5e9d46b87a13ac8dfae

000000008CB86EC8
SELECT (((((( (TO_NU

0000000088C94858
SELECT XMLELEMENT( "

0000000088F719D8 SYS
GV$RMAN_CONFIGURATION

000000008B1E3068
84b4b47f2679320e633d7537eef05e1b

0000000088F77DB8
select substrb(dump(

0000000060CC2388
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SNAP_ID" val,count(*) cnt  from
"SYS"."WRH$_SEG_STAT_OBJ" t  where "SNAP_ID" is not null  group by "SNAP_ID") order by val

0000000060E5E610
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SNAP_ID" val,count(*) cnt  from
"SYS"."WRH$_SEG_STAT_OBJ" t  where "SNAP_ID" is not null  group by "SNAP_ID") order by val

0000000060EA0BC0
select substrb(dump(

0000000088CA4A68 SYS
WRI$_SQLSET_ID_SEQ

0000000092C3BC48 SYS
X$KZSPR

0000000060FE6B00
SELECT TO_TIMESTAMP(

000000008C908868
5e17a408e6e51a739e9bd29e177b1a52

000000008B04BB40
DELETE FROM SYS.COL_

0000000092D367F8
c0a3ca337f6d60108117ee429b80fbc4

0000000060CC1C98
e45909ba8a185710be63e403470622c7

0000000088F76A08
/* SQL Analyze(1) */

000000008B07ABC0 SYS
ORA_TQ_BASE$

0000000060E86490
SELECT :B21 TYPE_CON

0000000088CED308 SYS
PRVT_REPORT_TAGS

0000000060E2C290 SYS
DBA_HIST_OPTIMIZER_ENV

0000000060DCAC88
4d88c0e69394b55f58ac0289da5833db

0000000088DF7EC0
e6a39cf13f032825764dd4c68696fb50

000000008B2BFC78
d08c94f041dea09a1efe9df47326c

0000000088E32548
dbf172c8eb7745b53fcf81e76fb7325d

000000008C9EF598
5b9c7ceb7783e18399d1893833d368b

0000000060F784B0
a9700ada9857efc07105a74a47b8eae9

0000000092C6AB38
select grantee#,privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 group by grantee#,privilege#,nvl(col#,0) o
rder by grantee#

0000000088D672D8
select grantee#,privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 group by grantee#,privilege#,nvl(col#,0) o
rder by grantee#

0000000088CB8A88
select grantee#,privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 group by grantee#,privilege#,nvl(col#,0) o
rder by grantee#

000000008B332CF0
select grantee#,privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 group by grantee#,privilege#,nvl(col#,0) o
rder by grantee#

0000000092C496A0
select grantee#,privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 group by grantee#,privilege#,nvl(col#,0) o
rder by grantee#

0000000092C6AFB8
select grantee#,privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 group by grantee#,privilege#,nvl(col#,0) o
rder by grantee#

000000008CA043E0 SYS
DBMS_SMB_INTERNAL

0000000088D5A038
1de34d29182c04c6505c9a5a7fd90d

0000000060F36A00
1d4a51a2c89ab6b07a3c64bebc5573b6

000000008B313B50
76129d8af53693142a3193c13b01ca7c

00000000653256F0 $BUILD$
1d9c27a6ef07ae89

000000008CAEC940
550c95f3d0cfa829e60ea8382d3a2ca

0000000060D8AF90
fc94b7d8a5a4b10239654cda6e532ca1

000000008B3AE318
SELECT PRIM_ATTR, EV

000000008B04BE50
DELETE FROM SYS.COL_

0000000088C752D0
bf442d5310e58e894a1058b891b3a0

0000000088C683E0
ad8cdeb39820a7e7bd4f59e17f99f131

0000000088C93BD8
SELECT DECODE(PARAME

0000000088D8E838 SYS
WRH$_SQLSTAT_PK

0000000092CD09D8
select /*+  no_paral

000000008C99F360
delete from WRH$_PGA_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092D507C8
delete from WRH$_PGA_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B1F2370
SELECT SECURITY_GROU

000000008CBD2C20
select max(FA#) from SYS_FBA_FA

000000008B315100
select max(FA#) from SYS_FBA_FA

000000008CBD30A0
select max(FA#) from SYS_FBA_FA

0000000092C75078
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D35148
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088EA4748
3ec61a3af78a7e7b7ede1f9a0b8ea3

000000008CBE1580 SYS
INDPART$

0000000092CA85C8
INSERT INTO WRI$_ADV_ADDM_TASKS (TASK_ID, DBID, DBNAME, DBVERSION, ANALYSIS_VERSION, BEGIN_SNAP_ID, BEGIN_TIME, END_SNAP_ID, END_TIME,
REQUESTED_ANALYSIS, ACTUAL_ANALYSIS, DATABASE_TIME, ACTIVE_SESSIONS, PERC_FLUSH_TIME, PERC_MW_TIME, METER_LEVEL) VALUES (:B10 , :B9 , :
B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 , NULL, NULL, NULL, NULL, NULL, NULL)

0000000088FCF7C8
INSERT INTO WRI$_ADV_ADDM_TASKS (TASK_ID, DBID, DBNAME, DBVERSION, ANALYSIS_VERSION, BEGIN_SNAP_ID, BEGIN_TIME, END_SNAP_ID, END_TIME,
REQUESTED_ANALYSIS, ACTUAL_ANALYSIS, DATABASE_TIME, ACTIVE_SESSIONS, PERC_FLUSH_TIME, PERC_MW_TIME, METER_LEVEL) VALUES (:B10 , :B9 , :
B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 , NULL, NULL, NULL, NULL, NULL, NULL)

000000008B182908
INSERT INTO WRI$_ADV_ADDM_TASKS (TASK_ID, DBID, DBNAME, DBVERSION, ANALYSIS_VERSION, BEGIN_SNAP_ID, BEGIN_TIME, END_SNAP_ID, END_TIME,
REQUESTED_ANALYSIS, ACTUAL_ANALYSIS, DATABASE_TIME, ACTIVE_SESSIONS, PERC_FLUSH_TIME, PERC_MW_TIME, METER_LEVEL) VALUES (:B10 , :B9 , :
B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 , NULL, NULL, NULL, NULL, NULL, NULL)

000000008C95CB10
INSERT INTO WRI$_ADV_ADDM_TASKS (TASK_ID, DBID, DBNAME, DBVERSION, ANALYSIS_VERSION, BEGIN_SNAP_ID, BEGIN_TIME, END_SNAP_ID, END_TIME,
REQUESTED_ANALYSIS, ACTUAL_ANALYSIS, DATABASE_TIME, ACTIVE_SESSIONS, PERC_FLUSH_TIME, PERC_MW_TIME, METER_LEVEL) VALUES (:B10 , :B9 , :
B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 , NULL, NULL, NULL, NULL, NULL, NULL)

0000000092D7CC28
INSERT INTO WRI$_ADV_ADDM_TASKS (TASK_ID, DBID, DBNAME, DBVERSION, ANALYSIS_VERSION, BEGIN_SNAP_ID, BEGIN_TIME, END_SNAP_ID, END_TIME,
REQUESTED_ANALYSIS, ACTUAL_ANALYSIS, DATABASE_TIME, ACTIVE_SESSIONS, PERC_FLUSH_TIME, PERC_MW_TIME, METER_LEVEL) VALUES (:B10 , :B9 , :
B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 , NULL, NULL, NULL, NULL, NULL, NULL)

000000008B145328
INSERT INTO WRI$_ADV_ADDM_TASKS (TASK_ID, DBID, DBNAME, DBVERSION, ANALYSIS_VERSION, BEGIN_SNAP_ID, BEGIN_TIME, END_SNAP_ID, END_TIME,
REQUESTED_ANALYSIS, ACTUAL_ANALYSIS, DATABASE_TIME, ACTIVE_SESSIONS, PERC_FLUSH_TIME, PERC_MW_TIME, METER_LEVEL) VALUES (:B10 , :B9 , :
B8 , :B7 , :B6 , :B5 , :B4 , :B3 , :B2 , :B1 , NULL, NULL, NULL, NULL, NULL, NULL)

000000008C8ADB80
2e616a97e2a136a86b7d026d73105ae7

0000000060DC6C38
cb87c155ccf5baeb795113ddb9af199f

0000000088E3F3E0
SELECT 1 FROM WWV_FL

0000000088CD4D68
SELECT APPENDCHILDXM

0000000088F90528
SELECT TS#, OBJ#, DATAOBJ#, SUM(CHAIN_ROW_EXCESS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DA
TAOBJ# ORDER BY SUM(CHAIN_ROW_EXCESS_DELTA) DESC

0000000060E4FB70
SELECT TS#, OBJ#, DATAOBJ#, SUM(CHAIN_ROW_EXCESS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DA
TAOBJ# ORDER BY SUM(CHAIN_ROW_EXCESS_DELTA) DESC

0000000088C57DC0
SELECT TS#, OBJ#, DATAOBJ#, SUM(CHAIN_ROW_EXCESS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DA
TAOBJ# ORDER BY SUM(CHAIN_ROW_EXCESS_DELTA) DESC

000000008C88ACD0
SELECT TS#, OBJ#, DATAOBJ#, SUM(CHAIN_ROW_EXCESS_DELTA) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#, DA
TAOBJ# ORDER BY SUM(CHAIN_ROW_EXCESS_DELTA) DESC

000000008CA276E0
c865c86bf076977016f2bda99c682dab

0000000092D4FE18
ea869ce79cded5b6ae49174ec9706c0

000000008B28D898
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F29090
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D73948 SYS
X$KSPPSV

0000000060D6E708
select substrb(dump(

000000008B116060 SYS
DBA_SCHEDULER_WINGROUP_MEMBERS

000000008B0956A0
INSERT INTO SYS.AUX_

000000008B3AA408 SYS
DBA_AUTOTASK_WINDOW_CLIENTS

000000008C8868F0
47827f3f944ff1382e38ba06cb1cab4a

000000008CAF3498
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 168

000000008B1D8138
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 168

000000008B1B7820
2bb9ee968af5927e53864f734a31957d

0000000092EBF9C0
e7e04a13b7fb7ff764c8ab84c22c7d28

000000008B1A59E8
67e778ea1f8699cf7e71a9fc57b7be70

0000000092C3DA68
6812820072384422400

000000008B17EAF0
     select t.ts#, t.name "tablespace", d.file#, d.name "file", d.status, d.enabled, d.bytes/1024/1024 "SIZE(M)"      from v$tablespace
 t, v$datafile d      where t.ts#=d.ts# union all      select t.ts#, t.name "tablespace", d.file#, d.name "file", d.status, d.enabled,
d.bytes/1024/1024 "SIZE(M)"      from v$tablespace t, v$tempfile d      where t.ts#=d.ts#      order by 1, 4

0000000060EF74C0
     select t.ts#, t.name "tablespace", d.file#, d.name "file", d.status, d.enabled, d.bytes/1024/1024 "SIZE(M)"      from v$tablespace
 t, v$datafile d      where t.ts#=d.ts# union all      select t.ts#, t.name "tablespace", d.file#, d.name "file", d.status, d.enabled,
d.bytes/1024/1024 "SIZE(M)"      from v$tablespace t, v$tempfile d      where t.ts#=d.ts#      order by 1, 4

000000008B19CA38
2e9525a2a327e204206f66ce551f47f6

0000000060D41588 SYS
SCHEDULER_FILEWATCHER_QT

0000000088E7FD10
4a5811abe9f13229437f0ac762e44169

000000008C85D480 DBSNMP
BSLN_VARIANCE_T

0000000088E21960
f3bf7a82af101b8e1b0d6a8db8f4959f

0000000060D67768 SYS
X$KGLPN

0000000088E918C0
3cbf92816814642bd57ac140b1220658

0000000060EE22B0 APEX_030200
WWV_FLOW_MAIL_ATTACHMENTS

000000008CB5C050
4dac58b26b6b37f914bcdd334f4818c9

0000000088CCCF68
SELECT XMLELEMENT( "

0000000060EBFEA0
297fc7c04d28df1a9335eed7c15da9da

000000008B35F040
select substrb(dump(

0000000088D2B0C8
5ca02bb59725147d425819cb5dae5f

0000000060CF3120
d1ddd68ed1edac67ce47973d6539529

000000008C925138
DELETE FROM WRI$_ADV

0000000060E64EA0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(A.SAMPLE_SIZE,null,0,A.SAMPLE_SIZE) as SAMPLE_SIZE,  A.GLOBAL_STATS,  A.USER_STATS,  decode(to_char(A.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(A.last_analy

0000000060F25A60
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(A.SAMPLE_SIZE,null,0,A.SAMPLE_SIZE) as SAMPLE_SIZE,  A.GLOBAL_STATS,  A.USER_STATS,  decode(to_char(A.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(A.last_analy

0000000060E81E60
SELECT EXTRACTVALUE(

000000008B115700
322a43c9f29edcc6eae1b40c9bb7e34

0000000088E5E4E8
insert into wrh$_pgastat   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  fro
m    v$pgastat  where    value > 0

0000000088FF8950
insert into wrh$_pgastat   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  fro
m    v$pgastat  where    value > 0

000000008CAA5F68
insert into wrh$_pgastat   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  fro
m    v$pgastat  where    value > 0

000000008B15A4C8
insert into wrh$_pgastat   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  fro
m    v$pgastat  where    value > 0

0000000088E5E968
insert into wrh$_pgastat   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  fro
m    v$pgastat  where    value > 0

0000000088FE1DB0
DELETE /*+ dynamic_sampling(ST 4) dynamic_sampling_est_cdn(ST) */ FROM STATS_TARGET$ ST WHERE NOT EXISTS (SELECT /*+ unnest */ * FROM O
BJ$ O WHERE O.OBJ# = ST.OBJ#)

0000000060C91320
DELETE /*+ dynamic_sampling(ST 4) dynamic_sampling_est_cdn(ST) */ FROM STATS_TARGET$ ST WHERE NOT EXISTS (SELECT /*+ unnest */ * FROM O
BJ$ O WHERE O.OBJ# = ST.OBJ#)

000000008B093660
DELETE /*+ dynamic_sampling(ST 4) dynamic_sampling_est_cdn(ST) */ FROM STATS_TARGET$ ST WHERE NOT EXISTS (SELECT /*+ unnest */ * FROM O
BJ$ O WHERE O.OBJ# = ST.OBJ#)

0000000092C7A4E8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.021102330
79) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery"
, JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_RO
WS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"
innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTE
R, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", JOIN, ("F#0", "S#1", "SO#2"), SCALE_ROWS=202.9
211759) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQue

0000000060F8B0F8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.021102330
79) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery"
, JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_RO
WS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"
innerQuery", NLJ_INDEX_FILTER, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTE
R, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", JOIN, ("F#0", "S#1", "SO#2"), SCALE_ROWS=202.9
211759) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQue

000000008B05E690
SELECT C.INTCOL# FRO

0000000088EC3F90
select /*+  no_paral

000000008C8AC950
SELECT USER# FROM US

000000008C96AD30
SELECT FILE_NO, FILETYPE_ID, FILETYPE_NAME,                        SMALL_READ_MEGABYTES, SMALL_WRITE_MEGABYTES,                       L
ARGE_READ_MEGABYTES, LARGE_WRITE_MEGABYTES,                       SMALL_READ_REQS, SMALL_WRITE_REQS,                                 SM
ALL_SYNC_READ_REQS, LARGE_READ_REQS,                             LARGE_WRITE_REQS, SMALL_READ_SERVICETIME,                          SMA
LL_WRITE_SERVICETIME, SMALL_SYNC_READ_LATENCY,                  LARGE_READ_SERVICETIME, LARGE_WRITE_SERVICETIME,                   ASYN
CH_IO, ACCESS_METHOD, RETRIES_ON_ERROR                         FROM GV$IOSTAT_FILE where inst_id=USERENV('Instance')

000000008CA93B30
SELECT FILE_NO, FILETYPE_ID, FILETYPE_NAME,                        SMALL_READ_MEGABYTES, SMALL_WRITE_MEGABYTES,                       L
ARGE_READ_MEGABYTES, LARGE_WRITE_MEGABYTES,                       SMALL_READ_REQS, SMALL_WRITE_REQS,                                 SM
ALL_SYNC_READ_REQS, LARGE_READ_REQS,                             LARGE_WRITE_REQS, SMALL_READ_SERVICETIME,                          SMA
LL_WRITE_SERVICETIME, SMALL_SYNC_READ_LATENCY,                  LARGE_READ_SERVICETIME, LARGE_WRITE_SERVICETIME,                   ASYN
CH_IO, ACCESS_METHOD, RETRIES_ON_ERROR                         FROM GV$IOSTAT_FILE where inst_id=USERENV('Instance')

000000008B38C8F0
/* SQL Analyze(1) */

0000000088DED958
select substrb(dump(

000000008B074A60
SELECT /*+ rule */ T

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

000000008B0FBDA8
select substrb(dump(

000000008C966050
1871529dbb6cd514f52629ec8acf2700

0000000060C5E7D0
3a9b479e3630f1912a9d9d1b2e275a0

0000000088F21CF8 SYS
GV$ARCHIVE_DEST

0000000088EF1430 SYS
WRH$_SEG_STAT

0000000088D8C7F8
4163eb2a2050ebea1c39a627d869980e

0000000060F5FC20
3b11c1281b6f11d34bb2fd96d56c8cee

000000008B3A7508
SELECT LOWER(:B1 ) F

0000000060F8F080 SYS
X$KEWSSYSV

0000000088C9BB08
SELECT ATTR1 FROM DB

0000000065360BB0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726)
OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", JOI
N, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "
SYS"."SYS_OBJECTS" "SO#2", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#")
 AND ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"="SO#2"."HEADER_BLOCK") AND ("S#1"."TS#"="SO#2"."TS_NUMBER") AND ("S#1"."T
YPE#"="SO#2"."SEGMENT_TYPE_ID")) innerQuery

0000000060C41860
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726)
OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) OPT_ESTIMATE(@"innerQuery", JOI
N, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "
SYS"."SYS_OBJECTS" "SO#2", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#")
 AND ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"="SO#2"."HEADER_BLOCK") AND ("S#1"."TS#"="SO#2"."TS_NUMBER") AND ("S#1"."T
YPE#"="SO#2"."SEGMENT_TYPE_ID")) innerQuery

0000000060CD0630
fd13324c737bce1f3db1794d25a68672

0000000060E207D0 $BUILD$
4e1632b79be34347

000000008CABD7F8
SELECT REGEXP_SUBSTR

0000000088FA6DB8
f70a40e6b81497efef8a1969ea710ea5

000000008C905F40
330372c882daff83382e7781710da79

000000008B1C8A18
c18b778c62b988de5b3fe1a819ac9e7d

000000008CBD85E0
BEGIN   BEGIN     IF (sys.is_vpd_enabled(sys.dictionary_obj_owner, sys.dictionary_obj_name, xdb.DBMS_XDBZ.IS_ENABLED_CONTENTS)) THEN
    xdb.XDB_PITRIG_PKG.pitrig_truncate(sys.dictionary_obj_owner, sys.dictionary_obj_name);     ELSIF (sys.is_vpd_enabled(sys.dictionary
_obj_owner, sys.dictionary_obj_name, xdb.DBMS_XDBZ.IS_ENABLED_RESMETADATA)) THEN       xdb.XDB_PITRIG_PKG.pitrig_dropmetadata(sys.dicti
onary_obj_owner, sys.dictionary_obj_name);     END IF;   EXCEPTION     WHEN OTHERS THEN      null;   END; END;

000000008B14D028
BEGIN   BEGIN     IF (sys.is_vpd_enabled(sys.dictionary_obj_owner, sys.dictionary_obj_name, xdb.DBMS_XDBZ.IS_ENABLED_CONTENTS)) THEN
    xdb.XDB_PITRIG_PKG.pitrig_truncate(sys.dictionary_obj_owner, sys.dictionary_obj_name);     ELSIF (sys.is_vpd_enabled(sys.dictionary
_obj_owner, sys.dictionary_obj_name, xdb.DBMS_XDBZ.IS_ENABLED_RESMETADATA)) THEN       xdb.XDB_PITRIG_PKG.pitrig_dropmetadata(sys.dicti
onary_obj_owner, sys.dictionary_obj_name);     END IF;   EXCEPTION     WHEN OTHERS THEN      null;   END; END;

000000008CB91E18
SELECT COUNT(1) FROM

000000008B056D90
INSERT INTO SYS.WRI$

000000008CAE4FE8
88d1dee0d6e6994625e0e1129846953c

0000000088FC8448
SELECT /*+ordered*/

0000000088D701E0
feda23fd904280cd45aaf86fe2584e

0000000060EBA090 $BUILD$
ed470a53ad5fa4a9

000000008C91DA88
UPDATE SYS.WRI$_ADV_

000000008C917038 SYS
WRH$_CURRENT_BLOCK_SERVER

0000000060F605C0
c38f4a337b0388f1a04d2628fc6c980c

000000008B130A68
select /*+  no_paral

000000008B0A8AB0
12be905610df19ca84f11e155f4117cd

000000008B0D1D18 SYS
PARTCOL$

000000008B13B6C8
select PROCESS, PID, STATUS, CLIENT_PROCESS, CLIENT_PID, CLIENT_DBID, GROUP#, RESETLOG_ID, THREAD#, SEQUENCE#, BLOCK#, BLOCKS, DELAY_MI
NS, KNOWN_AGENTS, ACTIVE_AGENTS from GV$MANAGED_STANDBY where inst_id = USERENV('Instance')

000000008C9FBD88
select PROCESS, PID, STATUS, CLIENT_PROCESS, CLIENT_PID, CLIENT_DBID, GROUP#, RESETLOG_ID, THREAD#, SEQUENCE#, BLOCK#, BLOCKS, DELAY_MI
NS, KNOWN_AGENTS, ACTIVE_AGENTS from GV$MANAGED_STANDBY where inst_id = USERENV('Instance')

000000008C879E58 SCOTT
DBMS_OUTPUT

000000008B0EBC78 SYS
DICTIONARY_OBJ_NAME

0000000092D4E3E8
select message_level, sequence_id, time_suggested from WRI$_ALERT_OUTSTANDING where reason_id = :1 and object_id = :2 and subobject_id
= :3 and internal_instance_number = :4

0000000088C52DF8
select message_level, sequence_id, time_suggested from WRI$_ALERT_OUTSTANDING where reason_id = :1 and object_id = :2 and subobject_id
= :3 and internal_instance_number = :4

000000008C866E48 SYS
DBMS_LOGSTDBY

0000000060E53EA0
532fd34d1d5f46be5ca909c44841ab20

000000008CBC5EE8 SYS
V$PROXY_DATAFILE

000000008CAE03B0
UPDATE BSLN_THRESHOL

0000000060CCC770 $BUILD$
672171a6e50a3848

000000008C999540
SELECT COUNT(*) FROM

0000000088C9E258
SELECT R.ATTR5 FROM

0000000088C369F8 SYS
SCHEDULER_FILEWATCHER_HST_LIST

0000000088F64FE8
SELECT ATTRNAME FROM

0000000088DFE498
SELECT /*+ first_row

0000000060CEB098
select u.name, o.name,o.obj#,o.type# from ind$ i, obj$ o, user$ u where i.obj#=:1 and o.obj#=i.bo# and o.owner#=u.user#

000000008C902D30
select u.name, o.name,o.obj#,o.type# from ind$ i, obj$ o, user$ u where i.obj#=:1 and o.obj#=i.bo# and o.owner#=u.user#

0000000060D37178
SELECT COUNT(*) FROM

000000008B34ED40
delete from WRH$_BUFFERED_QUEUES tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C5D9A8
delete from WRH$_BUFFERED_QUEUES tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088DED1C8
select substrb(dump(

0000000088CF3FC8 PUBLIC
SQLSET_ROW

0000000088F73F70
c9a0ec749f4f3313e9e79bf874355644

000000008B18A090
fa289760cefd707b63ae77b0d174d3d1

0000000060E16760
1243f25b4f5420f0d7fe72da626bba0f

000000008B1F28B0
17621979427c1f55d7eafde78e8f3257

0000000092D2B328
18e5da5d76669aa06ad1e858109f9e41

0000000092D5A9B8
12ad97f1a0499b1a7f903a3c8a741076

0000000060DC8C38
a7d0a75ff4baf3a2197c26f430948e02

0000000088C974A8
SELECT XMLELEMENT( "

000000008B380008
select substrb(dump(

000000008CBDB0B0
ee991c9ea0f312507c74b50e9e553c22

0000000065344580 PUBLIC
DBA_SCHEDULER_JOBS

0000000092CC5778 SYS
GV$LATCH_MISSES

000000008B09A050 SYS
XQSEQUENCE

0000000088D91448 SYS
X$KGLCURSOR_CHILD_SQLIDPH

000000008C9F30C0
b7d31ee2d9072fa604fe3c5169f2854

0000000060D932C0
select  sid, serial#, kgllkmod, kgllkreq, kgllktype, sql_text from  dba_kgllock w, v$session s, v$sqlarea a where  w.kgllkuse = s.saddr
 -- and w.kgllkhdl=hextoraw(lpad('', vsize(w.kgllkhdl)*2, 0)) and s.sql_address = a.address and s.sql_hash_value = a.hash_value

0000000092C748B8
select  sid, serial#, kgllkmod, kgllkreq, kgllktype, sql_text from  dba_kgllock w, v$session s, v$sqlarea a where  w.kgllkuse = s.saddr
 -- and w.kgllkhdl=hextoraw(lpad('', vsize(w.kgllkhdl)*2, 0)) and s.sql_address = a.address and s.sql_hash_value = a.hash_value

000000008B159F48
SELECT USERENV('INSTANCE') FROM DUAL

000000008B074340
SELECT USERENV('INSTANCE') FROM DUAL

0000000060D13C88
336f03e01e8fba0c7d455e2686378c67

000000008B1E80A8
b4462001616e19d529e5601976102b00

0000000060D52988
c289a4fe5c2ae6819bbad301bb3d7340

0000000060FA56E0
select substrb(dump(

0000000060F74780
select NUM_ROWS,PARTITION_NAME from dba_tab_partitions where table_name = 'HASH_TABLE'

000000008B25DAE0
select NUM_ROWS,PARTITION_NAME from dba_tab_partitions where table_name = 'HASH_TABLE'

0000000088D5C148
ed4e8a99bcc8103e70660768110b45c7

0000000088EDF250
16adef17c456837c99a0554544d3fd04

000000008B3BE728
fc94b7d8a5a4b10239654cda6e532ca1

000000008CA1F878
SELECT NVL(E.STATUS, A.STATUS) STATUS#, A.PROPERTY FROM WRI$_ADV_TASKS A, WRI$_ADV_EXECUTIONS E WHERE A.ID = E.TASK_ID(+) AND A.ADVISOR
_ID = E.ADVISOR_ID(+) AND A.LAST_EXEC_NAME = E.NAME(+) AND A.ID = :B1

0000000088FC0C58
SELECT NVL(E.STATUS, A.STATUS) STATUS#, A.PROPERTY FROM WRI$_ADV_TASKS A, WRI$_ADV_EXECUTIONS E WHERE A.ID = E.TASK_ID(+) AND A.ADVISOR
_ID = E.ADVISOR_ID(+) AND A.LAST_EXEC_NAME = E.NAME(+) AND A.ID = :B1

000000008B0D87E8
SELECT NVL(E.STATUS, A.STATUS) STATUS#, A.PROPERTY FROM WRI$_ADV_TASKS A, WRI$_ADV_EXECUTIONS E WHERE A.ID = E.TASK_ID(+) AND A.ADVISOR
_ID = E.ADVISOR_ID(+) AND A.LAST_EXEC_NAME = E.NAME(+) AND A.ID = :B1

0000000060F2F050
SELECT NVL(E.STATUS, A.STATUS) STATUS#, A.PROPERTY FROM WRI$_ADV_TASKS A, WRI$_ADV_EXECUTIONS E WHERE A.ID = E.TASK_ID(+) AND A.ADVISOR
_ID = E.ADVISOR_ID(+) AND A.LAST_EXEC_NAME = E.NAME(+) AND A.ID = :B1

000000008B234920
SELECT NVL(E.STATUS, A.STATUS) STATUS#, A.PROPERTY FROM WRI$_ADV_TASKS A, WRI$_ADV_EXECUTIONS E WHERE A.ID = E.TASK_ID(+) AND A.ADVISOR
_ID = E.ADVISOR_ID(+) AND A.LAST_EXEC_NAME = E.NAME(+) AND A.ID = :B1

000000008C91B7A8
SELECT NVL(E.STATUS, A.STATUS) STATUS#, A.PROPERTY FROM WRI$_ADV_TASKS A, WRI$_ADV_EXECUTIONS E WHERE A.ID = E.TASK_ID(+) AND A.ADVISOR
_ID = E.ADVISOR_ID(+) AND A.LAST_EXEC_NAME = E.NAME(+) AND A.ID = :B1

0000000065331860
8b723c30ae914a894bae9595699c777a

000000008C922538
DELETE FROM SYS.WRI$

0000000088D47200
SELECT DECODE(VALUE,

000000008CA2D7F0
SELECT PARAMETER_VAL

0000000092CB6958
93e68bd5f62696436065a5b1b1a56b6

000000008CA2E270
SELECT COUNT(*) FROM

0000000060FC5550
24bd087438492ee2f13ff68c6ea5dde

000000008B144598
SELECT OWNER, TABLE_NAME, CONSTRAINT_NAME, SUBSTR(CNAME1 || NVL2(CNAME2,','||CNAME2,NULL) || NVL2(CNAME3,','||CNAME3,NULL) || NVL2(CNAM
E4,','||CNAME4,NULL) || NVL2(CNAME5,','||CNAME5,NULL) || NVL2(CNAME6,','||CNAME6,NULL) || NVL2(CNAME7,','||CNAME7,NULL) || NVL2(CNAME8,
','||CNAME8,NULL),0,400) AS COLS FROM ( SELECT B.OWNER, B.TABLE_NAME, B.CONSTRAINT_NAME, MAX(DECODE( POSITION, 1, COLUMN_NAME, NULL ))
CNAME1, MAX(DECODE( POSITION, 2, COLUMN_NAME, NULL )) CNAME2, MAX(DECODE( POSITION, 3, COLUMN_NAME, NULL )) CNAME3, MAX(DECODE( POSITIO
N, 4, COLUMN_NAME, NULL )) CNAME4, MAX(DECODE( POSITION, 5, COLUMN_NAME, NULL )) CNAME5, MAX(DECODE( POSITION, 6, COLUMN_NAME, NULL ))
CNAME6, MAX(DECODE( POSITION, 7, COLUMN_NAME, NULL )) CNAME7, MAX(DECODE( POSITION, 8, COLUMN_NAME, NULL )) CNAME8, COUNT(*) COL_CNT FR
OM (SELECT OWNER, CONSTRAINT_NAME, COLUMN_NAME, POSITION FROM DBA_CONS_COLUMNS WHERE OWNER NOT IN ('SYSTEM','OWBSYS','XS$NULL','FLOWS_F
ILES','WMSYS','DIP','XDB','SYS','ANONYMOUS','QMONITOR',

0000000060E19F20
SELECT OWNER, TABLE_NAME, CONSTRAINT_NAME, SUBSTR(CNAME1 || NVL2(CNAME2,','||CNAME2,NULL) || NVL2(CNAME3,','||CNAME3,NULL) || NVL2(CNAM
E4,','||CNAME4,NULL) || NVL2(CNAME5,','||CNAME5,NULL) || NVL2(CNAME6,','||CNAME6,NULL) || NVL2(CNAME7,','||CNAME7,NULL) || NVL2(CNAME8,
','||CNAME8,NULL),0,400) AS COLS FROM ( SELECT B.OWNER, B.TABLE_NAME, B.CONSTRAINT_NAME, MAX(DECODE( POSITION, 1, COLUMN_NAME, NULL ))
CNAME1, MAX(DECODE( POSITION, 2, COLUMN_NAME, NULL )) CNAME2, MAX(DECODE( POSITION, 3, COLUMN_NAME, NULL )) CNAME3, MAX(DECODE( POSITIO
N, 4, COLUMN_NAME, NULL )) CNAME4, MAX(DECODE( POSITION, 5, COLUMN_NAME, NULL )) CNAME5, MAX(DECODE( POSITION, 6, COLUMN_NAME, NULL ))
CNAME6, MAX(DECODE( POSITION, 7, COLUMN_NAME, NULL )) CNAME7, MAX(DECODE( POSITION, 8, COLUMN_NAME, NULL )) CNAME8, COUNT(*) COL_CNT FR
OM (SELECT OWNER, CONSTRAINT_NAME, COLUMN_NAME, POSITION FROM DBA_CONS_COLUMNS WHERE OWNER NOT IN ('SYSTEM','OWBSYS','XS$NULL','FLOWS_F
ILES','WMSYS','DIP','XDB','SYS','ANONYMOUS','QMONITOR',

0000000060E8BA20
SELECT OWNER, TABLE_NAME, CONSTRAINT_NAME, SUBSTR(CNAME1 || NVL2(CNAME2,','||CNAME2,NULL) || NVL2(CNAME3,','||CNAME3,NULL) || NVL2(CNAM
E4,','||CNAME4,NULL) || NVL2(CNAME5,','||CNAME5,NULL) || NVL2(CNAME6,','||CNAME6,NULL) || NVL2(CNAME7,','||CNAME7,NULL) || NVL2(CNAME8,
','||CNAME8,NULL),0,400) AS COLS FROM ( SELECT B.OWNER, B.TABLE_NAME, B.CONSTRAINT_NAME, MAX(DECODE( POSITION, 1, COLUMN_NAME, NULL ))
CNAME1, MAX(DECODE( POSITION, 2, COLUMN_NAME, NULL )) CNAME2, MAX(DECODE( POSITION, 3, COLUMN_NAME, NULL )) CNAME3, MAX(DECODE( POSITIO
N, 4, COLUMN_NAME, NULL )) CNAME4, MAX(DECODE( POSITION, 5, COLUMN_NAME, NULL )) CNAME5, MAX(DECODE( POSITION, 6, COLUMN_NAME, NULL ))
CNAME6, MAX(DECODE( POSITION, 7, COLUMN_NAME, NULL )) CNAME7, MAX(DECODE( POSITION, 8, COLUMN_NAME, NULL )) CNAME8, COUNT(*) COL_CNT FR
OM (SELECT OWNER, CONSTRAINT_NAME, COLUMN_NAME, POSITION FROM DBA_CONS_COLUMNS WHERE OWNER NOT IN ('SYSTEM','OWBSYS','XS$NULL','FLOWS_F
ILES','WMSYS','DIP','XDB','SYS','ANONYMOUS','QMONITOR',

0000000060C3AF20
SELECT OWNER, TABLE_NAME, CONSTRAINT_NAME, SUBSTR(CNAME1 || NVL2(CNAME2,','||CNAME2,NULL) || NVL2(CNAME3,','||CNAME3,NULL) || NVL2(CNAM
E4,','||CNAME4,NULL) || NVL2(CNAME5,','||CNAME5,NULL) || NVL2(CNAME6,','||CNAME6,NULL) || NVL2(CNAME7,','||CNAME7,NULL) || NVL2(CNAME8,
','||CNAME8,NULL),0,400) AS COLS FROM ( SELECT B.OWNER, B.TABLE_NAME, B.CONSTRAINT_NAME, MAX(DECODE( POSITION, 1, COLUMN_NAME, NULL ))
CNAME1, MAX(DECODE( POSITION, 2, COLUMN_NAME, NULL )) CNAME2, MAX(DECODE( POSITION, 3, COLUMN_NAME, NULL )) CNAME3, MAX(DECODE( POSITIO
N, 4, COLUMN_NAME, NULL )) CNAME4, MAX(DECODE( POSITION, 5, COLUMN_NAME, NULL )) CNAME5, MAX(DECODE( POSITION, 6, COLUMN_NAME, NULL ))
CNAME6, MAX(DECODE( POSITION, 7, COLUMN_NAME, NULL )) CNAME7, MAX(DECODE( POSITION, 8, COLUMN_NAME, NULL )) CNAME8, COUNT(*) COL_CNT FR
OM (SELECT OWNER, CONSTRAINT_NAME, COLUMN_NAME, POSITION FROM DBA_CONS_COLUMNS WHERE OWNER NOT IN ('SYSTEM','OWBSYS','XS$NULL','FLOWS_F
ILES','WMSYS','DIP','XDB','SYS','ANONYMOUS','QMONITOR',

0000000060E675A8
SELECT OWNER, TABLE_NAME, CONSTRAINT_NAME, SUBSTR(CNAME1 || NVL2(CNAME2,','||CNAME2,NULL) || NVL2(CNAME3,','||CNAME3,NULL) || NVL2(CNAM
E4,','||CNAME4,NULL) || NVL2(CNAME5,','||CNAME5,NULL) || NVL2(CNAME6,','||CNAME6,NULL) || NVL2(CNAME7,','||CNAME7,NULL) || NVL2(CNAME8,
','||CNAME8,NULL),0,400) AS COLS FROM ( SELECT B.OWNER, B.TABLE_NAME, B.CONSTRAINT_NAME, MAX(DECODE( POSITION, 1, COLUMN_NAME, NULL ))
CNAME1, MAX(DECODE( POSITION, 2, COLUMN_NAME, NULL )) CNAME2, MAX(DECODE( POSITION, 3, COLUMN_NAME, NULL )) CNAME3, MAX(DECODE( POSITIO
N, 4, COLUMN_NAME, NULL )) CNAME4, MAX(DECODE( POSITION, 5, COLUMN_NAME, NULL )) CNAME5, MAX(DECODE( POSITION, 6, COLUMN_NAME, NULL ))
CNAME6, MAX(DECODE( POSITION, 7, COLUMN_NAME, NULL )) CNAME7, MAX(DECODE( POSITION, 8, COLUMN_NAME, NULL )) CNAME8, COUNT(*) COL_CNT FR
OM (SELECT OWNER, CONSTRAINT_NAME, COLUMN_NAME, POSITION FROM DBA_CONS_COLUMNS WHERE OWNER NOT IN ('SYSTEM','OWBSYS','XS$NULL','FLOWS_F
ILES','WMSYS','DIP','XDB','SYS','ANONYMOUS','QMONITOR',

0000000088C5B4E8
SELECT COUNT(*) FROM V$SESSION A, V$TEMPSEG_USAGE B, V$SQLAREA C WHERE A.SADDR = B.SESSION_ADDR AND C.ADDRESS = A.SQL_ADDRESS AND C.HAS
H_VALUE = A.SQL_HASH_VALUE ORDER BY B.BLOCKS

0000000060C953D0
SELECT COUNT(*) FROM V$SESSION A, V$TEMPSEG_USAGE B, V$SQLAREA C WHERE A.SADDR = B.SESSION_ADDR AND C.ADDRESS = A.SQL_ADDRESS AND C.HAS
H_VALUE = A.SQL_HASH_VALUE ORDER BY B.BLOCKS

000000008B2D0580
SELECT :B14 TYPE_CON

000000008B07EF50
SELECT O.OBJ# FROM O

0000000060CAF4E0
b2a66f0b447c610281e2c364828e1be

000000008B1A5DE8
SELECT RSET_PACK, DE

000000008B179E00 SYS
WRH$_FILESTATXS_PK

0000000088F66AE8
81296e3425484f1fc9a19e3f7ae3c10

0000000060DA76E0
c4d03e84729a42f362c382876ffc46b4

0000000060DE3B48
5ac3a78b80338c5189740da01983f85

000000008C9494E0
select substrb(dump(

000000008B0D8C68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088FA96D8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088C84868
INSERT INTO WRI$_SQL

000000008C910E90
4c282b8fc877ffe5446108d3dc14a764

0000000088DDA860
delete from WRH$_PGASTAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start
_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D507E8
delete from WRH$_PGASTAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.start
_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060C47C50
59506658acd5a28a525865666fadce2c

000000008CB5D1D0
SELECT FINDING_ID, D

000000008B0F72E8
6d4d40ff49b69147e5fc2888202805d

0000000088E3EDB0
SELECT B.GROUP_NUMBE

000000008CB31D98 SYS
DBMS_STANDARD

0000000060CE4568
SELECT QUEUE_NAME, Q

000000008CB3BB28 SYS
V$ASM_CLIENT

0000000060FB2EF0
c048bede72bd7414fb76be3a953288d2

0000000088EA0E30
701e7d7f576f24a66f7d6cf0fa0f5c31

000000008CAF5078 $BUILD$
d9c027c31b0b7c7f

000000008B3462F0
SELECT BASELINE_ID I

0000000088D099A8
select substrb(dump(

0000000088D7B898
SELECT EXTRACTVALUE(

0000000088E4F068 $BUILD$
cfe029a05b9fd7f1

000000008B03DD98
SELECT ID, DISPLAY_A

000000008B224420
acd18c9196e71b6ab5aa32d59b9f9329

0000000088EB08F0 SYS
DBMS_CDC_IPUBLISH

0000000060D41368
d1ddd68ed1edac67ce47973d6539529

0000000088D16410
5a09d6bdd3eb07dfeddc2feb33ffdc74

000000008B3C0150
e068a736c48c1525b1c189ae3e155124

0000000088CFCF38
delete from smon_scn_time where scn =  (select min(scn) from smon_scn_time)

000000008C9FB678
delete from smon_scn_time where scn =  (select min(scn) from smon_scn_time)

000000008C966D90
delete from smon_scn_time where scn =  (select min(scn) from smon_scn_time)

0000000088E7A580
update clu$ set ts#=:2,file#=:3,block#=:4,cols=:5,size$=decode(:6,-1,null,:6),pctfree$=:7,pctused$=:8,initrans=:9,maxtrans=:10,hashkeys
=:11,func=:12,extind=:13,avgchn=:14,degree=decode(:15,1,null,:15),instances=decode(:16,1,null,:16),dataobj#=:17,flags=:18,spare1=:19 wh
ere obj#=:1

0000000088C57AB8
update clu$ set ts#=:2,file#=:3,block#=:4,cols=:5,size$=decode(:6,-1,null,:6),pctfree$=:7,pctused$=:8,initrans=:9,maxtrans=:10,hashkeys
=:11,func=:12,extind=:13,avgchn=:14,degree=decode(:15,1,null,:15),instances=decode(:16,1,null,:16),dataobj#=:17,flags=:18,spare1=:19 wh
ere obj#=:1

0000000092C944C8
update clu$ set ts#=:2,file#=:3,block#=:4,cols=:5,size$=decode(:6,-1,null,:6),pctfree$=:7,pctused$=:8,initrans=:9,maxtrans=:10,hashkeys
=:11,func=:12,extind=:13,avgchn=:14,degree=decode(:15,1,null,:15),instances=decode(:16,1,null,:16),dataobj#=:17,flags=:18,spare1=:19 wh
ere obj#=:1

000000008B129088
SELECT MIN(TO_DATE(R

0000000092D38398
SELECT FLAGS FROM SY

000000008C85D260 DBSNMP
BSLN_VARIANCE_SET

000000008CB8E6C8
7a73814cd198623223ace0bb1d1d5376

0000000060D0CB38
90affab7732a7f083e5ef19a6d9b8a7e

000000008C9F9028 SYS
DBMS_SMB

0000000060C47AE0
begin   :owner :=upper('ex');   :index_name := upper(''); end;

0000000060C55B00
begin   :owner :=upper('ex');   :index_name := upper(''); end;

0000000088DE41F8
select  t.INDEX_NAME,t.PARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER_KEY,  t.AVG_DATA_BLO
CKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_ind_partit
ions t,dba_indexes i where     i.table_name = 'HASH_TABLE' and i.table_owner = 'SCOTT' and i.owner = t.index_owner and i.index_name=t.i
ndex_name

0000000060D64A18
select  t.INDEX_NAME,t.PARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER_KEY,  t.AVG_DATA_BLO
CKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_ind_partit
ions t,dba_indexes i where     i.table_name = 'HASH_TABLE' and i.table_owner = 'SCOTT' and i.owner = t.index_owner and i.index_name=t.i
ndex_name

0000000060E28C00
SELECT BITAND(J.JOB_

000000008C9EB888
SELECT NVL(MIN(CFSCN

0000000088EDC4B0
insert into wrh$_filestatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ opt_param('_optimizer_mjc_enabled','false')             lea
ding(df fs fw) */    :snap_id, :dbid, :instance_number, df.file#,    (df.crscnbas + (df.crscnwrp * power(2,32))) creation_change#,    f
s.kcfiopyr, fs.kcfiopyw, fs.kcfiosbr,    floor(fs.kcfioprt / 10000), floor(fs.kcfiopwt / 10000),    floor(fs.kcfiosbt / 10000), fs.kcfi
opbr, fs.kcfiopbw, fw.count, fw.time  from    x$kcfio fs, file$ df, x$kcbfwait fw  where    fw.indx+1  = fs.kcfiofno and    df.file#
= fs.kcfiofno and    df.status$ = 2

0000000088D28950
insert into wrh$_filestatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ opt_param('_optimizer_mjc_enabled','false')             lea
ding(df fs fw) */    :snap_id, :dbid, :instance_number, df.file#,    (df.crscnbas + (df.crscnwrp * power(2,32))) creation_change#,    f
s.kcfiopyr, fs.kcfiopyw, fs.kcfiosbr,    floor(fs.kcfioprt / 10000), floor(fs.kcfiopwt / 10000),    floor(fs.kcfiosbt / 10000), fs.kcfi
opbr, fs.kcfiopbw, fw.count, fw.time  from    x$kcfio fs, file$ df, x$kcbfwait fw  where    fw.indx+1  = fs.kcfiofno and    df.file#
= fs.kcfiofno and    df.status$ = 2

0000000088EDC930
insert into wrh$_filestatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ opt_param('_optimizer_mjc_enabled','false')             lea
ding(df fs fw) */    :snap_id, :dbid, :instance_number, df.file#,    (df.crscnbas + (df.crscnwrp * power(2,32))) creation_change#,    f
s.kcfiopyr, fs.kcfiopyw, fs.kcfiosbr,    floor(fs.kcfioprt / 10000), floor(fs.kcfiopwt / 10000),    floor(fs.kcfiosbt / 10000), fs.kcfi
opbr, fs.kcfiopbw, fw.count, fw.time  from    x$kcfio fs, file$ df, x$kcbfwait fw  where    fw.indx+1  = fs.kcfiofno and    df.file#
= fs.kcfiofno and    df.status$ = 2

00000000652C56F0
SELECT COUNT(*) FROM

00000000652BCD00
51a119a06c3154a92862da7238c5ae4e

000000008C92F8B8 SYS
WRI$_ADV_ACTIONS

000000008B3A8098
SELECT COUNT(*) FROM

00000000652EC0E0
c262940875b805f4a2504ede7915af4e

000000008B150778
select /*+use_nl(a,b,c)*/distinct a.sid || ',' ||a.serial# as sid_and_serial#, a.username, a.terminal, a.machine, a.program, b.spid, c.
sql_id, substr(c.sql_text,0,20) as sql_text from v$session a,v$process b,v$sql c where a.paddr = b.addr(+) and a.sql_hash_value = c.has
h_value and a.sql_address = c.address and a.status = 'ACTIVE' and a.type = 'USER' and a.sid not in (select sid from v$mystat where rown
um = 1)

000000008CA2F1A0
select /*+use_nl(a,b,c)*/distinct a.sid || ',' ||a.serial# as sid_and_serial#, a.username, a.terminal, a.machine, a.program, b.spid, c.
sql_id, substr(c.sql_text,0,20) as sql_text from v$session a,v$process b,v$sql c where a.paddr = b.addr(+) and a.sql_hash_value = c.has
h_value and a.sql_address = c.address and a.status = 'ACTIVE' and a.type = 'USER' and a.sid not in (select sid from v$mystat where rown
um = 1)

0000000088D6B2F8
WITH TIMEGROUPED_RAW

000000008C961BC0
fd1509c38040bf0ed6333a0265328abb

0000000092CAA968
UPDATE WRI$_ADV_FINDINGS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT FINDING_ID FROM (SELECT R.FINDING_ID AS FINDING_ID, C
OUNT(*) AS TOTAL_CNT, SUM(CASE WHEN R.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM WRI$_ADV_RECOMMENDATIONS R WHERE R.TASK_ID = :
B1 GROUP BY R.FINDING_ID) WHERE TOTAL_CNT = FILT_CNT) AND ID IN (SELECT F.FINDING_ID FROM WRI$_ADV_ADDM_FDG F, X$KEHF X WHERE F.TASK_ID
 = :B1 AND F.ADDM_FDG_ID = X.FINDING_ID AND BITAND(X.FLAG, 8) <> 0)

0000000088D7A5D0
UPDATE WRI$_ADV_FINDINGS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT FINDING_ID FROM (SELECT R.FINDING_ID AS FINDING_ID, C
OUNT(*) AS TOTAL_CNT, SUM(CASE WHEN R.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM WRI$_ADV_RECOMMENDATIONS R WHERE R.TASK_ID = :
B1 GROUP BY R.FINDING_ID) WHERE TOTAL_CNT = FILT_CNT) AND ID IN (SELECT F.FINDING_ID FROM WRI$_ADV_ADDM_FDG F, X$KEHF X WHERE F.TASK_ID
 = :B1 AND F.ADDM_FDG_ID = X.FINDING_ID AND BITAND(X.FLAG, 8) <> 0)

000000008CAFBAD8
UPDATE WRI$_ADV_FINDINGS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT FINDING_ID FROM (SELECT R.FINDING_ID AS FINDING_ID, C
OUNT(*) AS TOTAL_CNT, SUM(CASE WHEN R.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM WRI$_ADV_RECOMMENDATIONS R WHERE R.TASK_ID = :
B1 GROUP BY R.FINDING_ID) WHERE TOTAL_CNT = FILT_CNT) AND ID IN (SELECT F.FINDING_ID FROM WRI$_ADV_ADDM_FDG F, X$KEHF X WHERE F.TASK_ID
 = :B1 AND F.ADDM_FDG_ID = X.FINDING_ID AND BITAND(X.FLAG, 8) <> 0)

000000008CB00AD8
UPDATE WRI$_ADV_FINDINGS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT FINDING_ID FROM (SELECT R.FINDING_ID AS FINDING_ID, C
OUNT(*) AS TOTAL_CNT, SUM(CASE WHEN R.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM WRI$_ADV_RECOMMENDATIONS R WHERE R.TASK_ID = :
B1 GROUP BY R.FINDING_ID) WHERE TOTAL_CNT = FILT_CNT) AND ID IN (SELECT F.FINDING_ID FROM WRI$_ADV_ADDM_FDG F, X$KEHF X WHERE F.TASK_ID
 = :B1 AND F.ADDM_FDG_ID = X.FINDING_ID AND BITAND(X.FLAG, 8) <> 0)

0000000060E22770
UPDATE WRI$_ADV_FINDINGS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT FINDING_ID FROM (SELECT R.FINDING_ID AS FINDING_ID, C
OUNT(*) AS TOTAL_CNT, SUM(CASE WHEN R.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM WRI$_ADV_RECOMMENDATIONS R WHERE R.TASK_ID = :
B1 GROUP BY R.FINDING_ID) WHERE TOTAL_CNT = FILT_CNT) AND ID IN (SELECT F.FINDING_ID FROM WRI$_ADV_ADDM_FDG F, X$KEHF X WHERE F.TASK_ID
 = :B1 AND F.ADDM_FDG_ID = X.FINDING_ID AND BITAND(X.FLAG, 8) <> 0)

000000008B13E118
UPDATE WRI$_ADV_FINDINGS SET FILTERED = 'Y' WHERE TASK_ID = :B1 AND ID IN (SELECT FINDING_ID FROM (SELECT R.FINDING_ID AS FINDING_ID, C
OUNT(*) AS TOTAL_CNT, SUM(CASE WHEN R.FILTERED = 'Y' THEN 1 ELSE 0 END) AS FILT_CNT FROM WRI$_ADV_RECOMMENDATIONS R WHERE R.TASK_ID = :
B1 GROUP BY R.FINDING_ID) WHERE TOTAL_CNT = FILT_CNT) AND ID IN (SELECT F.FINDING_ID FROM WRI$_ADV_ADDM_FDG F, X$KEHF X WHERE F.TASK_ID
 = :B1 AND F.ADDM_FDG_ID = X.FINDING_ID AND BITAND(X.FLAG, 8) <> 0)

0000000060E4E0B0
select count(FA#) from SYS_FBA_TRACKEDTABLES where OBJ# = :1 and bitand(FLAGS, :2)=0

0000000060CE4D70
select count(FA#) from SYS_FBA_TRACKEDTABLES where OBJ# = :1 and bitand(FLAGS, :2)=0

000000008CA3E9F0
select count(FA#) from SYS_FBA_TRACKEDTABLES where OBJ# = :1 and bitand(FLAGS, :2)=0

0000000092C81808
5a53b140fea8dfc2238781c4b3a8bad2

0000000088D26ED0
d1a443d4b0481131be5ac7d0e7f66767

00000000652E3EA0 $BUILD$
cb66771315a5d303

0000000088E69950
bd8ff7f116095cd04f07c4184237ed0e

000000008C8AE800 $BUILD$
f0f5558cf24dccac

000000008B0B1780
2f9d1fa5dce11a2e4f7d807d3e954416

0000000060E4DB00
select substrb(dump(

0000000060FAA9A0
DECLARE job BINARY_INTEGER := :job; next_date DATE := :mydate;  broken BOOLEAN := FALSE; BEGIN wwv_flow_cache.purge_sessions(p_purge_se
ss_older_then_hrs => 24); :mydate := next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

0000000060FAAD30
DECLARE job BINARY_INTEGER := :job; next_date DATE := :mydate;  broken BOOLEAN := FALSE; BEGIN wwv_flow_cache.purge_sessions(p_purge_se
ss_older_then_hrs => 24); :mydate := next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

0000000060E298C0
SELECT CASE WHEN BITAND(FLAGS,2) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,16) FROM (SELECT ANALYZETIME, FLAGS FROM SYS.TABPART$
 T WHERE T.OBJ# = :B1 UNION ALL SELECT ANALYZETIME, FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ# = :B1 )

000000008B3DBF00
SELECT CASE WHEN BITAND(FLAGS,2) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,16) FROM (SELECT ANALYZETIME, FLAGS FROM SYS.TABPART$
 T WHERE T.OBJ# = :B1 UNION ALL SELECT ANALYZETIME, FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ# = :B1 )

0000000060E7F1C0
SELECT CASE WHEN BITAND(FLAGS,2) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,16) FROM (SELECT ANALYZETIME, FLAGS FROM SYS.TABPART$
 T WHERE T.OBJ# = :B1 UNION ALL SELECT ANALYZETIME, FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ# = :B1 )

000000008B06F610
SELECT CASE WHEN BITAND(FLAGS,2) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,16) FROM (SELECT ANALYZETIME, FLAGS FROM SYS.TABPART$
 T WHERE T.OBJ# = :B1 UNION ALL SELECT ANALYZETIME, FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ# = :B1 )

000000008B3A52C8
SELECT MOVING_WINDOW

0000000088D0E428 SYS
GV$MEMORY_TARGET_ADVICE

0000000088CB33D8 $BUILD$
134e27ea1a621859

0000000088C86D58
SELECT F.EXECUTION_N

000000008B1A55C8 PUBLIC
DBA_DB_LINKS

000000008B1F7780
f6c70ab150f271cdaecdae46ec7906f0

000000008B362D70
SELECT COUNT(*) FROM

000000008CA04A30 SYS
SQLPROF_ATTR

000000008B3B8338 SYS
UTL_RECOMP

000000008B040238
delete from col$ where obj#=:1

0000000088FB07C8
delete from col$ where obj#=:1

000000008CA0FA68 $BUILD$
cadc3ef7eae9704a

000000008B398E30
3b642487a7c95796c43e978766a26558

0000000088ECF3D0
insert into wrh$_tempstatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ leading (tf ts ftio fn fw) */    :snap_id, :dbid, :instance
_number,    tf.tfnum, to_number(tf.tfcrc_scn) creation_change#,    ftio.kcftiopyr, ftio.kcftiopyw, ftio.kcftiosbr,    floor(ftio.kcftio
prt / 10000), floor(ftio.kcftiopwt / 10000),    floor(ftio.kcftiosbt / 10000), ftio.kcftiopbr, ftio.kcftiopbw,    fw.count, fw.time  fr
om    x$kcftio ftio, x$kcctf tf, x$kcbfwait fw, x$kccfn fn, x$kccts ts  where    ts.tstsn       = tf.tftsn  and    ftio.kcftiofno = fn.
fnfno  and    ftio.kcftiofno = tf.tfnum  and    tf.tfnum       = fn.fnfno  and    tf.tffnh       = fn.fnnum  and    tf.tfdup       <> 0
        and    fn.fntyp       = 7         and    fn.fnnam is not null       and    bitand(tf.tfsta, 32) <> 32 and    fw.indx+1  = (fn.f
nfno + :db_files)

0000000092D30C98
insert into wrh$_tempstatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ leading (tf ts ftio fn fw) */    :snap_id, :dbid, :instance
_number,    tf.tfnum, to_number(tf.tfcrc_scn) creation_change#,    ftio.kcftiopyr, ftio.kcftiopyw, ftio.kcftiosbr,    floor(ftio.kcftio
prt / 10000), floor(ftio.kcftiopwt / 10000),    floor(ftio.kcftiosbt / 10000), ftio.kcftiopbr, ftio.kcftiopbw,    fw.count, fw.time  fr
om    x$kcftio ftio, x$kcctf tf, x$kcbfwait fw, x$kccfn fn, x$kccts ts  where    ts.tstsn       = tf.tftsn  and    ftio.kcftiofno = fn.
fnfno  and    ftio.kcftiofno = tf.tfnum  and    tf.tfnum       = fn.fnfno  and    tf.tffnh       = fn.fnnum  and    tf.tfdup       <> 0
        and    fn.fntyp       = 7         and    fn.fnnam is not null       and    bitand(tf.tfsta, 32) <> 32 and    fw.indx+1  = (fn.f
nfno + :db_files)

000000008B1C9908
insert into wrh$_tempstatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ leading (tf ts ftio fn fw) */    :snap_id, :dbid, :instance
_number,    tf.tfnum, to_number(tf.tfcrc_scn) creation_change#,    ftio.kcftiopyr, ftio.kcftiopyw, ftio.kcftiosbr,    floor(ftio.kcftio
prt / 10000), floor(ftio.kcftiopwt / 10000),    floor(ftio.kcftiosbt / 10000), ftio.kcftiopbr, ftio.kcftiopbw,    fw.count, fw.time  fr
om    x$kcftio ftio, x$kcctf tf, x$kcbfwait fw, x$kccfn fn, x$kccts ts  where    ts.tstsn       = tf.tftsn  and    ftio.kcftiofno = fn.
fnfno  and    ftio.kcftiofno = tf.tfnum  and    tf.tfnum       = fn.fnfno  and    tf.tffnh       = fn.fnnum  and    tf.tfdup       <> 0
        and    fn.fntyp       = 7         and    fn.fnnam is not null       and    bitand(tf.tfsta, 32) <> 32 and    fw.indx+1  = (fn.f
nfno + :db_files)

0000000060E4D780
insert into wrh$_tempstatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ leading (tf ts ftio fn fw) */    :snap_id, :dbid, :instance
_number,    tf.tfnum, to_number(tf.tfcrc_scn) creation_change#,    ftio.kcftiopyr, ftio.kcftiopyw, ftio.kcftiosbr,    floor(ftio.kcftio
prt / 10000), floor(ftio.kcftiopwt / 10000),    floor(ftio.kcftiosbt / 10000), ftio.kcftiopbr, ftio.kcftiopbw,    fw.count, fw.time  fr
om    x$kcftio ftio, x$kcctf tf, x$kcbfwait fw, x$kccfn fn, x$kccts ts  where    ts.tstsn       = tf.tftsn  and    ftio.kcftiofno = fn.
fnfno  and    ftio.kcftiofno = tf.tfnum  and    tf.tfnum       = fn.fnfno  and    tf.tffnh       = fn.fnnum  and    tf.tfdup       <> 0
        and    fn.fntyp       = 7         and    fn.fnnam is not null       and    bitand(tf.tfsta, 32) <> 32 and    fw.indx+1  = (fn.f
nfno + :db_files)

0000000088ECF850
insert into wrh$_tempstatxs   (snap_id, dbid, instance_number, file#, creation_change#, phyrds,    phywrts, singleblkrds, readtim, writ
etim, singleblkrdtim, phyblkrd,    phyblkwrt, wait_count, time)  select /*+ leading (tf ts ftio fn fw) */    :snap_id, :dbid, :instance
_number,    tf.tfnum, to_number(tf.tfcrc_scn) creation_change#,    ftio.kcftiopyr, ftio.kcftiopyw, ftio.kcftiosbr,    floor(ftio.kcftio
prt / 10000), floor(ftio.kcftiopwt / 10000),    floor(ftio.kcftiosbt / 10000), ftio.kcftiopbr, ftio.kcftiopbw,    fw.count, fw.time  fr
om    x$kcftio ftio, x$kcctf tf, x$kcbfwait fw, x$kccfn fn, x$kccts ts  where    ts.tstsn       = tf.tftsn  and    ftio.kcftiofno = fn.
fnfno  and    ftio.kcftiofno = tf.tfnum  and    tf.tfnum       = fn.fnfno  and    tf.tffnh       = fn.fnnum  and    tf.tfdup       <> 0
        and    fn.fntyp       = 7         and    fn.fnnam is not null       and    bitand(tf.tfsta, 32) <> 32 and    fw.indx+1  = (fn.f
nfno + :db_files)

0000000060DE9150
b5ce5d1bcb208c888af1cb4e9bf1fd92

000000008B094BB0
SELECT /*+ dynamic_s

000000008B0599A0
INSERT INTO SYS.WRI$

0000000088E71030 SYS
GV$DATABASE_INCARNATION

00000000652B3F90 $BUILD$
b633672df3d99cf1

000000008B21D680
/* SQL Analyze(1) */

000000008CA831D8 PUBLIC
DUAL

000000008B3B7EF8 SYS
DBMS_DDL

000000008C8B6BF8 SYS
RE$VARIABLE_TYPE

000000008CBB5118
996c7f594f7df5aa607d71a028f23ed1

000000008B2558E8 SYS
UTL_FILE

000000008C92F248 SYS
WRI$_ADV_SQLT_PLAN_STATS

0000000092CADAA8 SYS
X$KSMJS

0000000088D17BC0
select OBJOID, RUNTIME, JOBTYP, DUR from (  select a.obj# OBJOID, a.next_start_date RUNTIME, 2 JOBTYP, a.duration DUR    from sys.sched
uler$_window a   where bitand(a.flags, 1) <> 0     and bitand(a.flags, 2) = 0     and bitand(a.flags, 64) = 0     and a.next_start_date
 <= :1     and a.next_start_date + a.duration > :2 union all  select b.obj#, b.next_start_date + b.duration,         4, numtodsinterval
(0,'minute')  from sys.scheduler$_window b  where bitand(b.flags, 1) <> 0    and bitand(b.flags, 2) = 0    and bitand(b.flags, 64) = 0
   and b.next_start_date <= :3    and b.next_start_date + b.duration > :4 union all  select d.obj#, c.attr_tstamp,         decode(bitan
d(c.flags, 131072), 0, 2, 3),         c.attr_intv  from sys.scheduler$_global_attribute c, sys.obj$ d, sys.obj$ e  where c.obj# = e.obj
#    and e.name = 'CURRENT_OPEN_WINDOW'    and c.value = d.name    and d.type# = 69    and c.attr_tstamp is not null    and c.attr_intv
 is not null union all  select g.obj#, f.attr_tstamp +

000000008CB33838
select OBJOID, RUNTIME, JOBTYP, DUR from (  select a.obj# OBJOID, a.next_start_date RUNTIME, 2 JOBTYP, a.duration DUR    from sys.sched
uler$_window a   where bitand(a.flags, 1) <> 0     and bitand(a.flags, 2) = 0     and bitand(a.flags, 64) = 0     and a.next_start_date
 <= :1     and a.next_start_date + a.duration > :2 union all  select b.obj#, b.next_start_date + b.duration,         4, numtodsinterval
(0,'minute')  from sys.scheduler$_window b  where bitand(b.flags, 1) <> 0    and bitand(b.flags, 2) = 0    and bitand(b.flags, 64) = 0
   and b.next_start_date <= :3    and b.next_start_date + b.duration > :4 union all  select d.obj#, c.attr_tstamp,         decode(bitan
d(c.flags, 131072), 0, 2, 3),         c.attr_intv  from sys.scheduler$_global_attribute c, sys.obj$ d, sys.obj$ e  where c.obj# = e.obj
#    and e.name = 'CURRENT_OPEN_WINDOW'    and c.value = d.name    and d.type# = 69    and c.attr_tstamp is not null    and c.attr_intv
 is not null union all  select g.obj#, f.attr_tstamp +

0000000088DEC6B8
select OBJOID, RUNTIME, JOBTYP, DUR from (  select a.obj# OBJOID, a.next_start_date RUNTIME, 2 JOBTYP, a.duration DUR    from sys.sched
uler$_window a   where bitand(a.flags, 1) <> 0     and bitand(a.flags, 2) = 0     and bitand(a.flags, 64) = 0     and a.next_start_date
 <= :1     and a.next_start_date + a.duration > :2 union all  select b.obj#, b.next_start_date + b.duration,         4, numtodsinterval
(0,'minute')  from sys.scheduler$_window b  where bitand(b.flags, 1) <> 0    and bitand(b.flags, 2) = 0    and bitand(b.flags, 64) = 0
   and b.next_start_date <= :3    and b.next_start_date + b.duration > :4 union all  select d.obj#, c.attr_tstamp,         decode(bitan
d(c.flags, 131072), 0, 2, 3),         c.attr_intv  from sys.scheduler$_global_attribute c, sys.obj$ d, sys.obj$ e  where c.obj# = e.obj
#    and e.name = 'CURRENT_OPEN_WINDOW'    and c.value = d.name    and d.type# = 69    and c.attr_tstamp is not null    and c.attr_intv
 is not null union all  select g.obj#, f.attr_tstamp +

0000000088E9AB80
76a8bfb47055ad7f42311010764e9058

0000000088FC76B8
select inst_id,ksmsdnam,ksmsdval from x$ksmsd

0000000088F87118
select inst_id,ksmsdnam,ksmsdval from x$ksmsd

0000000060E21C70 $BUILD$
557dfc77575388df

000000008B09D380
5bcf9f49f8ae39470a6d57e18242a83

000000008B1B30C0
select substrb(dump(

000000008B312C40
INSERT INTO WRI$_ADV

0000000088FD43E8
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  BEGIN ORACLE_OCM.MGMT_DB_LL_METRICS.COLLECT_CONFIG_METRICS('O
RACLE_OCM_CONFIG_DIR'); END;  :mydate := next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

0000000060CCBC60
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  BEGIN ORACLE_OCM.MGMT_DB_LL_METRICS.COLLECT_CONFIG_METRICS('O
RACLE_OCM_CONFIG_DIR'); END;  :mydate := next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

0000000092D2C838
b0edff891f3dff1845e0a3e90091fc3

000000008B3A59F8
SELECT MAX(ID) FROM

0000000065340D80
3a5bcb45691662caca19a6f8ab669cdc

000000008CAC2028 SYS
WRH$_JAVA_POOL_ADVICE

0000000060E721C8
afee38f2df8da330620b6502c37dd927

000000008B3A7248
SELECT COUNT(*) FROM

000000006530B500 SYS
PARTLOB$

0000000088EFFA08
SELECT COUNT(*) FROM

000000008B1B03E0
DELETE FROM SYS.SCHE

0000000060EB2B20
SELECT REGEXP_SUBSTR

0000000060D05580
select substrb(dump(

0000000060E85F50
15ca52af8a1b435095a971da3d645f43

0000000088CF15B8 SYS
SQL_BIND_SET

000000008CA49C60 PUBLIC
DBMS_OUTPUT

000000008B35A838
f031b3da77f4065efe927b31abb88fbf

0000000060D56B48
5ca02bb59725147d425819cb5dae5f

0000000060FD7C90
/* SQL Analyze(1) */

0000000060C6FC10 SYS
DBMS_RANDOM

0000000088EBC060
SELECT GROUP_NUMBER,

000000008C8C5268
select substrb(dump(

0000000088C5E108
922242db205a2b3576f3d6da70ae4bcb

000000008B2ECE48 SYS
AQ$_REG_INFO

0000000060F3C930
7c140974b656fe9a397b9479461733ba

0000000060F9F6D0
a305ac233d6e97b631416aa8b799b8a3

0000000088FCFC98 SYS
SM$CLEAN_AUTO_SPLIT_MERGE

0000000088CB5808
92873f91e95e427b2ccb8117b23236d

0000000092CAEF38
1e4013f81f1d52db61c9c355510564c


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
000000008C91C458
UPDATE WRI$_ADV_EXEC

000000008C97CE78
UPDATE BSLN_BASELINE

0000000060CEF128
4a7675f894ff826c8e6c4e04d4669e4b

0000000088CED528 SYS
V$SQL_PLAN_MONITOR

000000008C967AF0
a70e2c4a3861bb96824a60322a5b1098

0000000060DEB798
DELETE FROM SYS.AQ$_

000000008C85DD20 PUBLIC
DBA_HIST_SYSMETRIC_SUMMARY

0000000088ED6680
SELECT :B19 TYPE_CON

000000008C914A68
SELECT MAX(EXECUTION

000000008CA6F340 SYS
V$MEMORY_TARGET_ADVICE

000000008C88AA90
SELECT SYS.SCHEDULER

000000008B0FB618
SELECT /* DS_SVC */

0000000088D91858
dc457dd8f99e07f5c5882b533d01b0ed

000000008CA8DDF0
27daf098ec4ed15d3ef66fd15c5d783d

0000000060F08CD0
SELECT NVL(LOWER(EXT

0000000088F67F68
SELECT 1 FROM WWV_FL

0000000060D0FB58 $BUILD$
21cf58b972e0f180

000000008B0A9C90
SELECT UES.COLLCTTAB

0000000092EBDE40
SELECT Q.ROWID, SUBS

0000000088E66F90 SYS
GV$SORT_USAGE

0000000060CBFD48
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"DATAOBJ#" val, ntile(
254) over (order by "DATAOBJ#") bkt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "DATAOBJ#" is not null) group by val) group by maxbkt orde
r by maxbkt

0000000060CC01C8
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"DATAOBJ#" val, ntile(
254) over (order by "DATAOBJ#") bkt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "DATAOBJ#" is not null) group by val) group by maxbkt orde
r by maxbkt

000000008B32D138 SYS
X$KCCNRS

0000000088E3DDC0 SYS
V_$PARAMETER

000000008B2A7DA8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060E68038
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088D2C080 $BUILD$
78d479639b8b5de1

00000000653F6C40
select inst_id,-kzsprprv from x$kzspr

0000000092D6C458
select inst_id,-kzsprprv from x$kzspr

000000008B167270 SYS
WRH$_BUFFERED_QUEUES

000000008B237260
e55df0e2765fd7d85b6ab225fb6fdef

0000000060E4D080
select substrb(dump(

0000000088DF6F18 SYS
WRH$_INSTANCE_RECOVERY

0000000088C353B8 SYS
WRH$_PERSISTENT_SUBSCRIBERS

000000008C936260
77b8b8915c5f5faeb63ce04122c26a66

000000008C9CE108 SYS
KU$_PARSED_ITEMS

0000000060DB9338 SYS
DIR$

000000008B17DC50 SYS
DEFROLE$

000000008C9A0D10
5c4ff29adb30312aba693ccda2410c0

000000008C87A628
6d11d7de2049577d933d2385337fc737

0000000060ED2DA0
SELECT DISTINCT OID FROM SYS.RECO_SCRIPT_BLOCK$ WHERE STATUS IN (:B3 , :B2 ) AND (SYSDATE -CTIME) >= :B1

0000000088D74F30
SELECT DISTINCT OID FROM SYS.RECO_SCRIPT_BLOCK$ WHERE STATUS IN (:B3 , :B2 ) AND (SYSDATE -CTIME) >= :B1

000000008C9C5358
SELECT NVL(ERROR_NOT

0000000060F45470
SELECT 2 PREFERENCE,

0000000060D3B828
5b9c7ceb7783e18399d1893833d368b

000000008C9463E8 SYS
SCHEDULER$_GLOBAL_ATTRIBUTE

0000000060F57770
3a0dd838bbe9f5bea4025d2dad8423fc

000000008CA9E730
DELETE FROM WRI$_ADV

000000008C918228
SELECT STATUS# FROM

000000008C9CC998
732d6f1741a92892b1a97c94cc7f3d17

0000000060F3BDF0
291b144e47de1158633f0903bdea4b07

0000000088E8FB30
SELECT TO_NUMBER(VAL

0000000088CAF148
SELECT GREATEST(NVL(

0000000088D67FC0
a9581e0a82f7452324377325fdd320c2

0000000060E78790
select  SQL_TEXT , SQL_FULLTEXT , SQL_ID,  SHARABLE_MEM , PERSISTENT_MEM , RUNTIME_MEM , SORTS , LOADED_VERSIONS , OPEN_VERSIONS , USER
S_OPENING , FETCHES , EXECUTIONS , PX_SERVERS_EXECUTIONS , END_OF_FETCH_COUNT, USERS_EXECUTING , LOADS , FIRST_LOAD_TIME, INVALIDATIONS
, PARSE_CALLS , DISK_READS , DIRECT_WRITES , BUFFER_GETS , APPLICATION_WAIT_TIME, CONCURRENCY_WAIT_TIME, CLUSTER_WAIT_TIME, USER_IO_WAI
T_TIME, PLSQL_EXEC_TIME, JAVA_EXEC_TIME, ROWS_PROCESSED , COMMAND_TYPE , OPTIMIZER_MODE , OPTIMIZER_COST, OPTIMIZER_ENV, OPTIMIZER_ENV_
HASH_VALUE, PARSING_USER_ID , PARSING_SCHEMA_ID , PARSING_SCHEMA_NAME, KEPT_VERSIONS , ADDRESS , TYPE_CHK_HEAP , HASH_VALUE, OLD_HASH_V
ALUE, PLAN_HASH_VALUE, CHILD_NUMBER, SERVICE, SERVICE_HASH, MODULE, MODULE_HASH , ACTION , ACTION_HASH ,  SERIALIZABLE_ABORTS , OUTLINE
_CATEGORY, CPU_TIME, ELAPSED_TIME, OUTLINE_SID, CHILD_ADDRESS, SQLTYPE, REMOTE, OBJECT_STATUS, LITERAL_HASH_VALUE, LAST_LOAD_TIME, IS_O
BSOLETE, IS_BIND_SENSITIVE, IS_BIND_AWARE, IS_SHAREABLE

0000000065391240
select  SQL_TEXT , SQL_FULLTEXT , SQL_ID,  SHARABLE_MEM , PERSISTENT_MEM , RUNTIME_MEM , SORTS , LOADED_VERSIONS , OPEN_VERSIONS , USER
S_OPENING , FETCHES , EXECUTIONS , PX_SERVERS_EXECUTIONS , END_OF_FETCH_COUNT, USERS_EXECUTING , LOADS , FIRST_LOAD_TIME, INVALIDATIONS
, PARSE_CALLS , DISK_READS , DIRECT_WRITES , BUFFER_GETS , APPLICATION_WAIT_TIME, CONCURRENCY_WAIT_TIME, CLUSTER_WAIT_TIME, USER_IO_WAI
T_TIME, PLSQL_EXEC_TIME, JAVA_EXEC_TIME, ROWS_PROCESSED , COMMAND_TYPE , OPTIMIZER_MODE , OPTIMIZER_COST, OPTIMIZER_ENV, OPTIMIZER_ENV_
HASH_VALUE, PARSING_USER_ID , PARSING_SCHEMA_ID , PARSING_SCHEMA_NAME, KEPT_VERSIONS , ADDRESS , TYPE_CHK_HEAP , HASH_VALUE, OLD_HASH_V
ALUE, PLAN_HASH_VALUE, CHILD_NUMBER, SERVICE, SERVICE_HASH, MODULE, MODULE_HASH , ACTION , ACTION_HASH ,  SERIALIZABLE_ABORTS , OUTLINE
_CATEGORY, CPU_TIME, ELAPSED_TIME, OUTLINE_SID, CHILD_ADDRESS, SQLTYPE, REMOTE, OBJECT_STATUS, LITERAL_HASH_VALUE, LAST_LOAD_TIME, IS_O
BSOLETE, IS_BIND_SENSITIVE, IS_BIND_AWARE, IS_SHAREABLE

000000008B1B5CF0
67e778ea1f8699cf7e71a9fc57b7be70

000000008B077B10
SELECT COLUMN_NAME F

0000000060E6BE70 SYS
V$LATCH_CHILDREN

000000008C834D70
SELECT ATTRIBUTE, AS

0000000060FF7DC8
6e78bf7eeda8c7df1468aba2d2bfee0a

000000008C93CA78
SELECT DECODE(FE.FEP

000000008CBDA920
SELECT D.ID FROM WRI

000000008C9E8D90 SYS
WRH$_IC_DEVICE_STATS

000000008B178BF0
select /*+  no_paral

000000008B1BAE00
f951e7d28fa2e7da963df1b83bcb8c28

0000000088DB37C8
delete from sys.col_usage$ c where not exists              (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = c.obj#)
and c.obj# < :1 and rownum <= nvl(:2, rownum)

000000008B1D93C8
delete from sys.col_usage$ c where not exists              (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = c.obj#)
and c.obj# < :1 and rownum <= nvl(:2, rownum)

0000000088D98020
delete from sys.col_usage$ c where not exists              (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = c.obj#)
and c.obj# < :1 and rownum <= nvl(:2, rownum)

0000000088DAC848
delete from sys.col_usage$ c where not exists              (select /*+ unnest */ 1 from sys.obj$ o where o.obj# = c.obj#)
and c.obj# < :1 and rownum <= nvl(:2, rownum)

000000008CB49888
67e778ea1f8699cf7e71a9fc57b7be70

0000000060EBB690 SYS
GV$QUEUE

000000008B0AAAC0
delete from icol$ where bo#=:1

0000000088FF13E0
delete from icol$ where bo#=:1

0000000088FDAB50
select substrb(dump(

0000000088F59B78
SELECT A.HOW_CREATED

000000008CB4BB50 SYS
SCHEDULER_FILEWATCHER_RESULT

0000000060CBA208
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4"), "I_TS#", SCALE_ROWS=0.03
367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"inn
erQuery", NLJ_INDEX_FILTER, "U#5", ("S#1", "SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_F
ILTER, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4", "U#5"), SCALE_ROW
S=165.5060901) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER,
 "U#5", ("S#1", "SO#2", "O#4"), "I_USER#", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_
OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuer

00000000653B4040
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4"), "I_TS#", SCALE_ROWS=0.03
367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"inn
erQuery", NLJ_INDEX_FILTER, "U#5", ("S#1", "SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_F
ILTER, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4", "U#5"), SCALE_ROW
S=165.5060901) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER,
 "U#5", ("S#1", "SO#2", "O#4"), "I_USER#", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_
OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuer

0000000060C46230
70e289804c93846cc3836da43a5e231c

000000008B1A04D8
SELECT k.inst_id, k.FILENO_KSFDSTFILE, 2, 'Data File',                         round(k.SBRDATA_KSFDSTFILE / 2048),
                      round(k.SBWDATA_KSFDSTFILE / 2048),                                           round(k.MBRDATA_KSFDSTFILE / 2048),
                                           round(k.MBWDATA_KSFDSTFILE / 2048),                                           k.SBRSREQS_KSF
DSTFILE, k.SBWSREQS_KSFDSTFILE,                                 k.SSBRREQS_KSFDSTFILE, k.MBRSREQS_KSFDSTFILE,
       k.MBWSREQS_KSFDSTFILE, k.SBRSERV_KSFDSTFILE,                                  k.SBWSERV_KSFDSTFILE, k.SSBRLATENCY_KSFDSTFILE,
                            k.MBRSERV_KSFDSTFILE, k.MBWSERV_KSFDSTFILE,                                   decode(bitand(k.FLAGS_KSFDSTF
ILE, 4), 0, 'ASYNC_OFF', 'ASYNC_ON'),            decode(k.ACCESS_KSFDSTFILE, 1,'OS_LIB', 2,'ODM_LIB',3,                               '
ASM_MANAGED',4,'DNFS_LIB'),

000000008C9178F8
SELECT k.inst_id, k.FILENO_KSFDSTFILE, 2, 'Data File',                         round(k.SBRDATA_KSFDSTFILE / 2048),
                      round(k.SBWDATA_KSFDSTFILE / 2048),                                           round(k.MBRDATA_KSFDSTFILE / 2048),
                                           round(k.MBWDATA_KSFDSTFILE / 2048),                                           k.SBRSREQS_KSF
DSTFILE, k.SBWSREQS_KSFDSTFILE,                                 k.SSBRREQS_KSFDSTFILE, k.MBRSREQS_KSFDSTFILE,
       k.MBWSREQS_KSFDSTFILE, k.SBRSERV_KSFDSTFILE,                                  k.SBWSERV_KSFDSTFILE, k.SSBRLATENCY_KSFDSTFILE,
                            k.MBRSERV_KSFDSTFILE, k.MBWSERV_KSFDSTFILE,                                   decode(bitand(k.FLAGS_KSFDSTF
ILE, 4), 0, 'ASYNC_OFF', 'ASYNC_ON'),            decode(k.ACCESS_KSFDSTFILE, 1,'OS_LIB', 2,'ODM_LIB',3,                               '
ASM_MANAGED',4,'DNFS_LIB'),

000000008B0A5AE0
SELECT DISTINCT TS.T

0000000092C5C8C8
select value$ from sys.props$ where name = :1

0000000092C4DFE8
select value$ from sys.props$ where name = :1

000000008CB5CB20
select value$ from sys.props$ where name = :1

000000008CB21638
select value$ from sys.props$ where name = :1

0000000088D33F08
select value$ from sys.props$ where name = :1

0000000088CBBA20
select value$ from sys.props$ where name = :1

0000000092C5CD48
select value$ from sys.props$ where name = :1

000000008C960E30
78652c9f67620bbbdcc9fd0f7f9aa94c

0000000060C5EAE0
54de1f2d0a990793d7faa5bd28815d8

000000008B0BBA20
SELECT VALUE FROM NL

0000000092C7C398 PUBLIC
V$PROCESS

000000008B07A110 SYS
CACHE_STATS_SEQ_1

000000008B3D1848 PUBLIC
DBMS_UTILITY

000000008CB470E0 SYS
V$SHARED_POOL_ADVICE

000000008B174360
2c444d22e330995d10af5c53b236d232

000000008C972E08
select job, nvl2(last_date, 1, 0) from sys.job$ where (((:1 <= next_date) and (next_date <= :2))    or  ((last_date is null) and (next_
date < :3))) and (field1 = :4 or (field1 = 0 and 'Y' = :5)) and (this_date is null) and ((dbms_logstdby.db_is_logstdby = 0 and job < 10
00000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000)) order by next_date, job

000000008CA37EA0
select job, nvl2(last_date, 1, 0) from sys.job$ where (((:1 <= next_date) and (next_date <= :2))    or  ((last_date is null) and (next_
date < :3))) and (field1 = :4 or (field1 = 0 and 'Y' = :5)) and (this_date is null) and ((dbms_logstdby.db_is_logstdby = 0 and job < 10
00000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000)) order by next_date, job

0000000088D5B228
select job, nvl2(last_date, 1, 0) from sys.job$ where (((:1 <= next_date) and (next_date <= :2))    or  ((last_date is null) and (next_
date < :3))) and (field1 = :4 or (field1 = 0 and 'Y' = :5)) and (this_date is null) and ((dbms_logstdby.db_is_logstdby = 0 and job < 10
00000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000)) order by next_date, job

000000008B12B9D8
select job, nvl2(last_date, 1, 0) from sys.job$ where (((:1 <= next_date) and (next_date <= :2))    or  ((last_date is null) and (next_
date < :3))) and (field1 = :4 or (field1 = 0 and 'Y' = :5)) and (this_date is null) and ((dbms_logstdby.db_is_logstdby = 0 and job < 10
00000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000)) order by next_date, job

0000000092D640E0
select job, nvl2(last_date, 1, 0) from sys.job$ where (((:1 <= next_date) and (next_date <= :2))    or  ((last_date is null) and (next_
date < :3))) and (field1 = :4 or (field1 = 0 and 'Y' = :5)) and (this_date is null) and ((dbms_logstdby.db_is_logstdby = 0 and job < 10
00000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000)) order by next_date, job

000000008B1CF228
select job, nvl2(last_date, 1, 0) from sys.job$ where (((:1 <= next_date) and (next_date <= :2))    or  ((last_date is null) and (next_
date < :3))) and (field1 = :4 or (field1 = 0 and 'Y' = :5)) and (this_date is null) and ((dbms_logstdby.db_is_logstdby = 0 and job < 10
00000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000)) order by next_date, job

000000008C973288
select job, nvl2(last_date, 1, 0) from sys.job$ where (((:1 <= next_date) and (next_date <= :2))    or  ((last_date is null) and (next_
date < :3))) and (field1 = :4 or (field1 = 0 and 'Y' = :5)) and (this_date is null) and ((dbms_logstdby.db_is_logstdby = 0 and job < 10
00000000) or  (dbms_logstdby.db_is_logstdby = 1 and job >= 1000000000)) order by next_date, job

0000000060FB32F0 PUBLIC
SYS_XQEXVAL

00000000652C5BD0
/* SQL Analyze(1) */

0000000088F34808
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."FILE
$" "F#0", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#")) innerQ
uery

0000000060D04C78
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."FILE
$" "F#0", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#")) innerQ
uery

000000008B35D078
399386692e78122c372ec4b46177840

0000000088FB05B8
b9795c156cf23b893b9d0b296caf46c7

0000000060E69860
select /*+  no_paral

000000008B073E30
SELECT O.NAME TABNAM

0000000060DE5940
DELETE FROM SYS.AQ$_

0000000060EE52C0 SYS
WRH$_LATCH_MISSES_SUMMARY_BL

000000008CB3C928 SYS
DBMS_AQADM

0000000088E08938
3ec61a3af78a7e7b7ede1f9a0b8ea3

0000000092D44D38 $BUILD$
73d511b62ec48012

000000008B2BC898
2132470fbfc504bca907eff7c9542907

000000008B085520
SELECT NULL PNAME, N

0000000088FE14F0 SYS
RE$VARIABLE_TYPE_LIST

000000008B37C4D8
9d567d7fe8a8eda914d032c185f85b7

0000000088F6FAA0
SELECT EQUALATTRS FR

0000000088E62618
5053301527d8574268632774f77f459

000000008B3C1930 $BUILD$
b949b529b1ac36ff

0000000088EA1300 SYS
DBMS_RECOVERABLE_SCRIPT

000000008CB32FC0
10691826517852517234

0000000088C387C8
732d1523e906e89a5839117a4fa53ef

000000008B279718
delete from WRH$_TABLESPACE_STAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C981FB8
delete from WRH$_TABLESPACE_STAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060F85610
select substrb(dump(

0000000092CCBF38 SYS
TS$

000000008B1A8BC8
SELECT MAX(LOG_ID) F

000000008B30E918
fef3175482efc936982a7d441166744d

000000008B078DC0 SYS
FINALHIST$

000000008B153C48
SELECT CUSTOM_AUTH_L

0000000092C60ED8
SELECT O.OBJ# FROM O

0000000088EB7B10
select /*+  no_paral

000000008B191680
40065070bb6f94c74afe033e90df4e37

0000000092C4DDC8
9537a612d90871b091a5eb9bfde41c2a

000000008C9A1CA0
select /*+  no_paral

0000000088FFF7D0
1862edb344a0bd91be7b70fbd8929a1c

000000008B09B150 SYS
ODCIENV

000000008C8A8F20
insert into sys.aud$( sessionid,entryid,statement,ntimestamp#, userid,userhost,terminal,action#,returncode, obj$creator,obj$name,auth$p
rivileges,auth$grantee, new$owner,new$name,ses$actions,ses$tid,logoff$pread, logoff$lwrite,logoff$dead,comment$text,spare1,spare2,  pri
v$used,clientid,sessioncpu,proxy$sid,user$guid, instance#,process#,xid,scn,auditid,  sqlbind,sqltext,obj$edition,dbid)  values(:1,:2,:3
,SYS_EXTRACT_UTC(SYSTIMESTAMP),     :4,:5,:6,:7,:8,     :9,:10,:11,:12,     :13,:14,:15,:16,:17,     :18,:19,:20,:21,:22,     :23,:24,:
25,:26,:27,     :28,:29,:30,:31,:32,     :33,:34,:35,:36)

000000008C8A92B0
insert into sys.aud$( sessionid,entryid,statement,ntimestamp#, userid,userhost,terminal,action#,returncode, obj$creator,obj$name,auth$p
rivileges,auth$grantee, new$owner,new$name,ses$actions,ses$tid,logoff$pread, logoff$lwrite,logoff$dead,comment$text,spare1,spare2,  pri
v$used,clientid,sessioncpu,proxy$sid,user$guid, instance#,process#,xid,scn,auditid,  sqlbind,sqltext,obj$edition,dbid)  values(:1,:2,:3
,SYS_EXTRACT_UTC(SYSTIMESTAMP),     :4,:5,:6,:7,:8,     :9,:10,:11,:12,     :13,:14,:15,:16,:17,     :18,:19,:20,:21,:22,     :23,:24,:
25,:26,:27,     :28,:29,:30,:31,:32,     :33,:34,:35,:36)

0000000060FEE1F0
8eb7a483c9487e3096c2f145292af8aa

0000000092D7C7A8 DBSNMP
BSLN

000000008C87EDD8
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008C884590
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008B35B660
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008C9EE2F8
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008CB0FB68
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

0000000088D09498
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

0000000060E7F420
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

0000000088FDA1B0
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008B1971C8
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008C897E48
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008C889CE0
SELECT x.statistic# as stat_id,  x.keh_id as keh_id,  nvl(awr_time.value_diff, 0) as value_diff  FROM  X$KEHTIMMAP x ,(SELECT startsn.s
tat_id as stat_id,  sum(GREATEST( 0, (endsn.value - startsn.value) )) as value_diff  FROM  WRH$_SYS_TIME_MODEL startsn ,  WRH$_SYS_TIME
_MODEL endsn   WHERE  endsn.dbid = :dbid  AND endsn.instance_number = :inst  AND endsn.snap_id = :eid  AND startsn.dbid = :dbid AND sta
rtsn.instance_number = endsn.instance_number AND startsn.snap_id = :bid  AND  startsn.stat_id = endsn.stat_id   GROUP BY startsn.stat_i
d  ) awr_time  WHERE x.statistic# <> 0  AND x.statistic# = awr_time.stat_id(+)  ORDER BY x.keh_id ASC

000000008B11C6F0 SYS
AGGXMLIMP

000000008CB06B70 APEX_030200
WWV_FLOW_ELEMENT

0000000088FF9D30
4e2dc922bc1a784b7c7751b8b456b7c4

0000000088FB3AF8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."USER$
" "U#5", "SYS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#4"."OWNER#"="U#5"."USER#"(+))) innerQuery

00000000653B8DA0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."USER$
" "U#5", "SYS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#4"."OWNER#"="U#5"."USER#"(+))) innerQuery

0000000088F50FE8
9620cfe1e7966914715f75e388f2943b

0000000092C47A40
select increment$,minvalue,maxvalue,cycle#,order$,cache,highwater,audit$,flags from seq$ where obj#=:1

0000000088C5A788
select increment$,minvalue,maxvalue,cycle#,order$,cache,highwater,audit$,flags from seq$ where obj#=:1

0000000088D417A8
select increment$,minvalue,maxvalue,cycle#,order$,cache,highwater,audit$,flags from seq$ where obj#=:1

0000000092C47DD0
select increment$,minvalue,maxvalue,cycle#,order$,cache,highwater,audit$,flags from seq$ where obj#=:1

000000008CA675D8 SYS
ALERT_QUE_R

000000008B3AB3D8
/* SQL Analyze(1) */

000000008B2FA3B8
DELETE FROM WWV_FLOW

0000000088FD5D08
de9909b5c36852fdefdf10e297bcf180

0000000088D81058
776d085f3e27464ccdc242889fe9fe0d

0000000060FAD2D0 SYS
V$DBFILE

0000000088EC5360
insert into wrh$_service_name   (snap_id, dbid, service_name_hash, service_name) select   :lah_snap_id, :dbid, t2.name_hash, t2.name fr
om   x$kewrattrnew t1, v$active_services t2 where t1.num1_kewrattr = t2.name_hash   and t2.name is not null

0000000088EC4590
insert into wrh$_service_name   (snap_id, dbid, service_name_hash, service_name) select   :lah_snap_id, :dbid, t2.name_hash, t2.name fr
om   x$kewrattrnew t1, v$active_services t2 where t1.num1_kewrattr = t2.name_hash   and t2.name is not null

0000000088EC57E0
insert into wrh$_service_name   (snap_id, dbid, service_name_hash, service_name) select   :lah_snap_id, :dbid, t2.name_hash, t2.name fr
om   x$kewrattrnew t1, v$active_services t2 where t1.num1_kewrattr = t2.name_hash   and t2.name is not null

000000008CA90520
5c4a4dd155aae50ce9effc494fe74388

0000000060DBAC08
b05e67c3d1cedcd7f0019112b19bf1c

000000008B086AE0
SELECT /*+ rule */ U

0000000092C8B3E8
SELECT EQUALATTRS, O

000000008B324328 SYS
X$KCCRSP

00000000652DBFE0
BEGIN   DBMS_STATS.GATHER_TABLE_STATS(ownname          => 'SCOTT',                                 tabname          => 'HASH_TABLE',
                              estimate_percent => 100,                                 method_opt       => 'for columns size auto',
                             no_invalidate    => FALSE,                                 degree           => 1,
        granularity      => 'ALL',                                 cascade          => TRUE); END;

000000008CA410E0
BEGIN   DBMS_STATS.GATHER_TABLE_STATS(ownname          => 'SCOTT',                                 tabname          => 'HASH_TABLE',
                              estimate_percent => 100,                                 method_opt       => 'for columns size auto',
                             no_invalidate    => FALSE,                                 degree           => 1,
        granularity      => 'ALL',                                 cascade          => TRUE); END;

00000000652C2CB0
cfb7da9575a0a8aaf5d18e42583d05e

0000000092D03478
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION = NVL(:B2 , VERSION) W
HERE ID = :B1

0000000092C982A8
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION = NVL(:B2 , VERSION) W
HERE ID = :B1

000000008C8B0700
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION = NVL(:B2 , VERSION) W
HERE ID = :B1

000000008CB21A10
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION = NVL(:B2 , VERSION) W
HERE ID = :B1

0000000060CE3E58
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION = NVL(:B2 , VERSION) W
HERE ID = :B1

000000008C918BE8
UPDATE SYS.WRI$_ADV_TASKS SET MTIME = SYSDATE, STATUS = NVL(:B4 , STATUS), CLEANUP = NVL(:B3 , CLEANUP), VERSION = NVL(:B2 , VERSION) W
HERE ID = :B1

0000000088F244D8
8e9db5e02e68d5c07cfcb34d858039c6

0000000088DF6258
SELECT CLIENT_IDENTI

000000008CB46BD0
SELECT BSLN_STATISTI

0000000088FC6FD8 SYS
WRM$_BASELINE

0000000088CA4C88 SYS
WRI$_SQLSET_BINDS

0000000088E79F40
a27e8828d7ab9b932bc2b9c7c70587ef

0000000060CA17B0
402565722d47eca58e6b32bd5c88a036

000000008CBBE508 SYS
V$INSTANCE

000000008B20EE98
SELECT DATA_TYPE FRO

000000008C9207D8
SELECT COUNT(*) FROM

0000000060D468D8
begin    sys.dbms_aq_inv.internal_purge_queue_table(:1, :2, :3, :4, :5, :6, :7, :8); end;

0000000060D46D58
begin    sys.dbms_aq_inv.internal_purge_queue_table(:1, :2, :3, :4, :5, :6, :7, :8); end;

000000008C98C9C0
e4fb051f5ad42c24776c6748883f7581

0000000092C4C2E0
SELECT COUNT(*) FROM

000000008B14F5B8 SYS
WRI$_ADV_ADDM_TASKS

0000000088E09BC8
15ca52af8a1b435095a971da3d645f43

000000008B277678
ea869ce79cded5b6ae49174ec9706c0

000000008B3BC348
5bcf9f49f8ae39470a6d57e18242a83

0000000060D9BE68
2ce14b76387bee632fb44224b57b62e9

0000000088EF4D58 SYS
PROFNAME$

0000000088F10BC8
SELECT column_name,data_type_owner,data_type FROM dba_tab_columns where owner=:o and table_name=:t

00000000653C6970
SELECT column_name,data_type_owner,data_type FROM dba_tab_columns where owner=:o and table_name=:t

0000000088E2BBF8
SELECT column_name,data_type_owner,data_type FROM dba_tab_columns where owner=:o and table_name=:t

000000008B29F2B0
fc5ea7f31ab2ccc2725ce3c41c79757

000000008CA26B00
SELECT COUNT(*) FROM

0000000060C9A370
select o.owner#,o.obj#,decode(o.linkname,null,decode(u.name,null,'SYS',u.name),o.remoteowner),o.name,o.linkname,o.namespace,o.subname,o
.type# from user$ u, obj$ o where u.user#(+)=o.owner# and o.type#=:1 and not exists (select p_obj# from dependency$ where p_obj# = o.ob
j#)

0000000060FD0C88
select o.owner#,o.obj#,decode(o.linkname,null,decode(u.name,null,'SYS',u.name),o.remoteowner),o.name,o.linkname,o.namespace,o.subname,o
.type# from user$ u, obj$ o where u.user#(+)=o.owner# and o.type#=:1 and not exists (select p_obj# from dependency$ where p_obj# = o.ob
j#)

0000000060DD7808
select substrb(dump(

000000008B38AD68
DELETE FROM SYS.SCHE

000000008C924EC8
DELETE FROM WRI$_ADV

0000000088D877B8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COL") val,count(*) cnt  from
 "SCOTT"."HASH_TABLE" t  where "COL" is not null  group by nlssort("COL", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binary
')

000000008C9EC7B8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("COL") val,count(*) cnt  from
 "SCOTT"."HASH_TABLE" t  where "COL" is not null  group by nlssort("COL", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SORT = binary
')

000000008C9FEDD8 SYS
SMON_SCN_TIME

000000008C8C0038
select /*+  no_parallel_index(t, "I_JOB_NEXT")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  no_expand index(t,"I_JOB_NEXT") */ count(*) as nrw,count(distinct sys_op_lbid(290,'L',t.rowid)) as nlb,null as ndk,sys_op
_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "NEXT_DATE" is not null

0000000092D5A628
select /*+  no_parallel_index(t, "I_JOB_NEXT")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  no_expand index(t,"I_JOB_NEXT") */ count(*) as nrw,count(distinct sys_op_lbid(290,'L',t.rowid)) as nlb,null as ndk,sys_op
_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "NEXT_DATE" is not null

0000000088F800C8
select /*+  no_parallel_index(t, "I_JOB_NEXT")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  no_expand index(t,"I_JOB_NEXT") */ count(*) as nrw,count(distinct sys_op_lbid(290,'L',t.rowid)) as nlb,null as ndk,sys_op
_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "NEXT_DATE" is not null

0000000088DDA9D0
select /*+  no_parallel_index(t, "I_JOB_NEXT")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  no_expand index(t,"I_JOB_NEXT") */ count(*) as nrw,count(distinct sys_op_lbid(290,'L',t.rowid)) as nlb,null as ndk,sys_op
_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "NEXT_DATE" is not null

000000008B168120 SYS
DBMS_APPLY_ADM

000000008CA43C20 EXFSYS
ADM_RLMGR_RULE_CLASSES

0000000088F9A388
60581bbc18b400ecba1163dc7829c47a

0000000060F1C8B0 MDSYS
SDO_GEOR_ADDL_TRIGGER

000000008C931AE8 SYS
WRI$_ADV_DEF_PARAMETERS

0000000088DCEAD8
select sid,seq#,event,p1text,p1,p1raw,p2text,p2,p2raw,p3text, p3,p3raw,wait_class_id, wait_class#,wait_class,wait_time,seconds_in_wait,
 state,wait_time_micro,time_remaining_micro,time_since_last_wait_micro from gv$session_wait where inst_id = USERENV('Instance')

000000006531F2B0
select sid,seq#,event,p1text,p1,p1raw,p2text,p2,p2raw,p3text, p3,p3raw,wait_class_id, wait_class#,wait_class,wait_time,seconds_in_wait,
 state,wait_time_micro,time_remaining_micro,time_since_last_wait_micro from gv$session_wait where inst_id = USERENV('Instance')

0000000088E21008 $BUILD$
eddd89b07512c493

000000008B079870 SYS
SYS_PLSQL_9006_729_1

000000008C99AB00
1de34d29182c04c6505c9a5a7fd90d

0000000088CFF410
SELECT /*+ index(t) */ T.PROPERTY FROM SYS.TAB$ T WHERE T.OBJ# = :B1

000000008CB5B790
SELECT /*+ index(t) */ T.PROPERTY FROM SYS.TAB$ T WHERE T.OBJ# = :B1

0000000092C812F8
SELECT /*+ index(t) */ T.PROPERTY FROM SYS.TAB$ T WHERE T.OBJ# = :B1

000000008B073BE0
SELECT /*+ index(t) */ T.PROPERTY FROM SYS.TAB$ T WHERE T.OBJ# = :B1

0000000065333660
7bfe0a47d93243e22651fc4b43720d8d

000000008B3C4270
select addr, pid, spid, pname, username, serial#, terminal, program, traceid, tracefile, background, latchwait,latchspin,pga_used_mem,p
ga_alloc_mem,pga_freeable_mem,pga_max_mem from gv$process where inst_id = USERENV('Instance')

00000000652BFF50
select addr, pid, spid, pname, username, serial#, terminal, program, traceid, tracefile, background, latchwait,latchspin,pga_used_mem,p
ga_alloc_mem,pga_freeable_mem,pga_max_mem from gv$process where inst_id = USERENV('Instance')

00000000653341B0
66438da3ebbc48a3e34215ff3658de8a

000000008B0C3880
991e8a29534028cec2ed2cc4bbe1a89

0000000088F64588
SELECT PRIM_DURMIN F

0000000060CD1730
SELECT T.UDATA_TYPE,

00000000652B3720 SYS
AQ$SCHEDULER_FILEWATCHER_QT

000000008B1322D8
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000092C7A0D8
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000088DC66B0
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000088FC28F8
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

0000000060E47500
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

000000008B360ED0
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

0000000088FC0AE8
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

0000000060D016A8
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

0000000092D1CBB0
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

0000000088DAA608
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

000000008B093910
UPDATE STATS_TARGET$ ST SET STATUS = :B3 , FLAGS = FLAGS - BITAND(FLAGS, :B2 ) WHERE OBJ# = :B1

0000000088D6FCD0
4c282b8fc877ffe5446108d3dc14a764

000000008B12C548

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
SELECT FROM_TOID, FR

0000000060D1E218
77c0cf26557964a9ea48e129672146c6

000000008B17DFE0
SELECT RECID, RECID,

0000000092D54188 SYS
X$TARGETRBA

000000008B31AEF0
insert into wrm$_snapshot_details     (snap_id, dbid, instance_number, table_id, begin_time, end_time)      values (:snap_id, :dbid, :i
nstance_number, :bind1, :bind2, :bind3)

0000000088C82C78
insert into wrm$_snapshot_details     (snap_id, dbid, instance_number, table_id, begin_time, end_time)      values (:snap_id, :dbid, :i
nstance_number, :bind1, :bind2, :bind3)

000000008CAB7190
insert into wrm$_snapshot_details     (snap_id, dbid, instance_number, table_id, begin_time, end_time)      values (:snap_id, :dbid, :i
nstance_number, :bind1, :bind2, :bind3)

000000008B17E690
insert into wrm$_snapshot_details     (snap_id, dbid, instance_number, table_id, begin_time, end_time)      values (:snap_id, :dbid, :i
nstance_number, :bind1, :bind2, :bind3)

000000008B31B370
insert into wrm$_snapshot_details     (snap_id, dbid, instance_number, table_id, begin_time, end_time)      values (:snap_id, :dbid, :i
nstance_number, :bind1, :bind2, :bind3)

0000000060FCD640
b1b863b41909ea0594ccf96f501d083

000000008C91D548
SELECT COUNT(*) FROM

000000008B1857A8
5ee71fc9697bd161466c74604142df80

000000008B3A66A8
SELECT BASELINE_NAME

0000000060DE8F30 SYS
SQL$TEXT

0000000092C4C170
delete from WRH$_SYSSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B101EE8
delete from WRH$_SYSSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C929808
SELECT DIRECTORY_PAT

0000000092EC2720
78ee9a4289ed2031f33f41a0fa080604

000000008B3D3A18
42d450b0bd12699237fac9cabede990e

00000000653910D0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "LF")  */ 1 AS C1 FROM "SYS"."LOBFRA
G$" "LF" WHERE (DECODE("LF"."FRAGTYPE$",'P','LOB PARTITION','LOB SUBPARTITION') LIKE 'TABLE%')) innerQuery

00000000653BFB10
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "LF")  */ 1 AS C1 FROM "SYS"."LOBFRA
G$" "LF" WHERE (DECODE("LF"."FRAGTYPE$",'P','LOB PARTITION','LOB SUBPARTITION') LIKE 'TABLE%')) innerQuery

0000000088EAC570 SYS
WRH$_SYSTEM_EVENT

000000008B09B370 SYS
DBMS_SQLDIAG

0000000060F2CCB0 SYS
SYS_UNCOMPRESSED_SEGS

00000000653552C0
2c9996701a33a4a61060771b82763343

000000008B0FC970
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000088F82438
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

000000008B13F648
SELECT COUNT(*) FROM

0000000088D10150 EXFSYS
EXF$IDXSECOBJ

000000008B3840E0
delete from superobj$ where subobj# = :1

0000000088C6D7F0
delete from superobj$ where subobj# = :1

0000000092D19288
delete from superobj$ where subobj# = :1

000000008B384560
delete from superobj$ where subobj# = :1

0000000092D5F098
6ac3207f3c3be84ba9657d74794fbe7a

000000008C924C58
DELETE FROM WRI$_ADV

0000000092EBAAF0
821b215a2e5a6d97333c5eb027d8f45e

0000000060C80478
20a6ea6d715be4c741ae3245d5f1e0d7

0000000060CB56A8 $BUILD$
eb195dd4bb1fe5df

0000000060DC3D70
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 156

000000008B24D558
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 156

000000008B393760
3137e563c404483db86fdf4adfebc162

000000008B035E68
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SERIAL#" val,count(*) cnt  from
"SYS"."STATS_TARGET$" t  where "SERIAL#" is not null  group by "SERIAL#") order by val

0000000092D3B118
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SERIAL#" val,count(*) cnt  from
"SYS"."STATS_TARGET$" t  where "SERIAL#" is not null  group by "SERIAL#") order by val

000000008B3F0F60
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SERIAL#" val,count(*) cnt  from
"SYS"."STATS_TARGET$" t  where "SERIAL#" is not null  group by "SERIAL#") order by val

0000000088EB6BF0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SERIAL#" val,count(*) cnt  from
"SYS"."STATS_TARGET$" t  where "SERIAL#" is not null  group by "SERIAL#") order by val

000000008B10DB48
SELECT T.PROTOCOL FR

0000000060E4CF10
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 1 AS C1 FROM SYS."OBJ$" "O
2" WHERE ("O2"."TYPE#"=88)) innerQuery

000000008CA0EB78
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 1 AS C1 FROM SYS."OBJ$" "O
2" WHERE ("O2"."TYPE#"=88)) innerQuery

0000000060F26560 SYS
DBMS_SQLTUNE_UTIL0

0000000060D01FA8 SCOTT
DEPT

0000000060F81FB0
select substrb(dump(

0000000088F5A738
BEGIN    prvt_advisor.recover_stale_tasks;  END;

0000000060E58898
BEGIN    prvt_advisor.recover_stale_tasks;  END;

000000008B39FB70
delete from WRH$_WAITCLASSMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :d
bid)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sn
ap_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C9FB2F8
delete from WRH$_WAITCLASSMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :d
bid)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sn
ap_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D35EE0
92e3e1334310fdde5c9db01e61ffddd0

000000008B29B980
declare     v_cnt number;      cursor c_tbs is SELECT a.tablespace_name,        lpad(round((total-free) / maxsize * 100, 1) || '%',9) a
s used_pct,        rpad(lpad('#',ceil((nvl(total-free,0)/b.maxsize)*20),'#'),20,' ') as used,        b.autoextensible,        round(tot
al/1024,1) as TOTAL_GB,        round((total - free)/1024,1) as USED_GB,        round(free/1024,1) as FREE_GB,        b.cnt DATAFILE_COU
NT,        c.status,        c.CONTENTS,        c.extent_management,        c.allocation_type,        b.maxsize FROM   (SELECT tablespac
e_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) free         FROM   dba_free_space         GROUP BY tablespace_name) a,
      (SELECT tablespace_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) total,                count(*)
           cnt,                max(autoextensible)                  autoextensible,                sum(decode(autoextensible, 'YES', fl
oor(maxbytes/1048576), floor(bytes / 1048576 ))) maxsiz

0000000060DB0F78
declare     v_cnt number;      cursor c_tbs is SELECT a.tablespace_name,        lpad(round((total-free) / maxsize * 100, 1) || '%',9) a
s used_pct,        rpad(lpad('#',ceil((nvl(total-free,0)/b.maxsize)*20),'#'),20,' ') as used,        b.autoextensible,        round(tot
al/1024,1) as TOTAL_GB,        round((total - free)/1024,1) as USED_GB,        round(free/1024,1) as FREE_GB,        b.cnt DATAFILE_COU
NT,        c.status,        c.CONTENTS,        c.extent_management,        c.allocation_type,        b.maxsize FROM   (SELECT tablespac
e_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) free         FROM   dba_free_space         GROUP BY tablespace_name) a,
      (SELECT tablespace_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) total,                count(*)
           cnt,                max(autoextensible)                  autoextensible,                sum(decode(autoextensible, 'YES', fl
oor(maxbytes/1048576), floor(bytes / 1048576 ))) maxsiz

000000008C9CA9C0
92c15c68693abccac2d594e7c612711

0000000088EFC038
7623273066cdae4936901a2dc517330d

000000008CB30088 $BUILD$
d07674a81178396f

00000000653BF820
92873f91e95e427b2ccb8117b23236d

0000000092D2AE98
/* SQL Analyze(32,1) */ select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(b
h.class,1,'data block',2,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'exte
nt map',                8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index bloc
k',13,'file header block',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',
18,'undo block'         ) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tc
h,         decode(mod(flag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.
data_object_id and     o.data_object_id in         (select data_object_id           from dba_objects          where object_name = :tabl
e_name and owner = :owner         )) group by block_cla

000000008C9FC218
/* SQL Analyze(32,1) */ select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(b
h.class,1,'data block',2,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'exte
nt map',                8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index bloc
k',13,'file header block',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',
18,'undo block'         ) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tc
h,         decode(mod(flag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.
data_object_id and     o.data_object_id in         (select data_object_id           from dba_objects          where object_name = :tabl
e_name and owner = :owner         )) group by block_cla

0000000088F9D788
/* SQL Analyze(32,1) */ select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(b
h.class,1,'data block',2,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'exte
nt map',                8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index bloc
k',13,'file header block',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',
18,'undo block'         ) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tc
h,         decode(mod(flag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.
data_object_id and     o.data_object_id in         (select data_object_id           from dba_objects          where object_name = :tabl
e_name and owner = :owner         )) group by block_cla

000000008CA17758
/* SQL Analyze(32,1) */ select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(b
h.class,1,'data block',2,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'exte
nt map',                8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index bloc
k',13,'file header block',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',
18,'undo block'         ) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tc
h,         decode(mod(flag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.
data_object_id and     o.data_object_id in         (select data_object_id           from dba_objects          where object_name = :tabl
e_name and owner = :owner         )) group by block_cla

000000008B3CCC28
/* SQL Analyze(32,1) */ select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(b
h.class,1,'data block',2,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'exte
nt map',                8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index bloc
k',13,'file header block',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',
18,'undo block'         ) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tc
h,         decode(mod(flag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.
data_object_id and     o.data_object_id in         (select data_object_id           from dba_objects          where object_name = :tabl
e_name and owner = :owner         )) group by block_cla

0000000060C47100
/* SQL Analyze(32,1) */ select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(b
h.class,1,'data block',2,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'exte
nt map',                8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index bloc
k',13,'file header block',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',
18,'undo block'         ) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tc
h,         decode(mod(flag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.
data_object_id and     o.data_object_id in         (select data_object_id           from dba_objects          where object_name = :tabl
e_name and owner = :owner         )) group by block_cla

0000000088D58030
/* SQL Analyze(32,1) */ select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(b
h.class,1,'data block',2,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'exte
nt map',                8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index bloc
k',13,'file header block',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',
18,'undo block'         ) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tc
h,         decode(mod(flag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.
data_object_id and     o.data_object_id in         (select data_object_id           from dba_objects          where object_name = :tabl
e_name and owner = :owner         )) group by block_cla

000000008C85E5B0 SYS
V_$INSTANCE

0000000088D85F18
72ed500d1e806b2611e4b2e479f3a1a

0000000088F52240
9e304c31c622398dc4a8d959dc6631

0000000060DCEA58
SELECT TABLESPACE_NA

000000008CA06FF0 $BUILD$
c6d38da8  9c975d

0000000088C9A198
SELECT XMLELEMENT( "

0000000092D3E0B8 SYS
JOB_DEFINITION_ARRAY

000000008B2BD7A8
select substrb(dump(

0000000060CC3E68
a01df952900a36cd4623b548efeb5a9b

0000000088FA2D98
a458465a8a2413ef11ba8b29c5d37d31

000000008B092C50
SELECT /*+ leading(S

0000000092C43B18
SELECT SUBSTR(A.FIND

000000008B33C608
de6d90c650541e2d9fcd92e08b99f995

000000008CA85468 MDSYS
DUAL

0000000088EA5B60
insert into wrh$_waitstat   (snap_id, dbid, instance_number, class, wait_count, time)  select    :snap_id, :dbid, :instance_number, cla
ss, "COUNT", time  from    v$waitstat  order by    class

000000008CA091B0
insert into wrh$_waitstat   (snap_id, dbid, instance_number, class, wait_count, time)  select    :snap_id, :dbid, :instance_number, cla
ss, "COUNT", time  from    v$waitstat  order by    class

0000000088D5CC98
insert into wrh$_waitstat   (snap_id, dbid, instance_number, class, wait_count, time)  select    :snap_id, :dbid, :instance_number, cla
ss, "COUNT", time  from    v$waitstat  order by    class

000000008B3C0780
insert into wrh$_waitstat   (snap_id, dbid, instance_number, class, wait_count, time)  select    :snap_id, :dbid, :instance_number, cla
ss, "COUNT", time  from    v$waitstat  order by    class

0000000088DCA058
insert into wrh$_waitstat   (snap_id, dbid, instance_number, class, wait_count, time)  select    :snap_id, :dbid, :instance_number, cla
ss, "COUNT", time  from    v$waitstat  order by    class

0000000088EA5FE0
insert into wrh$_waitstat   (snap_id, dbid, instance_number, class, wait_count, time)  select    :snap_id, :dbid, :instance_number, cla
ss, "COUNT", time  from    v$waitstat  order by    class

0000000092D0C0E0 SYS
LOBFRAG$

000000008CBE5E90
b227e8c53113383e437ecaf0e0b1d0ed

0000000092C8E888
INSERT INTO SYS.WRI$_ADV_EXECUTIONS (TASK_ID, ID, NAME, DESCRIPTION, EXEC_TYPE, EXEC_TYPE_ID, EXEC_START, EXEC_MTIME, STATUS, STATUS_MS
G_ID, ERROR_MSG_ID, ADVISOR_ID) VALUES (:B8 , :B7 , :B6 , SUBSTR(:B5 , 1, 256), :B4 , :B3 , SYSDATE, SYSDATE, :B2 , 0, 0, :B1 )

000000008B0CDA88
INSERT INTO SYS.WRI$_ADV_EXECUTIONS (TASK_ID, ID, NAME, DESCRIPTION, EXEC_TYPE, EXEC_TYPE_ID, EXEC_START, EXEC_MTIME, STATUS, STATUS_MS
G_ID, ERROR_MSG_ID, ADVISOR_ID) VALUES (:B8 , :B7 , :B6 , SUBSTR(:B5 , 1, 256), :B4 , :B3 , SYSDATE, SYSDATE, :B2 , 0, 0, :B1 )

0000000060EA2100
INSERT INTO SYS.WRI$_ADV_EXECUTIONS (TASK_ID, ID, NAME, DESCRIPTION, EXEC_TYPE, EXEC_TYPE_ID, EXEC_START, EXEC_MTIME, STATUS, STATUS_MS
G_ID, ERROR_MSG_ID, ADVISOR_ID) VALUES (:B8 , :B7 , :B6 , SUBSTR(:B5 , 1, 256), :B4 , :B3 , SYSDATE, SYSDATE, :B2 , 0, 0, :B1 )

0000000060D19C38
INSERT INTO SYS.WRI$_ADV_EXECUTIONS (TASK_ID, ID, NAME, DESCRIPTION, EXEC_TYPE, EXEC_TYPE_ID, EXEC_START, EXEC_MTIME, STATUS, STATUS_MS
G_ID, ERROR_MSG_ID, ADVISOR_ID) VALUES (:B8 , :B7 , :B6 , SUBSTR(:B5 , 1, 256), :B4 , :B3 , SYSDATE, SYSDATE, :B2 , 0, 0, :B1 )

0000000060FFEB50
INSERT INTO SYS.WRI$_ADV_EXECUTIONS (TASK_ID, ID, NAME, DESCRIPTION, EXEC_TYPE, EXEC_TYPE_ID, EXEC_START, EXEC_MTIME, STATUS, STATUS_MS
G_ID, ERROR_MSG_ID, ADVISOR_ID) VALUES (:B8 , :B7 , :B6 , SUBSTR(:B5 , 1, 256), :B4 , :B3 , SYSDATE, SYSDATE, :B2 , 0, 0, :B1 )

000000008C91E438
INSERT INTO SYS.WRI$_ADV_EXECUTIONS (TASK_ID, ID, NAME, DESCRIPTION, EXEC_TYPE, EXEC_TYPE_ID, EXEC_START, EXEC_MTIME, STATUS, STATUS_MS
G_ID, ERROR_MSG_ID, ADVISOR_ID) VALUES (:B8 , :B7 , :B6 , SUBSTR(:B5 , 1, 256), :B4 , :B3 , SYSDATE, SYSDATE, :B2 , 0, 0, :B1 )

0000000060EF4138
select substrb(dump(

00000000652C7CB0
5e605316f36ef2a3b633672df3d99cf1

000000008B3A3FC8
f2eeafafb910b43b12922cc3f1408a2e

000000008B1B5F00
SELECT HSECS FROM V$

0000000088FC7538
select WRM$_DEEP_PURGE_INTERVAL.nextval into :bind1 from dual

0000000088E65F90
select WRM$_DEEP_PURGE_INTERVAL.nextval into :bind1 from dual

000000008B39E910
SELECT REFERENCED_NA

0000000092C83928 SYS
I_HH_OBJ#_COL#

000000008CAC8888
dacff0cad3a59efef7da981b31fa0cc

000000008C869198
6c3caa1cddf5a4b53c73b6868a5f8a96

0000000060F0E178
745538aafafd868df52ee6b115a5bb59

000000008C84DE70
begin   :owner :=upper('scott');   :table_name := upper('hash_tab;e'); end;

0000000065333F50
begin   :owner :=upper('scott');   :table_name := upper('hash_tab;e'); end;

0000000060E41B50 $BUILD$
c32b96c14278d620

00000000652C21F0
select x.inst_id,x.indx+1,ksppinm,ksppity,ksppstvl, ksppstdvl, ksppstdf,  decode(bitand(ksppiflg/256,1),1,'TRUE','FALSE'),  decode(bita
nd(ksppiflg/65536,3),1,'IMMEDIATE',2,'DEFERRED',                                  3,'IMMEDIATE','FALSE'),  decode(bitand(ksppiflg,4),4,
'FALSE',                                     decode(bitand(ksppiflg/65536,3), 0, 'FALSE', 'TRUE')),     decode(bitand(ksppstvf,7),1,'MO
DIFIED','FALSE'),  decode(bitand(ksppstvf,2),2,'TRUE','FALSE'),  decode(bitand(ksppilrmflg/64, 1), 1, 'TRUE', 'FALSE'),  decode(bitand(
ksppilrmflg/268435456, 1), 1, 'TRUE', 'FALSE'),  ksppdesc, ksppstcmnt, ksppihash from x$ksppi x, x$ksppsv y  where (x.indx = y.indx) an
d  bitand(ksppiflg,268435456) = 0 and  ((translate(ksppinm,'_','#') not like '##%') and    ((translate(ksppinm,'_','#') not like '#%')
     or (ksppstdf = 'FALSE') or      (bitand(ksppstvf,5) > 0)))

000000008B1AECB0
select x.inst_id,x.indx+1,ksppinm,ksppity,ksppstvl, ksppstdvl, ksppstdf,  decode(bitand(ksppiflg/256,1),1,'TRUE','FALSE'),  decode(bita
nd(ksppiflg/65536,3),1,'IMMEDIATE',2,'DEFERRED',                                  3,'IMMEDIATE','FALSE'),  decode(bitand(ksppiflg,4),4,
'FALSE',                                     decode(bitand(ksppiflg/65536,3), 0, 'FALSE', 'TRUE')),     decode(bitand(ksppstvf,7),1,'MO
DIFIED','FALSE'),  decode(bitand(ksppstvf,2),2,'TRUE','FALSE'),  decode(bitand(ksppilrmflg/64, 1), 1, 'TRUE', 'FALSE'),  decode(bitand(
ksppilrmflg/268435456, 1), 1, 'TRUE', 'FALSE'),  ksppdesc, ksppstcmnt, ksppihash from x$ksppi x, x$ksppsv y  where (x.indx = y.indx) an
d  bitand(ksppiflg,268435456) = 0 and  ((translate(ksppinm,'_','#') not like '##%') and    ((translate(ksppinm,'_','#') not like '#%')
     or (ksppstdf = 'FALSE') or      (bitand(ksppstvf,5) > 0)))

000000008CAB8070
SELECT LOCKID FROM DBMS_LOCK_ALLOCATED WHERE NAME = :B1 FOR UPDATE

000000008B21A750
SELECT LOCKID FROM DBMS_LOCK_ALLOCATED WHERE NAME = :B1 FOR UPDATE

000000008B0377E8
SELECT LOCKID FROM DBMS_LOCK_ALLOCATED WHERE NAME = :B1 FOR UPDATE

000000008B20BA38
SELECT LOCKID FROM DBMS_LOCK_ALLOCATED WHERE NAME = :B1 FOR UPDATE

0000000060E1BE50
SELECT LOCKID FROM DBMS_LOCK_ALLOCATED WHERE NAME = :B1 FOR UPDATE

000000008B0B2318
SELECT LOCKID FROM DBMS_LOCK_ALLOCATED WHERE NAME = :B1 FOR UPDATE

000000008B3E0F50
SELECT LOCKID FROM DBMS_LOCK_ALLOCATED WHERE NAME = :B1 FOR UPDATE

000000008CAA9CB8 APEX_030200
WWV_FLOW_RENDER_QUERY

0000000088FC17D8
90240e97355a0bf43ce680c269c3dfe

000000008CAD0C00 SYS
SYS_STUB_FOR_PURITY_ANALYSIS

0000000088C8EAE8
UPDATE WRI$_SQLSET_S

0000000088DB8988
SELECT RECID, RECID,

0000000060EB2650
SELECT EXTRACTVALUE(

000000008CAE1610
a63862e7842f585ee82d2fc3a0bf1336

0000000092C48690
UPDATE STREAMS$_SPLI

000000008C9FCAB8 SYS
SCHEDULER$_JOB_ARGUMENT

0000000088CA9FA8
SELECT COUNT(*) FROM

000000008C86FF38
delete from objauth$ where obj#=:1

000000008CACE6E8
delete from objauth$ where obj#=:1

000000008C8703B8
delete from objauth$ where obj#=:1

0000000060F5FA20
539c4e2b345582bc74896c5de64071f

000000008CBC08B8 SYS
KET$_CLIENT_CONFIG

0000000060F56C20
SELECT CASE WHEN PARTITION_NAME IS NULL THEN 'Current Table' ELSE PARTITION_NAME END AS PARTITION_NAME , CASE WHEN PARTITION_POSITION I
S NULL THEN 'Current Table' ELSE TO_CHAR(PARTITION_POSITION) END AS PARTITION_POSITION,STALE_STATS,LAST_ANALYZED FROM DBA_TAB_STATISTIC
S WHERE OWNER = UPPER(:B2 ) AND TABLE_NAME = UPPER(:B1 )

000000008B14E188
SELECT CASE WHEN PARTITION_NAME IS NULL THEN 'Current Table' ELSE PARTITION_NAME END AS PARTITION_NAME , CASE WHEN PARTITION_POSITION I
S NULL THEN 'Current Table' ELSE TO_CHAR(PARTITION_POSITION) END AS PARTITION_POSITION,STALE_STATS,LAST_ANALYZED FROM DBA_TAB_STATISTIC
S WHERE OWNER = UPPER(:B2 ) AND TABLE_NAME = UPPER(:B1 )

0000000065313500
SELECT CASE WHEN PARTITION_NAME IS NULL THEN 'Current Table' ELSE PARTITION_NAME END AS PARTITION_NAME , CASE WHEN PARTITION_POSITION I
S NULL THEN 'Current Table' ELSE TO_CHAR(PARTITION_POSITION) END AS PARTITION_POSITION,STALE_STATS,LAST_ANALYZED FROM DBA_TAB_STATISTIC
S WHERE OWNER = UPPER(:B2 ) AND TABLE_NAME = UPPER(:B1 )

000000008CA660A8
fbdd5a53ea38d7d96fbce048f1b2fc9c

000000008B3A8C68
SELECT COUNT(*) FROM

000000008CB7D5C8
delete from WRH$_SGA_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B153430
delete from WRH$_SGA_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088DEC248
SELECT COUNT(*) FROM

000000008B05D9B0
SELECT COUNT(*) FROM

000000008B1D7AB8
ad5f138a6c819f5afe90e7a4ae2c50a0

0000000088FAF898
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088E188B0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CA32C88
select decode(u.type#, 2, u.ext_username, u.name), o.name,        t.update$, t.insert$, t.delete$, t.enabled,        decode(bitand(t.pr
operty, 8192),8192, 1, 0),        decode(bitand(t.property, 65536), 65536, 1, 0),       decode(bitand(t.property, 131072), 131072, 1, 0
),       (select o.name from obj$ o          where o.obj# = u.spare2 and o.type# =57)  from sys.obj$ o, sys.user$ u, sys.trigger$ t, sy
s.obj$ bo where t.baseobject=bo.obj# and bo.name = :1 and bo.spare3 = :2  and bo.namespace = 1  and t.obj#=o.obj# and o.owner#=u.user#
 and o.type# = 12 and bitand(property,16)=0 and bitand(property,8)=0  order by o.obj#

000000008CA465C0
select decode(u.type#, 2, u.ext_username, u.name), o.name,        t.update$, t.insert$, t.delete$, t.enabled,        decode(bitand(t.pr
operty, 8192),8192, 1, 0),        decode(bitand(t.property, 65536), 65536, 1, 0),       decode(bitand(t.property, 131072), 131072, 1, 0
),       (select o.name from obj$ o          where o.obj# = u.spare2 and o.type# =57)  from sys.obj$ o, sys.user$ u, sys.trigger$ t, sy
s.obj$ bo where t.baseobject=bo.obj# and bo.name = :1 and bo.spare3 = :2  and bo.namespace = 1  and t.obj#=o.obj# and o.owner#=u.user#
 and o.type# = 12 and bitand(property,16)=0 and bitand(property,8)=0  order by o.obj#

0000000065355150
select decode(u.type#, 2, u.ext_username, u.name), o.name,        t.update$, t.insert$, t.delete$, t.enabled,        decode(bitand(t.pr
operty, 8192),8192, 1, 0),        decode(bitand(t.property, 65536), 65536, 1, 0),       decode(bitand(t.property, 131072), 131072, 1, 0
),       (select o.name from obj$ o          where o.obj# = u.spare2 and o.type# =57)  from sys.obj$ o, sys.user$ u, sys.trigger$ t, sy
s.obj$ bo where t.baseobject=bo.obj# and bo.name = :1 and bo.spare3 = :2  and bo.namespace = 1  and t.obj#=o.obj# and o.owner#=u.user#
 and o.type# = 12 and bitand(property,16)=0 and bitand(property,8)=0  order by o.obj#

000000008CA33108
select decode(u.type#, 2, u.ext_username, u.name), o.name,        t.update$, t.insert$, t.delete$, t.enabled,        decode(bitand(t.pr
operty, 8192),8192, 1, 0),        decode(bitand(t.property, 65536), 65536, 1, 0),       decode(bitand(t.property, 131072), 131072, 1, 0
),       (select o.name from obj$ o          where o.obj# = u.spare2 and o.type# =57)  from sys.obj$ o, sys.user$ u, sys.trigger$ t, sy
s.obj$ bo where t.baseobject=bo.obj# and bo.name = :1 and bo.spare3 = :2  and bo.namespace = 1  and t.obj#=o.obj# and o.owner#=u.user#
 and o.type# = 12 and bitand(property,16)=0 and bitand(property,8)=0  order by o.obj#

000000008C8C84A8
d7e453cde05fb7216c59b5398e3917a3

0000000088F58DB8
/* SQL Analyze(1) */

0000000092C76E20 SYS
X$KCBWAIT

0000000088C6F2C0
UPDATE RLM$RULESET S

0000000060FC5B40
table_24_9_1a7b_0_19

0000000092D1BA28
9620cfe1e7966914715f75e388f2943b

000000008CA5F388
SELECT * FROM ALL_EV

000000008B10D1D0
5bcf9f49f8ae39470a6d57e18242a83

00000000652DC150
ddd39f8e830711e5aa99b8941e28acc5

000000008B36D2B0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"STATUS" val,count(*) cnt  from "
SYS"."STATS_TARGET$" t  where "STATUS" is not null  group by "STATUS") order by val

0000000088D23EC0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"STATUS" val,count(*) cnt  from "
SYS"."STATS_TARGET$" t  where "STATUS" is not null  group by "STATUS") order by val

000000008B340548
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"STATUS" val,count(*) cnt  from "
SYS"."STATS_TARGET$" t  where "STATUS" is not null  group by "STATUS") order by val

000000008CBDDF60
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"STATUS" val,count(*) cnt  from "
SYS"."STATS_TARGET$" t  where "STATUS" is not null  group by "STATUS") order by val

000000008B2AC138 $BUILD$
b6917fa597638e12

0000000060E565D0
6a618680506b82bd2525327282df4b5e

0000000060F65370 SYS
WRH$_TEMPFILE

0000000092D82FC0 SYS
DBMS_OBFUSCATION_TOOLKIT_FFI

000000008CB60CC8
2afbbb4a8fa54c49646cd51182baa5

00000000652F0BA0
select     COLUMN_NAME,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col,     NUM_DISTINCT,     DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STA
TS,     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tab_columns t where     table_name = :table_nam
e and owner = upper(nvl(:owner,user))

00000000652FE340
select     COLUMN_NAME,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col,     NUM_DISTINCT,     DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STA
TS,     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tab_columns t where     table_name = :table_nam
e and owner = upper(nvl(:owner,user))

0000000060DEE058 SYS
WRI$_SQLTEXT_REFCOUNT

000000008B08EF80 SYS
JIJOIN$

0000000088C8D0B8
UPDATE WRI$_SQLSET_S

0000000065338260
6fdba27e87fcd73aa2122db63c937eac

0000000092D82CB0
f0cfa2e63e1fda46fbf3cdf9535d1a6c

000000008B2AFE48 SYS
ALL_CONS_COLUMNS

000000006533CEB0 SYS
KU$_TACTION_LIST_T

000000008CADAB78
SELECT SYSTIMESTAMP

0000000060D7A3C8 SYS
DBA_HIST_SQL_PLAN

0000000088CED0E8 SYS
DBA_HIST_PARAMETER

0000000060C572A0
SELECT COUNT(*) FROM

000000008B297FE0 $BUILD$
5bbbf1c3821d1f5c

0000000060F02E58 PUBLIC
T

0000000060F68530
declare     cursor c_i is SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) a
s TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,        round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS =
 'UNUSABLE' then 'NO' else 'YES' end USABLE,        decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),null,'None',        to_char(b.last
_analyzed,'yymmdd hh24:mi')) as last_analyzed,        case when b.visibility = 'VISIBLE' then 'YES' else 'NO ' end visibility,        c
ase when uniqueness = 'UNIQUE' then 'YES' else 'NO ' end UNIQUENESS   FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C ,DBA_TAB_CO
LUMNS T  WHERE A.INDEX_NAME = B.INDEX_NAME    AND T.TABLE_NAME = A.TABLE_NAME    AND A.COLUMN_NAME = T.COLUMN_NAME    AND A.TABLE_NAME
= :table_name    AND a.INDEX_OWNER = :owner    AND C.SEGMENT_NAME = A.INDEX_NAME  ORDER BY INDEX_NAME, COLUMN_POSITION;     v_i c_i%row
type;      cursor c_foreign_key_without_index is select

000000008B1E6658
declare     cursor c_i is SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) a
s TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,        round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS =
 'UNUSABLE' then 'NO' else 'YES' end USABLE,        decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),null,'None',        to_char(b.last
_analyzed,'yymmdd hh24:mi')) as last_analyzed,        case when b.visibility = 'VISIBLE' then 'YES' else 'NO ' end visibility,        c
ase when uniqueness = 'UNIQUE' then 'YES' else 'NO ' end UNIQUENESS   FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C ,DBA_TAB_CO
LUMNS T  WHERE A.INDEX_NAME = B.INDEX_NAME    AND T.TABLE_NAME = A.TABLE_NAME    AND A.COLUMN_NAME = T.COLUMN_NAME    AND A.TABLE_NAME
= :table_name    AND a.INDEX_OWNER = :owner    AND C.SEGMENT_NAME = A.INDEX_NAME  ORDER BY INDEX_NAME, COLUMN_POSITION;     v_i c_i%row
type;      cursor c_foreign_key_without_index is select

000000008B2DDA38
select substrb(dump(

00000000653A97F0 $BUILD$
7d2d220f7f9696b9

0000000065381A80
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S")  */ 1 AS C1 FROM "SYS"."SEG$" "
S" WHERE ("S"."TYPE#"=1 OR "S"."TYPE#"=10) AND (DECODE("S"."TYPE#",1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%')) innerQuery

0000000060C4CE80
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S")  */ 1 AS C1 FROM "SYS"."SEG$" "
S" WHERE ("S"."TYPE#"=1 OR "S"."TYPE#"=10) AND (DECODE("S"."TYPE#",1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%')) innerQuery

0000000060C3A4F0
9c6ebdcee63ae117eddd89b07512c493

000000008C9C7608
select substrb(dump(

000000008CA92130
SELECT REQUIRED_CHEC

000000008B27C0F0 $BUILD$
f52ee6b115a5bb59

000000008B2A5CC8
SELECT * FROM RLM$EQ

0000000088D24140
SELECT MAX(NEXT_TIME

000000008B152528
UPDATE RLM$EVENTSTRU

000000008B3BF658
24262613a5e0af7564e34b633ad4ac03

0000000060FB9810
declare     cursor c_i is SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) a
s TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,        round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS =
 'UNUSABLE' then 'NO' else 'YES' end USABLE,        decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),null,'None',        to_char(b.last
_analyzed,'yymmdd hh24:mi')) as last_analyzed,        case when b.visibility = 'VISIBLE' then 'YES' else 'NO ' end visibility,        c
ase when uniqueness = 'UNIQUE' then 'YES' else 'NO ' end UNIQUENESS   FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C  WHERE A.IN
DEX_NAME = B.INDEX_NAME    AND A.TABLE_NAME = :table_name    AND a.INDEX_OWNER = :owner    AND C.SEGMENT_NAME = A.INDEX_NAME  ORDER BY
INDEX_NAME, COLUMN_POSITION;     v_i c_i%rowtype;      cursor c_foreign_key_without_index is select owner,
                     table_name,

0000000060D9D6D0
declare     cursor c_i is SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) a
s TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,        round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS =
 'UNUSABLE' then 'NO' else 'YES' end USABLE,        decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),null,'None',        to_char(b.last
_analyzed,'yymmdd hh24:mi')) as last_analyzed,        case when b.visibility = 'VISIBLE' then 'YES' else 'NO ' end visibility,        c
ase when uniqueness = 'UNIQUE' then 'YES' else 'NO ' end UNIQUENESS   FROM DBA_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C  WHERE A.IN
DEX_NAME = B.INDEX_NAME    AND A.TABLE_NAME = :table_name    AND a.INDEX_OWNER = :owner    AND C.SEGMENT_NAME = A.INDEX_NAME  ORDER BY
INDEX_NAME, COLUMN_POSITION;     v_i c_i%rowtype;      cursor c_foreign_key_without_index is select owner,
                     table_name,

000000008C8DE7F8
baccf0785ee0dfca7cdb9892f42a08

0000000088DCC940
       begin          :cmp_min := dbms_backup_restore.protocol_component_number_min;           :cmp_max := dbms_backup_restore.protocol
_component_number_max;           :pkg_vsn := to_char(:vsn_max, 'fm00')||'.'||                      to_char(:rel_max, 'fm00')||'.'||
                  to_char(:upd_max, 'fm00')||'.'||                      to_char(:cmp_max, 'fm00');             end;

0000000060EB5E70
       begin          :cmp_min := dbms_backup_restore.protocol_component_number_min;           :cmp_max := dbms_backup_restore.protocol
_component_number_max;           :pkg_vsn := to_char(:vsn_max, 'fm00')||'.'||                      to_char(:rel_max, 'fm00')||'.'||
                  to_char(:upd_max, 'fm00')||'.'||                      to_char(:cmp_max, 'fm00');             end;

0000000088E2A3D8
9acdc455870a5f559e0d75fdb4b04d9

000000008CB8F6C8
INSERT INTO BSLN_THR

000000008B0D0528
41b20c07ba4ce083fbc3311f50420bf1

0000000060E1CBA0
f0be62c18be0a8b7bf583da785404ab1

0000000060E9DCE0
select substrb(dump(

0000000060EDA590
8562107ad821cbb5741a8ac1bfb6fec3

000000008C985A20
SELECT BITAND(RSET_P

0000000088CAAFA8 SYS
DBMS_ADVISOR

0000000060F1D740
9e304c31c622398dc4a8d959dc6631

000000008CA91C40
SELECT DISTINCT RESE

0000000092CC7BC8
SELECT /*+ INDEX(sqlobj$ (name obj_type)) */                                    signature, category, plan_id
                     FROM sqlobj$                                                                  WHERE name = :1
                                                AND obj_type = :2

0000000060E5DD40
SELECT /*+ INDEX(sqlobj$ (name obj_type)) */                                    signature, category, plan_id
                     FROM sqlobj$                                                                  WHERE name = :1
                                                AND obj_type = :2

000000008B2EC028
select  SID , STATISTIC# , VALUE from GV$MYSTAT where inst_id = USERENV('Instance')

000000008B16BEB0
select  SID , STATISTIC# , VALUE from GV$MYSTAT where inst_id = USERENV('Instance')

000000008B2B39A0 SYS
WRH$_SGA_TARGET_ADVICE

000000008B3696F8
83

0000000088DA4968
99da9acfaef4e42132827ed7ba0c85a6

0000000088D17280
SELECT 1 FROM DUAL W

000000008B1A5BE8
684d8e9d999a406b5e3e93555516a22a

0000000088EC2760 SYS
AQ$_REPLAY_INFO

00000000652E6EB0
6c4f1fc14bdceab5b780b17e24129670

0000000092C86908 SYS
X$KSFDSTCMP

0000000060F50950
c06d2f97271bf7898f181e87eef98e0

000000008CBE6358
select substrb(dump(

0000000088F467E8
7bca5ce219d8b8add07674a81178396f

0000000088C591F8
SELECT ERROR_MESSAGE

0000000088CBCF40
select substrb(dump(

000000008CA0D9B0
SELECT NAME FROM USER$ WHERE USER# = :B1

000000008C929378
SELECT NAME FROM USER$ WHERE USER# = :B1

0000000088E2B058
3b642487a7c95796c43e978766a26558

000000008C85F060 DBSNMP
BSLN_TIMEGROUPS

0000000088FBDE48
SELECT HOUR, INTRADAY, EXTRADAY FROM BSLN_TIMEGROUPS

000000008B3F1BF8
SELECT HOUR, INTRADAY, EXTRADAY FROM BSLN_TIMEGROUPS

0000000060E08468
15af3f50fe128a50ac520c7888175c5e

0000000088CD4388
SELECT /*+ no_monito

000000008C9C6358
select substrb(dump(

000000008CBF1288
402565722d47eca58e6b32bd5c88a036

0000000088E16348
begin dbms_stats.copy_table_stats('SYS', :bind1, :bind2, :bind3, flags=>1, force=>TRUE); end;

000000008C899158
begin dbms_stats.copy_table_stats('SYS', :bind1, :bind2, :bind3, flags=>1, force=>TRUE); end;

0000000088E61388
INSERT INTO WWV_FLOW

0000000088E7AE10 SYS
GV$BUFFER_POOL_STATISTICS

000000008B05E1F0
SELECT P.GROUP# FROM

0000000060E6B508
SELECT R.RULE_OWNER,

0000000088D2D8C8
SELECT NVL(TO_NUMBER

0000000092CF6588 $BUILD$
9620e8d8bfd8255d

000000008C8BADC8
205ec66ca127e556ca0d2c79e574a366

000000008CB16768
select substrb(dump(

0000000060DCB068
6baf1288053c9fc1181bbddcb842df4

0000000092D32BF8 EXFSYS
RLM$VALIDPRIVS

0000000092C408E8
dc457dd8f99e07f5c5882b533d01b0ed

0000000060CC79D0
b8c386265b6c44d09f649250e82c6e6c

000000008CBD5830 $BUILD$
a62005c2ccbccde3

000000008CBF08D8

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
SELECT PEM.PRIM_ESLI

0000000088DA9F78 $BUILD$
8209801e6479e686

0000000060F6B3E0
6ac3207f3c3be84ba9657d74794fbe7a

000000008B2E0148 SYS
AQ$_REG_INFO_LIST

000000008C89D498
UPDATE wri$_adv_addm_tasks SET    actual_analysis = :aa,        database_time = :dbt,        active_sessions = round(:dbt / (1000000 *
:sint), 2),        perc_flush_time = round(:ft / :sint, 2),        perc_mw_time = round(:mw / :sint, 2) WHERE  task_id = :tid

0000000092C72008
UPDATE wri$_adv_addm_tasks SET    actual_analysis = :aa,        database_time = :dbt,        active_sessions = round(:dbt / (1000000 *
:sint), 2),        perc_flush_time = round(:ft / :sint, 2),        perc_mw_time = round(:mw / :sint, 2) WHERE  task_id = :tid

0000000060F7A300
UPDATE wri$_adv_addm_tasks SET    actual_analysis = :aa,        database_time = :dbt,        active_sessions = round(:dbt / (1000000 *
:sint), 2),        perc_flush_time = round(:ft / :sint, 2),        perc_mw_time = round(:mw / :sint, 2) WHERE  task_id = :tid

0000000060F58660
UPDATE wri$_adv_addm_tasks SET    actual_analysis = :aa,        database_time = :dbt,        active_sessions = round(:dbt / (1000000 *
:sint), 2),        perc_flush_time = round(:ft / :sint, 2),        perc_mw_time = round(:mw / :sint, 2) WHERE  task_id = :tid

000000008C9741B8
UPDATE wri$_adv_addm_tasks SET    actual_analysis = :aa,        database_time = :dbt,        active_sessions = round(:dbt / (1000000 *
:sint), 2),        perc_flush_time = round(:ft / :sint, 2),        perc_mw_time = round(:mw / :sint, 2) WHERE  task_id = :tid

0000000088F66CE8
select ts# from ts$ where ts$.online$ != 3 and bitand(flags,2048) != 2048

0000000060E52B20
select ts# from ts$ where ts$.online$ != 3 and bitand(flags,2048) != 2048

0000000060C93C18
8dfc26be2f9e09da72690448ee05249f

0000000088E9FFC0 $BUILD$
 d8dbb9b 42b5153

000000008CB59B90
7df68573e5d0a20a8692d0cdcedea657

0000000088E9D970 SYS
WRH$_ENQUEUE_STAT

000000008B25DD40
b554460c7e9581447245acfa76d7a5bc

0000000088F69B88
SELECT parameter_type#, parameter_value, parameter_flags, nvl(description, 'NULL') FROM sys.dba_advisor_exec_parameters WHERE task_id =
 :1 AND parameter_name = :2 AND execution_name = :3

000000008C9084C8
SELECT parameter_type#, parameter_value, parameter_flags, nvl(description, 'NULL') FROM sys.dba_advisor_exec_parameters WHERE task_id =
 :1 AND parameter_name = :2 AND execution_name = :3

0000000060E294E0
SELECT parameter_type#, parameter_value, parameter_flags, nvl(description, 'NULL') FROM sys.dba_advisor_exec_parameters WHERE task_id =
 :1 AND parameter_name = :2 AND execution_name = :3

000000008B1D8F28
SELECT parameter_type#, parameter_value, parameter_flags, nvl(description, 'NULL') FROM sys.dba_advisor_exec_parameters WHERE task_id =
 :1 AND parameter_name = :2 AND execution_name = :3

0000000088FB5E88
SELECT parameter_type#, parameter_value, parameter_flags, nvl(description, 'NULL') FROM sys.dba_advisor_exec_parameters WHERE task_id =
 :1 AND parameter_name = :2 AND execution_name = :3

0000000060E8B070
select substrb(dump(

0000000092D7CDB8
SELECT INCARNATION#

000000008CB54840
select /*+  no_paral

0000000060ED54F0
select min(minbkt),m

0000000088D56B38
84f93fd34bc4e20a5f25d27a377d5e5

000000008B086170
SELECT /*+ ordered u

0000000060F88CC0 SCOTT
V$BUFFER_POOL

000000008B171A30
26947ac91d45c1242b247fc5f6b6f088

0000000088DB0528
insert into wrh$_sql_bind_metadata   (snap_id, dbid,    sql_id, name, position, dup_position,    datatype, datatype_string,    characte
r_sid, precision, scale, max_length)  SELECT /*+ ordered use_nl(bnd) index(bnd sql_id) */      :lah_snap_id, :dbid,      bnd.sql_id, na
me, position, dup_position,      datatype, datatype_string,      character_sid, precision, scale, max_length    FROM      x$kewrattrnew
      new,      x$kewrsqlidtab     tab,      v$sql_bind_capture bnd     WHERE new.str1_kewrattr     = tab.sqlid_kewrsie      AND tab.sq
lid_kewrsie     = bnd.sql_id      AND tab.childaddr_kewrsie = bnd.child_address

000000008C87C8A8
insert into wrh$_sql_bind_metadata   (snap_id, dbid,    sql_id, name, position, dup_position,    datatype, datatype_string,    characte
r_sid, precision, scale, max_length)  SELECT /*+ ordered use_nl(bnd) index(bnd sql_id) */      :lah_snap_id, :dbid,      bnd.sql_id, na
me, position, dup_position,      datatype, datatype_string,      character_sid, precision, scale, max_length    FROM      x$kewrattrnew
      new,      x$kewrsqlidtab     tab,      v$sql_bind_capture bnd     WHERE new.str1_kewrattr     = tab.sqlid_kewrsie      AND tab.sq
lid_kewrsie     = bnd.sql_id      AND tab.childaddr_kewrsie = bnd.child_address

0000000088FB84E8
insert into wrh$_sql_bind_metadata   (snap_id, dbid,    sql_id, name, position, dup_position,    datatype, datatype_string,    characte
r_sid, precision, scale, max_length)  SELECT /*+ ordered use_nl(bnd) index(bnd sql_id) */      :lah_snap_id, :dbid,      bnd.sql_id, na
me, position, dup_position,      datatype, datatype_string,      character_sid, precision, scale, max_length    FROM      x$kewrattrnew
      new,      x$kewrsqlidtab     tab,      v$sql_bind_capture bnd     WHERE new.str1_kewrattr     = tab.sqlid_kewrsie      AND tab.sq
lid_kewrsie     = bnd.sql_id      AND tab.childaddr_kewrsie = bnd.child_address

0000000088DB09A8
insert into wrh$_sql_bind_metadata   (snap_id, dbid,    sql_id, name, position, dup_position,    datatype, datatype_string,    characte
r_sid, precision, scale, max_length)  SELECT /*+ ordered use_nl(bnd) index(bnd sql_id) */      :lah_snap_id, :dbid,      bnd.sql_id, na
me, position, dup_position,      datatype, datatype_string,      character_sid, precision, scale, max_length    FROM      x$kewrattrnew
      new,      x$kewrsqlidtab     tab,      v$sql_bind_capture bnd     WHERE new.str1_kewrattr     = tab.sqlid_kewrsie      AND tab.sq
lid_kewrsie     = bnd.sql_id      AND tab.childaddr_kewrsie = bnd.child_address

000000008CAD09E0 APEX_030200
WWV_FLOW_MAIL

000000008C85EE40 DBSNMP
BSLN_STATISTICS

0000000088C5E4E8
34f2a31a4d5371dd3462ac407275c79e

000000008C85D8D0 PUBLIC
DBA_HIST_SNAPSHOT

000000008B216B08
SELECT ID, PROMPT, I

0000000088F96EF0
INSERT INTO SYSTEM.A

000000008C86D258
delete from WRH$_CR_BLOCK_SERVER tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060FC6700
delete from WRH$_CR_BLOCK_SERVER tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B234720
54303ff937dfb8591f61855abcb566cd

000000008B1B39A0
SELECT OBJ# FROM OBJ

0000000088E0CA88
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("ST") FULL("ST") NO_PARALLEL_INDEX(
"ST") */ 1 AS C1, 1 AS C2 FROM "SYS"."STATS_TARGET$" "ST") SAMPLESUB

0000000088FCA518
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("ST") FULL("ST") NO_PARALLEL_INDEX(
"ST") */ 1 AS C1, 1 AS C2 FROM "SYS"."STATS_TARGET$" "ST") SAMPLESUB

000000008CBAEB08
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("ST") FULL("ST") NO_PARALLEL_INDEX(
"ST") */ 1 AS C1, 1 AS C2 FROM "SYS"."STATS_TARGET$" "ST") SAMPLESUB

0000000060FAB6C0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("ST") FULL("ST") NO_PARALLEL_INDEX(
"ST") */ 1 AS C1, 1 AS C2 FROM "SYS"."STATS_TARGET$" "ST") SAMPLESUB

000000008B140148
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("ST") FULL("ST") NO_PARALLEL_INDEX(
"ST") */ 1 AS C1, 1 AS C2 FROM "SYS"."STATS_TARGET$" "ST") SAMPLESUB

0000000060FCB8E0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("ST") FULL("ST") NO_PARALLEL_INDEX(
"ST") */ 1 AS C1, 1 AS C2 FROM "SYS"."STATS_TARGET$" "ST") SAMPLESUB

000000008C9ED0C8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("ST") FULL("ST") NO_PARALLEL_INDEX(
"ST") */ 1 AS C1, 1 AS C2 FROM "SYS"."STATS_TARGET$" "ST") SAMPLESUB

000000008B1F37D0 SYS
X$KETOP

0000000088C89628
DELETE WRI$_SQLSET_S

000000008B2124E8
SELECT COUNT(*) FROM

000000006535B0B0
9851785299858990812

000000008B20A468 SYS
XMLTYPE_LIB

0000000088DE37A8
f008bcfc973ba8f11ba988f9a820b824

0000000060FEA6D0 SYS
KU$_LOGLINE1010

000000008B06EDF0
SELECT CASE WHEN BIT

000000008CAB1280 APEX_030200
WWV_FLOW_TEMPLATES

000000008B2D7320
SELECT C.CID_KETCL, W.NUMBER_OF_WINDOWS + 1      FROM X$KETCL C, DBA_SCHEDULER_WINGROUP_MEMBERS WGM,           DBA_SCHEDULER_WINDOW_GRO
UPS W     WHERE C.WGRP_KETCL = WGM.WINDOW_GROUP_NAME       AND C.WGRP_KETCL = W.WINDOW_GROUP_NAME       AND WGM.WINDOW_NAME = :1     OR
DER BY 1

000000008B30CB80
SELECT C.CID_KETCL, W.NUMBER_OF_WINDOWS + 1      FROM X$KETCL C, DBA_SCHEDULER_WINGROUP_MEMBERS WGM,           DBA_SCHEDULER_WINDOW_GRO
UPS W     WHERE C.WGRP_KETCL = WGM.WINDOW_GROUP_NAME       AND C.WGRP_KETCL = W.WINDOW_GROUP_NAME       AND WGM.WINDOW_NAME = :1     OR
DER BY 1

0000000088F02460
SELECT C.CID_KETCL, W.NUMBER_OF_WINDOWS + 1      FROM X$KETCL C, DBA_SCHEDULER_WINGROUP_MEMBERS WGM,           DBA_SCHEDULER_WINDOW_GRO
UPS W     WHERE C.WGRP_KETCL = WGM.WINDOW_GROUP_NAME       AND C.WGRP_KETCL = W.WINDOW_GROUP_NAME       AND WGM.WINDOW_NAME = :1     OR
DER BY 1

0000000092D61A48 SYS
X$KCCDI2

0000000092D4DEB8
c45ce793c556b2fa70018a193a5eed12

0000000092C6DFC0
select text from view$ where rowid=:1

000000008B335208
select text from view$ where rowid=:1

0000000088D34EE0
select text from view$ where rowid=:1

0000000092CDB688
select text from view$ where rowid=:1

0000000092C6E440
select text from view$ where rowid=:1

0000000060F03AF0 SYS
V$OSSTAT

000000008B097ED0
DELETE FROM SYS.AUX_

0000000060F51C70
7e60ae14fa8dd45bbdef91c23c3f95

000000008B185018 SYS
AUDIT$

000000008CB48490 SYS
GV$DATABASE

0000000088E6ED70 SYS
WRH$_ROWCACHE_SUMMARY_PK

0000000092C975F8 SYS
X$KRSTDEST

0000000092C8C368
SELECT RESETLOGS_CHA

000000008CB01C98 PUBLIC
KU$_JOBSTATUS

000000008B189160
5c6d0558ae1c3b02ae20e7494ffae65e

000000008B376298
1d92984ccb05c8205cb7f7d57b049466

0000000092D47558
e60bc55d810d389d9bea9e43dc31fa9

000000008B1BD000 APEX_030200
WWV_FLOW_WORKSHEETS

000000008B2AD198
SELECT NVL(MAX(F.ID)

0000000060FA2970
748c32db6801e12c2361119db5a194bf

0000000060D35008
SELECT Q.OID, T.OBJN

0000000088F37CE0
a1e06003576529ec3d596ccf2547f69

0000000060FEF430
SELECT TO_NUMBER(NUL

000000008B09DC90 SYS
WRI$_OPTSTAT_SYNOPSIS_HEAD$

000000008CBE45C8
select  SADDR , SID , SERIAL# , AUDSID , PADDR , USER# , USERNAME , COMMAND , OWNERID, TADDR , LOCKWAIT , STATUS , SERVER , SCHEMA# , S
CHEMANAME ,OSUSER , PROCESS , MACHINE , PORT ,  TERMINAL , PROGRAM , TYPE , SQL_ADDRESS , SQL_HASH_VALUE, SQL_ID, SQL_CHILD_NUMBER , SQ
L_EXEC_START, SQL_EXEC_ID, PREV_SQL_ADDR , PREV_HASH_VALUE , PREV_SQL_ID, PREV_CHILD_NUMBER , PREV_EXEC_START , PREV_EXEC_ID , PLSQL_EN
TRY_OBJECT_ID, PLSQL_ENTRY_SUBPROGRAM_ID, PLSQL_OBJECT_ID, PLSQL_SUBPROGRAM_ID, MODULE , MODULE_HASH , ACTION , ACTION_HASH , CLIENT_IN
FO , FIXED_TABLE_SEQUENCE , ROW_WAIT_OBJ# , ROW_WAIT_FILE# , ROW_WAIT_BLOCK# , ROW_WAIT_ROW# , TOP_LEVEL_CALL#,  LOGON_TIME ,  LAST_CAL
L_ET , PDML_ENABLED , FAILOVER_TYPE , FAILOVER_METHOD , FAILED_OVER, RESOURCE_CONSUMER_GROUP, PDML_STATUS, PDDL_STATUS, PQ_STATUS, CURR
ENT_QUEUE_DURATION, CLIENT_IDENTIFIER, BLOCKING_SESSION_STATUS, BLOCKING_INSTANCE, BLOCKING_SESSION, FINAL_BLOCKING_SESSION_STATUS, FIN
AL_BLOCKING_INSTANCE, FINAL_BLOCKING_SESSION, SEQ#, EVE

0000000092C43708
select  SADDR , SID , SERIAL# , AUDSID , PADDR , USER# , USERNAME , COMMAND , OWNERID, TADDR , LOCKWAIT , STATUS , SERVER , SCHEMA# , S
CHEMANAME ,OSUSER , PROCESS , MACHINE , PORT ,  TERMINAL , PROGRAM , TYPE , SQL_ADDRESS , SQL_HASH_VALUE, SQL_ID, SQL_CHILD_NUMBER , SQ
L_EXEC_START, SQL_EXEC_ID, PREV_SQL_ADDR , PREV_HASH_VALUE , PREV_SQL_ID, PREV_CHILD_NUMBER , PREV_EXEC_START , PREV_EXEC_ID , PLSQL_EN
TRY_OBJECT_ID, PLSQL_ENTRY_SUBPROGRAM_ID, PLSQL_OBJECT_ID, PLSQL_SUBPROGRAM_ID, MODULE , MODULE_HASH , ACTION , ACTION_HASH , CLIENT_IN
FO , FIXED_TABLE_SEQUENCE , ROW_WAIT_OBJ# , ROW_WAIT_FILE# , ROW_WAIT_BLOCK# , ROW_WAIT_ROW# , TOP_LEVEL_CALL#,  LOGON_TIME ,  LAST_CAL
L_ET , PDML_ENABLED , FAILOVER_TYPE , FAILOVER_METHOD , FAILED_OVER, RESOURCE_CONSUMER_GROUP, PDML_STATUS, PDDL_STATUS, PQ_STATUS, CURR
ENT_QUEUE_DURATION, CLIENT_IDENTIFIER, BLOCKING_SESSION_STATUS, BLOCKING_INSTANCE, BLOCKING_SESSION, FINAL_BLOCKING_SESSION_STATUS, FIN
AL_BLOCKING_INSTANCE, FINAL_BLOCKING_SESSION, SEQ#, EVE

0000000060CB5360 MDSYS
MDSYS

000000008C8E25A0
3b7bfa5e5d0bb273ebc9c2cfc4292f

000000008B0CAC08
select obj#, dataobj#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, analyzetime, samplesize,
 rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, length(bhiboundval), bhiboundval from indpart$ where bo# = :1 o
rder by part#

0000000088C745D0
select obj#, dataobj#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, analyzetime, samplesize,
 rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, length(bhiboundval), bhiboundval from indpart$ where bo# = :1 o
rder by part#

0000000088FE7270
select obj#, dataobj#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, analyzetime, samplesize,
 rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, length(bhiboundval), bhiboundval from indpart$ where bo# = :1 o
rder by part#

000000008CBAE4A8
select obj#, dataobj#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, analyzetime, samplesize,
 rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, length(bhiboundval), bhiboundval from indpart$ where bo# = :1 o
rder by part#

000000008CBE7B38
select obj#, dataobj#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, analyzetime, samplesize,
 rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, length(bhiboundval), bhiboundval from indpart$ where bo# = :1 o
rder by part#

000000008B37D020
select obj#, dataobj#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, analyzetime, samplesize,
 rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, length(bhiboundval), bhiboundval from indpart$ where bo# = :1 o
rder by part#

000000008B0CB088
select obj#, dataobj#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, analyzetime, samplesize,
 rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, length(bhiboundval), bhiboundval from indpart$ where bo# = :1 o
rder by part#

000000008B315758
6ac3207f3c3be84ba9657d74794fbe7a

000000008CBFE210 SYS
DBMS_AQ_LDAP_LIB

000000008C8492A0
b227e8c53113383e437ecaf0e0b1d0ed

000000008CBB2030
e7e04a13b7fb7ff764c8ab84c22c7d28

000000008CBCBE28
f01a2af668be51e5cacc802cd9c1ae51

0000000088C85C48
SELECT COUNT(*) FROM

000000008C9773E8
3137e563c404483db86fdf4adfebc162

0000000088F87358 $BUILD$
e6daeb9cf7a03ab3

000000008C8364E8
9e304c31c622398dc4a8d959dc6631

000000008B0D0A18
select substrb(dump(

0000000092D58048
select template_id, template_type, baseline_name_prefix,        start_time, end_time, day_of_week,        hour_in_day, duration, expira
tion,        repeat_interval, last_generated,        template_name   from WRM$_BASELINE_TEMPLATE  where dbid = :dbid

0000000088E4E0E8
select template_id, template_type, baseline_name_prefix,        start_time, end_time, day_of_week,        hour_in_day, duration, expira
tion,        repeat_interval, last_generated,        template_name   from WRM$_BASELINE_TEMPLATE  where dbid = :dbid

0000000060CA3390
4bb432d65c5a391a42a5c3fa74472c7a

0000000088D8AF38 APEX_030200
UTL_ENCODE

000000008B1A6318
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_FI
LTER, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OP
T_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery"
) NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OB
J$" "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

00000000652E3380
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_FI
LTER, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OP
T_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery"
) NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OB
J$" "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

000000008C9A6FA0
select kglhdadr, kglnaown, kglnaobj from x$kglob

000000008B24D318
select kglhdadr, kglnaown, kglnaobj from x$kglob

000000008B165A30
insert into tabpart$ (obj#, dataobj#, bo#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, f
lags, analyzetime, samplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, bhiboundval) values (:1, :2, :3, :4, :5, :6, :7, :8, :9,
 :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, EMPTY_BLOB()) returning bhiboundval into :23

000000008CBC1BC8
insert into tabpart$ (obj#, dataobj#, bo#, part#, hiboundlen, hiboundval, ts#, file#, block#, pctfree$, pctused$, initrans, maxtrans, f
lags, analyzetime, samplesize, rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, bhiboundval) values (:1, :2, :3, :4, :5, :6, :7, :8, :9,
 :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, EMPTY_BLOB()) returning bhiboundval into :23

000000008B3C4590
select substrb(dump(

0000000088C7A750
SELECT GREATEST(NVL(

000000008B0B4110 SYS
A

0000000060C8E750 $BUILD$
1bdc4ea7ca91371b

000000008B1EB4E8 SYS
V$OFFLINE_RANGE

000000008CB93748
SELECT BSLN_METRIC_T

000000008CA23E28
SELECT VALUE FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCE'

000000008B34BF10
SELECT VALUE FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCE'

0000000088F94D48
SELECT VALUE FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCE'

000000008B1460D8
SELECT VALUE FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'INSTANCE'

0000000060F908D8
select substrb(dump(

0000000088CA4608 SYS
SQL_PLAN_ALLSTAT_ROW_TYPE

0000000092D3F3F0
df03f81246fb51a372674114e37dda9

000000008B0999F0 SYS
STATS_TARGET$

0000000088CCE988
SELECT MIN(VALUE), A

0000000088CEF748 SYS
ALL_SQLSET

000000008C90F770
select substrb(dump(

0000000092D44F58
select /*+  no_paral

000000008B2A6D38
SELECT NVL(MAX(T.TAS

0000000060EC97B0 SYS
AW_DROP_PROC

0000000088E9EA00 SYS
GV$ENQUEUE_STATISTICS

0000000092CCA888 SYS
FILE$

0000000060F49100
SELECT :B1 FROM DUAL

000000008B349DE8
select a.next_start_date, a.objid, a.w_open from  (select b.obj# objid,          decode(bitand(b.flags, 64), 0, b.next_start_date,
            b.manual_open_time) next_start_date,          decode(bitand(b.flags, 66), 0, 0, 2, 1, 2) w_open  from sys.scheduler$_window
 b   where bitand(b.flags, 1) <> 0   order by 2) a  where rownum = 1

000000008C9079F8
select a.next_start_date, a.objid, a.w_open from  (select b.obj# objid,          decode(bitand(b.flags, 64), 0, b.next_start_date,
            b.manual_open_time) next_start_date,          decode(bitand(b.flags, 66), 0, 0, 2, 1, 2) w_open  from sys.scheduler$_window
 b   where bitand(b.flags, 1) <> 0   order by 2) a  where rownum = 1

0000000060CD04C0
select a.next_start_date, a.objid, a.w_open from  (select b.obj# objid,          decode(bitand(b.flags, 64), 0, b.next_start_date,
            b.manual_open_time) next_start_date,          decode(bitand(b.flags, 66), 0, 0, 2, 1, 2) w_open  from sys.scheduler$_window
 b   where bitand(b.flags, 1) <> 0   order by 2) a  where rownum = 1

0000000088D84270
select a.next_start_date, a.objid, a.w_open from  (select b.obj# objid,          decode(bitand(b.flags, 64), 0, b.next_start_date,
            b.manual_open_time) next_start_date,          decode(bitand(b.flags, 66), 0, 0, 2, 1, 2) w_open  from sys.scheduler$_window
 b   where bitand(b.flags, 1) <> 0   order by 2) a  where rownum = 1

0000000088EC2F70 SYS
GV$SERVICE_STATS

0000000060ED3980 SYS
X$KSLWT

0000000088DDC200
SELECT COUNT(*) FROM

000000008B05D200
DELETE FROM WRI$_OPT

000000008B146CC8 SYS
DAILY_PURGE_SCHEDULE

0000000088F9CF98 $BUILD$
936965e1cf9d094c

0000000060D588D0
select min(minbkt),m

000000008CA84548
select count(*) from sys.scheduler$_wingrp_member   where oid = :1 and member_oid = :2

000000008B20DF60
select count(*) from sys.scheduler$_wingrp_member   where oid = :1 and member_oid = :2

0000000060FBED10
4d6f27d56244325257186890e389552f

0000000060EB3F30
2a7cdc2394513b6d7716b11c73656e94

000000008CB24210
UPDATE RLM$RULESET S

000000008B079A90 SYS
WRI$_OPTSTAT_SYNOPSIS_PARTGRP

0000000060FB22B0 SYS
SYS_XQEXVAL

0000000088F79FB8
delete from WRH$_INSTANCE_RECOVERY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B2F7158
delete from WRH$_INSTANCE_RECOVERY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B2AD418
SELECT TO_NUMBER(VAL

000000008CBF4AD0
SELECT COUNT(*) FROM

0000000060E1EC50
SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# TPOBJN FROM SYS.TABPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# =
:B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ# UNION ALL SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# T
POBJN FROM SYS.TABCOMPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# = :B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ#

0000000088ECF5F0
SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# TPOBJN FROM SYS.TABPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# =
:B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ# UNION ALL SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# T
POBJN FROM SYS.TABCOMPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# = :B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ#

000000008B144F98
SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# TPOBJN FROM SYS.TABPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# =
:B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ# UNION ALL SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# T
POBJN FROM SYS.TABCOMPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# = :B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ#

000000008B086760
SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# TPOBJN FROM SYS.TABPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# =
:B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ# UNION ALL SELECT /*+ leading(tp) use_nl_with_index(tpo) */ TPO.SUBNAME TPNAME, TPO.OBJ# T
POBJN FROM SYS.TABCOMPART$ TP, SYS.OBJ$ TPO WHERE TP.BO# = :B2 AND TP.PART# = :B1 AND TP.OBJ# = TPO.OBJ#

0000000092D24838
delete from WRH$_DYN_REMASTER_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060FBC1F0
delete from WRH$_DYN_REMASTER_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088CA3B38 SYS
WRI$_SQLSET_REF_ID_SEQ

000000008B09AAF0 SYS
ODCIOBJECT

0000000088FD1038
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TAB$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 16) != 0

0000000092D5C3D8
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TAB$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 16) != 0

000000008C943EA8
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TAB$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 16) != 0

000000008B060BF0
SELECT ROWCNT, BLKCNT, ANALYZETIME FROM SYS.TAB$ WHERE OBJ# = :B1 AND BITAND(FLAGS, 16) != 0

0000000092C6BC30
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=19 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME
" NOT LIKE 'DR#%') THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

000000008CA06180
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=19 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME
" NOT LIKE 'DR#%') THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

0000000092C3D378
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=19 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME
" NOT LIKE 'DR#%') THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

000000008B331E98
SELECT 'SYS_AUTO_SPCADV_'|| TO_CHAR(CURRENT_TIMESTAMP,'SSMIHH24DDMMYYYY') FROM DUAL

0000000088D8B4F8
SELECT 'SYS_AUTO_SPCADV_'|| TO_CHAR(CURRENT_TIMESTAMP,'SSMIHH24DDMMYYYY') FROM DUAL

0000000060D6BFF8
df09877e163e5b76f0ebde24ac5b3f2d

000000008B2964F0
c4e5219063d284cd903d2e5d47a5a19

0000000060EE1730
60a03b43058eb84cb23a683d22e908a

0000000060D0D4C8 SCOTT
HASH_TABLE

0000000060C48F60
4ed163b131ff3c2cb0647dea1da5d9fc

000000008CAB1810
7e60ae14fa8dd45bbdef91c23c3f95

000000008B345650
SELECT ACTION_ID, CO

0000000092D3D060
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 167

000000008B35E730
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 167

000000008CB40968 SYS
PROCEDURE$

0000000060F75AB0
deeb005aade528e31a8cd951ea369dda

000000008CBDE7E0 SYS
X$KSFQP

0000000088EA0840
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."SEG$"
 "S#1", "SYS"."SYS_OBJECTS" "SO#2" WHERE ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"="SO#2"."HEADER_BLOCK") AND ("S#1"."TS
#"="SO#2"."TS_NUMBER") AND ("S#1"."TYPE#"="SO#2"."SEGMENT_TYPE_ID")) innerQuery

0000000060C7AD68
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."SEG$"
 "S#1", "SYS"."SYS_OBJECTS" "SO#2" WHERE ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"="SO#2"."HEADER_BLOCK") AND ("S#1"."TS
#"="SO#2"."TS_NUMBER") AND ("S#1"."TYPE#"="SO#2"."SEGMENT_TYPE_ID")) innerQuery

000000008B139138
9165556f696253a8796fc2db5d84b9db

0000000060F82FF0
a7f85501496c15d4cfedcf088a5c17ef

0000000088FEE1D0
a258776b2387eed459c53ea1afd49bd

0000000060DCC298
d5dd4537b1a6318a62005c2ccbccde3

00000000653E1CA0
deebfbca743aa77cdb88e759bdb40f5e

000000008B153FC8
58e8c142109e7c51f6d07ec6bd8c3902

000000008B141EB8
INSERT INTO SYS.EXPD

000000008B04E7B0
SELECT SPOBJN, SPN,

0000000088D26CB0 SYS
_NEXT_OBJECT

0000000060DA87A0
10e32b6c946f26316237b7949dd7a4b

0000000088EB2C70
select o.name from obj$ o where o.type# = 9 and bitand(o.flags, 2048) = 2048 and o.name like 'SYSFN%' and (sysdate-o.ctime) > 0.0007

000000008B343C50
select o.name from obj$ o where o.type# = 9 and bitand(o.flags, 2048) = 2048 and o.name like 'SYSFN%' and (sysdate-o.ctime) > 0.0007

000000008B0A17B0
select o.name from obj$ o where o.type# = 9 and bitand(o.flags, 2048) = 2048 and o.name like 'SYSFN%' and (sysdate-o.ctime) > 0.0007

000000008B07B230 SYS
DBA_TAB_SUBPARTITIONS

0000000060DBE060
43027390c22d7fcdac6ffd8982d61778

0000000060DE1578
select /*+  no_paral

000000008C9A4848
/* SQL Analyze(1) */

0000000088D33358
begin   :owner :=upper('@ind');   :index_name := upper('scott'); end;

0000000088F761A8
begin   :owner :=upper('@ind');   :index_name := upper('scott'); end;

000000008CAF1DC8
select baseobject,type#,update$,insert$,delete$,refnewname,refoldname,whenclause,definition,enabled,property,sys_evts,nttrigcol,nttriga
tt,refprtname,rowid,actionlineno,trignameline,trignamecol, trignamecolofs,actioncolno from trigger$ where obj# =:1

0000000088D2F858
select baseobject,type#,update$,insert$,delete$,refnewname,refoldname,whenclause,definition,enabled,property,sys_evts,nttrigcol,nttriga
tt,refprtname,rowid,actionlineno,trignameline,trignamecol, trignamecolofs,actioncolno from trigger$ where obj# =:1

000000008CAF2248
select baseobject,type#,update$,insert$,delete$,refnewname,refoldname,whenclause,definition,enabled,property,sys_evts,nttrigcol,nttriga
tt,refprtname,rowid,actionlineno,trignameline,trignamecol, trignamecolofs,actioncolno from trigger$ where obj# =:1

000000008B15BFA8
a071cdcb8498e4446a22fbc9dcd8d95

000000008B3BA788
SELECT PROP, (SYSDAT

0000000088EDA9F0 SYS
WRH$_FILESTATXS_PK

000000008B3325E0
/* SQL Analyze(1) */

000000008B14E2F8
2a6d74bf67d60ec581f88f4b9958bb9

0000000060F12250
4c6855784e08880730b0adc51f7ff59

000000008B20B838
c215ec1818aef5f1cbf5295ed11fe1c

000000008CB391A8
6db5ab48890dd8daa8fed82cd24bf73b

0000000060EFEC10
e2053296639a93f0ef456252eee8789a

0000000088F4BE78 SYS
DBMS_AUTOTASK_PRVT

000000008C922C38
DELETE FROM SYS.WRI$

000000008B053BA0
SELECT SUM(ROWCNT),

0000000088F1C698
b7d31ee2d9072fa604fe3c5169f2854

0000000088F13328 SYS
SCHEDULER$_STEP_STATE

000000008CB15E58 APEX_030200
WWV_FLOW_PREFERENCES

000000008C87DA38
INSERT INTO WWV_FLOW

0000000088F34028
SELECT A.RECID, A.RE

000000008CB0F088
INSERT INTO EXFSYS.R

0000000088C5E6E8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("IND") FULL("IN
D") NO_PARALLEL_INDEX("IND") */ 1 AS C1, CASE WHEN BITAND("IND"."FLAGS",5145)=0 AND "IND"."TYPE#"<>8 AND "IND"."TYPE#"<>4 THEN 1 ELSE 0
 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "IND") SAMPLESUB

000000008C87A168
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("IND") FULL("IN
D") NO_PARALLEL_INDEX("IND") */ 1 AS C1, CASE WHEN BITAND("IND"."FLAGS",5145)=0 AND "IND"."TYPE#"<>8 AND "IND"."TYPE#"<>4 THEN 1 ELSE 0
 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "IND") SAMPLESUB

0000000092C95568
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("IND") FULL("IN
D") NO_PARALLEL_INDEX("IND") */ 1 AS C1, CASE WHEN BITAND("IND"."FLAGS",5145)=0 AND "IND"."TYPE#"<>8 AND "IND"."TYPE#"<>4 THEN 1 ELSE 0
 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "IND") SAMPLESUB

0000000088DF9548
UPDATE BSLN_STATISTI

0000000092C45108
select user#,password,datats#,tempts#,type#,defrole,resource$, ptime,decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where name=:1

0000000088D21CB0
select user#,password,datats#,tempts#,type#,defrole,resource$, ptime,decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where name=:1

000000008C9E3778
select user#,password,datats#,tempts#,type#,defrole,resource$, ptime,decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where name=:1

000000008B344420
select user#,password,datats#,tempts#,type#,defrole,resource$, ptime,decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where name=:1

000000008B31C6D8
select user#,password,datats#,tempts#,type#,defrole,resource$, ptime,decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where name=:1

0000000092C45498
select user#,password,datats#,tempts#,type#,defrole,resource$, ptime,decode(defschclass,NULL,'DEFAULT_CONSUMER_GROUP',defschclass),spar
e1,spare4,ext_username,spare2 from user$ where name=:1

000000008CBDD4C0
aafbbdb03697e6bf7cb74f56a4214519

000000008C920F08
UPDATE WRI$_ADV_DEFI

000000008CB51F00 PUBLIC
ALL_TAB_PARTITIONS

0000000088E95270 SYS
GV$RSRC_CONS_GROUP_HISTORY

0000000060ECBD80
7c8d5cb5a00956fb20cd123d75f780d8

00000000653417F0
2aa0fe84cb9682cd33cc2edc5e5142d3

000000008B122E28 $BUILD$
4ad255e3488a7986

0000000088F297B0 EXFSYS
EXF$EXPSETPRIVS

000000008B2B7FB8
select inst_id,kmcqspro,decode(bitand(kmcqstyp,1),1,'COMMON','DISPATCHER'), kmcqsncq,kmcqswat,kmcqstnc from x$kmcqs where bitand(kmcqsf
lg,1) = 1 and bitand(kmcqstyp,3) != 0 and (bitand(kmcqstyp,8) = 8 or bitand(kmcqstyp,2) = 2 or kmcqstnc > 0)

0000000060C9EF30
select inst_id,kmcqspro,decode(bitand(kmcqstyp,1),1,'COMMON','DISPATCHER'), kmcqsncq,kmcqswat,kmcqstnc from x$kmcqs where bitand(kmcqsf
lg,1) = 1 and bitand(kmcqstyp,3) != 0 and (bitand(kmcqstyp,8) = 8 or bitand(kmcqstyp,2) = 2 or kmcqstnc > 0)

00000000652C5930
SELECT Q.NAME FROM S

0000000088DFD288
4dffec705cccf9bba6312846bfb8ce79

0000000088FF9F30
WITH NONTIMEGROUPED_

000000008C92FF28 SYS
WRI$_ADV_REC_ACTIONS

0000000088C979E8
SELECT XMLELEMENT( "

000000008C9CBF98
SELECT INSTANCE_NUMB

0000000088FF1C50 SYS
V$LOGFILE

0000000088FA6BB8
dfcccdc103796f549523dfe6a261ec1

0000000092CC3BB8
SELECT COUNT(*) FROM

0000000060F42D00
update hist_head$ set obj# = decode(obj#,:1,:2) WHERE obj# in (:1)

000000008CB4DA68
update hist_head$ set obj# = decode(obj#,:1,:2) WHERE obj# in (:1)

0000000060DE3E58
ac5652be47fd4c9a8d7da21de1e3b468

0000000088E96CD0 SYS
WRH$_LATCH

0000000088EC5EC0
UPDATE WRH$_SERVICE_NAME SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SERVICE_NAME_HASH) IN (SELECT NUM1_KEWRATTR FROM X$KEWR
ATTRSTALE)

0000000088EBE950
UPDATE WRH$_SERVICE_NAME SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SERVICE_NAME_HASH) IN (SELECT NUM1_KEWRATTR FROM X$KEWR
ATTRSTALE)

0000000088EC6340
UPDATE WRH$_SERVICE_NAME SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SERVICE_NAME_HASH) IN (SELECT NUM1_KEWRATTR FROM X$KEWR
ATTRSTALE)

0000000060F95370 SYS
X$QESMMIWH

0000000088E23F68
1221de747902965363a7a4b3df7f345b

0000000088FC8C58
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("MM") FULL("MM") NO_PARALLEL_INDEX(
"MM") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS_ALL$" "MM") SAMPLESUB

000000008B2FE8C0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("MM") FULL("MM") NO_PARALLEL_INDEX(
"MM") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS_ALL$" "MM") SAMPLESUB

0000000088D02110
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("MM") FULL("MM") NO_PARALLEL_INDEX(
"MM") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS_ALL$" "MM") SAMPLESUB

00000000652F5F70
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("MM") FULL("MM") NO_PARALLEL_INDEX(
"MM") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS_ALL$" "MM") SAMPLESUB

0000000088CB7CB8

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("MM") FULL("MM") NO_PARALLEL_INDEX(
"MM") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS_ALL$" "MM") SAMPLESUB

0000000060F27250
436a415b2251827617e919499a05b67a

000000008C93C468
b08a18f166b16334c32b96c14278d620

0000000092C8A080
select A.inst_id, A.sgasz,                                                     round((A.sgasz / A.base_sgasz), 4),
                      decode(A.base_estd_dbtime,0,to_number(null),                                   round(A.base_dbtime * round((A.dbt
ime / A.base_estd_dbtime), 4), 0)),        decode(A.base_estd_dbtime,0,to_number(null),                                   round((A.dbti
me / A.base_estd_dbtime), 4)),                                  decode(A.base_estd_phy_reads,0,to_number(null),
        round(A.base_phy_reads *                                                          round((A.estd_physical_reads / A.base_estd_ph
y_reads), 4), 0))          from x$kmgsbsadv A                                                            order by A.inst_id, A.sgasz

0000000060E09CD8
select A.inst_id, A.sgasz,                                                     round((A.sgasz / A.base_sgasz), 4),
                      decode(A.base_estd_dbtime,0,to_number(null),                                   round(A.base_dbtime * round((A.dbt
ime / A.base_estd_dbtime), 4), 0)),        decode(A.base_estd_dbtime,0,to_number(null),                                   round((A.dbti
me / A.base_estd_dbtime), 4)),                                  decode(A.base_estd_phy_reads,0,to_number(null),
        round(A.base_phy_reads *                                                          round((A.estd_physical_reads / A.base_estd_ph
y_reads), 4), 0))          from x$kmgsbsadv A                                                            order by A.inst_id, A.sgasz

0000000060C9FEF0
LOCK TABLE "SYS"."OR

000000008CACDBE8 $BUILD$
d8484f2d6d958c2e

000000008B376068 APEX_030200
WWV_FLOW_DEBUG

0000000088E47F68 SYS
GV$PGA_TARGET_ADVICE

000000008B2DF490
f72dc1f96f728145bc425b44dcf4808d

0000000092D5BA48
6e78bf7eeda8c7df1468aba2d2bfee0a

000000008B381510
732d1523e906e89a5839117a4fa53ef

0000000088CA17C8
SELECT L.STATUS, L.S

0000000088C9E588
SELECT PLAN_ID, REAS

000000008B3ACBA0 SYS
DBA_INDEXES

000000008CAD8828
SELECT NAME FROM SYS.WRI$_ADV_DEFINITIONS WHERE ID = :B1

000000008C9295B8
SELECT NAME FROM SYS.WRI$_ADV_DEFINITIONS WHERE ID = :B1

000000008CA60768 PUBLIC
V$INSTANCE

0000000088CEFDA8 SYS
DBA_SQLSET_PLANS

0000000092C64050
1e9007b629ae1e5cbf9f36d815a40901

000000008B0F5A28
SELECT COUNT(1) FROM

000000008CA89E10
SELECT ROWID FROM RL

0000000060D684B8
b854cdce7695cf47488af24b533c2f3

000000008B234100
f0ece665ac373fd4b05690bc188d0c68

000000008CAE22D0 SYS
DBMS_SYS_ERROR

000000008B3FB498
bbd73a7e543b002d1567207ea42c4a13

000000008B0F2D08
fdb71e3dd72589aaa96841d22a865b3

000000008CB47718
a458465a8a2413ef11ba8b29c5d37d31

0000000060C60DE0 $BUILD$
d7eafde78e8f3257

000000008B05C8B0
SELECT DISTINCT H.BO

0000000092CBF358
335dfaebffd4b22aa211a3fd6dbc845f

000000008B3DC818
9a32ac905ca511a2e39b24dcfde9cb51

000000008C9F1D50
select nvl(sum(space),0) from recyclebin$ where ts# = :1

0000000060FBD130
select nvl(sum(space),0) from recyclebin$ where ts# = :1

000000008C891A20 SYS
GLOBAL_NAME

000000008B096BE0
INSERT INTO SYS.AUX_

000000008B131DA8
SELECT PARAMETER_VAL

0000000088D5EB08
SELECT SEQUENCE FROM

000000008CB3E4E0
select /*+ index(idl_sb4$ i_idl_sb41) +*/ piece#,length,piece from idl_sb4$ where obj#=:1 and part=:2 and version=:3 order by piece#

0000000088CF69A8
select /*+ index(idl_sb4$ i_idl_sb41) +*/ piece#,length,piece from idl_sb4$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB86D58
select /*+ index(idl_sb4$ i_idl_sb41) +*/ piece#,length,piece from idl_sb4$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008C97E4B0
select /*+ index(idl_sb4$ i_idl_sb41) +*/ piece#,length,piece from idl_sb4$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB3E960
select /*+ index(idl_sb4$ i_idl_sb41) +*/ piece#,length,piece from idl_sb4$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008B347700
SELECT T.SCHEMA, T.N

0000000088CFFC70
SELECT /*+ leading(u) use_nl_with_index(o) */ O.OBJ# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME
= :B2 AND O.NAMESPACE = 1 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND (O.SUBNAME IS NULL AND :B1 IS NULL OR O.SUBNAME = :B1 )
AND O.TYPE# IN (2,19,34)

000000008CB4CA78
SELECT /*+ leading(u) use_nl_with_index(o) */ O.OBJ# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME
= :B2 AND O.NAMESPACE = 1 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND (O.SUBNAME IS NULL AND :B1 IS NULL OR O.SUBNAME = :B1 )
AND O.TYPE# IN (2,19,34)

000000008B075E70
SELECT /*+ leading(u) use_nl_with_index(o) */ O.OBJ# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME
= :B2 AND O.NAMESPACE = 1 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND (O.SUBNAME IS NULL AND :B1 IS NULL OR O.SUBNAME = :B1 )
AND O.TYPE# IN (2,19,34)

0000000092C94098
f0909bb82ccdb6059a633cd1c70af22e

000000008B2241F0 SYS
V$SGA_DYNAMIC_COMPONENTS

000000008B1B4570
select /*+  no_paral

0000000088F28540
794db29f92e39f75f228d26ce0d72045

0000000092D46990
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S")  */ 1 AS C1 FROM "SYS"."SEG$" "
S" WHERE ("S"."TYPE#"<>6) AND ("S"."TYPE#"<>5) AND ("S"."TYPE#"<>8) AND (DECODE("S"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACH
E',9,'SPACE HEADER','UNDEFINED') LIKE 'TABLE%') AND ("S"."TYPE#"<>10) AND ("S"."TYPE#"<>1)) innerQuery

0000000088EB5BE0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S")  */ 1 AS C1 FROM "SYS"."SEG$" "
S" WHERE ("S"."TYPE#"<>6) AND ("S"."TYPE#"<>5) AND ("S"."TYPE#"<>8) AND (DECODE("S"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACH
E',9,'SPACE HEADER','UNDEFINED') LIKE 'TABLE%') AND ("S"."TYPE#"<>10) AND ("S"."TYPE#"<>1)) innerQuery

000000008B1EEF08
select addr,latch#,level#,name,hash,gets,misses,sleeps,immediate_gets, immediate_misses,waiters_woken,waits_holding_latch,spin_gets, sl
eep1,sleep2,sleep3,sleep4,sleep5,sleep6,sleep7,sleep8,sleep9, sleep10,sleep11,wait_time from gv$latch where inst_id = USERENV('Instance
')

000000008B2EF650
select addr,latch#,level#,name,hash,gets,misses,sleeps,immediate_gets, immediate_misses,waiters_woken,waits_holding_latch,spin_gets, sl
eep1,sleep2,sleep3,sleep4,sleep5,sleep6,sleep7,sleep8,sleep9, sleep10,sleep11,wait_time from gv$latch where inst_id = USERENV('Instance
')

000000008B16DF90
delete from WRH$_PARAMETER_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3F1FD0
delete from WRH$_PARAMETER_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B17DA30 EXFSYS
RLM4J$EVTSTRUCTS

000000008B10ECE8
fa00de5f660bd5f051f1dc56ef3477c5

000000006539C890 $BUILD$
629afc9c1723c09c

0000000060D76A58
LOCK TABLE "SYS"."OR

00000000652EECB0
2a7cdc2394513b6d7716b11c73656e94

0000000088F76E68
f0fde197a1a16883c15137c81af0b98

0000000060F5C6D0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000088D1CD80
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060E6DA70
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000088F22008
2ce14b76387bee632fb44224b57b62e9

000000008B160D30
aedd24d8b8494c7f3c07da954055fde6

0000000088EFED60
fcfac68b2e1c48c619f0a67f9ab91a5

000000008CA2BFD0
6b3b02556e06a2bcca8df569fe83a388

000000008C8B9BA8
select res_plan, next_start_date, duration, schedule_expr, flags, comments,       end_date, start_date, unused_slave_policy, creator, m
ax_slave_percent,      min_slave_percent, schedule_id, priority, max_conc_jobs,       last_start_date, actual_start_date,       manual_
open_time, manual_duration from sys.scheduler$_window  where obj# = :1

0000000065321900
select res_plan, next_start_date, duration, schedule_expr, flags, comments,       end_date, start_date, unused_slave_policy, creator, m
ax_slave_percent,      min_slave_percent, schedule_id, priority, max_conc_jobs,       last_start_date, actual_start_date,       manual_
open_time, manual_duration from sys.scheduler$_window  where obj# = :1

0000000088DE3448
select res_plan, next_start_date, duration, schedule_expr, flags, comments,       end_date, start_date, unused_slave_policy, creator, m
ax_slave_percent,      min_slave_percent, schedule_id, priority, max_conc_jobs,       last_start_date, actual_start_date,       manual_
open_time, manual_duration from sys.scheduler$_window  where obj# = :1

000000008B0B63C0
select /*+  no_paral

0000000088DB5FA8
5846126fc9b8ba9920a215e6dfbc92

0000000088F217D8
d6c1fdea15e8611e5574160cda1e2535

0000000088E05AE8
ba0f2350cb1dc8ee40278c0b4f4f8584

0000000060D4C420
380b3dca8976e725312e105082d96c1b

000000008B1F8A20
67c233df3cf8cbf2470259e75b4d3459

000000008B3BAD88
eafe294e48cbb8071e361ae98c64c641

000000008CAEA978 SYS
WRI$_ADV_UNDO_ADV

000000008B2DF980
367da00762224f9874eb78f85e1604c8

0000000088FFFBE0
71426d02602c009f7f47f611106344c

0000000060FB76A0
eb6543058b08997b165876b9ce466885

0000000088CF3A48
SELECT F.EXTRACT('/S

000000008B09A270 SYS
ODCISTATSOPTIONS

0000000088DC43B8
40c4426aec2b05adf75a0bfb36270e4

0000000088EC1E50 PUBLIC
BP

000000008CA87538 PUBLIC
KU$_LOGENTRY

0000000060C52750
SELECT C.NAME AS COLUMN_NAME, DECODE(TO_CHAR(CU.TIMESTAMP,'yyyymmdd hh24:mi:ss'),NULL,'None',TO_CHAR(CU.TIMESTAMP,'yyyymmdd hh24:mi:ss'
)) AS TIMESTAMP, DECODE(CU.EQUALITY_PREDS,NULL,0,CU.EQUALITY_PREDS) AS WHERE_EQUAL_SEARCH, DECODE(CU.EQUIJOIN_PREDS,NULL,0,CU.EQUIJOIN_
PREDS) AS EQUAL_JOIN, DECODE(CU.NONEQUIJOIN_PREDS,NULL,0,CU.NONEQUIJOIN_PREDS) AS NONE_EQUAL_JOIN, DECODE(CU.RANGE_PREDS,NULL,0,CU.RANG
E_PREDS) AS WHERE_RANGE_SEARCH, DECODE(CU.LIKE_PREDS,NULL,0,CU.LIKE_PREDS) AS WHERE_LIKE_SEARCH, DECODE(CU.NULL_PREDS,NULL,0,CU.NULL_PR
EDS) AS WHERE_NULL_SEARCH FROM SYS.COL$ C, SYS.COL_USAGE$ CU, SYS.OBJ$ O, SYS.USER$ U WHERE C.OBJ# = CU.OBJ# (+) AND C.INTCOL# = CU.INT
COL# (+) AND C.OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND O.NAME = :B2 AND U.NAME = :B1 ORDER BY C.COL#

0000000088D20140
SELECT C.NAME AS COLUMN_NAME, DECODE(TO_CHAR(CU.TIMESTAMP,'yyyymmdd hh24:mi:ss'),NULL,'None',TO_CHAR(CU.TIMESTAMP,'yyyymmdd hh24:mi:ss'
)) AS TIMESTAMP, DECODE(CU.EQUALITY_PREDS,NULL,0,CU.EQUALITY_PREDS) AS WHERE_EQUAL_SEARCH, DECODE(CU.EQUIJOIN_PREDS,NULL,0,CU.EQUIJOIN_
PREDS) AS EQUAL_JOIN, DECODE(CU.NONEQUIJOIN_PREDS,NULL,0,CU.NONEQUIJOIN_PREDS) AS NONE_EQUAL_JOIN, DECODE(CU.RANGE_PREDS,NULL,0,CU.RANG
E_PREDS) AS WHERE_RANGE_SEARCH, DECODE(CU.LIKE_PREDS,NULL,0,CU.LIKE_PREDS) AS WHERE_LIKE_SEARCH, DECODE(CU.NULL_PREDS,NULL,0,CU.NULL_PR
EDS) AS WHERE_NULL_SEARCH FROM SYS.COL$ C, SYS.COL_USAGE$ CU, SYS.OBJ$ O, SYS.USER$ U WHERE C.OBJ# = CU.OBJ# (+) AND C.INTCOL# = CU.INT
COL# (+) AND C.OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND O.NAME = :B2 AND U.NAME = :B1 ORDER BY C.COL#

0000000088D32508
17402290504036112468

000000008B083B00
SELECT O.OBJ# TOBJN,

000000008C998AF0
3824a452497b792d84cd82cd7a1df1

00000000653581C0 MDSYS
SDO_GEOR_SYSDATA_TABLE

000000008B232190
SELECT NAME NAME_COL_PLUS_SHOW_PARAM,DECODE(TYPE,1,'boolean',2,'string',3,'integer',4,'file',5,'number',        6,'big integer', 'unkno
wn') TYPE,DISPLAY_VALUE VALUE_COL_PLUS_SHOW_PARAM FROM V$PARAMETER WHERE UPPER(NAME) LIKE UPPER(:NMBIND_SHOW_OBJ) ORDER BY NAME_COL_PLU
S_SHOW_PARAM,ROWNUM

00000000652DA6F0
SELECT NAME NAME_COL_PLUS_SHOW_PARAM,DECODE(TYPE,1,'boolean',2,'string',3,'integer',4,'file',5,'number',        6,'big integer', 'unkno
wn') TYPE,DISPLAY_VALUE VALUE_COL_PLUS_SHOW_PARAM FROM V$PARAMETER WHERE UPPER(NAME) LIKE UPPER(:NMBIND_SHOW_OBJ) ORDER BY NAME_COL_PLU
S_SHOW_PARAM,ROWNUM

0000000088F70350
SELECT NAME NAME_COL_PLUS_SHOW_PARAM,DECODE(TYPE,1,'boolean',2,'string',3,'integer',4,'file',5,'number',        6,'big integer', 'unkno
wn') TYPE,DISPLAY_VALUE VALUE_COL_PLUS_SHOW_PARAM FROM V$PARAMETER WHERE UPPER(NAME) LIKE UPPER(:NMBIND_SHOW_OBJ) ORDER BY NAME_COL_PLU
S_SHOW_PARAM,ROWNUM

0000000060C9D9E0
2bd45fba448c9d1dceedd159ce644acf

000000008C9F48F0
update sys.scheduler$_job set  job_status = :1 where  obj# = :2

000000008CB5B0E0
update sys.scheduler$_job set  job_status = :1 where  obj# = :2

0000000088C78750
update sys.scheduler$_job set  job_status = :1 where  obj# = :2

000000008B340098
update sys.scheduler$_job set  job_status = :1 where  obj# = :2

000000008B3620F8
update sys.scheduler$_job set  job_status = :1 where  obj# = :2

000000008B2B1698
update sys.scheduler$_job set  job_status = :1 where  obj# = :2

0000000088FB57E8 SYS
WRH$_MEMORY_RESIZE_OPS

0000000092D36C78 SYS
DBA_TEMP_FILES

000000008B18DE80
e77ea8d2abd8e48760c67145a7e552a4

0000000060EEE600
cd3744da5e17066dd59d0eedbbcee4f7

000000008C9A1190
select substrb(dump(

000000008B0E0AC8
SELECT BSLN_OBSERVAT

000000008C9D5D38
4c282b8fc877ffe5446108d3dc14a764

0000000060F01380
2935a5b271ea3f7cf0a3007464246ad7

000000008B109F40
db6eb94c3b88c0b2d8dbb9b42b5153

0000000060E7DDA0 SYS
DBMS_PRVTAQIM

000000008B26E908
SELECT TIMEZONE FROM

0000000088EAB8E0
SELECT RECID, STAMP,

0000000088C95AC8
SELECT XMLCONCAT(:B4

0000000060DD75E8
1e4013f81f1d52db61c9c355510564c

0000000088EE3E30 SYS
ALL_CONSTRAINTS

0000000088C4C418
63b6a53944b9c0122bd008a0d6b88c1

0000000092EBA568
b7ada89eb959bc13f558c0479a173b7

000000008C9237C8
DELETE FROM SYS.WRI$

000000008C87FEF0
SELECT COUNT(*) FROM

000000008CBAAF30
select substrb(dump(

000000008B3A7738
SELECT LOWER(VALUE)

0000000060E932F0
SELECT COUNT(*) FROM

000000008B29D370
e2053296639a93f0ef456252eee8789a

000000008B167AE0
477ff39754c50b0632f60186bcbca9ca

0000000088CF4618 SYS
PRVT_SQLADV_INFRA

000000008B101CB8 SYS
RE$RULE_HIT_LIST

0000000060EB28B0
SELECT EXTRACTVALUE(

0000000060D35A48
2b52d8f06e15f2c22327a01b455a43e8

000000008CB8DC38
8256f9c392783d2ca915978f9f4ac8c0

000000008CAD8998 SYS
PLITBLM

0000000060CCB320
93d46c4cdebfe77c4ff25415d9d63e0e

0000000060C9D140
96dda3773d9f9b93b8a21d135f9f0ab5

0000000060E7A928
select   GROUP# , THREAD# , SEQUENCE# , BYTES , BLOCKSIZE, MEMBERS , ARCHIVED , STATUS , FIRST_CHANGE# , FIRST_TIME, NEXT_CHANGE#, NEXT
_TIME from GV$LOG where inst_id = USERENV('Instance')

000000008C84CEA0
select   GROUP# , THREAD# , SEQUENCE# , BYTES , BLOCKSIZE, MEMBERS , ARCHIVED , STATUS , FIRST_CHANGE# , FIRST_TIME, NEXT_CHANGE#, NEXT
_TIME from GV$LOG where inst_id = USERENV('Instance')

0000000060D473A8
select /*+ connect_by_filtering */ privilege#,level from sysauth$ connect by grantee#=prior privilege# and privilege#>0 start with (gra
ntee#=:1 or grantee#=1) and privilege#>0

0000000060D47828
select /*+ connect_by_filtering */ privilege#,level from sysauth$ connect by grantee#=prior privilege# and privilege#>0 start with (gra
ntee#=:1 or grantee#=1) and privilege#>0

000000008CAA5B38
4769ddb6121bd637252e2ea6fc5bcbcf

000000008CBDD7B0 SYS
X$KSUCPUSTAT

000000008CB54D30
select id, name, block_size, set_msize, cnum_repl, cnum_write, cnum_set, buf_got, sum_write, sum_scan, free_buffer_wait, write_complete
_wait, buffer_busy_wait, free_buffer_inspected, dirty_buffers_inspected, db_block_change, db_block_gets, consistent_gets, physical_read
s, physical_writes from gv$buffer_pool_statistics where inst_id = USERENV('Instance')

000000008B2AC358
select id, name, block_size, set_msize, cnum_repl, cnum_write, cnum_set, buf_got, sum_write, sum_scan, free_buffer_wait, write_complete
_wait, buffer_busy_wait, free_buffer_inspected, dirty_buffers_inspected, db_block_change, db_block_gets, consistent_gets, physical_read
s, physical_writes from gv$buffer_pool_statistics where inst_id = USERENV('Instance')

000000008B1CEF08 SYS
DBA_HIST_TOPLEVELCALL_NAME

0000000088DE81A8
select res_grp_name, affinity, flags, comments, default_priority,  log_history  from sys.scheduler$_class  where obj# = :1

0000000088DE8538
select res_grp_name, affinity, flags, comments, default_priority,  log_history  from sys.scheduler$_class  where obj# = :1

0000000060D9A888
SELECT COUNT(*) FROM

0000000060F5C840
4c55fac95a83291738e9c591575b560b

000000008C8652F8
SELECT COUNT(1) FROM

0000000088D19060
4eb07448aafb261a81b2c155a3c2be6f

000000008C9C6AD8
3ec61a3af78a7e7b7ede1f9a0b8ea3

0000000088CA6218 SYS
DBA_SQLTUNE_BINDS

0000000088E17360
create index i_hha on hash_table(INF) local

0000000060CF9898
create index i_hha on hash_table(INF) local

000000008CA24A28 SYS
X$KSLLW

000000008B130450
1cab7ca6fdb02bfae6c05fb0b5df2980

0000000088E39D18 SYS
WRH$_SYSSTAT_PK

0000000088CA50D8 PUBLIC
DBA_SQLSET_DEFINITIONS

000000008C9FE2E8
select value$ from props$ where name = 'GLOBAL_DB_NAME'

000000008C985390
select value$ from props$ where name = 'GLOBAL_DB_NAME'

0000000092C830E8
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

000000008B337378
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

0000000088D315F0
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

000000008B39CBB8
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

0000000088FE2010
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

000000008B3BEA18
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

0000000060CD50E0
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

0000000092C83568
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(property,0),subname,type#,d_attrs from dependency$ d, obj$ o
where d_obj#=:1 and p_obj#=obj#(+) order by order#

0000000088D81F48 SYS
DBMS_AQADM_INV

00000000652F4EC0
select substrb(dump(

000000008CBAE618
SELECT L.TABLE_NAME,

0000000092D3BC78 $BUILD$
292797596154da17

0000000088FE0410
c13c0e6eea8dda73ce13396986d4bb34

000000008C966B10 SYS
SCHEDULER$_WINDOW_DETAILS

00000000653F13E0 $BUILD$
8634da117aee37d5

00000000652CA090
b42a176e15d944face8038fc5e013d8b

0000000060C478E0
4e2dc922bc1a784b7c7751b8b456b7c4

000000008CA10E00
select table_name from dict where table_name like '%DBA%PAR%STA%'

0000000092EC0F00
select table_name from dict where table_name like '%DBA%PAR%STA%'

0000000060EBB520
select /*+  no_parallel_index(t, "I_COL_USAGE$")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring
no_substrb_pad  no_expand index(t,"I_COL_USAGE$") */ count(*) as nrw,count(distinct sys_op_lbid(481,'L',t.rowid)) as nlb,null as ndk,sy
s_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."COL_USAGE$" t where "OBJ#" is not null or "INTCOL#" is not null

000000008CA35AD8
select /*+  no_parallel_index(t, "I_COL_USAGE$")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring
no_substrb_pad  no_expand index(t,"I_COL_USAGE$") */ count(*) as nrw,count(distinct sys_op_lbid(481,'L',t.rowid)) as nlb,null as ndk,sy
s_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."COL_USAGE$" t where "OBJ#" is not null or "INTCOL#" is not null

0000000088E6CC40
select /*+  no_parallel_index(t, "I_COL_USAGE$")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring
no_substrb_pad  no_expand index(t,"I_COL_USAGE$") */ count(*) as nrw,count(distinct sys_op_lbid(481,'L',t.rowid)) as nlb,null as ndk,sy
s_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."COL_USAGE$" t where "OBJ#" is not null or "INTCOL#" is not null

0000000060EBB8B0
select /*+  no_parallel_index(t, "I_COL_USAGE$")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring
no_substrb_pad  no_expand index(t,"I_COL_USAGE$") */ count(*) as nrw,count(distinct sys_op_lbid(481,'L',t.rowid)) as nlb,null as ndk,sy
s_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."COL_USAGE$" t where "OBJ#" is not null or "INTCOL#" is not null

0000000088D5E5A8
ee991c9ea0f312507c74b50e9e553c22

0000000092CDCDA8
6a618680506b82bd2525327282df4b5e

0000000060F230A0
SELECT /*+ordered*/

0000000088C4E420
ea96a699389b598d892108fa10b3900

0000000088CD4FA8
SELECT APPENDCHILDXM

0000000060E9E840 SYS
AQ$_SCHEDULER$_EVENT_QTAB_H

000000008B23C130
SELECT :B7 TYPE_CON,

000000008B222148
4c6855784e08880730b0adc51f7ff59

000000006531BEA0
ee991c9ea0f312507c74b50e9e553c22

0000000088E80360
73022462e54af09777216eb2e3d6e317

000000008CA6F140
df62b0e7a56a3c40411200a38eb85bed

0000000088C7B4C0
SELECT DBID FROM V$DATABASE

0000000060DDF5F8
SELECT DBID FROM V$DATABASE

000000008B3A6B58
SELECT DBID FROM V$DATABASE

000000008CB79838
delete from WRH$_DB_CACHE_ADVICE_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D46280
delete from WRH$_DB_CACHE_ADVICE_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060C98F90
select inst_id,          kqlfxpl_phad,          kqlfxpl_hash,          kqlfxpl_sqlid,          kqlfxpl_plhash,          kqlfxpl_hadd,
        kqlfxpl_chno,          kqlfxpl_timestamp,          substr(kqlfxpl_oper, 1, 30),          substr(kqlfxpl_oopt, 1, 30),
substr(kqlfxpl_tqid, 1, 40),          to_number(decode(kqlfxpl_objn, 0, NULL, kqlfxpl_objn)),          kqlfxpl_objowner,
         kqlfxpl_objname,                         kqlfxpl_alias,                           substr(kqlfxpl_objtype, 1, 20),          sub
str(kqlfxpl_opti, 1, 20),          kqlfxpl_opid,          to_number(decode(kqlfxpl_opid, 0, NULL, kqlfxpl_paid)),          kqlfxpl_dept
h,          to_number(decode(kqlfxpl_pos, 0,                           decode(kqlfxpl_cost, 4294967295, NULL,
         kqlfxpl_cost),                           kqlfxpl_pos)),          kqlfxpl_scols,          to_number(decode(kqlfxpl_cost, 429496
7295, NULL,                           kqlfxpl_cost)),

0000000060CE7538
select inst_id,          kqlfxpl_phad,          kqlfxpl_hash,          kqlfxpl_sqlid,          kqlfxpl_plhash,          kqlfxpl_hadd,
        kqlfxpl_chno,          kqlfxpl_timestamp,          substr(kqlfxpl_oper, 1, 30),          substr(kqlfxpl_oopt, 1, 30),
substr(kqlfxpl_tqid, 1, 40),          to_number(decode(kqlfxpl_objn, 0, NULL, kqlfxpl_objn)),          kqlfxpl_objowner,
         kqlfxpl_objname,                         kqlfxpl_alias,                           substr(kqlfxpl_objtype, 1, 20),          sub
str(kqlfxpl_opti, 1, 20),          kqlfxpl_opid,          to_number(decode(kqlfxpl_opid, 0, NULL, kqlfxpl_paid)),          kqlfxpl_dept
h,          to_number(decode(kqlfxpl_pos, 0,                           decode(kqlfxpl_cost, 4294967295, NULL,
         kqlfxpl_cost),                           kqlfxpl_pos)),          kqlfxpl_scols,          to_number(decode(kqlfxpl_cost, 429496
7295, NULL,                           kqlfxpl_cost)),

000000008B3C8028
2c9996701a33a4a61060771b82763343

0000000088F06308
SELECT DIB.DBID, DIB

0000000088E4D358
SELECT DISTINCT :B5

000000008B065F00
SELECT /*+ ordered f

0000000092D05C30
1de34d29182c04c6505c9a5a7fd90d

000000008CA1B8E8
3b11c1281b6f11d34bb2fd96d56c8cee

0000000088CB5C68
c65b7302900820ccf0e6b3086f86a8c

0000000088CEFB88 SYS
DBA_SQLSET_BINDS

000000008CA90320
a5874278df1163c7541962d36c66ae8f

0000000060F64A10 SYS
V$SERVICE_WAIT_CLASS

0000000060F3D1B0
select substrb(dump(

000000008CB08BD8 MDSYS
MDERR

000000008B13A0C8
SELECT '  dbms_stats

0000000088D9FCC8
7327ccb66b862f6553714495b06e9

000000008B245880
c3204663b3960685fc303f1f52a48d71

000000008B3AD2C0
SELECT :B24 TYPE_CON

0000000088F91148
SELECT CAPTURE_NAME

000000008CB5DA60
select INST_ID,           LOWBND * 1024,           (HIBND * 1024)-1,           OPTIMAL,           ONEPASS,           MPASS,           M
PASS+ONEPASS+OPTIMAL    from   X$QESMMIWH

0000000092C347E8
select INST_ID,           LOWBND * 1024,           (HIBND * 1024)-1,           OPTIMAL,           ONEPASS,           MPASS,           M
PASS+ONEPASS+OPTIMAL    from   X$QESMMIWH

000000008CA86128
2d2d69b8a9e46400e51f1612432f9f16

000000008C88FF90
INSERT INTO sys.wri$_adv_findings (id, task_id, type, parent, obj_id, impact_msg_id, impact_val, msg_id, more_info_id, name_msg_code, f
lags, exec_name) VALUES (:1, :2, :3, :4, :5, :6, :7,:8, :9, :10, :11, :12)

0000000088FB7E18
INSERT INTO sys.wri$_adv_findings (id, task_id, type, parent, obj_id, impact_msg_id, impact_val, msg_id, more_info_id, name_msg_code, f
lags, exec_name) VALUES (:1, :2, :3, :4, :5, :6, :7,:8, :9, :10, :11, :12)

0000000060EB59F0
INSERT INTO sys.wri$_adv_findings (id, task_id, type, parent, obj_id, impact_msg_id, impact_val, msg_id, more_info_id, name_msg_code, f
lags, exec_name) VALUES (:1, :2, :3, :4, :5, :6, :7,:8, :9, :10, :11, :12)

000000008C973608
INSERT INTO sys.wri$_adv_findings (id, task_id, type, parent, obj_id, impact_msg_id, impact_val, msg_id, more_info_id, name_msg_code, f
lags, exec_name) VALUES (:1, :2, :3, :4, :5, :6, :7,:8, :9, :10, :11, :12)

000000008B0FA8C8
select ks.inst_id,ksuxsins,ksuxssid,ksuxshst,ksuxsver,ksuxstim,decode(ksuxssts,0,'STARTED',1,'MOUNTED',2,'OPEN',3,'OPEN MIGRATE','UNKNO
WN'),decode(ksuxsshr,0,'NO',1,'YES',2,NULL),ksuxsthr,decode(ksuxsarc,0,'STOPPED',1,'STARTED','FAILED'),decode(ksuxslsw,0,NULL,2,'ARCHIV
E LOG',3,'CLEAR LOG',4,'CHECKPOINT',       5,'REDO GENERATION'),decode(ksuxsdba,0,'ALLOWED','RESTRICTED'),decode(ksuxsshp,0,'NO','YES')
,decode(kvitval,0,'ACTIVE',2147483647,'SUSPENDED','INSTANCE RECOVERY'),decode(ksuxsrol,1,'PRIMARY_INSTANCE',2,'SECONDARY_INSTANCE','UNK
NOWN'), decode(qui_state,0,'NORMAL',1,'QUIESCING',2,'QUIESCED','UNKNOWN'), decode(bitand(ksuxsdst, 1), 0, 'NO', 1, 'YES', 'NO') from x$
ksuxsinst ks, x$kvit kv, x$quiesce qu where kvittag = 'kcbwst'

000000008B255108
select ks.inst_id,ksuxsins,ksuxssid,ksuxshst,ksuxsver,ksuxstim,decode(ksuxssts,0,'STARTED',1,'MOUNTED',2,'OPEN',3,'OPEN MIGRATE','UNKNO
WN'),decode(ksuxsshr,0,'NO',1,'YES',2,NULL),ksuxsthr,decode(ksuxsarc,0,'STOPPED',1,'STARTED','FAILED'),decode(ksuxslsw,0,NULL,2,'ARCHIV
E LOG',3,'CLEAR LOG',4,'CHECKPOINT',       5,'REDO GENERATION'),decode(ksuxsdba,0,'ALLOWED','RESTRICTED'),decode(ksuxsshp,0,'NO','YES')
,decode(kvitval,0,'ACTIVE',2147483647,'SUSPENDED','INSTANCE RECOVERY'),decode(ksuxsrol,1,'PRIMARY_INSTANCE',2,'SECONDARY_INSTANCE','UNK
NOWN'), decode(qui_state,0,'NORMAL',1,'QUIESCING',2,'QUIESCED','UNKNOWN'), decode(bitand(ksuxsdst, 1), 0, 'NO', 1, 'YES', 'NO') from x$
ksuxsinst ks, x$kvit kv, x$quiesce qu where kvittag = 'kcbwst'

0000000088FDB230
/* SQL Analyze(1) */

0000000060CBFEB8
988c8a25e4ae6c8522f9cbcbaa01aa7

000000008B1CC298 ORACLE_OCM
ORACLE_OCM

0000000088C51AC8
aedd24d8b8494c7f3c07da954055fde6

0000000088DF19D8
SELECT CODE FROM RLM

000000008C976758
16ca272060087b658c73d55aee098ce2

0000000060C543F0
SELECT /* DS_SVC */

000000008B0EEB18
SELECT DBESNAME FROM

000000008B0F5238
SELECT  topology   FROM  SDO_TOPO_METADATA_TABLE a, TABLE(a.Topo_Geometry_Layers) b   WHERE b.owner = :owner AND b.table_name = :tab

0000000088E0C4E8
SELECT  topology   FROM  SDO_TOPO_METADATA_TABLE a, TABLE(a.Topo_Geometry_Layers) b   WHERE b.owner = :owner AND b.table_name = :tab

000000008B09A490 SYS
ODCICOLINFOLIST

000000008C9A1930
select substrb(dump(

0000000088DB2F98 SYS
WRH$_SQL_BIND_METADATA

000000008B065BE0
SELECT H.DISTCNT FRO

000000008CBEE378
9e304c31c622398dc4a8d959dc6631

0000000060DA5988
SELECT /* DS_SVC */

0000000060DAB888 $BUILD$
cb56317bc025f4c6

0000000088CFA6E8
select substrb(dump(

0000000060DB9A98
3a9b479e3630f1912a9d9d1b2e275a0

000000008CA212B8
SELECT COUNT(*) FROM

0000000088D57BA0
SELECT O.* FROM DBA_

0000000060E1FB10
c7d8a65682ee343b5f6da136b2295796

0000000088EF8330 PUBLIC
DBA_TABLES

000000008CBC8638 SYS
OPTSTAT_HIST_CONTROL$

0000000088DBE878 SYS
X$KCCRM

000000008B064FB0
SELECT TS.NAME FROM

000000008C961350 $BUILD$
7efd18ad 730ee46

0000000088CF94F8 PUBLIC
ORA_IS_DROP_COLUMN

000000008C883A40 SYS
X$KEHTIMMAP

00000000652FEDD0 SYS
SNAP_REFTIME$

000000008CBC1968
select inst_id, indx, ksledhash, kslednam, ksledp1, ksledp2, ksledp3,  ksledclassid, ksledclass#, ksledclass from x$ksled

00000000653C0F00
select inst_id, indx, ksledhash, kslednam, ksledp1, ksledp2, ksledp3,  ksledclassid, ksledclass#, ksledclass from x$ksled

000000008B1B7C50
SELECT NAME BUTTON_N

000000008CA154E8
493cd250cc27a1a671836dfc28f34ccf

000000008B089690
SELECT /*+ leading(u

0000000088F8F528 $BUILD$
 90eb94624221cec

000000008B26DD68
1de34d29182c04c6505c9a5a7fd90d

000000008B30EDB0 SYS
WRM$_DEEP_PURGE_INTERVAL

0000000088C52048
INSERT INTO EXFSYS.R

000000008B1667C0
72ed500d1e806b2611e4b2e479f3a1a

0000000088D1E160
9ab9d6aef931a2279854d30bcf111cab

000000008C885A20 $BUILD$
8332c94fb76ac7a9

0000000060FE6F10 SYS
SCHEDULER$_RULE

0000000088F1D6A8
48c33050a45de5157fe1808a63874c10

0000000092CC0AF8
select substrb(dump(

000000008CB16088
SELECT COUNT(NAME) F

0000000092CC7D38
d57afe879d974e2038fa40746a6f47ce

0000000065320F10
8905de4368a318f028c6fe64885960e6

000000008C987EE0
select substrb(dump(

0000000060EDFFB0 SYS
KU$_PROCOBJ_LINES

000000008CAC84B8 SYS
ALERT_QUE

000000008B075B00
SELECT /*+ leading(u

0000000088F738D0
select         dbms_metadata.get_ddl('CONSTRAINT',co.constraint_name,co.owner) cons_ddl from      dba_constraints co,      dba_cons_col
umns cc where     co.owner              = cc.owner and co.table_name         = cc.table_name and co.constraint_name    = cc.constraint_
name and co.constraint_type    <> 'R' and co.table_name = :table_name AND co.owner = :owner order by      co.owner,      co.table_name,
      co.constraint_type,      co.constraint_name

0000000060E80040
select         dbms_metadata.get_ddl('CONSTRAINT',co.constraint_name,co.owner) cons_ddl from      dba_constraints co,      dba_cons_col
umns cc where     co.owner              = cc.owner and co.table_name         = cc.table_name and co.constraint_name    = cc.constraint_
name and co.constraint_type    <> 'R' and co.table_name = :table_name AND co.owner = :owner order by      co.owner,      co.table_name,
      co.constraint_type,      co.constraint_name

0000000088F12408
select java_pool_size_for_estimate, java_pool_size_factor,  estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,  estd_lc_time_sav
ed_factor, estd_lc_load_time,  estd_lc_load_time_factor, estd_lc_memory_object_hits  from gv$java_pool_advice where inst_id = USERENV('
Instance')

000000008B22E430
select java_pool_size_for_estimate, java_pool_size_factor,  estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,  estd_lc_time_sav
ed_factor, estd_lc_load_time,  estd_lc_load_time_factor, estd_lc_memory_object_hits  from gv$java_pool_advice where inst_id = USERENV('

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
Instance')

0000000060C97E20
insert into sys.aud$( sessionid,entryid,statement,ntimestamp#, userid,userhost,terminal,action#,returncode, logoff$lread,logoff$pread,l
ogoff$lwrite,logoff$dead, logoff$time,comment$text,spare1,clientid,sessioncpu,proxy$sid,user$guid, instance#,process#,auditid,dbid) val
ues(:1,:2,:3,SYS_EXTRACT_UTC(SYSTIMESTAMP),     :4,:5,:6,:7,:8,     :9,:10,:11,:12,     cast(SYS_EXTRACT_UTC(systimestamp) as date),:13
,:14,:15,:16,:17,:18,     :19,:20,:21,:22)

0000000060C97F90
insert into sys.aud$( sessionid,entryid,statement,ntimestamp#, userid,userhost,terminal,action#,returncode, logoff$lread,logoff$pread,l
ogoff$lwrite,logoff$dead, logoff$time,comment$text,spare1,clientid,sessioncpu,proxy$sid,user$guid, instance#,process#,auditid,dbid) val
ues(:1,:2,:3,SYS_EXTRACT_UTC(SYSTIMESTAMP),     :4,:5,:6,:7,:8,     :9,:10,:11,:12,     cast(SYS_EXTRACT_UTC(systimestamp) as date),:13
,:14,:15,:16,:17,:18,     :19,:20,:21,:22)

0000000088DFD758
delete from indpart$ where obj#=:1

0000000060CAADC8
delete from indpart$ where obj#=:1

000000008CBAB9A0 SYS
X$KSFDSTFILE

0000000060DCCFE8
ee7e8aaa2e19cdb473cf3c9d1a4612b2

000000008B196740
SELECT BSLN_VARIANCE

0000000092C9B948
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060D7E280
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088D304A8
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000060DFD868
declare     cursor c_i is SELECT        A.INDEX_NAME,        A.COLUMN_NAME,            decode(t.DATA_TYPE,            'NUMBER',t.DATA_T
YPE||'('||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DA
TA_SCALE||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
                 'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')')
 ||' '||            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col_
type,        A.COLUMN_POSITION,decode(b.TABLESPACE_NAME,null,'None',B.TABLESPACE_NAME) as TABLESPACE_NAME,B.INDEX_TYPE,B.DEGREE,
 round(C.BYTES / 1024 / 1024) AS INDEX_MB,        A.DESCEND,        case when B.STATUS = 'UNUSABLE' then 'NO' else 'YES' end USABLE,
     decode(to_char(B.last_analyzed,'yymmdd hh24:mi'),n

0000000088E22E28
SELECT MIN(MAXNC), M

0000000088E73B90
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "I")  */ 1 AS C1 FROM "SYS"."IND$" S
AMPLE BLOCK(56.8586, 8) SEED(1)  "I" WHERE (DECODE("I"."TYPE#",8,'LOBINDEX','INDEX') LIKE 'TABLE%') AND ("I"."TYPE#"=1 OR "I"."TYPE#"=2
 OR "I"."TYPE#"=3 OR "I"."TYPE#"=4 OR "I"."TYPE#"=6 OR "I"."TYPE#"=7 OR "I"."TYPE#"=8 OR "I"."TYPE#"=9)) innerQuery

0000000060C4C250
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "I")  */ 1 AS C1 FROM "SYS"."IND$" S
AMPLE BLOCK(56.8586, 8) SEED(1)  "I" WHERE (DECODE("I"."TYPE#",8,'LOBINDEX','INDEX') LIKE 'TABLE%') AND ("I"."TYPE#"=1 OR "I"."TYPE#"=2
 OR "I"."TYPE#"=3 OR "I"."TYPE#"=4 OR "I"."TYPE#"=6 OR "I"."TYPE#"=7 OR "I"."TYPE#"=8 OR "I"."TYPE#"=9)) innerQuery

000000008B0850F0
SELECT NULL PNAME, N

000000008CA11660
4266ad41f92a147ae48039bfb85647c0

000000008C899FB8
update ind$ set ts#=:2,file#=:3,block#=:4,intcols=:5,type#=:6,flags=:7,property=:8,pctfree$=:9,initrans=:10,maxtrans=:11,blevel=:12,lea
fcnt=:13,distkey=:14,lblkkey=:15,dblkkey=:16,clufac=:17,cols=:18,analyzetime=:19,samplesize=:20,dataobj#=:21,degree=decode(:22,1,null,:
22),instances=decode(:23,1,null,:23),rowcnt=:24,pctthres$=:31*256+:25, indmethod#=:26, trunccnt=:27,spare4=:29,spare2=:30,spare6=:32whe
re obj#=:1

0000000088F955D8
update ind$ set ts#=:2,file#=:3,block#=:4,intcols=:5,type#=:6,flags=:7,property=:8,pctfree$=:9,initrans=:10,maxtrans=:11,blevel=:12,lea
fcnt=:13,distkey=:14,lblkkey=:15,dblkkey=:16,clufac=:17,cols=:18,analyzetime=:19,samplesize=:20,dataobj#=:21,degree=decode(:22,1,null,:
22),instances=decode(:23,1,null,:23),rowcnt=:24,pctthres$=:31*256+:25, indmethod#=:26, trunccnt=:27,spare4=:29,spare2=:30,spare6=:32whe
re obj#=:1

0000000060EF1120
update ind$ set ts#=:2,file#=:3,block#=:4,intcols=:5,type#=:6,flags=:7,property=:8,pctfree$=:9,initrans=:10,maxtrans=:11,blevel=:12,lea
fcnt=:13,distkey=:14,lblkkey=:15,dblkkey=:16,clufac=:17,cols=:18,analyzetime=:19,samplesize=:20,dataobj#=:21,degree=decode(:22,1,null,:
22),instances=decode(:23,1,null,:23),rowcnt=:24,pctthres$=:31*256+:25, indmethod#=:26, trunccnt=:27,spare4=:29,spare2=:30,spare6=:32whe
re obj#=:1

000000008B379D48
update ind$ set ts#=:2,file#=:3,block#=:4,intcols=:5,type#=:6,flags=:7,property=:8,pctfree$=:9,initrans=:10,maxtrans=:11,blevel=:12,lea
fcnt=:13,distkey=:14,lblkkey=:15,dblkkey=:16,clufac=:17,cols=:18,analyzetime=:19,samplesize=:20,dataobj#=:21,degree=decode(:22,1,null,:
22),instances=decode(:23,1,null,:23),rowcnt=:24,pctthres$=:31*256+:25, indmethod#=:26, trunccnt=:27,spare4=:29,spare2=:30,spare6=:32whe
re obj#=:1

000000008B290D08
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 160

0000000060E68458
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 160

0000000088E78D98
c25f40e6c301b03a299d5d03e60d836

000000008CBA19F8
begin   :owner :=upper('exit');   :index_name := upper('vim '); end;

000000008C8B6E28
begin   :owner :=upper('exit');   :index_name := upper('vim '); end;

000000008B382250
delete from tab_stats$ where obj#=:1

0000000088C6D2A0
delete from tab_stats$ where obj#=:1

0000000092C8A9A0
delete from tab_stats$ where obj#=:1

000000008B036A98
delete from tab_stats$ where obj#=:1

000000008B3826D0
delete from tab_stats$ where obj#=:1

000000008B3A87B8
SELECT COUNT(*) FROM

0000000060E9ABC0
cb398f2a788f856d7930b52af84d7ca5

000000008B31D7C0
SELECT PRIORITY PRIO

000000008CB24480
1e72adecced337a334088361336bcbb3

000000008B1AD940
f776ccd331cfe80e6eeea6a770452684

000000008C9EF388
d633471bd02e9bf3337cec25f79acb87

0000000088D05F28
61ea75ab26c4983c7d217da4cf2d3fed

000000008CADCF08
SELECT USERENV('ENTR

0000000060FBA770
INSERT INTO sys.wri$_adv_objects (task_id,id,type,attr1,attr2,attr3,attr4,attr5, exec_name, attr6, attr7, attr8) VALUES(:1, :2, :3, :4,
 :5,:6,' ',:7, :8, :9, :10, :11) RETURNING rowid into :12

0000000060F50380
INSERT INTO sys.wri$_adv_objects (task_id,id,type,attr1,attr2,attr3,attr4,attr5, exec_name, attr6, attr7, attr8) VALUES(:1, :2, :3, :4,
 :5,:6,' ',:7, :8, :9, :10, :11) RETURNING rowid into :12

0000000088C46090
INSERT INTO sys.wri$_adv_objects (task_id,id,type,attr1,attr2,attr3,attr4,attr5, exec_name, attr6, attr7, attr8) VALUES(:1, :2, :3, :4,
 :5,:6,' ',:7, :8, :9, :10, :11) RETURNING rowid into :12

0000000060ED5D50 SYS
V$EVENT_NAME

000000008C84C2B8
select smontabv.cnt, smontabv.time_mp,    smontab.scn, smontab.num_mappings, smontab.tim_scn_map    from smon_scn_time smontab,
 (select max(scn) scnmax,                 count(*)+sum(NVL2(TIM_SCN_MAP,NUM_MAPPINGS,0)) cnt,                 max(time_mp) time_mp
            from smon_scn_time) smontabv   where smontab.scn = smontabv.scnmax

000000008CB9AB78
select smontabv.cnt, smontabv.time_mp,    smontab.scn, smontab.num_mappings, smontab.tim_scn_map    from smon_scn_time smontab,
 (select max(scn) scnmax,                 count(*)+sum(NVL2(TIM_SCN_MAP,NUM_MAPPINGS,0)) cnt,                 max(time_mp) time_mp
            from smon_scn_time) smontabv   where smontab.scn = smontabv.scnmax

0000000088D80110
select smontabv.cnt, smontabv.time_mp,    smontab.scn, smontab.num_mappings, smontab.tim_scn_map    from smon_scn_time smontab,
 (select max(scn) scnmax,                 count(*)+sum(NVL2(TIM_SCN_MAP,NUM_MAPPINGS,0)) cnt,                 max(time_mp) time_mp
            from smon_scn_time) smontabv   where smontab.scn = smontabv.scnmax

0000000088F696F8
select smontabv.cnt, smontabv.time_mp,    smontab.scn, smontab.num_mappings, smontab.tim_scn_map    from smon_scn_time smontab,
 (select max(scn) scnmax,                 count(*)+sum(NVL2(TIM_SCN_MAP,NUM_MAPPINGS,0)) cnt,                 max(time_mp) time_mp
            from smon_scn_time) smontabv   where smontab.scn = smontabv.scnmax

0000000088E29F48
select smontabv.cnt, smontabv.time_mp,    smontab.scn, smontab.num_mappings, smontab.tim_scn_map    from smon_scn_time smontab,
 (select max(scn) scnmax,                 count(*)+sum(NVL2(TIM_SCN_MAP,NUM_MAPPINGS,0)) cnt,                 max(time_mp) time_mp
            from smon_scn_time) smontabv   where smontab.scn = smontabv.scnmax

000000008C84C738
select smontabv.cnt, smontabv.time_mp,    smontab.scn, smontab.num_mappings, smontab.tim_scn_map    from smon_scn_time smontab,
 (select max(scn) scnmax,                 count(*)+sum(NVL2(TIM_SCN_MAP,NUM_MAPPINGS,0)) cnt,                 max(time_mp) time_mp
            from smon_scn_time) smontabv   where smontab.scn = smontabv.scnmax

0000000060D5C7B8
SYSTEM

00000000653BB900
select         dbms_metadata.get_ddl('REF_CONSTRAINT',co.constraint_name,co.owner) cons_ddl from      dba_constraints co,      dba_cons
_columns cc where     co.owner              = cc.owner and co.table_name         = cc.table_name and co.constraint_name    = cc.constra
int_name and co.constraint_type    = 'R' and co.table_name = :table_name AND co.owner = :owner order by      co.owner,      co.table_na
me,      co.constraint_type,      co.constraint_name

0000000060C49FF0
select         dbms_metadata.get_ddl('REF_CONSTRAINT',co.constraint_name,co.owner) cons_ddl from      dba_constraints co,      dba_cons
_columns cc where     co.owner              = cc.owner and co.table_name         = cc.table_name and co.constraint_name    = cc.constra
int_name and co.constraint_type    = 'R' and co.table_name = :table_name AND co.owner = :owner order by      co.owner,      co.table_na
me,      co.constraint_type,      co.constraint_name

000000008CBCFF10
UPDATE RLM$RULESET S

000000008CBF3E50 SYS
V$BACKUP_PIECE

000000008CA4B1C0
8b57fc6115d21182d6633719ae0dfc0d

0000000088EFFC58
select * from v$ v$b

0000000088FB6E28
select substrb(dump(

0000000092D45BD8
SELECT GREATEST(NVL(

0000000088C66EA0
SELECT STATUS, FLAGS

000000008CB5A220 SYS
XMLTYPE

0000000060E8CEC8 SYS
DBMS_SQLDIAG_INTERNAL

0000000088C43170
744e30d2fbd37a048a454d6b4d53941d

000000008B2A01C8
5b2e19c3981ac4cffd1efcc8265b7cd7

0000000088D55A70
c40023e74668cd0711cb8f2151077dcb

0000000088FA40D8 EXFSYS
EXF$EXPRSET

000000008B2B5508
1961961864b501f2aa9bd2e494923

000000008C944248
select /*+ FIRST_ROWS(1) */ x.C1, x.C2, x.C3 from  (select a.obj# C1,          decode(bitand(a.flags, 64), 0, a.next_start_date,
          a.manual_open_time) C2,          decode(bitand(a.flags, 64), 0, a.duration, a.manual_duration) C3,          decode(bitand(a.f
lags, 64), 0, a.priority, 0) C4   from sys.scheduler$_window a   where bitand(a.flags, 1) = 1     and (a.next_start_date >= systimestam
p or bitand(a.flags, 2) <> 0 or          bitand(a.flags, 64) <> 0)     and a.obj# in (select b.member_oid from sys.scheduler$_wingrp_me
mber b                    where b.oid = :1)) x  order by x.C2, x.C4, x.C3 DESC

000000008B291930
select /*+ FIRST_ROWS(1) */ x.C1, x.C2, x.C3 from  (select a.obj# C1,          decode(bitand(a.flags, 64), 0, a.next_start_date,
          a.manual_open_time) C2,          decode(bitand(a.flags, 64), 0, a.duration, a.manual_duration) C3,          decode(bitand(a.f
lags, 64), 0, a.priority, 0) C4   from sys.scheduler$_window a   where bitand(a.flags, 1) = 1     and (a.next_start_date >= systimestam
p or bitand(a.flags, 2) <> 0 or          bitand(a.flags, 64) <> 0)     and a.obj# in (select b.member_oid from sys.scheduler$_wingrp_me
mber b                    where b.oid = :1)) x  order by x.C2, x.C4, x.C3 DESC

0000000088F43690
select /*+ FIRST_ROWS(1) */ x.C1, x.C2, x.C3 from  (select a.obj# C1,          decode(bitand(a.flags, 64), 0, a.next_start_date,
          a.manual_open_time) C2,          decode(bitand(a.flags, 64), 0, a.duration, a.manual_duration) C3,          decode(bitand(a.f
lags, 64), 0, a.priority, 0) C4   from sys.scheduler$_window a   where bitand(a.flags, 1) = 1     and (a.next_start_date >= systimestam
p or bitand(a.flags, 2) <> 0 or          bitand(a.flags, 64) <> 0)     and a.obj# in (select b.member_oid from sys.scheduler$_wingrp_me
mber b                    where b.oid = :1)) x  order by x.C2, x.C4, x.C3 DESC

000000008C9446C8
select /*+ FIRST_ROWS(1) */ x.C1, x.C2, x.C3 from  (select a.obj# C1,          decode(bitand(a.flags, 64), 0, a.next_start_date,
          a.manual_open_time) C2,          decode(bitand(a.flags, 64), 0, a.duration, a.manual_duration) C3,          decode(bitand(a.f
lags, 64), 0, a.priority, 0) C4   from sys.scheduler$_window a   where bitand(a.flags, 1) = 1     and (a.next_start_date >= systimestam
p or bitand(a.flags, 2) <> 0 or          bitand(a.flags, 64) <> 0)     and a.obj# in (select b.member_oid from sys.scheduler$_wingrp_me
mber b                    where b.oid = :1)) x  order by x.C2, x.C4, x.C3 DESC

0000000060CCC200
efecef098ebc545d43f50e47c50e8542

0000000092D08288 $BUILD$
932dbf2f37ac8a85

000000008C862F18
6394e9c5c9f72cfc56ba6d4087743715

0000000060E738C0
9851785299858990812

000000008B21DD70
93e68bd5f62696436065a5b1b1a56b6

000000008B387EF0
UPDATE WWV_FLOW_SESS

0000000088FE30E0 $BUILD$
ef06d0b8aba0f2e6

0000000088FE5820
SELECT ID FROM WWV_FLOW_MAIL_QUEUE

000000008B3E37B0
SELECT ID FROM WWV_FLOW_MAIL_QUEUE

0000000092D5CDC8 SYS
X$KCBWDS

000000008C89EC48
380b3dca8976e725312e105082d96c1b

0000000060F5A9C0
select substrb(dump(

000000008CA170A8 SYS
DBA_ADDM_TASKS

0000000088FB09F8
4d7a37d0131e2a762ebf4b6995e87961

000000008B099E30 SYS
SQL_BINDS

000000008B35FD10
8fb12607aa69c005c0c99213410588f

000000008CB49E98 SYS
V$DATABASE

000000008B3B6D38
SELECT 'x' FROM SYS.

0000000060E20660
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.INDPART$ IP, SYS.IND$ I, SYS.TABPART$ T WHERE IP.OBJ# = :B1 AND IP.BO# = I.OBJ# AND I.BO# =
 T.BO# AND IP.PART# = T.PART# UNION ALL SELECT T.FLAGS FROM SYS.INDCOMPART$ IP, SYS.IND$ I, SYS.TABCOMPART$ T WHERE IP.OBJ# = :B1 AND I
P.BO# = I.OBJ# AND I.BO# = T.BO# AND IP.PART# = T.PART#)

000000008B210908
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.INDPART$ IP, SYS.IND$ I, SYS.TABPART$ T WHERE IP.OBJ# = :B1 AND IP.BO# = I.OBJ# AND I.BO# =
 T.BO# AND IP.PART# = T.PART# UNION ALL SELECT T.FLAGS FROM SYS.INDCOMPART$ IP, SYS.IND$ I, SYS.TABCOMPART$ T WHERE IP.OBJ# = :B1 AND I
P.BO# = I.OBJ# AND I.BO# = T.BO# AND IP.PART# = T.PART#)

000000008CA16DC8
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.INDPART$ IP, SYS.IND$ I, SYS.TABPART$ T WHERE IP.OBJ# = :B1 AND IP.BO# = I.OBJ# AND I.BO# =
 T.BO# AND IP.PART# = T.PART# UNION ALL SELECT T.FLAGS FROM SYS.INDCOMPART$ IP, SYS.IND$ I, SYS.TABCOMPART$ T WHERE IP.OBJ# = :B1 AND I
P.BO# = I.OBJ# AND I.BO# = T.BO# AND IP.PART# = T.PART#)

000000008B05F460
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.INDPART$ IP, SYS.IND$ I, SYS.TABPART$ T WHERE IP.OBJ# = :B1 AND IP.BO# = I.OBJ# AND I.BO# =
 T.BO# AND IP.PART# = T.PART# UNION ALL SELECT T.FLAGS FROM SYS.INDCOMPART$ IP, SYS.IND$ I, SYS.TABCOMPART$ T WHERE IP.OBJ# = :B1 AND I
P.BO# = I.OBJ# AND I.BO# = T.BO# AND IP.PART# = T.PART#)

0000000088DD2AF8 $BUILD$
379f1dcc52d37da3

000000008C8838D0
delete from idl_sb4$ where obj#=:1 and part=:2

000000008C883D50
delete from idl_sb4$ where obj#=:1 and part=:2

0000000088C5F668
c67e7b681b92d03512926c754ed61e92

000000008CBB3080
select audit$,properties from type_misc$ where obj#=:1

0000000088C828F0
select audit$,properties from type_misc$ where obj#=:1

000000008CA11860
select audit$,properties from type_misc$ where obj#=:1

000000008CBB3500
select audit$,properties from type_misc$ where obj#=:1

000000008B0635E0
SELECT CACHE_STATS_S

0000000060E20BD0
25e1a22fb881f9034baed5f1570db641

000000008CAC2A50 SYS
DBMS_LOB

0000000088CF0708 SYS
DBMS_SQLTUNE

0000000088D91138 SYS
WRH$_SQLSTAT

000000008B0CB4A8 SYS
WRH$_SYS_TIME_MODEL_PK

000000008C89B1B8
select partition_name, high_value from (select partition_name, high_value, rownum rn       from (select PARTITION_NAME, HIGH_VALUE
        from dba_tab_partitions             where table_name = :1               and partition_name <> 'P_PERMANENT'       order by part
ition_position asc)) v where rn < :2

000000008B2B3BD0
select partition_name, high_value from (select partition_name, high_value, rownum rn       from (select PARTITION_NAME, HIGH_VALUE
        from dba_tab_partitions             where table_name = :1               and partition_name <> 'P_PERMANENT'       order by part
ition_position asc)) v where rn < :2

0000000088D48540
select partition_name, high_value from (select partition_name, high_value, rownum rn       from (select PARTITION_NAME, HIGH_VALUE
        from dba_tab_partitions             where table_name = :1               and partition_name <> 'P_PERMANENT'       order by part
ition_position asc)) v where rn < :2

0000000088F548C8
select partition_name, high_value from (select partition_name, high_value, rownum rn       from (select PARTITION_NAME, HIGH_VALUE
        from dba_tab_partitions             where table_name = :1               and partition_name <> 'P_PERMANENT'       order by part
ition_position asc)) v where rn < :2

000000008CB43928
select partition_name, high_value from (select partition_name, high_value, rownum rn       from (select PARTITION_NAME, HIGH_VALUE
        from dba_tab_partitions             where table_name = :1               and partition_name <> 'P_PERMANENT'       order by part
ition_position asc)) v where rn < :2

0000000088F31E58
ea869ce79cded5b6ae49174ec9706c0

0000000060E5A090
991e8a29534028cec2ed2cc4bbe1a89

000000008B20CDE8
18262691483234913923

0000000060E4D900
75f4ef4d47a4be4e1cf6f83f55501255

0000000060D4BE20
d53d00726c300f3075d1f859e9e87b

0000000088E0C868
insert into wrh$_comp_iostat   (SNAP_ID, DBID, INSTANCE_NUMBER, COMPONENT, FILE_TYPE,    IO_TYPE, OPERATION, BYTES, IO_COUNT) select :s
nap_id, :dbid, :instance_number, 'RMAN', 'DATAFILE',        is_sync, type, sum(bytes), sum(io_count) from  (select decode(x.type, 1, 'R
EAD', 'WRITE') as type,               case when (bitand(x.flags, 2) = 0) then 'SYNC' else 'ASYNC'                    end as is_sync,
            x.blocks * x.block_size as bytes,               case when (bitand(x.flags, 2) = 0)                    then (x.sync_count)
                  else (x.async_short_count + x.async_long_count +                          x.async_ready)                    end as io
_count        from   x$ksfqp x, v$dbfile df        where  x.type in (1,2)          and  df.name = x.filename) group by is_sync, type

000000008C911720
insert into wrh$_comp_iostat   (SNAP_ID, DBID, INSTANCE_NUMBER, COMPONENT, FILE_TYPE,    IO_TYPE, OPERATION, BYTES, IO_COUNT) select :s
nap_id, :dbid, :instance_number, 'RMAN', 'DATAFILE',        is_sync, type, sum(bytes), sum(io_count) from  (select decode(x.type, 1, 'R
EAD', 'WRITE') as type,               case when (bitand(x.flags, 2) = 0) then 'SYNC' else 'ASYNC'                    end as is_sync,
            x.blocks * x.block_size as bytes,               case when (bitand(x.flags, 2) = 0)                    then (x.sync_count)
                  else (x.async_short_count + x.async_long_count +                          x.async_ready)                    end as io
_count        from   x$ksfqp x, v$dbfile df        where  x.type in (1,2)          and  df.name = x.filename) group by is_sync, type

0000000088E0CCE8
insert into wrh$_comp_iostat   (SNAP_ID, DBID, INSTANCE_NUMBER, COMPONENT, FILE_TYPE,    IO_TYPE, OPERATION, BYTES, IO_COUNT) select :s
nap_id, :dbid, :instance_number, 'RMAN', 'DATAFILE',        is_sync, type, sum(bytes), sum(io_count) from  (select decode(x.type, 1, 'R
EAD', 'WRITE') as type,               case when (bitand(x.flags, 2) = 0) then 'SYNC' else 'ASYNC'                    end as is_sync,
            x.blocks * x.block_size as bytes,               case when (bitand(x.flags, 2) = 0)                    then (x.sync_count)
                  else (x.async_short_count + x.async_long_count +                          x.async_ready)                    end as io
_count        from   x$ksfqp x, v$dbfile df        where  x.type in (1,2)          and  df.name = x.filename) group by is_sync, type

00000000652E14E0
select PARTITION_NAME,     COLUMN_NAME,NUM_DISTINCT,DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STATS,     USER_STATS,     SAMP
LE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_PART_COL_STATISTICS t where     table_name = 'HASH_TABLE' and owner = u
pper('SCOTT')

0000000065303FC0
select PARTITION_NAME,     COLUMN_NAME,NUM_DISTINCT,DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STATS,     USER_STATS,     SAMP
LE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_PART_COL_STATISTICS t where     table_name = 'HASH_TABLE' and owner = u
pper('SCOTT')

0000000088E06238
select PARTITION_NAME,     COLUMN_NAME,NUM_DISTINCT,DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STATS,     USER_STATS,     SAMP
LE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_PART_COL_STATISTICS t where     table_name = 'HASH_TABLE' and owner = u
pper('SCOTT')

0000000060D949D8
1e24b2629c66a54cb947b2cbd8853a61

00000000652B3390
select event#, event_id, name,parameter1,parameter2,parameter3,  wait_class_id, wait_class#, wait_class from gv$event_name where inst_i
d = USERENV('Instance')

0000000092CAC3B8
select event#, event_id, name,parameter1,parameter2,parameter3,  wait_class_id, wait_class#, wait_class from gv$event_name where inst_i
d = USERENV('Instance')

000000008C914F58
SELECT ID FROM DBA_A

0000000060D61C90
a23491536388dc5a6b364c2e1b80afb

0000000088C5C358
DELETE FROM EXF$PARA

000000008C85E9F0 SYS
V_$DATABASE

000000008B096E40
INSERT INTO SYS.AUX_

0000000092D23028 APEX_030200
WWV_FLOW_DEVELOPER_TOOLBAR

0000000088FC47B0 SYS
DBA_ADVISOR_DEF_PARAMETERS

000000008C9F82B0 SYS
DBMS_APPLICATION_INFO

0000000088D76928
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D57458
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060E5FB00
264c7c2e664619b0e7e0d1ff84b6022b

000000008B252BA8
SELECT TYPE, ATTR1,

000000008B0DD5F8
SELECT ID FROM WWV_F

0000000092CB3768
SELECT RULE_CLASS_PA

000000008B2F7E18
SELECT ITEM_VALUE, N

000000008B3B5238
SELECT D_OBJ#, PROPE

0000000088E3B9D8
DELETE FROM SYS.SCHEDULER$_EVENT_LOG WHERE DBID IS NULL AND LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E WHERE E.TYPE# =
69 AND E.LOG_DATE < :B2 - NUMTODSINTERVAL(:B1 , 'DAY'))

0000000088C3F590
DELETE FROM SYS.SCHEDULER$_EVENT_LOG WHERE DBID IS NULL AND LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E WHERE E.TYPE# =
69 AND E.LOG_DATE < :B2 - NUMTODSINTERVAL(:B1 , 'DAY'))

000000008CA4FBD0
/* SQL Analyze(1) */

000000008CAFB058
SELECT DECODE(:B1 ,

000000008C953D38 SYS
DBA_TAB_COLUMNS

0000000088C95D48
SELECT MESSAGE FROM

000000008CA1AA00
SELECT DESCRIPTION F

0000000088CC3D68
select  RECID , STAMP , NAME , DEST_ID , THREAD# , SEQUENCE# ,  RESETLOGS_CHANGE# , RESETLOGS_TIME , RESETLOGS_ID ,  FIRST_CHANGE# , FI
RST_TIME ,  NEXT_CHANGE# , NEXT_TIME , BLOCKS , BLOCK_SIZE , CREATOR, REGISTRAR ,  STANDBY_DEST , ARCHIVED , APPLIED , DELETED , STATUS
 , COMPLETION_TIME ,  DICTIONARY_BEGIN , DICTIONARY_END , END_OF_REDO, BACKUP_COUNT ,  ARCHIVAL_THREAD#, ACTIVATION#, IS_RECOVERY_DEST_
FILE, COMPRESSED, FAL,  END_OF_REDO_TYPE, BACKED_BY_VSS from GV$ARCHIVED_LOG where inst_id = USERENV('Instance')

000000008CA15C48
select  RECID , STAMP , NAME , DEST_ID , THREAD# , SEQUENCE# ,  RESETLOGS_CHANGE# , RESETLOGS_TIME , RESETLOGS_ID ,  FIRST_CHANGE# , FI
RST_TIME ,  NEXT_CHANGE# , NEXT_TIME , BLOCKS , BLOCK_SIZE , CREATOR, REGISTRAR ,  STANDBY_DEST , ARCHIVED , APPLIED , DELETED , STATUS
 , COMPLETION_TIME ,  DICTIONARY_BEGIN , DICTIONARY_END , END_OF_REDO, BACKUP_COUNT ,  ARCHIVAL_THREAD#, ACTIVATION#, IS_RECOVERY_DEST_
FILE, COMPRESSED, FAL,  END_OF_REDO_TYPE, BACKED_BY_VSS from GV$ARCHIVED_LOG where inst_id = USERENV('Instance')

000000008B0EB618 SYS
DICTIONARY_OBJ_OWNER

0000000060F261F0
select substrb(dump(

0000000060CBF4E8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("OWNER") val,count(*) cnt  fr
om "SYS"."WRH$_SEG_STAT_OBJ" t  where "OWNER" is not null  group by nlssort("OWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SO
RT = binary')

0000000088E05288
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("OWNER") val,count(*) cnt  fr
om "SYS"."WRH$_SEG_STAT_OBJ" t  where "OWNER" is not null  group by nlssort("OWNER", 'NLS_SORT = binary')) order by nlssort(val,'NLS_SO
RT = binary')

00000000652E4700 SYS
DBA_DEPENDENCIES

000000008CBAC418 SYS
ANYDATA

0000000092CD3D68
49322c62e6f4859191289fff120ed84

00000000652C2450
2ce14b76387bee632fb44224b57b62e9

000000008CB831C0
bc35567961d08d303114542225975cd6

000000008B26DB48
dd2f59d696d607fe92ceb2a17bf48001

000000008B3407E8
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 151

0000000088CFAA58
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 151

0000000088FD92B0
9faa9fdd35b1cdd759e02d8756a6d8c4

000000008B2570C8
e2053296639a93f0ef456252eee8789a

0000000060C78940
SELECT USER FROM DUAL

0000000060DE9A10
SELECT USER FROM DUAL

000000008B26DF68
SELECT L.TABLE_NAME,

0000000060F9D100
INSERT INTO wri$_adv_sqlt_plan_hash  (task_id, exec_name, object_id, sql_id, attribute, plan_hash, spare_n1,   plan_id)VALUES  (:tid, :
exe, :oid, :sid, :att, :phv, :phv2,   sys.wri$_adv_sqlt_plan_seq.NEXTVAL) RETURNING plan_id INTO :pid

0000000060F0B380
INSERT INTO wri$_adv_sqlt_plan_hash  (task_id, exec_name, object_id, sql_id, attribute, plan_hash, spare_n1,   plan_id)VALUES  (:tid, :
exe, :oid, :sid, :att, :phv, :phv2,   sys.wri$_adv_sqlt_plan_seq.NEXTVAL) RETURNING plan_id INTO :pid

0000000088CEB0C8
SELECT A.NAME A_NAME

0000000060D60678
SELECT Q.NAME, T.SCH

000000008CAA0A60
declare  TYPE attrs_cur IS REF CURSOR;  m_cur       attrs_cur;  m_event varchar2(512);  m_user  varchar2(512);  m_owner varchar2(512);
 m_user1 varchar2(512);  m_type  varchar2(512);  m_stmt  varchar2(512);  m_name  varchar2(5120);  m_column varchar2(5120);  m_cnt   NUM
BER;  m_stmt1 varchar2(512);  m_var   varchar2(512);  m_o_stmt VARCHAR2(5120); PRAGMA AUTONOMOUS_TRANSACTION; begin   m_stmt:='select s
ys.dbms_standard.dictionary_obj_type from dual';  execute immediate m_stmt into m_type;  if(not (m_type='TABLE' or m_type='TRIGGER' or
m_type='USER' or m_type='TABLESPACE'))  then    return;  end if;   m_stmt:='select sys.dbms_standard.sysevent from dual';  execute imme
diate m_stmt into m_event;   m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';  execute immediate m_stmt into m_use
r;   m_stmt:='select SYS_CONTEXT(''USERENV'',''CURRENT_USER'') from dual';  execute immediate m_stmt into m_user1;   m_stmt:='select sy
s.dbms_standard.dictionary_obj_owner from dual';  execu

0000000088D2B818
declare  TYPE attrs_cur IS REF CURSOR;  m_cur       attrs_cur;  m_event varchar2(512);  m_user  varchar2(512);  m_owner varchar2(512);
 m_user1 varchar2(512);  m_type  varchar2(512);  m_stmt  varchar2(512);  m_name  varchar2(5120);  m_column varchar2(5120);  m_cnt   NUM
BER;  m_stmt1 varchar2(512);  m_var   varchar2(512);  m_o_stmt VARCHAR2(5120); PRAGMA AUTONOMOUS_TRANSACTION; begin   m_stmt:='select s
ys.dbms_standard.dictionary_obj_type from dual';  execute immediate m_stmt into m_type;  if(not (m_type='TABLE' or m_type='TRIGGER' or
m_type='USER' or m_type='TABLESPACE'))  then    return;  end if;   m_stmt:='select sys.dbms_standard.sysevent from dual';  execute imme
diate m_stmt into m_event;   m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';  execute immediate m_stmt into m_use
r;   m_stmt:='select SYS_CONTEXT(''USERENV'',''CURRENT_USER'') from dual';  execute immediate m_stmt into m_user1;   m_stmt:='select sy
s.dbms_standard.dictionary_obj_owner from dual';  execu

0000000088CC3588
declare  TYPE attrs_cur IS REF CURSOR;  m_cur       attrs_cur;  m_event varchar2(512);  m_user  varchar2(512);  m_owner varchar2(512);
 m_user1 varchar2(512);  m_type  varchar2(512);  m_stmt  varchar2(512);  m_name  varchar2(5120);  m_column varchar2(5120);  m_cnt   NUM
BER;  m_stmt1 varchar2(512);  m_var   varchar2(512);  m_o_stmt VARCHAR2(5120); PRAGMA AUTONOMOUS_TRANSACTION; begin   m_stmt:='select s
ys.dbms_standard.dictionary_obj_type from dual';  execute immediate m_stmt into m_type;  if(not (m_type='TABLE' or m_type='TRIGGER' or
m_type='USER' or m_type='TABLESPACE'))  then    return;  end if;   m_stmt:='select sys.dbms_standard.sysevent from dual';  execute imme
diate m_stmt into m_event;   m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';  execute immediate m_stmt into m_use
r;   m_stmt:='select SYS_CONTEXT(''USERENV'',''CURRENT_USER'') from dual';  execute immediate m_stmt into m_user1;   m_stmt:='select sy
s.dbms_standard.dictionary_obj_owner from dual';  execu

000000008CAA0EE0
declare  TYPE attrs_cur IS REF CURSOR;  m_cur       attrs_cur;  m_event varchar2(512);  m_user  varchar2(512);  m_owner varchar2(512);
 m_user1 varchar2(512);  m_type  varchar2(512);  m_stmt  varchar2(512);  m_name  varchar2(5120);  m_column varchar2(5120);  m_cnt   NUM
BER;  m_stmt1 varchar2(512);  m_var   varchar2(512);  m_o_stmt VARCHAR2(5120); PRAGMA AUTONOMOUS_TRANSACTION; begin   m_stmt:='select s
ys.dbms_standard.dictionary_obj_type from dual';  execute immediate m_stmt into m_type;  if(not (m_type='TABLE' or m_type='TRIGGER' or
m_type='USER' or m_type='TABLESPACE'))  then    return;  end if;   m_stmt:='select sys.dbms_standard.sysevent from dual';  execute imme
diate m_stmt into m_event;   m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';  execute immediate m_stmt into m_use
r;   m_stmt:='select SYS_CONTEXT(''USERENV'',''CURRENT_USER'') from dual';  execute immediate m_stmt into m_user1;   m_stmt:='select sy
s.dbms_standard.dictionary_obj_owner from dual';  execu

0000000060DC87D8
b69f3632171f7067e1884362c9479a16

0000000060DC5898
15317894302813570784

0000000092CCCB78
SELECT ATTRIBUTE FRO

0000000088D9EFD8
f2d504d6e045d96a6cb336e560a741da

0000000088F5BB68
DECLARE     cnt        NUMBER;     stmt       VARCHAR(500);     topology   VARCHAR(100);     REG_TBL    EXCEPTION;    BEGIN     if(sys.
dbms_standard.dictionary_obj_type != 'TABLE')     then       return;     end if;     stmt := 'SELECT  topology ' ||      '  FROM  SDO_T
OPO_METADATA_TABLE a, TABLE(a.Topo_Geometry_Layers) b ' ||             '  WHERE b.owner = :owner AND b.table_name = :tab ' ;     EXECUT
E IMMEDIATE stmt into topology       USING sys.dbms_standard.DICTIONARY_OBJ_OWNER,sys.dbms_standard.DICTIONARY_OBJ_NAME;     RAISE REG_
TBL;      EXCEPTION       WHEN REG_TBL THEN         MDSYS.MDERR.raise_md_error(          'MD', 'SDO', -13199,          'Need use delete
_topo_geometry_layer() to deregister table '          || sys.dbms_standard.DICTIONARY_OBJ_NAME || ' from topology ' || topology ||
     ' before drop it');       WHEN OTHERS THEN         RETURN;   END;

000000008B1476E8
DECLARE     cnt        NUMBER;     stmt       VARCHAR(500);     topology   VARCHAR(100);     REG_TBL    EXCEPTION;    BEGIN     if(sys.
dbms_standard.dictionary_obj_type != 'TABLE')     then       return;     end if;     stmt := 'SELECT  topology ' ||      '  FROM  SDO_T
OPO_METADATA_TABLE a, TABLE(a.Topo_Geometry_Layers) b ' ||             '  WHERE b.owner = :owner AND b.table_name = :tab ' ;     EXECUT
E IMMEDIATE stmt into topology       USING sys.dbms_standard.DICTIONARY_OBJ_OWNER,sys.dbms_standard.DICTIONARY_OBJ_NAME;     RAISE REG_
TBL;      EXCEPTION       WHEN REG_TBL THEN         MDSYS.MDERR.raise_md_error(          'MD', 'SDO', -13199,          'Need use delete
_topo_geometry_layer() to deregister table '          || sys.dbms_standard.DICTIONARY_OBJ_NAME || ' from topology ' || topology ||
     ' before drop it');       WHEN OTHERS THEN         RETURN;   END;

000000008B0946E0
DELETE FROM MON_MODS

000000008B171260 B
OWNER

0000000060E4C570 SYS
DBA_XSTREAM_OUTBOUND

0000000060FF3958 $BUILD$
a04ff267a57472eb

0000000088ECD2C8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "TS#2")  */ 1 AS C1 FROM "SYS"."TS$" "TS#2", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"
="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACHE',9,'SPACE HEA
DER','UNDEFINED') LIKE 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."TYPE#"<>8) AND ("S#1"
."TYPE#"<>10) AND ("S#1"."TS#"="TS#2"."TS#")) innerQuery

000000008B10E658
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "TS#2")  */ 1 AS C1 FROM "SYS"."TS$" "TS#2", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"
="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACHE',9,'SPACE HEA
DER','UNDEFINED') LIKE 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."TYPE#"<>8) AND ("S#1"
."TYPE#"<>10) AND ("S#1"."TS#"="TS#2"."TS#")) innerQuery

000000008C8A4A20
SELECT NVL(MAX(CKPT_

00000000653D5B70 $BUILD$
b95fde8136e254a5

0000000088CA1DC8
SELECT COUNT(*) FROM

000000008B0612A0
SELECT /*+ ordered

0000000060F08A60
SELECT NVL(LOWER(EXT

000000008B2A47E8
INSERT INTO RLM$JOBQ

0000000092D4D4F8
SELECT MIN(OPCODE_ID

0000000088E3F0D0 SYS
V$IR_FAILURE

000000008B2F8F58
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("ID")),to_char(substrb(dump(min("ID"),16,0,32),1,120)),to_char(substrb(du
mp(max("ID"),16,0,32),1,120)),to_char(count("OWNER#")),to_char(substrb(dump(min("OWNER#"),16,0,32),1,120)),to_char(substrb(dump(max("OW
NER#"),16,0,32),1,120)),to_char(count("OWNER_NAME")),to_char(substrb(dump(min("OWNER_NAME"),16,0,32),1,120)),to_char(substrb(dump(max("
OWNER_NAME"),16,0,32),1,120)),to_char(count("NAME")),to_char(substrb(dump(min("NAME"),16,0,32),1,120)),to_char(substrb(dump(max("NAME")
,16,0,32),1,120)),to_char(count("DESCRIPTION")),to_char(substrb(dump(min("DESCRIPTION"),16,0,32),1,120)),to_char(substrb(dump(max("DESC
RIPTION"),16,0,32),1,120)),to_char(count("ADVISOR_ID")),to_char(substrb(dump(min("ADVISOR_ID"),16,0,32),1,120)),to_char(substrb(dump(ma
x("ADVISOR_ID"),16,0,32),1,120)),to_char(count("ADVISOR

0000000088FCC758
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("ID")),to_char(substrb(dump(min("ID"),16,0,32),1,120)),to_char(substrb(du
mp(max("ID"),16,0,32),1,120)),to_char(count("OWNER#")),to_char(substrb(dump(min("OWNER#"),16,0,32),1,120)),to_char(substrb(dump(max("OW
NER#"),16,0,32),1,120)),to_char(count("OWNER_NAME")),to_char(substrb(dump(min("OWNER_NAME"),16,0,32),1,120)),to_char(substrb(dump(max("
OWNER_NAME"),16,0,32),1,120)),to_char(count("NAME")),to_char(substrb(dump(min("NAME"),16,0,32),1,120)),to_char(substrb(dump(max("NAME")
,16,0,32),1,120)),to_char(count("DESCRIPTION")),to_char(substrb(dump(min("DESCRIPTION"),16,0,32),1,120)),to_char(substrb(dump(max("DESC
RIPTION"),16,0,32),1,120)),to_char(count("ADVISOR_ID")),to_char(substrb(dump(min("ADVISOR_ID"),16,0,32),1,120)),to_char(substrb(dump(ma
x("ADVISOR_ID"),16,0,32),1,120)),to_char(count("ADVISOR

000000008CA695D0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("ID")),to_char(substrb(dump(min("ID"),16,0,32),1,120)),to_char(substrb(du
mp(max("ID"),16,0,32),1,120)),to_char(count("OWNER#")),to_char(substrb(dump(min("OWNER#"),16,0,32),1,120)),to_char(substrb(dump(max("OW
NER#"),16,0,32),1,120)),to_char(count("OWNER_NAME")),to_char(substrb(dump(min("OWNER_NAME"),16,0,32),1,120)),to_char(substrb(dump(max("
OWNER_NAME"),16,0,32),1,120)),to_char(count("NAME")),to_char(substrb(dump(min("NAME"),16,0,32),1,120)),to_char(substrb(dump(max("NAME")
,16,0,32),1,120)),to_char(count("DESCRIPTION")),to_char(substrb(dump(min("DESCRIPTION"),16,0,32),1,120)),to_char(substrb(dump(max("DESC
RIPTION"),16,0,32),1,120)),to_char(count("ADVISOR_ID")),to_char(substrb(dump(min("ADVISOR_ID"),16,0,32),1,120)),to_char(substrb(dump(ma
x("ADVISOR_ID"),16,0,32),1,120)),to_char(count("ADVISOR

000000008B2F90C8
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("ID")),to_char(substrb(dump(min("ID"),16,0,32),1,120)),to_char(substrb(du
mp(max("ID"),16,0,32),1,120)),to_char(count("OWNER#")),to_char(substrb(dump(min("OWNER#"),16,0,32),1,120)),to_char(substrb(dump(max("OW
NER#"),16,0,32),1,120)),to_char(count("OWNER_NAME")),to_char(substrb(dump(min("OWNER_NAME"),16,0,32),1,120)),to_char(substrb(dump(max("
OWNER_NAME"),16,0,32),1,120)),to_char(count("NAME")),to_char(substrb(dump(min("NAME"),16,0,32),1,120)),to_char(substrb(dump(max("NAME")
,16,0,32),1,120)),to_char(count("DESCRIPTION")),to_char(substrb(dump(min("DESCRIPTION"),16,0,32),1,120)),to_char(substrb(dump(max("DESC
RIPTION"),16,0,32),1,120)),to_char(count("ADVISOR_ID")),to_char(substrb(dump(min("ADVISOR_ID"),16,0,32),1,120)),to_char(substrb(dump(ma
x("ADVISOR_ID"),16,0,32),1,120)),to_char(count("ADVISOR

000000008B28A608
select num_nulls from dba_PART_COL_STATISTICS where table_name  = 'HASH_TABLE'

000000008C872828
select num_nulls from dba_PART_COL_STATISTICS where table_name  = 'HASH_TABLE'

0000000060D582C0 $BUILD$
23ace0bb1d1d5376

0000000092D7C588
faf02fc83903e5f2207a67424584db29

000000008B2AE928
25dd300813f54e858248c6cb8583f82c

0000000088E52218
8871b10ac4bbb285a5971d4cc41428b8

000000008B0DF698
SELECT ORDRKEYPFX, O

000000008B05C3B0
DELETE FROM SYS.WRI$

000000008B0B7EA0
INSERT INTO WRM$_BAS

000000008CAA7AF8
SELECT SYSDATE FROM

0000000092D49DD8 SYS
GV$SERVICE_WAIT_CLASS

0000000060E21E90
SELECT /*+ no_merge(v) no_push_pred(v) */ '"'||LOC_IND_OWNER||'"' IND_OWNER, '"'||LOC_IND_NAME||'"' IND_NAME, '"'||LOC_PART_NAME||'"' P
ART_NAME, OBJ_NUM, IPROP FROM ( SELECT /*+ all_rows */ UI.NAME LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ
# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, SYS.TABPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.INDPART$ IP, SYS.OBJ$ OI
P, SYS.USER$ UI WHERE UT.NAME = :B3 AND UT.USER# = OTP.OWNER# AND OTP.NAME = :B2 AND OTP.SUBNAME = :B1 AND OTP.NAMESPACE = 1 AND OTP.RE
MOTEOWNER IS NULL AND OTP.LINKNAME IS NULL AND OTP.TYPE# = 19 AND OTP.OBJ# = TP.OBJ# AND TP.BO# = I.BO# AND I.OBJ# = PO.OBJ# AND BITAND
(PO.FLAGS, 1) = 1 AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND IP.OBJ# = OIP.OBJ# AND OIP.OWNER# = UI.USER# UNION ALL SELECT UI.NAME
 LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, S
YS.TABCOMPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.IND

0000000088F65FF8
SELECT /*+ no_merge(v) no_push_pred(v) */ '"'||LOC_IND_OWNER||'"' IND_OWNER, '"'||LOC_IND_NAME||'"' IND_NAME, '"'||LOC_PART_NAME||'"' P
ART_NAME, OBJ_NUM, IPROP FROM ( SELECT /*+ all_rows */ UI.NAME LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ
# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, SYS.TABPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.INDPART$ IP, SYS.OBJ$ OI
P, SYS.USER$ UI WHERE UT.NAME = :B3 AND UT.USER# = OTP.OWNER# AND OTP.NAME = :B2 AND OTP.SUBNAME = :B1 AND OTP.NAMESPACE = 1 AND OTP.RE
MOTEOWNER IS NULL AND OTP.LINKNAME IS NULL AND OTP.TYPE# = 19 AND OTP.OBJ# = TP.OBJ# AND TP.BO# = I.BO# AND I.OBJ# = PO.OBJ# AND BITAND
(PO.FLAGS, 1) = 1 AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND IP.OBJ# = OIP.OBJ# AND OIP.OWNER# = UI.USER# UNION ALL SELECT UI.NAME
 LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, S
YS.TABCOMPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.IND

0000000060E7CB90
SELECT /*+ no_merge(v) no_push_pred(v) */ '"'||LOC_IND_OWNER||'"' IND_OWNER, '"'||LOC_IND_NAME||'"' IND_NAME, '"'||LOC_PART_NAME||'"' P
ART_NAME, OBJ_NUM, IPROP FROM ( SELECT /*+ all_rows */ UI.NAME LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ
# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, SYS.TABPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.INDPART$ IP, SYS.OBJ$ OI
P, SYS.USER$ UI WHERE UT.NAME = :B3 AND UT.USER# = OTP.OWNER# AND OTP.NAME = :B2 AND OTP.SUBNAME = :B1 AND OTP.NAMESPACE = 1 AND OTP.RE
MOTEOWNER IS NULL AND OTP.LINKNAME IS NULL AND OTP.TYPE# = 19 AND OTP.OBJ# = TP.OBJ# AND TP.BO# = I.BO# AND I.OBJ# = PO.OBJ# AND BITAND
(PO.FLAGS, 1) = 1 AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND IP.OBJ# = OIP.OBJ# AND OIP.OWNER# = UI.USER# UNION ALL SELECT UI.NAME
 LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, S
YS.TABCOMPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.IND

000000008B049720
SELECT /*+ no_merge(v) no_push_pred(v) */ '"'||LOC_IND_OWNER||'"' IND_OWNER, '"'||LOC_IND_NAME||'"' IND_NAME, '"'||LOC_PART_NAME||'"' P
ART_NAME, OBJ_NUM, IPROP FROM ( SELECT /*+ all_rows */ UI.NAME LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ
# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, SYS.TABPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.INDPART$ IP, SYS.OBJ$ OI
P, SYS.USER$ UI WHERE UT.NAME = :B3 AND UT.USER# = OTP.OWNER# AND OTP.NAME = :B2 AND OTP.SUBNAME = :B1 AND OTP.NAMESPACE = 1 AND OTP.RE
MOTEOWNER IS NULL AND OTP.LINKNAME IS NULL AND OTP.TYPE# = 19 AND OTP.OBJ# = TP.OBJ# AND TP.BO# = I.BO# AND I.OBJ# = PO.OBJ# AND BITAND
(PO.FLAGS, 1) = 1 AND I.OBJ# = IP.BO# AND IP.PART# = TP.PART# AND IP.OBJ# = OIP.OBJ# AND OIP.OWNER# = UI.USER# UNION ALL SELECT UI.NAME
 LOC_IND_OWNER, OIP.NAME LOC_IND_NAME, OIP.SUBNAME LOC_PART_NAME, OIP.OBJ# OBJ_NUM, I.PROPERTY IPROP FROM SYS.USER$ UT, SYS.OBJ$ OTP, S
YS.TABCOMPART$ TP, SYS.IND$ I, SYS.PARTOBJ$ PO, SYS.IND

000000008CAE3970 SYS
WRH$_SQLCOMMAND_NAME

000000008B308558
select substrb(dump(

000000008B048A40
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

000000008B048090
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

0000000088D03E90
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

0000000088D03940
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

0000000092CEBC50
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

0000000092CEDEB8
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

000000008C8B4050
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

000000008B058AA0
SELECT SPARE4 FROM SYS.OPTSTAT_HIST_CONTROL$ WHERE SNAME = :B1

0000000060FAA3B8
9e304c31c622398dc4a8d959dc6631

0000000088C909C8
UPDATE WRI$_SQLSET_D

0000000088C81418 EXFSYS
EXF$CSISET

000000008B04A920
SELECT T.PROPERTY FR

0000000060D58E00
UPDATE STREAMS$_SPLI

000000008C8A2910
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F8D178
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088E34778 SYS
V$PROCESS_MEMORY

000000008C868D88
delete from WRH$_UNDOSTAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B2B8128
delete from WRH$_UNDOSTAT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092C406D8 SYS
KOPM$

0000000088FA3248
f02a7d636312cf1c6d38da89c975d

0000000060EFF600
558efbca1489645648b8cdc4a0f67bf

0000000060EC19D0

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
9d35fa726235e4b1a0d2db795170cb2e

0000000092D1A928 SYS
X$KEWRTSEGSTAT

000000008B196F98 SYS
AQ$_NONDURSUB_SEQUENCE

0000000088F891A8
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  begin dbms_rlmgr_dr.execschdactions('RLM$SCHDNEGACTION'); end
;  :mydate := next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

000000008B324548
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  begin dbms_rlmgr_dr.execschdactions('RLM$SCHDNEGACTION'); end
;  :mydate := next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

000000008B0585D0
INSERT INTO SYS.OPTS

000000008CB5F310
delete from WRH$_PROCESS_MEMORY_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B21F8F0
delete from WRH$_PROCESS_MEMORY_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B1CA568
DELETE FROM WWV_FLOW

0000000088CA5FF8 SYS
WRI$_SQLSET_PLANS

000000008B2089B8
33112c7778d88fba837089936c443e49

000000008B3B8A78 SYS
DBMS_UTILITY

0000000060DBD6A0 SYS
DBMS_STREAMS_AUTO_INT

0000000060F19390
select /*+  no_paral

0000000060C3E6E0 $BUILD$
499e60c99d1660bd

0000000060D89D88
select st.inst_id, st.component, st.cursize * st.gransize,      st.minsize * st.gransize, st.maxsize * st.gransize,      st.usersize *
st.gransize, st.opercnt,      decode(st.lastoper, 0, 'STATIC', 1, 'INITIALIZING', 2, 'DISABLED',            3, 'GROW', 4, 'SHRINK', 5,
'SHRINK_CANCEL', NULL),      decode(st.lastmode, 1, 'MANUAL', 2, 'DEFERRED', 3, 'IMMEDIATE', NULL),      st.lasttime, st.gransize
from x$kmgsct st

0000000092D79528
select st.inst_id, st.component, st.cursize * st.gransize,      st.minsize * st.gransize, st.maxsize * st.gransize,      st.usersize *
st.gransize, st.opercnt,      decode(st.lastoper, 0, 'STATIC', 1, 'INITIALIZING', 2, 'DISABLED',            3, 'GROW', 4, 'SHRINK', 5,
'SHRINK_CANCEL', NULL),      decode(st.lastmode, 1, 'MANUAL', 2, 'DEFERRED', 3, 'IMMEDIATE', NULL),      st.lasttime, st.gransize
from x$kmgsct st

0000000088D7BD88
UPDATE WRI$_ADV_RECO

000000008CAC79C8
62815aefd38d89e6709fc2c9b1efc8d

0000000060F2A290 APEX_030200
WWV_FLOW_CACHE

0000000060FC5330 $BUILD$
d7d72cd0c5ad3f39

0000000060FBB2E0
/* SQL Analyze(1) */

000000008C85D6A0 PUBLIC
DBA_HIST_BASELINE_METADATA

0000000088FBB528
SELECT D.RECID, D.FI

0000000060E92110
SELECT ROWID AS NEXT

0000000060FFDB70 SYS
V$ARCHIVE_DEST

0000000060C935F0
bd8ff7f116095cd04f07c4184237ed0e

0000000088E08118
732d1523e906e89a5839117a4fa53ef

0000000088E5D1D8
SELECT TASK_ID FROM SYS.DBA_ADVISOR_TASKS WHERE STATUS# = :B1

000000008C916448
SELECT TASK_ID FROM SYS.DBA_ADVISOR_TASKS WHERE STATUS# = :B1

000000008B07C0E0
SELECT C.NAME, CASE

0000000088D29DD0
b8437480dae6edc212f03945aad7bcb2

000000008B262FA8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CB55360
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088DB1428
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("TAB") FULL("TA
B") NO_PARALLEL_INDEX("TAB") */ 1 AS C1, CASE WHEN BITAND("TAB"."TRIGFLAG",67108864)<>67108864 AND BITAND("TAB"."PROPERTY",512)<>512 AN
D BITAND("TAB"."FLAGS",536870912)<>536870912 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "TAB") SAMP
LESUB

000000008CAA56B0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("TAB") FULL("TA
B") NO_PARALLEL_INDEX("TAB") */ 1 AS C1, CASE WHEN BITAND("TAB"."TRIGFLAG",67108864)<>67108864 AND BITAND("TAB"."PROPERTY",512)<>512 AN
D BITAND("TAB"."FLAGS",536870912)<>536870912 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "TAB") SAMP
LESUB

0000000092C420F8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("TAB") FULL("TA
B") NO_PARALLEL_INDEX("TAB") */ 1 AS C1, CASE WHEN BITAND("TAB"."TRIGFLAG",67108864)<>67108864 AND BITAND("TAB"."PROPERTY",512)<>512 AN
D BITAND("TAB"."FLAGS",536870912)<>536870912 THEN 1 ELSE 0 END AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "TAB") SAMP
LESUB

0000000092C7BE88
DELETE FROM SYS.SCHE

0000000060CD0BC0
select NUM_BUCKETS from dba_PART_COL_STATISTICS where table_name  = 'HASH_TABLE'

000000008B3226B8
select NUM_BUCKETS from dba_PART_COL_STATISTICS where table_name  = 'HASH_TABLE'

0000000088FE3ED0
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_USED_DELTA != 0

000000008C952048
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_USED_DELTA != 0

0000000060CA2C60
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_USED_DELTA != 0

0000000092CA0A88
SELECT COUNT(DISTINCT(OBJ#)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND SPACE_USED_DELTA != 0

000000006530B900
91c6fd92561123a6f540e39557557449

000000008B043020
d7b2e9218a6a2aa1176f142c4a1d3fe3

0000000088F78AB8
SELECT FLOW_ID, FLOW

0000000088DE73B8 SYS
DBA_POLICIES

000000008B08EB30 SYS
CACHE_STATS_0$

0000000088E27C78
UPDATE RLM$EQUALSPEC

000000008CBC8858
454a784df5da503fa068855d1c5ec92f

0000000088CFD668
      begin          dbms_rcvman.resetAll;       end;

0000000088FB29F8
      begin          dbms_rcvman.resetAll;       end;

0000000060ED4B20
select /*+  no_paral

000000008B18A9A8
select count(*) from test1

000000008C8A63E0
select count(*) from test1

0000000088E88E70
select count(*) from test1

0000000060CDC070 SYS
DBMS_AQIN

0000000088E99970
SELECT TABLESPACE_NA

0000000088F89B48
4b4c69c28fc8eb47d4348615834f93c

000000008CB40F68
select audit$,options from procedure$ where obj#=:1

0000000088D31B40
select audit$,options from procedure$ where obj#=:1

0000000088D5C368
select audit$,options from procedure$ where obj#=:1

0000000060F2F5B0
select audit$,options from procedure$ where obj#=:1

000000008CB413E8
select audit$,options from procedure$ where obj#=:1

000000008B2D4618 SYS
SCHEDULER$_EVENT_LOG

000000008B1B37A0
d12157065e68de64e1bd048993406630

000000008B143AA8 SYS
STREAMS$_CAPTURE_PROCESS

0000000088C94D38
SELECT XMLCONCAT(:B2

0000000092C3FC08
SELECT PROCESS_SQL_C

0000000092C86798
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$ o where o.obj#=:1

0000000088D25D90
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$ o where o.obj#=:1

000000008CBCA488
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$ o where o.obj#=:1

000000008CBF8508
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$ o where o.obj#=:1

000000008CB319E8
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$ o where o.obj#=:1

0000000092C86C18
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$ o where o.obj#=:1

0000000088FE0610 SYS
O$SQL_BIND_CAPTURE

0000000088D207D0 $BUILD$
7ce47973d6539529

0000000088F80698
SELECT DBID FROM SYS.V_$DATABASE

000000008B3F8E98
SELECT DBID FROM SYS.V_$DATABASE

000000008B056280
SELECT NVL(SUM(ROWCN

0000000088FAFF58
539c4e2b345582bc74896c5de64071f

000000008C923328
DELETE FROM SYS.WRI$

000000008C921168
INSERT INTO WRI$_ADV

000000008C8855C0
b2458d37c885a420fc5bb337fe3e097e

000000008B2313B0 SYS
OPERATOR$

0000000060C59220
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "DP")  */ 1 AS C1 FROM "SYS"."PROFIL
E$" "DP") innerQuery

0000000060C596A0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "DP")  */ 1 AS C1 FROM "SYS"."PROFIL
E$" "DP") innerQuery

000000008B169660 SYS
DBA_SCHEDULER_JOBS

0000000088F5B668 MDSYS
SDO_GEOR_BDDL_TRIGGER

000000008CA19750
8c693adc420b8f814f42142590b0fad

000000008CBB9C90 SYS
GV$JAVA_POOL_ADVICE

0000000060F65590 $BUILD$
 99d1893833d368b

0000000088C5A528
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B148FE8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C91DF68
UPDATE SYS.WRI$_ADV_

000000008B34CAC0 SYS
ALL_SCHEDULER_GLOBAL_ATTRIBUTE

0000000060CAA630
f5c2ddd2d9959db925f2b275a39f63a9

0000000092D84788 PUBLIC
DBA_PART_COLUMNS

0000000092D3E2D8
59506658acd5a28a525865666fadce2c

000000008B0D8A48 SYS
V_$SGASTAT

000000008B31D650
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B2264C8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D2FFB8 SYS
V$SESSION_WAIT

0000000088D650B8 $BUILD$
1a016bbe951337ba

000000008CB524A0
92c15c68693abccac2d594e7c612711

0000000088E57278
SELECT DECODE(RSET_R

0000000060F14C60
select substrb(dump(

0000000088E6BC38
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 T.NUM_DISTINCT, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY, A.HISTOGRA
M, A.NUM_BUCKETS, T.DENSITY, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI:SS') AS LAST1 FROM
DBA_TAB_COL_STATISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME
AND A.TABLE_NAME = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) ORDER BY A.O
WNER,A.COLUMN_NAME

0000000092C3E258
SELECT A.COLUMN_NAME, DECODE(T.DATA_TYPE, 'NUMBER',T.DATA_TYPE||'('|| DECODE(T.DATA_PRECISION, NULL,T.DATA_LENGTH||')', T.DATA_PRECISIO
N||','||T.DATA_SCALE||')'), 'DATE',T.DATA_TYPE, 'LONG',T.DATA_TYPE, 'LONG RAW',T.DATA_TYPE, 'ROWID',T.DATA_TYPE, 'MLSLABEL',T.DATA_TYPE
, T.DATA_TYPE||'('||T.DATA_LENGTH||')') ||' '|| DECODE(T.NULLABLE, 'N','NOT NULL', 'n','NOT NULL', NULL) COL1, B.NUM_ROWS, T.NUM_NULLS,
 T.NUM_DISTINCT, A.NUM_DISTINCT CARDINALITY, ROUND(A.NUM_DISTINCT / DECODE(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY, A.HISTOGRA
M, A.NUM_BUCKETS, T.DENSITY, T.SAMPLE_SIZE, T.GLOBAL_STATS, T.USER_STATS, TO_CHAR(T.LAST_ANALYZED,'YYYYMMDD HH24:MI:SS') AS LAST1 FROM
DBA_TAB_COL_STATISTICS A, DBA_TABLES B,DBA_TAB_COLUMNS T WHERE A.OWNER = B.OWNER AND A.OWNER = T.OWNER AND A.TABLE_NAME = T.TABLE_NAME
AND A.TABLE_NAME = B.TABLE_NAME AND T.COLUMN_NAME = A.COLUMN_NAME AND A.TABLE_NAME = UPPER(:B2 ) AND A.OWNER = UPPER(:B1 ) ORDER BY A.O
WNER,A.COLUMN_NAME

000000008C85E7D0 SYS
GV_$INSTANCE

0000000088EB7F10
insert into wrh$_undostat   (begin_time, end_time, dbid, instance_number, snap_id, undotsn,    undoblks, txncount, maxquerylen, maxquer
ysqlid,    maxconcurrency, unxpstealcnt, unxpblkrelcnt, unxpblkreucnt, expstealcnt,    expblkrelcnt, expblkreucnt, ssolderrcnt, nospace
errcnt, activeblks,    unexpiredblks, expiredblks, tuned_undoretention, status,    spcprs_retention, runawayquerysqlid)  select    to_d
ate(ktusmstrbegtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),    to_date(ktusmstrendtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gre
gorian'),    max(:dbid), max(:instance_number), max(:snap_id),    max(KTUSMSTTSN), sum(KTUSMSTUSU), sum(KTUSMSTTCT), max(KTUSMSTMQL),
  max(KTUSMSTRMQI), max(KTUSMSTMTC),    sum(KTUSMSTUAC), sum(KTUSMSTUBS), sum(KTUSMSTUBR),    sum(KTUSMSTXAC), sum(KTUSMSTXBS), sum(KTU
SMSTXBR),    sum(KTUSMSTSOC), sum(KTUSMSTOOS), max(KTUSMSTABK),    max(KTUSMSTUBK), max(KTUSMSTEBK), max(KTUSMSTTUR), max(KTUSMSTFLG),
   max(KTUSMSTSPR), max(KTUSMSTRQSID)  from    X$KTUSMS

0000000088ED3220
insert into wrh$_undostat   (begin_time, end_time, dbid, instance_number, snap_id, undotsn,    undoblks, txncount, maxquerylen, maxquer
ysqlid,    maxconcurrency, unxpstealcnt, unxpblkrelcnt, unxpblkreucnt, expstealcnt,    expblkrelcnt, expblkreucnt, ssolderrcnt, nospace
errcnt, activeblks,    unexpiredblks, expiredblks, tuned_undoretention, status,    spcprs_retention, runawayquerysqlid)  select    to_d
ate(ktusmstrbegtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),    to_date(ktusmstrendtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gre
gorian'),    max(:dbid), max(:instance_number), max(:snap_id),    max(KTUSMSTTSN), sum(KTUSMSTUSU), sum(KTUSMSTTCT), max(KTUSMSTMQL),
  max(KTUSMSTRMQI), max(KTUSMSTMTC),    sum(KTUSMSTUAC), sum(KTUSMSTUBS), sum(KTUSMSTUBR),    sum(KTUSMSTXAC), sum(KTUSMSTXBS), sum(KTU
SMSTXBR),    sum(KTUSMSTSOC), sum(KTUSMSTOOS), max(KTUSMSTABK),    max(KTUSMSTUBK), max(KTUSMSTEBK), max(KTUSMSTTUR), max(KTUSMSTFLG),
   max(KTUSMSTSPR), max(KTUSMSTRQSID)  from    X$KTUSMS

0000000092C3F648
insert into wrh$_undostat   (begin_time, end_time, dbid, instance_number, snap_id, undotsn,    undoblks, txncount, maxquerylen, maxquer
ysqlid,    maxconcurrency, unxpstealcnt, unxpblkrelcnt, unxpblkreucnt, expstealcnt,    expblkrelcnt, expblkreucnt, ssolderrcnt, nospace
errcnt, activeblks,    unexpiredblks, expiredblks, tuned_undoretention, status,    spcprs_retention, runawayquerysqlid)  select    to_d
ate(ktusmstrbegtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),    to_date(ktusmstrendtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gre
gorian'),    max(:dbid), max(:instance_number), max(:snap_id),    max(KTUSMSTTSN), sum(KTUSMSTUSU), sum(KTUSMSTTCT), max(KTUSMSTMQL),
  max(KTUSMSTRMQI), max(KTUSMSTMTC),    sum(KTUSMSTUAC), sum(KTUSMSTUBS), sum(KTUSMSTUBR),    sum(KTUSMSTXAC), sum(KTUSMSTXBS), sum(KTU
SMSTXBR),    sum(KTUSMSTSOC), sum(KTUSMSTOOS), max(KTUSMSTABK),    max(KTUSMSTUBK), max(KTUSMSTEBK), max(KTUSMSTTUR), max(KTUSMSTFLG),
   max(KTUSMSTSPR), max(KTUSMSTRQSID)  from    X$KTUSMS

0000000060FE3A40
insert into wrh$_undostat   (begin_time, end_time, dbid, instance_number, snap_id, undotsn,    undoblks, txncount, maxquerylen, maxquer
ysqlid,    maxconcurrency, unxpstealcnt, unxpblkrelcnt, unxpblkreucnt, expstealcnt,    expblkrelcnt, expblkreucnt, ssolderrcnt, nospace
errcnt, activeblks,    unexpiredblks, expiredblks, tuned_undoretention, status,    spcprs_retention, runawayquerysqlid)  select    to_d
ate(ktusmstrbegtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),    to_date(ktusmstrendtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gre
gorian'),    max(:dbid), max(:instance_number), max(:snap_id),    max(KTUSMSTTSN), sum(KTUSMSTUSU), sum(KTUSMSTTCT), max(KTUSMSTMQL),
  max(KTUSMSTRMQI), max(KTUSMSTMTC),    sum(KTUSMSTUAC), sum(KTUSMSTUBS), sum(KTUSMSTUBR),    sum(KTUSMSTXAC), sum(KTUSMSTXBS), sum(KTU
SMSTXBR),    sum(KTUSMSTSOC), sum(KTUSMSTOOS), max(KTUSMSTABK),    max(KTUSMSTUBK), max(KTUSMSTEBK), max(KTUSMSTTUR), max(KTUSMSTFLG),
   max(KTUSMSTSPR), max(KTUSMSTRQSID)  from    X$KTUSMS

0000000088EB8390
insert into wrh$_undostat   (begin_time, end_time, dbid, instance_number, snap_id, undotsn,    undoblks, txncount, maxquerylen, maxquer
ysqlid,    maxconcurrency, unxpstealcnt, unxpblkrelcnt, unxpblkreucnt, expstealcnt,    expblkrelcnt, expblkreucnt, ssolderrcnt, nospace
errcnt, activeblks,    unexpiredblks, expiredblks, tuned_undoretention, status,    spcprs_retention, runawayquerysqlid)  select    to_d
ate(ktusmstrbegtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'),    to_date(ktusmstrendtime,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gre
gorian'),    max(:dbid), max(:instance_number), max(:snap_id),    max(KTUSMSTTSN), sum(KTUSMSTUSU), sum(KTUSMSTTCT), max(KTUSMSTMQL),
  max(KTUSMSTRMQI), max(KTUSMSTMTC),    sum(KTUSMSTUAC), sum(KTUSMSTUBS), sum(KTUSMSTUBR),    sum(KTUSMSTXAC), sum(KTUSMSTXBS), sum(KTU
SMSTXBR),    sum(KTUSMSTSOC), sum(KTUSMSTOOS), max(KTUSMSTABK),    max(KTUSMSTUBK), max(KTUSMSTEBK), max(KTUSMSTTUR), max(KTUSMSTFLG),
   max(KTUSMSTSPR), max(KTUSMSTRQSID)  from    X$KTUSMS

0000000088DCED68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B11D090
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B09BBF0 SYS
DBMS_STATS_LIB

0000000088DB43E8
99da9acfaef4e42132827ed7ba0c85a6

000000008B2AC878
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008B2911C0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008B04B0C0
SELECT VALUE FROM V$

000000008B373B98
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN")  */ 1 AS C1 FROM "SYS"."UNDO$"
 "UN" WHERE ("UN"."STATUS$"<>1)) innerQuery

000000008C95D490
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN")  */ 1 AS C1 FROM "SYS"."UNDO$"
 "UN" WHERE ("UN"."STATUS$"<>1)) innerQuery

000000008C974D78
SELECT U.NAME, O.NAM

0000000060FEDCA0
6e284360ddbfa60aefd331a6b5436b9f

0000000088C59778
LOCK TABLE "SYS"."OR

0000000060E25950
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060D088D8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0EF188
6baf1288053c9fc1181bbddcb842df4

0000000060FC59D0
begin   :owner :=upper('scott');   :table_name := upper('hash_value'); end;

0000000088E18E28
begin   :owner :=upper('scott');   :table_name := upper('hash_value'); end;

000000008B2B9AD8
select substrb(dump(

0000000088E87230 SYS
X$KEAFDGN

000000008B0992A0
SELECT SYS_CONTEXT('

0000000060CBE428
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("OBJECT_TYPE") val,count(*) c
nt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "OBJECT_TYPE" is not null  group by nlssort("OBJECT_TYPE", 'NLS_SORT = binary')) order by n
lssort(val,'NLS_SORT = binary')

0000000060F24CA0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */max("OBJECT_TYPE") val,count(*) c
nt  from "SYS"."WRH$_SEG_STAT_OBJ" t  where "OBJECT_TYPE" is not null  group by nlssort("OBJECT_TYPE", 'NLS_SORT = binary')) order by n
lssort(val,'NLS_SORT = binary')

0000000092C345C8 $BUILD$
bdd0082f61d7512e

0000000060FCBF80
a0d2db2668e3717bf2eead2bc7e482db

000000008CBD0780
select  NUM , NAME , TYPE , VALUE , DISPLAY_VALUE, ISDEFAULT , ISSES_MODIFIABLE , ISSYS_MODIFIABLE , ISINSTANCE_MODIFIABLE, ISMODIFIED
, ISADJUSTED , ISDEPRECATED, ISBASIC, DESCRIPTION, UPDATE_COMMENT, HASH  from GV$PARAMETER where inst_id = USERENV('Instance')

000000008C98C050
select  NUM , NAME , TYPE , VALUE , DISPLAY_VALUE, ISDEFAULT , ISSES_MODIFIABLE , ISSYS_MODIFIABLE , ISINSTANCE_MODIFIABLE, ISMODIFIED
, ISADJUSTED , ISDEPRECATED, ISBASIC, DESCRIPTION, UPDATE_COMMENT, HASH  from GV$PARAMETER where inst_id = USERENV('Instance')

0000000088D6FB60
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U2")  */ 4294967295 AS C1, COUNT(*
) AS C2, COUNT(CASE WHEN ("U2"."TYPE#"=2) AND ("U2"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id'))) THEN 1 ELSE null E
ND) AS C3  FROM SYS."USER$" "U2" WHERE ("U2"."TYPE#"=2) AND ("U2"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id')))) inn
erQuery

000000008CB21008
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U2")  */ 4294967295 AS C1, COUNT(*
) AS C2, COUNT(CASE WHEN ("U2"."TYPE#"=2) AND ("U2"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id'))) THEN 1 ELSE null E
ND) AS C3  FROM SYS."USER$" "U2" WHERE ("U2"."TYPE#"=2) AND ("U2"."SPARE2"=TO_NUMBER(SYS_CONTEXT('userenv','current_edition_id')))) inn
erQuery

000000008B20D898 SYS
GV$SYSTEM_PARAMETER

0000000060D6EA88 $BUILD$
aecdae46ec7906f0

000000008B07BB90
SELECT CU.OBJ# OBJN,

0000000088DBC198 $BUILD$
63d0ba02816234fa

0000000060F36DB8 SYS
WRH$_PERSISTENT_QMN_CACHE

0000000088CAD468
47655194560b7fbe19ca7f13d4ba00d

000000008B32A8C8
SELECT X.OWNER, X.TABLE_NAME, X.INDEX_NAME, TO_CHAR(SS.CREATED,'yyyy-mm-dd hh24:mi:ss') AS CREATED, C.COLUMN_POSITION, C.COLUMN_NAME, S
.BYTES / 1024 / 1024 M FROM (SELECT A.OWNER, A.TABLE_NAME, A.INDEX_NAME FROM DBA_INDEXES A WHERE A.OWNER IN (SELECT USERNAME FROM DBA_U
SERS WHERE USERNAME NOT IN('SYSTEM','WMSYS','XDB','SYS','SCOTT','QMONITOR','OUTLN','ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSY
S', 'DBSNMP','APEX_040200','AUDSYS','CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL')) AND (A.OWNER, A.
INDEX_NAME) NOT IN (SELECT /*+unnest*/ B.OBJECT_OWNER, B.OBJECT_NAME FROM GV$SQL A, GV$SQL_PLAN B WHERE A.SQL_ID = B.SQL_ID AND A.CHILD
_NUMBER = B.CHILD_NUMBER AND B.OBJECT_OWNER IN (SELECT USERNAME FROM DBA_USERS WHERE USERNAME NOT IN ('SYSTEM','WMSYS','XDB','SYS','SCO
TT','QMONITOR','OUTLN','ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS', 'DBSNMP','APEX_040200','AUDSYS','CTXSYS','APEX_030200','
EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL

000000008C844F38
SELECT X.OWNER, X.TABLE_NAME, X.INDEX_NAME, TO_CHAR(SS.CREATED,'yyyy-mm-dd hh24:mi:ss') AS CREATED, C.COLUMN_POSITION, C.COLUMN_NAME, S
.BYTES / 1024 / 1024 M FROM (SELECT A.OWNER, A.TABLE_NAME, A.INDEX_NAME FROM DBA_INDEXES A WHERE A.OWNER IN (SELECT USERNAME FROM DBA_U
SERS WHERE USERNAME NOT IN('SYSTEM','WMSYS','XDB','SYS','SCOTT','QMONITOR','OUTLN','ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSY
S', 'DBSNMP','APEX_040200','AUDSYS','CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL')) AND (A.OWNER, A.
INDEX_NAME) NOT IN (SELECT /*+unnest*/ B.OBJECT_OWNER, B.OBJECT_NAME FROM GV$SQL A, GV$SQL_PLAN B WHERE A.SQL_ID = B.SQL_ID AND A.CHILD
_NUMBER = B.CHILD_NUMBER AND B.OBJECT_OWNER IN (SELECT USERNAME FROM DBA_USERS WHERE USERNAME NOT IN ('SYSTEM','WMSYS','XDB','SYS','SCO
TT','QMONITOR','OUTLN','ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS', 'DBSNMP','APEX_040200','AUDSYS','CTXSYS','APEX_030200','
EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL

0000000060E3FAF0
SELECT X.OWNER, X.TABLE_NAME, X.INDEX_NAME, TO_CHAR(SS.CREATED,'yyyy-mm-dd hh24:mi:ss') AS CREATED, C.COLUMN_POSITION, C.COLUMN_NAME, S
.BYTES / 1024 / 1024 M FROM (SELECT A.OWNER, A.TABLE_NAME, A.INDEX_NAME FROM DBA_INDEXES A WHERE A.OWNER IN (SELECT USERNAME FROM DBA_U
SERS WHERE USERNAME NOT IN('SYSTEM','WMSYS','XDB','SYS','SCOTT','QMONITOR','OUTLN','ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSY
S', 'DBSNMP','APEX_040200','AUDSYS','CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL')) AND (A.OWNER, A.
INDEX_NAME) NOT IN (SELECT /*+unnest*/ B.OBJECT_OWNER, B.OBJECT_NAME FROM GV$SQL A, GV$SQL_PLAN B WHERE A.SQL_ID = B.SQL_ID AND A.CHILD
_NUMBER = B.CHILD_NUMBER AND B.OBJECT_OWNER IN (SELECT USERNAME FROM DBA_USERS WHERE USERNAME NOT IN ('SYSTEM','WMSYS','XDB','SYS','SCO
TT','QMONITOR','OUTLN','ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS', 'DBSNMP','APEX_040200','AUDSYS','CTXSYS','APEX_030200','
EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL

000000008B081A10
SELECT /*+ ordered f

000000008B0A4920
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F40800
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088E52678 SYS
WRI$_SEGADV_CNTRLTAB

0000000088DBA5F8
SELECT COUNT(*) FROM

00000000653F47D0
select substrb(dump(

0000000088DC0428
insert into WRH$_IOSTAT_DETAIL    (snap_id, dbid, instance_number,     function_id, filetype_id,     small_read_megabytes, small_write_
megabytes,     large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_req
s,     number_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id, filetype_id,      nvl(sum(small_
read_megabytes), 0) small_read_megabytes,      nvl(sum(small_write_megabytes), 0) small_write_megabytes,      nvl(sum(large_read_megaby
tes), 0) large_read_megabytes,      nvl(sum(large_write_megabytes), 0) large_write_megabytes,      nvl(sum(small_read_reqs), 0) small_r
ead_reqs,      nvl(sum(small_write_reqs), 0) small_write_reqs,      nvl(sum(large_read_reqs), 0) large_read_reqs,      nvl(sum(large_wr
ite_reqs), 0) large_write_reqs,      nvl(sum(number_of_waits), 0) number_of_waits,      nvl(sum(wait_time), 0) wait_time      from v$io
stat_function_detail      group by function_id,filetype

000000008C8A88E0
insert into WRH$_IOSTAT_DETAIL    (snap_id, dbid, instance_number,     function_id, filetype_id,     small_read_megabytes, small_write_
megabytes,     large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_req
s,     number_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id, filetype_id,      nvl(sum(small_
read_megabytes), 0) small_read_megabytes,      nvl(sum(small_write_megabytes), 0) small_write_megabytes,      nvl(sum(large_read_megaby
tes), 0) large_read_megabytes,      nvl(sum(large_write_megabytes), 0) large_write_megabytes,      nvl(sum(small_read_reqs), 0) small_r
ead_reqs,      nvl(sum(small_write_reqs), 0) small_write_reqs,      nvl(sum(large_read_reqs), 0) large_read_reqs,      nvl(sum(large_wr
ite_reqs), 0) large_write_reqs,      nvl(sum(number_of_waits), 0) number_of_waits,      nvl(sum(wait_time), 0) wait_time      from v$io
stat_function_detail      group by function_id,filetype

0000000088F3D768
insert into WRH$_IOSTAT_DETAIL    (snap_id, dbid, instance_number,     function_id, filetype_id,     small_read_megabytes, small_write_
megabytes,     large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_req
s,     number_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id, filetype_id,      nvl(sum(small_
read_megabytes), 0) small_read_megabytes,      nvl(sum(small_write_megabytes), 0) small_write_megabytes,      nvl(sum(large_read_megaby
tes), 0) large_read_megabytes,      nvl(sum(large_write_megabytes), 0) large_write_megabytes,      nvl(sum(small_read_reqs), 0) small_r
ead_reqs,      nvl(sum(small_write_reqs), 0) small_write_reqs,      nvl(sum(large_read_reqs), 0) large_read_reqs,      nvl(sum(large_wr
ite_reqs), 0) large_write_reqs,      nvl(sum(number_of_waits), 0) number_of_waits,      nvl(sum(wait_time), 0) wait_time      from v$io
stat_function_detail      group by function_id,filetype

000000008B130E68
insert into WRH$_IOSTAT_DETAIL    (snap_id, dbid, instance_number,     function_id, filetype_id,     small_read_megabytes, small_write_
megabytes,     large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_req
s,     number_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id, filetype_id,      nvl(sum(small_
read_megabytes), 0) small_read_megabytes,      nvl(sum(small_write_megabytes), 0) small_write_megabytes,      nvl(sum(large_read_megaby
tes), 0) large_read_megabytes,      nvl(sum(large_write_megabytes), 0) large_write_megabytes,      nvl(sum(small_read_reqs), 0) small_r
ead_reqs,      nvl(sum(small_write_reqs), 0) small_write_reqs,      nvl(sum(large_read_reqs), 0) large_read_reqs,      nvl(sum(large_wr
ite_reqs), 0) large_write_reqs,      nvl(sum(number_of_waits), 0) number_of_waits,      nvl(sum(wait_time), 0) wait_time      from v$io
stat_function_detail      group by function_id,filetype

0000000060E59A90
insert into WRH$_IOSTAT_DETAIL    (snap_id, dbid, instance_number,     function_id, filetype_id,     small_read_megabytes, small_write_
megabytes,     large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_req
s,     number_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id, filetype_id,      nvl(sum(small_
read_megabytes), 0) small_read_megabytes,      nvl(sum(small_write_megabytes), 0) small_write_megabytes,      nvl(sum(large_read_megaby
tes), 0) large_read_megabytes,      nvl(sum(large_write_megabytes), 0) large_write_megabytes,      nvl(sum(small_read_reqs), 0) small_r
ead_reqs,      nvl(sum(small_write_reqs), 0) small_write_reqs,      nvl(sum(large_read_reqs), 0) large_read_reqs,      nvl(sum(large_wr
ite_reqs), 0) large_write_reqs,      nvl(sum(number_of_waits), 0) number_of_waits,      nvl(sum(wait_time), 0) wait_time      from v$io
stat_function_detail      group by function_id,filetype

0000000088DC08A8
insert into WRH$_IOSTAT_DETAIL    (snap_id, dbid, instance_number,     function_id, filetype_id,     small_read_megabytes, small_write_
megabytes,     large_read_megabytes, large_write_megabytes,     small_read_reqs, small_write_reqs,     large_read_reqs, large_write_req
s,     number_of_waits, wait_time)   (select      :snap_id, :dbid, :instance_number,      function_id, filetype_id,      nvl(sum(small_
read_megabytes), 0) small_read_megabytes,      nvl(sum(small_write_megabytes), 0) small_write_megabytes,      nvl(sum(large_read_megaby
tes), 0) large_read_megabytes,      nvl(sum(large_write_megabytes), 0) large_write_megabytes,      nvl(sum(small_read_reqs), 0) small_r
ead_reqs,      nvl(sum(small_write_reqs), 0) small_write_reqs,      nvl(sum(large_read_reqs), 0) large_read_reqs,      nvl(sum(large_wr
ite_reqs), 0) large_write_reqs,      nvl(sum(number_of_waits), 0) number_of_waits,      nvl(sum(wait_time), 0) wait_time      from v$io
stat_function_detail      group by function_id,filetype

0000000088C9EC68
SELECT MAX(NAME), MA

000000008CB9D700
delete lob$ where obj#=:1

000000008B2864A0
delete lob$ where obj#=:1

0000000060F26FC0
UPDATE RLM$RULESET S

0000000088FEA4F0
SELECT CURRENT_OBJ#, DATAOBJ#, SUM(TIME_WAITED/1000) FROM DBA_HIST_ACTIVE_SESS_HISTORY, OBJ$ WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIM
E = 0 AND CURRENT_OBJ# = OBJ# AND SNAP_ID > :B1 GROUP BY CURRENT_OBJ#, DATAOBJ# ORDER BY SUM(TIME_WAITED/1000) DESC

000000008B231DB0
SELECT CURRENT_OBJ#, DATAOBJ#, SUM(TIME_WAITED/1000) FROM DBA_HIST_ACTIVE_SESS_HISTORY, OBJ$ WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIM
E = 0 AND CURRENT_OBJ# = OBJ# AND SNAP_ID > :B1 GROUP BY CURRENT_OBJ#, DATAOBJ# ORDER BY SUM(TIME_WAITED/1000) DESC

0000000060DD3928
SELECT CURRENT_OBJ#, DATAOBJ#, SUM(TIME_WAITED/1000) FROM DBA_HIST_ACTIVE_SESS_HISTORY, OBJ$ WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIM
E = 0 AND CURRENT_OBJ# = OBJ# AND SNAP_ID > :B1 GROUP BY CURRENT_OBJ#, DATAOBJ# ORDER BY SUM(TIME_WAITED/1000) DESC

000000008CA66908
SELECT CURRENT_OBJ#, DATAOBJ#, SUM(TIME_WAITED/1000) FROM DBA_HIST_ACTIVE_SESS_HISTORY, OBJ$ WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIM
E = 0 AND CURRENT_OBJ# = OBJ# AND SNAP_ID > :B1 GROUP BY CURRENT_OBJ#, DATAOBJ# ORDER BY SUM(TIME_WAITED/1000) DESC

000000008B0E3E98
f70a40e6b81497efef8a1969ea710ea5

0000000088D833F0
SELECT SUBSTR(DATA_T

000000008C92E798 SYS
XMLSEQUENCETYPE

0000000088FB3C68
select cachedblk, cachehit, logicalread from ind_stats$ where obj#=:1

000000008B212CB8
select cachedblk, cachehit, logicalread from ind_stats$ where obj#=:1

000000008C8AAE38
6e78bf7eeda8c7df1468aba2d2bfee0a

0000000092CF8670
SELECT B.TYPE FROM SYS.WRI$_ADV_TASKS A, SYS.WRI$_ADV_DEFINITIONS B WHERE A.ADVISOR_ID = B.ID AND A.ID = :B1

0000000092CD7C38
SELECT B.TYPE FROM SYS.WRI$_ADV_TASKS A, SYS.WRI$_ADV_DEFINITIONS B WHERE A.ADVISOR_ID = B.ID AND A.ID = :B1

000000008B2B2D50
SELECT B.TYPE FROM SYS.WRI$_ADV_TASKS A, SYS.WRI$_ADV_DEFINITIONS B WHERE A.ADVISOR_ID = B.ID AND A.ID = :B1

000000008B0FDD78
SELECT B.TYPE FROM SYS.WRI$_ADV_TASKS A, SYS.WRI$_ADV_DEFINITIONS B WHERE A.ADVISOR_ID = B.ID AND A.ID = :B1

000000008C98D2D0
SELECT B.TYPE FROM SYS.WRI$_ADV_TASKS A, SYS.WRI$_ADV_DEFINITIONS B WHERE A.ADVISOR_ID = B.ID AND A.ID = :B1

000000008C917FA8
SELECT B.TYPE FROM SYS.WRI$_ADV_TASKS A, SYS.WRI$_ADV_DEFINITIONS B WHERE A.ADVISOR_ID = B.ID AND A.ID = :B1

0000000092C77040 SCOTT
DUAL

000000008B3E20F0
bd8ff7f116095cd04f07c4184237ed0e

000000008C942C88
eaeb3e58b974fe0098f9ef7ed033980e

0000000092D785C8 SYS
X$MODACT_LENGTH

0000000088E55C38
db6eb94c3b88c0b2d8dbb9b42b5153

0000000088FF3240
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."SEG$
" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND (
"S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE
%')) innerQuery

000000008CA8FEE0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."SEG$
" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND (
"S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE
%')) innerQuery

000000008B0EDC00
SELECT OBJ# FROM OBJ

0000000088E08718 SYS
DBA_QUEUES

0000000060F6F550 SYS
V$LATCH

0000000088CC5FD8
alter session set ev

0000000088D69F58
select substrb(dump(

0000000088C63BB0
SELECT C.NAME AS COLUMN_NAME, DECODE(CU.TIMESTAMP,NULL,'None',CU.TIMESTAMP) AS TIMESTAMP, DECODE(CU.EQUALITY_PREDS,NULL,0,CU.EQUALITY_P
REDS) AS WHERE_EQUAL_SEARCH, DECODE(CU.EQUIJOIN_PREDS,NULL,0,CU.EQUIJOIN_PREDS) AS EQUAL_JOIN, DECODE(CU.NONEQUIJOIN_PREDS,NULL,0,CU.NO
NEQUIJOIN_PREDS) AS NONE_EQUAL_JOIN, DECODE(CU.RANGE_PREDS,NULL,0,CU.RANGE_PREDS) AS WHERE_RANGE_SEARCH, DECODE(CU.LIKE_PREDS,NULL,0,CU
.LIKE_PREDS) AS WHERE_LIKE_SEARCH, DECODE(CU.NULL_PREDS,NULL,0,CU.NULL_PREDS) AS WHERE_NULL_SEARCH FROM SYS.COL$ C, SYS.COL_USAGE$ CU,
SYS.OBJ$ O, SYS.USER$ U WHERE C.OBJ# = CU.OBJ# (+) AND C.INTCOL# = CU.INTCOL# (+) AND C.OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND O.NAME
 = :B2 AND U.NAME = :B1 ORDER BY C.COL#

000000008B25B868
SELECT C.NAME AS COLUMN_NAME, DECODE(CU.TIMESTAMP,NULL,'None',CU.TIMESTAMP) AS TIMESTAMP, DECODE(CU.EQUALITY_PREDS,NULL,0,CU.EQUALITY_P
REDS) AS WHERE_EQUAL_SEARCH, DECODE(CU.EQUIJOIN_PREDS,NULL,0,CU.EQUIJOIN_PREDS) AS EQUAL_JOIN, DECODE(CU.NONEQUIJOIN_PREDS,NULL,0,CU.NO
NEQUIJOIN_PREDS) AS NONE_EQUAL_JOIN, DECODE(CU.RANGE_PREDS,NULL,0,CU.RANGE_PREDS) AS WHERE_RANGE_SEARCH, DECODE(CU.LIKE_PREDS,NULL,0,CU
.LIKE_PREDS) AS WHERE_LIKE_SEARCH, DECODE(CU.NULL_PREDS,NULL,0,CU.NULL_PREDS) AS WHERE_NULL_SEARCH FROM SYS.COL$ C, SYS.COL_USAGE$ CU,
SYS.OBJ$ O, SYS.USER$ U WHERE C.OBJ# = CU.OBJ# (+) AND C.INTCOL# = CU.INTCOL# (+) AND C.OBJ# = O.OBJ# AND O.OWNER# = U.USER# AND O.NAME
 = :B2 AND U.NAME = :B1 ORDER BY C.COL#

000000008B04A1F0
SELECT TSP.FLAGS FRO

0000000060CE87A8
SELECT OWNER,SEGMENT_NAME,SIZE_MB FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,
TRUNC(BYTES/1024/1024) AS SIZE_MB FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','
XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','
APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

000000008B308E28
SELECT OWNER,SEGMENT_NAME,SIZE_MB FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,
TRUNC(BYTES/1024/1024) AS SIZE_MB FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','
XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','
APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

0000000065321F90
SELECT OWNER,SEGMENT_NAME,SIZE_MB FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME) SEGMENT_NAME ,
TRUNC(BYTES/1024/1024) AS SIZE_MB FROM DBA_SEGMENTS WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','
XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','
APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

000000008CAF8CC8
insert into wrh$_sysmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, value)
  select      :snap_id, :dbid, :instance_number,      begtime, endtime, intsize_csec,      groupid, metricid, value  from x$kewmdrmv  o
rder by groupid, metricid, begtime

000000008CBC7698
insert into wrh$_sysmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, value)
  select      :snap_id, :dbid, :instance_number,      begtime, endtime, intsize_csec,      groupid, metricid, value  from x$kewmdrmv  o
rder by groupid, metricid, begtime

0000000088D05958
insert into wrh$_sysmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, value)
  select      :snap_id, :dbid, :instance_number,      begtime, endtime, intsize_csec,      groupid, metricid, value  from x$kewmdrmv  o
rder by groupid, metricid, begtime

0000000088E442E8
insert into wrh$_sysmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, value)
  select      :snap_id, :dbid, :instance_number,      begtime, endtime, intsize_csec,      groupid, metricid, value  from x$kewmdrmv  o
rder by groupid, metricid, begtime

000000008C967860
insert into wrh$_sysmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, value)
  select      :snap_id, :dbid, :instance_number,      begtime, endtime, intsize_csec,      groupid, metricid, value  from x$kewmdrmv  o
rder by groupid, metricid, begtime

000000008CAF9148
insert into wrh$_sysmetric_history     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, value)
  select      :snap_id, :dbid, :instance_number,      begtime, endtime, intsize_csec,      groupid, metricid, value  from x$kewmdrmv  o
rder by groupid, metricid, begtime

0000000060E9C270
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B2CBC68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060FC3980
select NUM_BUCKETS from dba_tab_columns where table_name  = 'HASH_TABLE'

0000000088E1DDD8
select NUM_BUCKETS from dba_tab_columns where table_name  = 'HASH_TABLE'

0000000060D3D140 $BUILD$
2aa9bd2e  494923

000000008CB0DF50 $BUILD$
1a59ef4791936fc3

0000000088C92F18
SELECT APPENDCHILDXM

000000008B27CE68
213aa9bdbe32128daef62d28197459b

00000000653A8150 $BUILD$
49ab29eee9487ba4

000000008B18B880
8c693adc420b8f814f42142590b0fad

000000008B04A500
SELECT FLAGS FROM (S

000000008B0977B0
INSERT INTO SYS.AUX_

0000000060C34BC0 SYS
DBA_ROLE_PRIVS

0000000088EB46B0
549f3f9987012bd597910553282a0c13

0000000088CC4048
36c925b268b1b95e70c8a0113f43b12a

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

0000000088C49180
SELECT SHORT_NAME FR

000000008B1B91E0
delete from WRH$_RESOURCE_LIMIT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    a
nd not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060EC6370
delete from WRH$_RESOURCE_LIMIT tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    a
nd not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B0951E0
INSERT INTO SYS.AUX_

0000000092CB5EA8 SYS
CCOL$

0000000088ED0890
INSERT INTO wrh$_tempfile (snap_id, dbid, file#, creation_change#, filename, ts#, tsname, block_size) SELECT :lah_snap_id lah, :dbid db
id, tf.file# file#, tf.creation_change# cr_chg#, tf.name name, ts.ts# ts#, ts.name tsname, tf.block_size block_size FROM v$tempfile tf,
 ts$ ts WHERE tf.ts# = ts.ts# AND not exists (SELECT 1 FROM wrh$_tempfile tfh WHERE tfh.file#            = tf.file# AND tfh.creation_ch
ange# = tf.creation_change# AND tfh.dbid             = :dbid2)

0000000092D2E878
INSERT INTO wrh$_tempfile (snap_id, dbid, file#, creation_change#, filename, ts#, tsname, block_size) SELECT :lah_snap_id lah, :dbid db
id, tf.file# file#, tf.creation_change# cr_chg#, tf.name name, ts.ts# ts#, ts.name tsname, tf.block_size block_size FROM v$tempfile tf,
 ts$ ts WHERE tf.ts# = ts.ts# AND not exists (SELECT 1 FROM wrh$_tempfile tfh WHERE tfh.file#            = tf.file# AND tfh.creation_ch
ange# = tf.creation_change# AND tfh.dbid             = :dbid2)

0000000088ED0D10
INSERT INTO wrh$_tempfile (snap_id, dbid, file#, creation_change#, filename, ts#, tsname, block_size) SELECT :lah_snap_id lah, :dbid db
id, tf.file# file#, tf.creation_change# cr_chg#, tf.name name, ts.ts# ts#, ts.name tsname, tf.block_size block_size FROM v$tempfile tf,
 ts$ ts WHERE tf.ts# = ts.ts# AND not exists (SELECT 1 FROM wrh$_tempfile tfh WHERE tfh.file#            = tf.file# AND tfh.creation_ch
ange# = tf.creation_change# AND tfh.dbid             = :dbid2)

0000000088DA2798
772a0961a8128d2d6a2eed45733279eb

000000008C870E28
delete from access$ where d_obj#=:1

000000008B2B0778
delete from access$ where d_obj#=:1

000000008B2A8098
delete from access$ where d_obj#=:1

0000000088DBDEC8
delete from access$ where d_obj#=:1

0000000088C800C8
delete from access$ where d_obj#=:1

000000008C8712A8
delete from access$ where d_obj#=:1

000000008CA7D1E0
insert into "SYS"."ALERT_QT"  (q_name, msgid, corrid, priority, state, delay, expiration,   time_manager_info, local_order_no, chain_no
, enq_time, step_no, enq_uid,   enq_tid, retry_count, exception_qschema, exception_queue, recipient_key,   dequeue_msgid, user_data, se
nder_name, sender_address, sender_protocol,   user_prop, cscn, dscn)   values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13,
:14, 0, :15,         :16, :17, :18, :19, :20, :21, :22, :23, :24, :25)

000000008CA7D660
insert into "SYS"."ALERT_QT"  (q_name, msgid, corrid, priority, state, delay, expiration,   time_manager_info, local_order_no, chain_no
, enq_time, step_no, enq_uid,   enq_tid, retry_count, exception_qschema, exception_queue, recipient_key,   dequeue_msgid, user_data, se
nder_name, sender_address, sender_protocol,   user_prop, cscn, dscn)   values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13,
:14, 0, :15,         :16, :17, :18, :19, :20, :21, :22, :23, :24, :25)

000000008B2560D8
select INST_ID, MUTEX_TYPE, LOCATION, SLEEPS, WAIT_TIME from x$MUTEX_SLEEP

000000008CBAF4D8
select INST_ID, MUTEX_TYPE, LOCATION, SLEEPS, WAIT_TIME from x$MUTEX_SLEEP

0000000092D28258
select /*+ ordered use_nl(a,b) */ trim(to_char(a.sql_id)) as sql_id, b.spid as spid, substr(c.event,1,25) as event, c.p1 || ',' || c.p2
 || ',' ||c.p3 as "P1 P2 P3", to_char(LAST_CALL_ET) as seconds, to_char(a.logon_time,'mmdd hh24:mi') as logon_time, 'alter system disco
nnect session ''' || a.sid || ',' || a.SERIAL# || ''' immediate;' as kill_sql from v$session a,v$process b,v$session_wait c where a.typ
e = 'USER' and a.status = 'ACTIVE' and a.paddr = b.addr and a.sid = c.sid and a.wait_class <> 'Idle' and a.sid not in (select sid from
v$mystat where rownum = 1) order by LAST_CALL_ET desc

0000000060C94950
select /*+ ordered use_nl(a,b) */ trim(to_char(a.sql_id)) as sql_id, b.spid as spid, substr(c.event,1,25) as event, c.p1 || ',' || c.p2
 || ',' ||c.p3 as "P1 P2 P3", to_char(LAST_CALL_ET) as seconds, to_char(a.logon_time,'mmdd hh24:mi') as logon_time, 'alter system disco
nnect session ''' || a.sid || ',' || a.SERIAL# || ''' immediate;' as kill_sql from v$session a,v$process b,v$session_wait c where a.typ
e = 'USER' and a.status = 'ACTIVE' and a.paddr = b.addr and a.sid = c.sid and a.wait_class <> 'Idle' and a.sid not in (select sid from
v$mystat where rownum = 1) order by LAST_CALL_ET desc

0000000088C54C88
9af563a22d8dfb1f23ea03bf22fa440

000000008CA9E970
DELETE FROM WRI$_ADV

0000000065344AC0
e2c9315f51ec0a51acdad883759db3e7

000000008B2AAFA8
DELETE FROM WWV_FLOW

0000000092D087B0 SYS
WRH$_COMP_IOSTAT

0000000088DF7148
91de253f10456de3309f658537b69130

0000000088EAD800 SYS
X$KGLCURSOR_CHILD

000000008B2405F8
9512b2a71378252ef96569baf4e2f0

0000000088D27D48
b79be030d11eb23976bff0e96aa8f8f9

0000000088EBFC60
SELECT /* DS_SVC */

000000008B291E30
4eafed8191da1be57f78ebb2cde755a3

000000008B354860 SYS
MON_MODS$

0000000088DC0208 SYS
WRI$_SCH_VOTES

00000000653C1280
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."UNDO
$" "UN#2", "SYS"."TS$" "TS#3", "SYS"."FILE$" "F#0" WHERE ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") AND ("UN#2"."
STATUS$"<>1)) innerQuery

0000000060EF7FB0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."UNDO
$" "UN#2", "SYS"."TS$" "TS#3", "SYS"."FILE$" "F#0" WHERE ("UN#2"."TS#"="F#0"."TS#") AND ("UN#2"."FILE#"="F#0"."RELFILE#") AND ("UN#2"."
STATUS$"<>1)) innerQuery

000000008CA593F8
select     INDEX_NAME,     BLEVEL BLev,     LEAF_BLOCKS,     DISTINCT_KEYS,     NUM_ROWS,     AVG_LEAF_BLOCKS_PER_KEY,     AVG_DATA_BLO
CKS_PER_KEY,     CLUSTERING_FACTOR,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_indexes t where     table_n
ame = 'TIGER' and table_owner = 'SCOTT'

0000000060F4CC00
select     INDEX_NAME,     BLEVEL BLev,     LEAF_BLOCKS,     DISTINCT_KEYS,     NUM_ROWS,     AVG_LEAF_BLOCKS_PER_KEY,     AVG_DATA_BLO
CKS_PER_KEY,     CLUSTERING_FACTOR,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_indexes t where     table_n
ame = 'TIGER' and table_owner = 'SCOTT'

000000008CAD59B0 PUBLIC
SYS

0000000088D8C2F8
select substrb(dump(

000000008B350520
db6eb94c3b88c0b2d8dbb9b42b5153

0000000092CD1BA8 SYS
FET$

000000008B07EC50
SELECT BASE_OBJ.SUBN

000000008B3145E0
SELECT PROCESS_SQL_C

000000008B0DD488
select less_than_2G || ' ' || round(less_than_2G/total*100,2)||'%' as "less_2G%", less_than_4G || ' ' || round(less_than_4G/total*100,2
)||'%' as "less_4G%", less_than_6G || ' ' || round(less_than_6G/total*100,2)||'%' as "less_6G%", less_than_8G || ' ' || round(less_than
_8G/total*100,2)||'%' as "less_8G%", less_than_10G || ' ' || round(less_than_10G/total*100,2)||'%' as "less_10G%", less_than_20G || ' '
 || round(less_than_20G/total*100,2)||'%' as "less_20G%", less_than_30G || ' ' ||  round(less_than_30G/total*100,2)||'%' as "less_30G%"
, less_than_40G || ' ' ||  round(less_than_40G/total*100,2)||'%' as "less_40G%", less_than_50G || ' ' ||  round(less_than_50G/total*100
,2)||'%' as "less_50G%", less_than_60G || ' ' ||  round(less_than_60G/total*100,2)||'%' as "less_60G%", less_than_70G || ' ' ||  round(
less_than_70G/total*100,2)||'%' as "less_70G%", less_than_80G || ' ' ||  round(less_than_80G/total*100,2)||'%' as "less_80G%", less_tha
n_90G || ' ' ||  round(less_than_90G/total*100,2)||'%'

000000008CBFF080
select less_than_2G || ' ' || round(less_than_2G/total*100,2)||'%' as "less_2G%", less_than_4G || ' ' || round(less_than_4G/total*100,2
)||'%' as "less_4G%", less_than_6G || ' ' || round(less_than_6G/total*100,2)||'%' as "less_6G%", less_than_8G || ' ' || round(less_than
_8G/total*100,2)||'%' as "less_8G%", less_than_10G || ' ' || round(less_than_10G/total*100,2)||'%' as "less_10G%", less_than_20G || ' '
 || round(less_than_20G/total*100,2)||'%' as "less_20G%", less_than_30G || ' ' ||  round(less_than_30G/total*100,2)||'%' as "less_30G%"
, less_than_40G || ' ' ||  round(less_than_40G/total*100,2)||'%' as "less_40G%", less_than_50G || ' ' ||  round(less_than_50G/total*100
,2)||'%' as "less_50G%", less_than_60G || ' ' ||  round(less_than_60G/total*100,2)||'%' as "less_60G%", less_than_70G || ' ' ||  round(
less_than_70G/total*100,2)||'%' as "less_70G%", less_than_80G || ' ' ||  round(less_than_80G/total*100,2)||'%' as "less_80G%", less_tha
n_90G || ' ' ||  round(less_than_90G/total*100,2)||'%'

000000008B039C58
select less_than_2G || ' ' || round(less_than_2G/total*100,2)||'%' as "less_2G%", less_than_4G || ' ' || round(less_than_4G/total*100,2
)||'%' as "less_4G%", less_than_6G || ' ' || round(less_than_6G/total*100,2)||'%' as "less_6G%", less_than_8G || ' ' || round(less_than
_8G/total*100,2)||'%' as "less_8G%", less_than_10G || ' ' || round(less_than_10G/total*100,2)||'%' as "less_10G%", less_than_20G || ' '
 || round(less_than_20G/total*100,2)||'%' as "less_20G%", less_than_30G || ' ' ||  round(less_than_30G/total*100,2)||'%' as "less_30G%"
, less_than_40G || ' ' ||  round(less_than_40G/total*100,2)||'%' as "less_40G%", less_than_50G || ' ' ||  round(less_than_50G/total*100
,2)||'%' as "less_50G%", less_than_60G || ' ' ||  round(less_than_60G/total*100,2)||'%' as "less_60G%", less_than_70G || ' ' ||  round(
less_than_70G/total*100,2)||'%' as "less_70G%", less_than_80G || ' ' ||  round(less_than_80G/total*100,2)||'%' as "less_80G%", less_tha
n_90G || ' ' ||  round(less_than_90G/total*100,2)||'%'

000000008B110BB0
bb45b969b3d8156dec617406a6224e1a

0000000060E7DB80 SYS
WRH$_TABLESPACE

00000000652F22E0
140bd70c1a766b1bbf4363117b17f7af

000000008C87F8D0
6a16eb53e1982ae084e1bf202d6174e

0000000060E5A3A0
SELECT PLUG_NAME, ID

0000000088E9CBC0
8e4b8ddd82af3ee8ef6c0b3d689b3c

0000000092C7C998
UPDATE SYS.SCHEDULER

000000008C9D0FE0
select substrb(dump(

0000000060F5B910
8dfc26be2f9e09da72690448ee05249f

0000000088E4A888
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0BEA10
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C9EBF68
bff3919a7bee8315369ab01a78bb03f6

000000008C923FA8
DELETE FROM WRI$_ADV

000000008CBE87E8 SYS
NTAB$

0000000060E03320 SYS
RLS$

0000000092D3BE98 SYS
X$KQLFXPL

0000000092D7D698
21d508edb32e1d9e8fd2efe347b6bb8

0000000088EF81C0
update wrh$_seg_stat_obj sso    set (index_type, base_obj#, base_object_name, base_object_owner)         =        (select decode(ind.ty
pe#,                       1, 'NORMAL'||                          decode(bitand(ind.property, 4), 0, '', 4, '/REV'),
   2, 'BITMAP', 3, 'CLUSTER', 4, 'IOT - TOP',                       5, 'IOT - NESTED', 6, 'SECONDARY', 7, 'ANSI',
 8, 'LOB', 9, 'DOMAIN') as index_type,                base_obj.obj# as base_obj#,                base_obj.name as base_object_name,
            base_owner.name as base_object_owner         from   sys.ind$  ind,                sys.user$ base_owner,                sys.
obj$  base_obj         where  ind.obj#     = sso.obj#           and  ind.dataobj# = sso.dataobj#           and  ind.bo#      = base_obj
.obj#           and  base_obj.owner# = base_owner.user#)  where  sso.dbid        = :dbid    and  (ts#, obj#, dataobj#)         in (sele
ct tsn_kewrseg, objn_kewrseg, objd_kewrseg

000000008CB48E88
update wrh$_seg_stat_obj sso    set (index_type, base_obj#, base_object_name, base_object_owner)         =        (select decode(ind.ty
pe#,                       1, 'NORMAL'||                          decode(bitand(ind.property, 4), 0, '', 4, '/REV'),
   2, 'BITMAP', 3, 'CLUSTER', 4, 'IOT - TOP',                       5, 'IOT - NESTED', 6, 'SECONDARY', 7, 'ANSI',
 8, 'LOB', 9, 'DOMAIN') as index_type,                base_obj.obj# as base_obj#,                base_obj.name as base_object_name,
            base_owner.name as base_object_owner         from   sys.ind$  ind,                sys.user$ base_owner,                sys.
obj$  base_obj         where  ind.obj#     = sso.obj#           and  ind.dataobj# = sso.dataobj#           and  ind.bo#      = base_obj
.obj#           and  base_obj.owner# = base_owner.user#)  where  sso.dbid        = :dbid    and  (ts#, obj#, dataobj#)         in (sele
ct tsn_kewrseg, objn_kewrseg, objd_kewrseg

0000000060F16840
update wrh$_seg_stat_obj sso    set (index_type, base_obj#, base_object_name, base_object_owner)         =        (select decode(ind.ty
pe#,                       1, 'NORMAL'||                          decode(bitand(ind.property, 4), 0, '', 4, '/REV'),
   2, 'BITMAP', 3, 'CLUSTER', 4, 'IOT - TOP',                       5, 'IOT - NESTED', 6, 'SECONDARY', 7, 'ANSI',
 8, 'LOB', 9, 'DOMAIN') as index_type,                base_obj.obj# as base_obj#,                base_obj.name as base_object_name,
            base_owner.name as base_object_owner         from   sys.ind$  ind,                sys.user$ base_owner,                sys.
obj$  base_obj         where  ind.obj#     = sso.obj#           and  ind.dataobj# = sso.dataobj#           and  ind.bo#      = base_obj
.obj#           and  base_obj.owner# = base_owner.user#)  where  sso.dbid        = :dbid    and  (ts#, obj#, dataobj#)         in (sele
ct tsn_kewrseg, objn_kewrseg, objd_kewrseg

0000000088F44F48
update wrh$_seg_stat_obj sso    set (index_type, base_obj#, base_object_name, base_object_owner)         =        (select decode(ind.ty
pe#,                       1, 'NORMAL'||                          decode(bitand(ind.property, 4), 0, '', 4, '/REV'),
   2, 'BITMAP', 3, 'CLUSTER', 4, 'IOT - TOP',                       5, 'IOT - NESTED', 6, 'SECONDARY', 7, 'ANSI',
 8, 'LOB', 9, 'DOMAIN') as index_type,                base_obj.obj# as base_obj#,                base_obj.name as base_object_name,
            base_owner.name as base_object_owner         from   sys.ind$  ind,                sys.user$ base_owner,                sys.
obj$  base_obj         where  ind.obj#     = sso.obj#           and  ind.dataobj# = sso.dataobj#           and  ind.bo#      = base_obj
.obj#           and  base_obj.owner# = base_owner.user#)  where  sso.dbid        = :dbid    and  (ts#, obj#, dataobj#)         in (sele
ct tsn_kewrseg, objn_kewrseg, objd_kewrseg

000000008B1A91E8
update wrh$_seg_stat_obj sso    set (index_type, base_obj#, base_object_name, base_object_owner)         =        (select decode(ind.ty
pe#,                       1, 'NORMAL'||                          decode(bitand(ind.property, 4), 0, '', 4, '/REV'),
   2, 'BITMAP', 3, 'CLUSTER', 4, 'IOT - TOP',                       5, 'IOT - NESTED', 6, 'SECONDARY', 7, 'ANSI',
 8, 'LOB', 9, 'DOMAIN') as index_type,                base_obj.obj# as base_obj#,                base_obj.name as base_object_name,
            base_owner.name as base_object_owner         from   sys.ind$  ind,                sys.user$ base_owner,                sys.
obj$  base_obj         where  ind.obj#     = sso.obj#           and  ind.dataobj# = sso.dataobj#           and  ind.bo#      = base_obj
.obj#           and  base_obj.owner# = base_owner.user#)  where  sso.dbid        = :dbid    and  (ts#, obj#, dataobj#)         in (sele
ct tsn_kewrseg, objn_kewrseg, objd_kewrseg

0000000088EF8640
update wrh$_seg_stat_obj sso    set (index_type, base_obj#, base_object_name, base_object_owner)         =        (select decode(ind.ty
pe#,                       1, 'NORMAL'||                          decode(bitand(ind.property, 4), 0, '', 4, '/REV'),
   2, 'BITMAP', 3, 'CLUSTER', 4, 'IOT - TOP',                       5, 'IOT - NESTED', 6, 'SECONDARY', 7, 'ANSI',
 8, 'LOB', 9, 'DOMAIN') as index_type,                base_obj.obj# as base_obj#,                base_obj.name as base_object_name,
            base_owner.name as base_object_owner         from   sys.ind$  ind,                sys.user$ base_owner,                sys.
obj$  base_obj         where  ind.obj#     = sso.obj#           and  ind.dataobj# = sso.dataobj#           and  ind.bo#      = base_obj
.obj#           and  base_obj.owner# = base_owner.user#)  where  sso.dbid        = :dbid    and  (ts#, obj#, dataobj#)         in (sele
ct tsn_kewrseg, objn_kewrseg, objd_kewrseg

0000000088DBE038
3de2f46694770c9da24e7098a00c7634

0000000060F55170
47bcbf1b9b91c90c617bdfe0c604b4ca

0000000088DF3438
select dbid from wrm$_database_instance group by dbid

0000000060E60D30
select dbid from wrm$_database_instance group by dbid

000000008C84D3F0
SELECT COUNT(UNQ) UNQ, COUNT(PFX) PFX FROM (SELECT /*+ first_rows(1) leading(cc) */ CD.TYPE# UNQ, NULL PFX FROM SYS.CCOL$ CC, SYS.CDEF$
 CD WHERE CC.OBJ# = :B2 AND CC.INTCOL# = :B1 AND CD.CON# = CC.CON# AND CD.OBJ# = CC.OBJ# AND CD.ENABLED IS NOT NULL AND CD.INTCOLS = 1
AND CD.TYPE# IN (2,3) AND BITAND(CD.DEFER, 2+4) = 4 AND ROWNUM < 2 UNION ALL SELECT /*+ first_rows(1) leading(i) */ CASE WHEN I.INTCOLS
 = 1 AND BITAND(I.PROPERTY,1) = 1 THEN 3 ELSE NULL END UNQ, CASE WHEN IC.POS# = 1 THEN 1 ELSE NULL END PFX FROM SYS.IND$ I, SYS.ICOL$ I
C WHERE I.BO# = :B2 AND I.BO# = IC.BO# AND IC.INTCOL# = :B1 AND I.OBJ# = IC.OBJ# AND BITAND(I.FLAGS,1025) = 0 AND ROWNUM < 2 )

000000008B34D7A8
SELECT COUNT(UNQ) UNQ, COUNT(PFX) PFX FROM (SELECT /*+ first_rows(1) leading(cc) */ CD.TYPE# UNQ, NULL PFX FROM SYS.CCOL$ CC, SYS.CDEF$
 CD WHERE CC.OBJ# = :B2 AND CC.INTCOL# = :B1 AND CD.CON# = CC.CON# AND CD.OBJ# = CC.OBJ# AND CD.ENABLED IS NOT NULL AND CD.INTCOLS = 1
AND CD.TYPE# IN (2,3) AND BITAND(CD.DEFER, 2+4) = 4 AND ROWNUM < 2 UNION ALL SELECT /*+ first_rows(1) leading(i) */ CASE WHEN I.INTCOLS
 = 1 AND BITAND(I.PROPERTY,1) = 1 THEN 3 ELSE NULL END UNQ, CASE WHEN IC.POS# = 1 THEN 1 ELSE NULL END PFX FROM SYS.IND$ I, SYS.ICOL$ I
C WHERE I.BO# = :B2 AND I.BO# = IC.BO# AND IC.INTCOL# = :B1 AND I.OBJ# = IC.OBJ# AND BITAND(I.FLAGS,1025) = 0 AND ROWNUM < 2 )

0000000060EC8CE0
SELECT COUNT(UNQ) UNQ, COUNT(PFX) PFX FROM (SELECT /*+ first_rows(1) leading(cc) */ CD.TYPE# UNQ, NULL PFX FROM SYS.CCOL$ CC, SYS.CDEF$
 CD WHERE CC.OBJ# = :B2 AND CC.INTCOL# = :B1 AND CD.CON# = CC.CON# AND CD.OBJ# = CC.OBJ# AND CD.ENABLED IS NOT NULL AND CD.INTCOLS = 1
AND CD.TYPE# IN (2,3) AND BITAND(CD.DEFER, 2+4) = 4 AND ROWNUM < 2 UNION ALL SELECT /*+ first_rows(1) leading(i) */ CASE WHEN I.INTCOLS
 = 1 AND BITAND(I.PROPERTY,1) = 1 THEN 3 ELSE NULL END UNQ, CASE WHEN IC.POS# = 1 THEN 1 ELSE NULL END PFX FROM SYS.IND$ I, SYS.ICOL$ I
C WHERE I.BO# = :B2 AND I.BO# = IC.BO# AND IC.INTCOL# = :B1 AND I.OBJ# = IC.OBJ# AND BITAND(I.FLAGS,1025) = 0 AND ROWNUM < 2 )

000000008B08BA00
SELECT COUNT(UNQ) UNQ, COUNT(PFX) PFX FROM (SELECT /*+ first_rows(1) leading(cc) */ CD.TYPE# UNQ, NULL PFX FROM SYS.CCOL$ CC, SYS.CDEF$
 CD WHERE CC.OBJ# = :B2 AND CC.INTCOL# = :B1 AND CD.CON# = CC.CON# AND CD.OBJ# = CC.OBJ# AND CD.ENABLED IS NOT NULL AND CD.INTCOLS = 1
AND CD.TYPE# IN (2,3) AND BITAND(CD.DEFER, 2+4) = 4 AND ROWNUM < 2 UNION ALL SELECT /*+ first_rows(1) leading(i) */ CASE WHEN I.INTCOLS
 = 1 AND BITAND(I.PROPERTY,1) = 1 THEN 3 ELSE NULL END UNQ, CASE WHEN IC.POS# = 1 THEN 1 ELSE NULL END PFX FROM SYS.IND$ I, SYS.ICOL$ I
C WHERE I.BO# = :B2 AND I.BO# = IC.BO# AND IC.INTCOL# = :B1 AND I.OBJ# = IC.OBJ# AND BITAND(I.FLAGS,1025) = 0 AND ROWNUM < 2 )

0000000088E08DB8 SYS
DBMS_AQADM_LIB

0000000060F1BC50
d449fbe24e4da20f877a4e49fd250a07

000000008B38F1D0 SYS
SCHEDULER$_CHAIN_LINK

000000008CBAF2A8 SYSTEM
SQLPLUS_PRODUCT_PROFILE

0000000060E24500
SELECT R.RULE_ACTION

000000008C949940
select last_sample_date_num, last_sample_date, total_samples from WRI$_DBU_CPU_USAGE_SAMPLE where dbid     = :dbid and version  = :vers
ion

0000000092CBB378
select last_sample_date_num, last_sample_date, total_samples from WRI$_DBU_CPU_USAGE_SAMPLE where dbid     = :dbid and version  = :vers
ion

0000000060CF8DE8
select last_sample_date_num, last_sample_date, total_samples from WRI$_DBU_CPU_USAGE_SAMPLE where dbid     = :dbid and version  = :vers
ion

000000008C949DC0
select last_sample_date_num, last_sample_date, total_samples from WRI$_DBU_CPU_USAGE_SAMPLE where dbid     = :dbid and version  = :vers
ion

000000008CAE4480 SYS
DBMS_HA_ALERTS_PRVT

000000008C980240 SYS
X$KSMLS

000000008B0E44C8
INSERT INTO BSLN_BAS

000000008B3D7D68
8fb12607aa69c005c0c99213410588f

000000008CBB3D60
2a7cdc2394513b6d7716b11c73656e94

000000008CBFC750
SELECT COUNT(*) FROM

000000008CB96028
select min(minbkt),m

0000000088FC6168
update sys.scheduler$_job set  next_run_date = :1, last_end_date = :2, retry_count = :3, run_count = :4, running_instance = :5, running
_slave = :6, job_status = :7 where  obj# = :8

000000008B21B140
update sys.scheduler$_job set  next_run_date = :1, last_end_date = :2, retry_count = :3, run_count = :4, running_instance = :5, running
_slave = :6, job_status = :7 where  obj# = :8

000000008CA130B8
update sys.scheduler$_job set  next_run_date = :1, last_end_date = :2, retry_count = :3, run_count = :4, running_instance = :5, running
_slave = :6, job_status = :7 where  obj# = :8

000000008CA58048
update sys.scheduler$_job set  next_run_date = :1, last_end_date = :2, retry_count = :3, run_count = :4, running_instance = :5, running
_slave = :6, job_status = :7 where  obj# = :8

0000000088CAE278
update sys.scheduler$_job set  next_run_date = :1, last_end_date = :2, retry_count = :3, run_count = :4, running_instance = :5, running
_slave = :6, job_status = :7 where  obj# = :8

000000008B35C270
update sys.scheduler$_job set  next_run_date = :1, last_end_date = :2, retry_count = :3, run_count = :4, running_instance = :5, running
_slave = :6, job_status = :7 where  obj# = :8

000000008B0964D0
INSERT INTO SYS.AUX_

000000008C8BF028
8fb12607aa69c005c0c99213410588f

000000008CBDDD40 $BUILD$
252e2ea6fc5bcbcf

00000000653AFDA0
select substrb(dump(

000000008C934C30
558efbca1489645648b8cdc4a0f67bf

0000000060F53B20
6b3b02556e06a2bcca8df569fe83a388

0000000092D1BE68
aed972e15d0178c4d13c5d8c7e468af5

0000000060D44A68 $BUILD$
 f75a0bfb36270e4

000000008B3B0E28
69a71095f0b24abc1ffd3a1fa391b9e

0000000092CC28E8
9d7cdfe216a4d151191585cf3a2edc01

000000008B2B7508
28e018c6fdc2a76f345e78fa5f40bb88

0000000088DEB348
SELECT MESSAGE FROM

000000008B285BC0 SYS
SCHEDULER$_CHAIN_LINK_LIST

0000000092C8F4E8
select spare4 from sys.optstat_hist_control$ where sname=:1

000000008B03E6A8
select spare4 from sys.optstat_hist_control$ where sname=:1

0000000060E71A08
select spare4 from sys.optstat_hist_control$ where sname=:1

000000008B0D6808
select spare4 from sys.optstat_hist_control$ where sname=:1

000000008CB0FF38
( SELECT JOB_NAME, J

0000000088F37888
SELECT 1 FROM WWV_FL

0000000060F4BEC0
select inst_id,fnfno

000000008B3A3CC8
UPDATE RLM$RULESETPR

0000000088E11968
SELECT MIN(ACTSCHAT) FROM RLM$SCHACTLIST WHERE ACTSCHAT IS NOT NULL

000000008B2EC198
SELECT MIN(ACTSCHAT) FROM RLM$SCHACTLIST WHERE ACTSCHAT IS NOT NULL

000000008B258258 SYS
X$KCCTIR

0000000088F42358
e049a77f5ee25a918c23da0e55cde29

0000000060D61688 SYS
DBMS_SWRF_LIB

0000000088FFDB30
SELECT PRIM_EVNTST,

000000008B218A20
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000065391658
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D327B8
8b1cd0e04050e97a8a9087c1aa0beccb

0000000088EDCE90
SELECT PORT, SHARED_

0000000092C8CB28
f982f61433206ca81649b26943999da2

0000000060F6C650
c36d5a579fdc3e19733192893dec6f4a

000000008C877D68
51a119a06c3154a92862da7238c5ae4e

0000000088E36E48 SYS
WRH$_PARAMETER_PK

0000000088C8A7C8
SELECT WRI$_SQLSET_R

0000000088CBE840 SYS
OWA_UTIL

000000008B080460
SELECT POBJ.PARTCNT

0000000060F4D030
UPDATE SYS.SCHEDULER

000000008C8DE198 SYS
DBMS_SQL

000000008CA32A88
48c33050a45de5157fe1808a63874c10

0000000060D59900
f031b3da77f4065efe927b31abb88fbf

0000000088C45AE0
14146c4543417ca6928ac3c4fc8845d0

0000000060CD2D20
8219067028978191073

0000000088FC35F8
1de34d29182c04c6505c9a5a7fd90d

0000000088E42F28
f0fde197a1a16883c15137c81af0b98

0000000088C997F8
SELECT XMLELEMENT( "

0000000092C789D8
ff839632fc717552913e007ea188e628

000000008B3E2B70 SYS
DBMS_LOCK

00000000652DF430 SYS
KU$_OBJNUMSET

000000008CA643C0
/* SQL Analyze(1) */

000000008C8B5250
3b642487a7c95796c43e978766a26558

000000008C8A60B0
SELECT LPAD(VERSION,

0000000060DE5720
4769ddb6121bd637252e2ea6fc5bcbcf

000000008B08E910 SYS
CACHE_STATS_1$

000000008B24F208
82e4ce628a14adf943a8a06edafa7582

000000008C931038 SYS
UTL_FILE

000000008B20FEB8
select /*+  no_paral

000000008C864E68
SELECT READ_SCN FROM

000000008B3805A8
bfd50cb5a3b79d59b546e905fd168b88

0000000088E531D8
SELECT VALUE FROM V$

000000008B122268
SELECT lower(user) user_name,        decode(instr(global_name,'.'),0,global_name,               substr(global_name,1,instr(global_name,
'.')-1 )) instance_name   FROM global_name

0000000088CC5D18
SELECT lower(user) user_name,        decode(instr(global_name,'.'),0,global_name,               substr(global_name,1,instr(global_name,
'.')-1 )) instance_name   FROM global_name

000000008B0F45E8
select * from (     select         begin_time,         to_char(end_time, 'HH24:MI:SS') end_time,         txncount,         undoblks * (
select block_size from dba_tablespaces where upper(tablespace_name) =                         (select upper(value) from v$parameter whe
re name = 'undo_tablespace')                    ) / 1048576 uds_MB ,         maxquerylen uds_maxquerylen,         maxqueryid  uds_maxqu
eryid,         ssolderrcnt uds_ssolderrcnt,         nospaceerrcnt uds_nospaceerrcnt,   unxpstealcnt uds_unxpstealcnt,  expstealcnt uds_
expstealcnt     from         v$undostat     order by         begin_time desc ) where rownum <= 30

0000000060F0F1D0
select * from (     select         begin_time,         to_char(end_time, 'HH24:MI:SS') end_time,         txncount,         undoblks * (
select block_size from dba_tablespaces where upper(tablespace_name) =                         (select upper(value) from v$parameter whe
re name = 'undo_tablespace')                    ) / 1048576 uds_MB ,         maxquerylen uds_maxquerylen,         maxqueryid  uds_maxqu
eryid,         ssolderrcnt uds_ssolderrcnt,         nospaceerrcnt uds_nospaceerrcnt,   unxpstealcnt uds_unxpstealcnt,  expstealcnt uds_
expstealcnt     from         v$undostat     order by         begin_time desc ) where rownum <= 30

000000008B27A4A8
1c8243bde106205e37e1a95a8fecc018

0000000092C96118
INSERT INTO WWV_FLOW

000000008CAAFCE0 PUBLIC
DBMSOUTPUT_LINESARRAY

000000008C8B64B8 SYS
DBMS_SYSTEM

000000008CB7CCD8
47bcbf1b9b91c90c617bdfe0c604b4ca

0000000088D625D0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F14E10
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CB88408 PUBLIC
ALL_SCHEDULER_JOBS

0000000088FC51E8
432fc33b781615644198d03d6512b194

000000008CAE19A0
165221907a95c857d2a85316aa237c33

000000008B361818
SELECT signature FROM sqllog$ WHERE signature = :1

0000000092CD9D38
SELECT signature FROM sqllog$ WHERE signature = :1

0000000060E1BC10
SELECT signature FROM sqllog$ WHERE signature = :1

0000000088C86168
SELECT P.VALUE FROM

0000000060E18010
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 172

000000008B2ABEB8
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 172

0000000088C67210
insert into sys.wri$_optstat_histhead_history  (obj#,intcol#,flags,expression,colname,savtime)  values (:1, :2, :3, :4, :5, :6)

000000008CA66C18
insert into sys.wri$_optstat_histhead_history  (obj#,intcol#,flags,expression,colname,savtime)  values (:1, :2, :3, :4, :5, :6)

0000000088F8E508
insert into sys.wri$_optstat_histhead_history  (obj#,intcol#,flags,expression,colname,savtime)  values (:1, :2, :3, :4, :5, :6)

0000000060E36D40
insert into sys.wri$_optstat_histhead_history  (obj#,intcol#,flags,expression,colname,savtime)  values (:1, :2, :3, :4, :5, :6)

0000000088C67690
insert into sys.wri$_optstat_histhead_history  (obj#,intcol#,flags,expression,colname,savtime)  values (:1, :2, :3, :4, :5, :6)

000000008B18BDA0
SELECT PE.PRIM_ATTRA

000000008B30AE28
select   t.INDEX_NAME,t.PARTITION_NAME,t.SUBPARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER
_KEY,  t.AVG_DATA_BLOCKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') fr
om     dba_ind_subpartitions t,dba_indexes i where     i.table_name = :table_name and i.table_owner = upper(nvl(:owner,user)) and i.own
er = t.index_owner and i.index_name=t.index_name

0000000088E98B80
select   t.INDEX_NAME,t.PARTITION_NAME,t.SUBPARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER
_KEY,  t.AVG_DATA_BLOCKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') fr
om     dba_ind_subpartitions t,dba_indexes i where     i.table_name = :table_name and i.table_owner = upper(nvl(:owner,user)) and i.own
er = t.index_owner and i.index_name=t.index_name

00000000652CABE0
select   t.INDEX_NAME,t.PARTITION_NAME,t.SUBPARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER
_KEY,  t.AVG_DATA_BLOCKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') fr
om     dba_ind_subpartitions t,dba_indexes i where     i.table_name = :table_name and i.table_owner = upper(nvl(:owner,user)) and i.own
er = t.index_owner and i.index_name=t.index_name

000000008B350FD0
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000088CC1E30
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

000000008CB22010
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000088F3B208
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

000000008B19A088
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000088D12C10
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000060E14CF0
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000060E4BA60
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000060D1E918
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000060CCB1B0
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

000000008B351450
insert into sys.col_usage$ (obj#, intcol#, equality_preds, equijoin_preds, nonequijoin_preds, range_preds, like_preds, null_preds, time
stamp) values (   :objn, :coln,   decode(bitand(:flag,1),0,0,1),   decode(bitand(:flag,2),0,0,1),   decode(bitand(:flag,4),0,0,1),   de
code(bitand(:flag,8),0,0,1),   decode(bitand(:flag,16),0,0,1),   decode(bitand(:flag,32),0,0,1),   :time)

0000000060E7E2D0
/* SQL Analyze(1) */

000000008B362B28
aafbbdb03697e6bf7cb74f56a4214519

0000000088F4E350
b227e8c53113383e437ecaf0e0b1d0ed

000000008C8DF658
delete from WRH$_TABLESPACE_SPACE_USAGE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088E54908
delete from WRH$_TABLESPACE_SPACE_USAGE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092EC2410 SYS
V$STREAMS_POOL_ADVICE

000000008B313FB0
aece5971c2c2bd91e4f1dbe37f37b1dc

0000000060F0E4E8 $BUILD$
2ccb8117 b23236d

0000000092D41178 SYS
X$LOBSTAT

0000000092D7B758
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_na
me("innerQuery") NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C
3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

0000000088F46178
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_na
me("innerQuery") NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C
3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

000000008C8A1CC0
DELETE FROM SYS.SCHE

0000000065333950 $BUILD$
fa4af9226022750a

0000000060F01780
477ff39754c50b0632f60186bcbca9ca

0000000088F90328
9acdc455870a5f559e0d75fdb4b04d9

0000000088FF02F0 SYS
OWA_COOKIE

0000000088D24D00 SYS
OBJERROR$

000000008B3559D0
select file#, relfile#, blocks, maxextend from file$  where ts#=:1 and status$ = 2

0000000092D46790
select file#, relfile#, blocks, maxextend from file$  where ts#=:1 and status$ = 2

000000008B355E50
select file#, relfile#, blocks, maxextend from file$  where ts#=:1 and status$ = 2

000000008CA119D0 SYS
SNAP_LOADERTIME$

000000008C9264D8
DELETE FROM WRI$_ADV

000000008CADB218
SELECT SYSDATE FROM

00000000652D97A0
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 163

0000000060CED6F0
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 163

0000000088F3F8B8
SELECT A.RECID, A.RE

0000000060E2DDB0 SYS
DBMS_STANDARD

0000000060EBB230
a7c84f7af3d94585fc39a011f0152d43

0000000088C80DC8
512a70e3d8c62cb032ca144b284163b6

000000008C9269B8
SELECT COUNT(*) FROM

000000008C9C8E50
create global tempor

000000008CBD5160
UPDATE STREAMS$_CAPT

0000000060F78090
2de1a286d2ef4b59117739fb1091b04f

000000008B27E0C8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_FI
LTER, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OP
T_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery"
) NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OB
J$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

00000000652FC4A0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_FI
LTER, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ2", SCALE_ROWS=0.1275732567) OP
T_ESTIMATE(@"innerQuery", INDEX_SKIP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery"
) NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OB
J$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

0000000060E81990
select /*+  no_paral

0000000088EB75F0
INSERT INTO WWV_FLOW

000000008CA856C8
create table test1 a

000000008B105688
create table test1 a

0000000060C91D80
14604142710054658129

0000000088D5AF08 APEX_030200
WWV_FLOW_PAGE_SUBMISSIONS

000000008C838078 $BUILD$
7fa230b7266ce511

0000000088CEBED8
SELECT ID, NAME, OWN

000000008CAB9E20
SELECT COUNT(*) FROM

000000008B168340 APEX_030200
WWV_FLOW_TEMPLATES_UTIL

000000008C9FCCE8
8905de4368a318f028c6fe64885960e6

0000000092D19A58 SYS
X$KEWSSMAP

000000008B057D20
UPDATE SYS.OPTSTAT_H

0000000060F77DD0
SELECT S.SCHEMA, S.Q

0000000088C96718
SELECT XMLELEMENT( "

000000008C921628
DELETE FROM WRI$_ADV

0000000088EFC898
d7e453cde05fb7216c59b5398e3917a3

0000000088C804F8
9491400f1206dfd1e1851d6f5b4055ac

000000008B393980 SYS
STREAMS$_MESSAGE_CONSUMERS


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
0000000088E896C0 SYS
V$LIBRARYCACHE

0000000088EBD010
select bp.lo_setid,bp.hi_setid from    v$buffer_pool BP

0000000060EA6108
select bp.lo_setid,bp.hi_setid from    v$buffer_pool BP

000000008C891C50 APEX_030200
WWV_FLOW_WEB_SERVICES

0000000088CF19F8 SYS
SQLSET

0000000088CAF5D8
delete from WRH$_IC_CLIENT_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060F3B410
delete from WRH$_IC_CLIENT_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B1DC2D8 SYS
WRI$_SQLSET_DEFINITIONS

000000008B3D5878
3ec61a3af78a7e7b7ede1f9a0b8ea3

0000000088D599E8 SYS
X$KTSTSSD

00000000652C8FD0
b63919ecb64d956df145c5e0cc259764

000000008B064360
INSERT INTO USTATS$

0000000092CD0DC8
SELECT A.ID,B.NAME,B.DATA FROM SYS.WRI$_ADV_DIRECTIVE_DEFS A, SYS.WRI$_ADV_DIRECTIVE_INSTANCES B WHERE A.ADVISOR_ID = :B1 AND A.ID = B.
DIR_ID AND B.TASK_ID = 0

000000008C928348
SELECT A.ID,B.NAME,B.DATA FROM SYS.WRI$_ADV_DIRECTIVE_DEFS A, SYS.WRI$_ADV_DIRECTIVE_INSTANCES B WHERE A.ADVISOR_ID = :B1 AND A.ID = B.
DIR_ID AND B.TASK_ID = 0

000000008B22FD00
3896ecb5cbab5f95bf9f8891abe1a39

0000000088C8B018
UPDATE WRI$_SQLSET_D

000000008C916698
SELECT NAME, OWNER_N

0000000092D6DC08
SELECT MD.METRIC_ID

0000000092D62F80
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"JOB" val,count(*) cnt  from "SYS
"."JOB$" t  where "JOB" is not null  group by "JOB") order by val

000000008CB5FDC0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"JOB" val,count(*) cnt  from "SYS
"."JOB$" t  where "JOB" is not null  group by "JOB") order by val

0000000060F3D570
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"JOB" val,count(*) cnt  from "SYS
"."JOB$" t  where "JOB" is not null  group by "JOB") order by val

000000008B33FD38
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"JOB" val,count(*) cnt  from "SYS
"."JOB$" t  where "JOB" is not null  group by "JOB") order by val

0000000060D0CD38 SYS
T

000000008C895680
86000cf19430929bc6844889d4bbf024

000000008B083610
SELECT PO.SUBNAME PN

000000008B1F00E8 ORACLE_OCM
ORACLE_OCM

000000008CBE8A48
INSERT INTO SYS.SCHE

000000008B3FC028 EXFSYS
RLM$NUMVAL

000000008CA45DD0
CREATE UNIQUE INDEX "SCOTT"."SYS_C0011088" on "SCOTT"."PDBA"("ID") NOPARALLEL

0000000065300940
CREATE UNIQUE INDEX "SCOTT"."SYS_C0011088" on "SCOTT"."PDBA"("ID") NOPARALLEL

000000008C8C86A8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B1C85F8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088CC2180
732d1523e906e89a5839117a4fa53ef

00000000652B8B10 $BUILD$
3ef66fd15c5d783d

0000000088CBFAB0
select  INST_ID,        SID_QKSBGSEROW,        BUGNO_QKSBGSEROW,        VALUE_QKSBGSEROW,        FID_QKSBGSEROW,        DESC_QKSBGSEROW
,        OFE_QKSBGSEROW,        EVENT_QKSBGSEROW,        ISDEFAULT_QKSBGSEROW from x$qksbgses

0000000088D1FC30
select  INST_ID,        SID_QKSBGSEROW,        BUGNO_QKSBGSEROW,        VALUE_QKSBGSEROW,        FID_QKSBGSEROW,        DESC_QKSBGSEROW
,        OFE_QKSBGSEROW,        EVENT_QKSBGSEROW,        ISDEFAULT_QKSBGSEROW from x$qksbgses

000000008CAD6EE8 $BUILD$
c4873fd791b4d14f

000000008B230E30
select substrb(dump(

000000008C854980
SELECT ITU.NAME OWNNAME, ITO.NAME TABNAME FROM SYS.USER$ U, SYS.OBJ$ IO, SYS.IND$ I, SYS.OBJ$ ITO, SYS.USER$ ITU WHERE U.NAME = :B2 AND
 IO.NAME = :B1 AND IO.OWNER# = U.USER# AND IO.TYPE# = 1 AND IO.OBJ# = I.OBJ# AND ITO.OBJ# = I.BO# AND ITO.OWNER#= ITU.USER#

000000008B1C08C0
SELECT ITU.NAME OWNNAME, ITO.NAME TABNAME FROM SYS.USER$ U, SYS.OBJ$ IO, SYS.IND$ I, SYS.OBJ$ ITO, SYS.USER$ ITU WHERE U.NAME = :B2 AND
 IO.NAME = :B1 AND IO.OWNER# = U.USER# AND IO.TYPE# = 1 AND IO.OBJ# = I.OBJ# AND ITO.OBJ# = I.BO# AND ITO.OWNER#= ITU.USER#

000000008C910050
SELECT ITU.NAME OWNNAME, ITO.NAME TABNAME FROM SYS.USER$ U, SYS.OBJ$ IO, SYS.IND$ I, SYS.OBJ$ ITO, SYS.USER$ ITU WHERE U.NAME = :B2 AND
 IO.NAME = :B1 AND IO.OWNER# = U.USER# AND IO.TYPE# = 1 AND IO.OBJ# = I.OBJ# AND ITO.OBJ# = I.BO# AND ITO.OWNER#= ITU.USER#

000000008B087C60
SELECT ITU.NAME OWNNAME, ITO.NAME TABNAME FROM SYS.USER$ U, SYS.OBJ$ IO, SYS.IND$ I, SYS.OBJ$ ITO, SYS.USER$ ITU WHERE U.NAME = :B2 AND
 IO.NAME = :B1 AND IO.OWNER# = U.USER# AND IO.TYPE# = 1 AND IO.OBJ# = I.OBJ# AND ITO.OBJ# = I.BO# AND ITO.OWNER#= ITU.USER#

000000008B03E2C8 SYS
X$KEAOBJT

0000000092C7E3F8 SYS
I_TAB_STATS$_OBJ#

000000008CBBC0E8
insert into partobj$ (obj#, parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniext
s, defextsize, defminexts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, spare2, parameters, defmaxsize) values (:1,
:2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20 * 4294967296 + :21 * 65536 + :22 * 256 + :23, :24
, :25)

000000008CBADC08
insert into partobj$ (obj#, parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, definitrans, defmaxtrans, deftiniext
s, defextsize, defminexts, defmaxexts, defextpct, deflists, defgroups, deflogging, spare1, spare2, parameters, defmaxsize) values (:1,
:2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20 * 4294967296 + :21 * 65536 + :22 * 256 + :23, :24
, :25)

000000008B11B430
delete from WRH$_SHARED_SERVER_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbi
d)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap
_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092D3C4C8
delete from WRH$_SHARED_SERVER_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbi
d)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap
_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C72E78
27daf098ec4ed15d3ef66fd15c5d783d

000000008C9F17B0 SYS
STREAMS$_SPLIT_MERGE

0000000088FDF670 SYS
SCHEDULER_FILEWATCHER_REQUEST

000000008C984EE0 SYS
WRM$_BASELINE_DETAILS

0000000092D11FB8
select /*+  no_paral

0000000088F9DC18 SYS
DBA_SCHEDULER_DB_DESTS

0000000060D78938
b08a18f166b16334c32b96c14278d620

000000008B282E00
SELECT NVL(:B4 , STA

000000008B0CA1D8
DELETE FROM SYS.SCHE

0000000092D581B8
3137e563c404483db86fdf4adfebc162

0000000092D5E8D8
select substrb(dump(

00000000653BFF90
select substrb(dump(

0000000060D481B8 $BUILD$
96fe3ac4 8294dd8

0000000092CC64F8
SELECT S.ACTION_THRE

0000000088E6DF90
select inst_id,kqrstcid,decode(kqrsttyp,1,'PARENT','SUBORDINATE'), decode(kqrsttyp,2,kqrstsno,null),kqrsttxt,kqrstcsz,kqrstusg,kqrstfcs
, kqrstgrq,kqrstfastgrq,kqrstgmi,kqrstsrq,kqrstsmi,kqrstsco,kqrstmrq, kqrstmfl,kqrstilr,kqrstifr,kqrstisr from x$kqrst

0000000088F51F18
select inst_id,kqrstcid,decode(kqrsttyp,1,'PARENT','SUBORDINATE'), decode(kqrsttyp,2,kqrstsno,null),kqrsttxt,kqrstcsz,kqrstusg,kqrstfcs
, kqrstgrq,kqrstfastgrq,kqrstgmi,kqrstsrq,kqrstsmi,kqrstsco,kqrstmrq, kqrstmfl,kqrstilr,kqrstifr,kqrstisr from x$kqrst

000000008CAB29A8 SYS
WRH$_PGASTAT

000000008B0806B0
SELECT IDX_INF.PROPE

0000000092D53068
SELECT ATSTABTYP FRO

000000008C930148 SYS
WRI$_ADV_MESSAGE_GROUPS

000000008CA0ACD0
SELECT FLAGS, STATUS

000000008C849130
SELECT COUNT(*) FROM V$PROCESS D,V$SESSION A,V$SQLAREA C WHERE A.SQL_ID = C.SQL_ID AND A.PADDR = D.ADDR AND D.PGA_USED_MEM >= 1024 * 10
24 * 10 ORDER BY D.PGA_USED_MEM

0000000060FA9270
SELECT COUNT(*) FROM V$PROCESS D,V$SESSION A,V$SQLAREA C WHERE A.SQL_ID = C.SQL_ID AND A.PADDR = D.ADDR AND D.PGA_USED_MEM >= 1024 * 10
24 * 10 ORDER BY D.PGA_USED_MEM

0000000088DE95E8
select x.inst_id,x.indx+1,ksppinm,ksppity,ksppstvl, ksppstdvl, ksppstdf,  decode(bitand(ksppiflg/256,1),1,'TRUE','FALSE'),  decode(bita
nd(ksppiflg/65536,3),1,'IMMEDIATE',2,'DEFERRED',                                  3,'IMMEDIATE','FALSE'),  decode(bitand(ksppiflg,4),4,
'FALSE',                                     decode(bitand(ksppiflg/65536,3), 0, 'FALSE', 'TRUE')),     decode(bitand(ksppstvf,7),1,'MO
DIFIED',4,'SYSTEM_MOD','FALSE'),  decode(bitand(ksppstvf,2),2,'TRUE','FALSE'),  decode(bitand(ksppilrmflg/64, 1), 1, 'TRUE', 'FALSE'),
 decode(bitand(ksppilrmflg/268435456, 1), 1, 'TRUE', 'FALSE'),  ksppdesc, ksppstcmnt, ksppihash  from x$ksppi x, x$ksppcv y where (x.in
dx = y.indx) and  bitand(ksppiflg,268435456) = 0 and  ((translate(ksppinm,'_','#') not like '##%') and    ((translate(ksppinm,'_','#')
not like '#%')      or (ksppstdf = 'FALSE') or      (bitand(ksppstvf,5) > 0)))

0000000060D453F8
select x.inst_id,x.indx+1,ksppinm,ksppity,ksppstvl, ksppstdvl, ksppstdf,  decode(bitand(ksppiflg/256,1),1,'TRUE','FALSE'),  decode(bita
nd(ksppiflg/65536,3),1,'IMMEDIATE',2,'DEFERRED',                                  3,'IMMEDIATE','FALSE'),  decode(bitand(ksppiflg,4),4,
'FALSE',                                     decode(bitand(ksppiflg/65536,3), 0, 'FALSE', 'TRUE')),     decode(bitand(ksppstvf,7),1,'MO
DIFIED',4,'SYSTEM_MOD','FALSE'),  decode(bitand(ksppstvf,2),2,'TRUE','FALSE'),  decode(bitand(ksppilrmflg/64, 1), 1, 'TRUE', 'FALSE'),
 decode(bitand(ksppilrmflg/268435456, 1), 1, 'TRUE', 'FALSE'),  ksppdesc, ksppstcmnt, ksppihash  from x$ksppi x, x$ksppcv y where (x.in
dx = y.indx) and  bitand(ksppiflg,268435456) = 0 and  ((translate(ksppinm,'_','#') not like '##%') and    ((translate(ksppinm,'_','#')
not like '#%')      or (ksppstdf = 'FALSE') or      (bitand(ksppstvf,5) > 0)))

000000008B0B4320 SYS
DBMS_STREAMS_DECL

0000000060E39480
aedd24d8b8494c7f3c07da954055fde6

000000008CB95958
/* SQL Analyze(1) */

0000000092C9B6D8
7350101ba88ccbf272f24d9679e69885

000000008B079EF0 SYS
CACHE_STATS_SEQ_0

000000008C88A440
5daee9106ebc87ba78d724655db67832

0000000088F18298
alter session set nl

000000008B3AF230
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  begin dbms_rlmgr_dr.cleanup_events; end;  :mydate := next_dat
e; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

000000008CAA7D28
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  begin dbms_rlmgr_dr.cleanup_events; end;  :mydate := next_dat
e; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

000000008C950F88
select shared_pool_size_for_estimate, shared_pool_size_factor,  estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,  estd_lc_time
_saved_factor, estd_lc_load_time,  estd_lc_load_time_factor, estd_lc_memory_object_hits  from gv$shared_pool_advice where inst_id = USE
RENV('Instance')

000000008B1CBD58
select shared_pool_size_for_estimate, shared_pool_size_factor,  estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,  estd_lc_time
_saved_factor, estd_lc_load_time,  estd_lc_load_time_factor, estd_lc_memory_object_hits  from gv$shared_pool_advice where inst_id = USE
RENV('Instance')

0000000065348590
ba51866b2d314bc57edc53e9ae54ccdb

0000000088EC14D0 SYS
WRH$_SERVICE_STAT

0000000092C67A40
SELECT TO_NUMBER(1) FROM DUAL

000000008B170E00
SELECT TO_NUMBER(1) FROM DUAL

0000000060E64C80 SYS
DBMS_LOCK_ID

000000008CAA9EE8
9748d51ddb19cb21779c62bf4268a22c

0000000088E7BD00 SYS
V$BUFFER_POOL_STATISTICS

000000008CB01228
c6b42f45d49bd4827d885f6d44d984f0

000000008CAEDEA8
      select decode(open_mode, 'MOUNTED', 0,                                'READ WRITE', 1,                                'READ ONLY'
, 1,                                'READ ONLY WITH APPLY', 1,                                2) dbstate       into :dbstate       from
 v$database

000000008C87DD68
      select decode(open_mode, 'MOUNTED', 0,                                'READ WRITE', 1,                                'READ ONLY'
, 1,                                'READ ONLY WITH APPLY', 1,                                2) dbstate       into :dbstate       from
 v$database

0000000088F58BA0
8dfc26be2f9e09da72690448ee05249f

0000000060C9E480
334785808193b14f885ecc24d9b4b713

000000008B098120
INSERT INTO SYS.AUX_

000000008B377278
701e7d7f576f24a66f7d6cf0fa0f5c31

0000000060FEBD30
610f5635e17ea94a6effa3e073a092a1

0000000092C45278 EXFSYS
DBMS_RLMGR_DR

000000008B3A9FC8 SYS
DBA_HIST_BASELINE

000000008B091EA0
LOCK TABLE SYS.COL_U

0000000065351240
select count(*) from association$ where obj# = :1

000000008CB31B58
select count(*) from association$ where obj# = :1

000000008B38B990 SYS
V$RECOVERY_FILE_DEST

000000008C91FF08
MERGE INTO WRI$_ADV_

0000000092D834E0 SYS
V$SGA

0000000060D92F20
insert into ccol$(con#,obj#,intcol#,pos#,col#,spare1) values(:1,:2,:3,decode(:4,0,null,:4),:5, :6)

0000000060F90E78
insert into ccol$(con#,obj#,intcol#,pos#,col#,spare1) values(:1,:2,:3,decode(:4,0,null,:4),:5, :6)

000000008B23AC30
SELECT     file_num,     MAX(extent_count) max_disk_extents,     MIN(extent_count) min_disk_extents,     MAX(extent_count) - MIN(extent
_count) disk_extents_imbalance FROM (     SELECT     number_kffxp file_num,     disk_kffxp disk_num,     COUNT(xnum_kffxp) extent_count
     FROM         x$kffxp     WHERE         group_kffxp = 1         AND disk_kffxp != 65534         GROUP BY number_kffxp, disk_kffxp
       ORDER BY number_kffxp, disk_kffxp) GROUP BY file_num HAVING MAX(extent_count) - MIN(extent_count) > 5 ORDER BY disk_extents_imba
lance DESC

000000008B3AAD88
SELECT     file_num,     MAX(extent_count) max_disk_extents,     MIN(extent_count) min_disk_extents,     MAX(extent_count) - MIN(extent
_count) disk_extents_imbalance FROM (     SELECT     number_kffxp file_num,     disk_kffxp disk_num,     COUNT(xnum_kffxp) extent_count
     FROM         x$kffxp     WHERE         group_kffxp = 1         AND disk_kffxp != 65534         GROUP BY number_kffxp, disk_kffxp
       ORDER BY number_kffxp, disk_kffxp) GROUP BY file_num HAVING MAX(extent_count) - MIN(extent_count) > 5 ORDER BY disk_extents_imba
lance DESC

000000008B231990
13643888361797923916

0000000060EE8050
delete from WRI$_SEGADV_OBJLIST where creation_time < :1

000000008B36D9F0
delete from WRI$_SEGADV_OBJLIST where creation_time < :1

000000008CA6D1C0 SCOTT
TEST1

000000008CA4D4D0 $BUILD$
8d7da21de1e3b468

0000000088CF5848
SELECT (SUM(LENGTH)+COUNT(*))*3 FROM USER$ U, OBJ$ O, IND$ I, ICOL$ IC, COL$ C WHERE U.NAME = :B2 AND O.NAME = :B1 AND U.USER# = O.OWNE
R# AND O.OBJ# = I.OBJ# AND O.OBJ# = IC.OBJ# AND IC.BO# = C.OBJ# AND IC.INTCOL# = C.INTCOL#

0000000088FE1070
SELECT (SUM(LENGTH)+COUNT(*))*3 FROM USER$ U, OBJ$ O, IND$ I, ICOL$ IC, COL$ C WHERE U.NAME = :B2 AND O.NAME = :B1 AND U.USER# = O.OWNE
R# AND O.OBJ# = I.OBJ# AND O.OBJ# = IC.OBJ# AND IC.BO# = C.OBJ# AND IC.INTCOL# = C.INTCOL#

0000000088EB1670
SELECT (SUM(LENGTH)+COUNT(*))*3 FROM USER$ U, OBJ$ O, IND$ I, ICOL$ IC, COL$ C WHERE U.NAME = :B2 AND O.NAME = :B1 AND U.USER# = O.OWNE
R# AND O.OBJ# = I.OBJ# AND O.OBJ# = IC.OBJ# AND IC.BO# = C.OBJ# AND IC.INTCOL# = C.INTCOL#

000000008B072F80
SELECT (SUM(LENGTH)+COUNT(*))*3 FROM USER$ U, OBJ$ O, IND$ I, ICOL$ IC, COL$ C WHERE U.NAME = :B2 AND O.NAME = :B1 AND U.USER# = O.OWNE
R# AND O.OBJ# = I.OBJ# AND O.OBJ# = IC.OBJ# AND IC.BO# = C.OBJ# AND IC.INTCOL# = C.INTCOL#

000000008C88BDC0
493cd250cc27a1a671836dfc28f34ccf

0000000088E1CD88
insert into wrh$_tablespace_space_usage      (snap_id, dbid, tablespace_id,       tablespace_usedsize, tablespace_size, tablespace_maxs
ize, rtime)  select      :snap_id, :dbid,      KTTEFINFOTSN, sum(KTTEFINFOUSP), sum(KTTEFINFOSIZE),      sum(KTTEFINFOMSIZE), to_char(s
ysdate,'MM/DD/YYYY HH24:MI:SS')      from X$KTTEFINFO      group by KTTEFINFOTSN

000000008C97C1F8
insert into wrh$_tablespace_space_usage      (snap_id, dbid, tablespace_id,       tablespace_usedsize, tablespace_size, tablespace_maxs
ize, rtime)  select      :snap_id, :dbid,      KTTEFINFOTSN, sum(KTTEFINFOUSP), sum(KTTEFINFOSIZE),      sum(KTTEFINFOMSIZE), to_char(s
ysdate,'MM/DD/YYYY HH24:MI:SS')      from X$KTTEFINFO      group by KTTEFINFOTSN

0000000088F6B638
insert into wrh$_tablespace_space_usage      (snap_id, dbid, tablespace_id,       tablespace_usedsize, tablespace_size, tablespace_maxs
ize, rtime)  select      :snap_id, :dbid,      KTTEFINFOTSN, sum(KTTEFINFOUSP), sum(KTTEFINFOSIZE),      sum(KTTEFINFOMSIZE), to_char(s
ysdate,'MM/DD/YYYY HH24:MI:SS')      from X$KTTEFINFO      group by KTTEFINFOTSN

0000000088E1D208
insert into wrh$_tablespace_space_usage      (snap_id, dbid, tablespace_id,       tablespace_usedsize, tablespace_size, tablespace_maxs
ize, rtime)  select      :snap_id, :dbid,      KTTEFINFOTSN, sum(KTTEFINFOUSP), sum(KTTEFINFOSIZE),      sum(KTTEFINFOMSIZE), to_char(s
ysdate,'MM/DD/YYYY HH24:MI:SS')      from X$KTTEFINFO      group by KTTEFINFOTSN

0000000088F743F0 SYS
WRH$_EVENT_NAME

000000008CBEC378 SYS
INDCOMPART$

000000008CAA44F0
1a82a5de534dc5c6ddad6549c1f5bae9

000000008C9D72D8
1e4013f81f1d52db61c9c355510564c

000000008B2386A0
70b4a137ede8bb306b3d29639e234b8b

0000000088FA4578
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("I") FULL("I")
NO_PARALLEL_INDEX("I") */ 1 AS C1, CASE WHEN "I"."TYPE#"=3 AND BITAND("I"."FLAGS",5145)=0 THEN 1 ELSE 0 END AS C2 FROM "SYS"."IND$" SAM
PLE BLOCK (2.203269 , 1) SEED (1) "I") SAMPLESUB

0000000060C8F070
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("I") FULL("I")
NO_PARALLEL_INDEX("I") */ 1 AS C1, CASE WHEN "I"."TYPE#"=3 AND BITAND("I"."FLAGS",5145)=0 THEN 1 ELSE 0 END AS C2 FROM "SYS"."IND$" SAM
PLE BLOCK (2.203269 , 1) SEED (1) "I") SAMPLESUB

000000008B0CC530
54de1f2d0a990793d7faa5bd28815d8

0000000088EFA1A8
78a12834400a42644e74f98c418b44b

0000000060F24870
delete from WRH$_TEMPFILE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088EE61F0
delete from WRH$_TEMPFILE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000065346210 SYS
CDC_CHANGE_TABLES$

000000008CBF4070
274e06dcc9c5fc1cf26eed7524cd449

000000008CBAB540
SELECT RSET_STGCLS F

0000000060CDB390 SYS
WRH$_INST_CACHE_TRANSFER_BL

000000008CA01658
select substrb(dump(

0000000088CA2538
SELECT L.TASK_NAME,

000000006534F980 SYS
REDEF_OBJECT$

0000000060FA02D0
6b51647babdb70478e81daa39094b64a

0000000088D9F1E8
SELECT CAPTURE_USER

000000008CA178C8 $BUILD$
 4e1103afc8ae6a4

000000008B0535B0
SELECT COUNT(*) FROM

000000008B1B2920
select substrb(dump(

000000008CB333E0
select substrb(dump(

0000000092C44018
SELECT NVL(MAX(R.ID)

0000000088E48E18 SYS
V$PGA_TARGET_ADVICE

0000000088DCF208
insert into wrh$_dispatcher   (snap_id, dbid, instance_number,    name, serial#, idle, busy,    wait, totalq,    sampled_total_conn)  s
elect * from    (select      :snap_id, :dbid, :instance_number,      d.kmmdinam, d.kmmdiser, d.kmmdiidl, d.kmmdibsy,      q.kmcqswat, q
.kmcqstnc,      d.kmmdisnc    from x$kmmdi d, x$kmcqs q    where d.addr = q.kmcqsdsp      and bitand(d.kmmdiflg, 1) = 1    order by d.i
ndx) where rownum <= 100

000000008C9836B8
insert into wrh$_dispatcher   (snap_id, dbid, instance_number,    name, serial#, idle, busy,    wait, totalq,    sampled_total_conn)  s
elect * from    (select      :snap_id, :dbid, :instance_number,      d.kmmdinam, d.kmmdiser, d.kmmdiidl, d.kmmdibsy,      q.kmcqswat, q
.kmcqstnc,      d.kmmdisnc    from x$kmmdi d, x$kmcqs q    where d.addr = q.kmcqsdsp      and bitand(d.kmmdiflg, 1) = 1    order by d.i
ndx) where rownum <= 100

000000008B1012A8
insert into wrh$_dispatcher   (snap_id, dbid, instance_number,    name, serial#, idle, busy,    wait, totalq,    sampled_total_conn)  s
elect * from    (select      :snap_id, :dbid, :instance_number,      d.kmmdinam, d.kmmdiser, d.kmmdiidl, d.kmmdibsy,      q.kmcqswat, q
.kmcqstnc,      d.kmmdisnc    from x$kmmdi d, x$kmcqs q    where d.addr = q.kmcqsdsp      and bitand(d.kmmdiflg, 1) = 1    order by d.i
ndx) where rownum <= 100

0000000060E9BA90
insert into wrh$_dispatcher   (snap_id, dbid, instance_number,    name, serial#, idle, busy,    wait, totalq,    sampled_total_conn)  s
elect * from    (select      :snap_id, :dbid, :instance_number,      d.kmmdinam, d.kmmdiser, d.kmmdiidl, d.kmmdibsy,      q.kmcqswat, q
.kmcqstnc,      d.kmmdisnc    from x$kmmdi d, x$kmcqs q    where d.addr = q.kmcqsdsp      and bitand(d.kmmdiflg, 1) = 1    order by d.i
ndx) where rownum <= 100

0000000088F80928
insert into wrh$_dispatcher   (snap_id, dbid, instance_number,    name, serial#, idle, busy,    wait, totalq,    sampled_total_conn)  s
elect * from    (select      :snap_id, :dbid, :instance_number,      d.kmmdinam, d.kmmdiser, d.kmmdiidl, d.kmmdibsy,      q.kmcqswat, q
.kmcqstnc,      d.kmmdisnc    from x$kmmdi d, x$kmcqs q    where d.addr = q.kmcqsdsp      and bitand(d.kmmdiflg, 1) = 1    order by d.i
ndx) where rownum <= 100

0000000088DCF688
insert into wrh$_dispatcher   (snap_id, dbid, instance_number,    name, serial#, idle, busy,    wait, totalq,    sampled_total_conn)  s
elect * from    (select      :snap_id, :dbid, :instance_number,      d.kmmdinam, d.kmmdiser, d.kmmdiidl, d.kmmdibsy,      q.kmcqswat, q
.kmcqstnc,      d.kmmdisnc    from x$kmmdi d, x$kmcqs q    where d.addr = q.kmcqsdsp      and bitand(d.kmmdiflg, 1) = 1    order by d.i
ndx) where rownum <= 100

000000008B09AD10 SYS
ODCICONST

000000008CA12470
insert into tab$(obj#,ts#,file#,block#,bobj#,tab#,intcols,kernelcols,clucols,audit$,flags,pctfree$,pctused$,initrans,maxtrans,rowcnt,bl
kcnt,empcnt,avgspc,chncnt,avgrln,analyzetime,samplesize,cols,property,degree,instances,dataobj#,avgspc_flb,flbcnt,trigflag,spare1,spare
6)values(:1,:2,:3,:4,decode(:5,0,null,:5),decode(:6,0,null,:6),:7,:8,decode(:9,0,null,:9),:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:
21,:22,:23,:24,:25,decode(:26,1,null,:26),decode(:27,1,null,:27),:28,:29,:30,:31,:32,:33)

0000000088C71840
insert into tab$(obj#,ts#,file#,block#,bobj#,tab#,intcols,kernelcols,clucols,audit$,flags,pctfree$,pctused$,initrans,maxtrans,rowcnt,bl
kcnt,empcnt,avgspc,chncnt,avgrln,analyzetime,samplesize,cols,property,degree,instances,dataobj#,avgspc_flb,flbcnt,trigflag,spare1,spare
6)values(:1,:2,:3,:4,decode(:5,0,null,:5),decode(:6,0,null,:6),:7,:8,decode(:9,0,null,:9),:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:
21,:22,:23,:24,:25,decode(:26,1,null,:26),decode(:27,1,null,:27),:28,:29,:30,:31,:32,:33)

0000000092CE2278
insert into tab$(obj#,ts#,file#,block#,bobj#,tab#,intcols,kernelcols,clucols,audit$,flags,pctfree$,pctused$,initrans,maxtrans,rowcnt,bl
kcnt,empcnt,avgspc,chncnt,avgrln,analyzetime,samplesize,cols,property,degree,instances,dataobj#,avgspc_flb,flbcnt,trigflag,spare1,spare
6)values(:1,:2,:3,:4,decode(:5,0,null,:5),decode(:6,0,null,:6),:7,:8,decode(:9,0,null,:9),:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:
21,:22,:23,:24,:25,decode(:26,1,null,:26),decode(:27,1,null,:27),:28,:29,:30,:31,:32,:33)

0000000088D18420
insert into tab$(obj#,ts#,file#,block#,bobj#,tab#,intcols,kernelcols,clucols,audit$,flags,pctfree$,pctused$,initrans,maxtrans,rowcnt,bl
kcnt,empcnt,avgspc,chncnt,avgrln,analyzetime,samplesize,cols,property,degree,instances,dataobj#,avgspc_flb,flbcnt,trigflag,spare1,spare
6)values(:1,:2,:3,:4,decode(:5,0,null,:5),decode(:6,0,null,:6),:7,:8,decode(:9,0,null,:9),:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:
21,:22,:23,:24,:25,decode(:26,1,null,:26),decode(:27,1,null,:27),:28,:29,:30,:31,:32,:33)

0000000060FD78F0
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

0000000088DBCF28
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

0000000060DD3E08
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

0000000088F42818
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

000000008C9D0C50
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

0000000088FE4700
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

000000008B2D48F8
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

000000006535CEE0
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

000000008B3B9598
insert into wri$_adv_sqlt_plans    (statement_id, timestamp, operation, options,     object_node, object_owner, object_name, object_ins
tance, object_type,     search_columns, id, parent_id, position, other,     optimizer, cost, cardinality, bytes, other_tag,     partiti
on_start, partition_stop, partition_id,     distribution, cpu_cost, io_cost, temp_space, access_predicates,     filter_predicates, proj
ection, time, qblock_name, object_alias,     plan_id, depth, remarks, other_xml)   values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:1
4,:15,          :16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29,:30,          :31,:32,:33,:34,:35,:36)

000000008CAF6CA8
ea869ce79cded5b6ae49174ec9706c0

000000008C9937F8
SELECT LA.ADDR, DC.KQRSTCID CACHE, DC.KQRSTTXT PARAMETER, DECODE(DC.KQRSTTYP,1,'PARENT','SUBORDINATE') TYPE, DECODE(DECODE(DC.KQRSTTYP,
2,KQRSTSNO,NULL),NULL,'None',DECODE(DC.KQRSTTYP,2,KQRSTSNO,NULL)) SUBORDINATE, DC.KQRSTGRQ GETS, DC.KQRSTGMI MISSES, DC.KQRSTMRQ MODIFI
CATIONS, DC.KQRSTMFL FLUSHES, DC.KQRSTCLN CHILD_NO, LA.GETS AS LAGETS, LA.MISSES AS LAMISSES, LA.IMMEDIATE_GETS LAIMGE FROM X$KQRST DC,
 V$LATCH_CHILDREN LA WHERE DC.INST_ID = USERENV('instance') AND LA.CHILD# = DC.KQRSTCLN AND LA.NAME = 'row cache objects' ORDER BY 2,3,
4,5

0000000060CB0A00
SELECT LA.ADDR, DC.KQRSTCID CACHE, DC.KQRSTTXT PARAMETER, DECODE(DC.KQRSTTYP,1,'PARENT','SUBORDINATE') TYPE, DECODE(DECODE(DC.KQRSTTYP,
2,KQRSTSNO,NULL),NULL,'None',DECODE(DC.KQRSTTYP,2,KQRSTSNO,NULL)) SUBORDINATE, DC.KQRSTGRQ GETS, DC.KQRSTGMI MISSES, DC.KQRSTMRQ MODIFI
CATIONS, DC.KQRSTMFL FLUSHES, DC.KQRSTCLN CHILD_NO, LA.GETS AS LAGETS, LA.MISSES AS LAMISSES, LA.IMMEDIATE_GETS LAIMGE FROM X$KQRST DC,
 V$LATCH_CHILDREN LA WHERE DC.INST_ID = USERENV('instance') AND LA.CHILD# = DC.KQRSTCLN AND LA.NAME = 'row cache objects' ORDER BY 2,3,
4,5

000000008B0606A0
SELECT ROWCNT, BLKCN

0000000060E96920 SYS
X$KTFBUE

000000008B230480
6ac3207f3c3be84ba9657d74794fbe7a

000000008CAFA738 ORACLE_OCM
MGMT_CONFIG_JOB

0000000088CF0D78
update indpart$ set dataobj# = :1, part# = :2, flags = :3, ts# = :4, file# = :5, block# = :6, pctfree$ = :7, initrans = :8, maxtrans =
:9, analyzetime = :10, samplesize = :11, rowcnt = :12, blevel = :13, leafcnt = :14, distkey = :15, lblkkey = :16, dblkkey = :17, clufac
 = :18, pctthres$ = :19 where obj# = :20

0000000088E3D1D0
update indpart$ set dataobj# = :1, part# = :2, flags = :3, ts# = :4, file# = :5, block# = :6, pctfree$ = :7, initrans = :8, maxtrans =
:9, analyzetime = :10, samplesize = :11, rowcnt = :12, blevel = :13, leafcnt = :14, distkey = :15, lblkkey = :16, dblkkey = :17, clufac
 = :18, pctthres$ = :19 where obj# = :20

0000000088FC71F8
update indpart$ set dataobj# = :1, part# = :2, flags = :3, ts# = :4, file# = :5, block# = :6, pctfree$ = :7, initrans = :8, maxtrans =
:9, analyzetime = :10, samplesize = :11, rowcnt = :12, blevel = :13, leafcnt = :14, distkey = :15, lblkkey = :16, dblkkey = :17, clufac
 = :18, pctthres$ = :19 where obj# = :20

000000006533E540 SYS
KU$_OBJNUMPAIRLIST

0000000060F80AB0 SYS
DBA_QUEUE_SCHEDULES

000000008C90E870
ee10ed43b8a77862fa70fe77d0e1a920

000000008C8AA480
SELECT STEP_NAME FRO

0000000060DA1BE0 SYS
AQ$_SCHEDULER_FILEWATCHER_QT_S

000000008B3453B0
SELECT RATIONALE_ID,

0000000092C35818
3896ecb5cbab5f95bf9f8891abe1a39

000000008C920288
UPDATE WRI$_ADV_DEF_

000000008B2C8610 $BUILD$
4f2e201d28402a9a

0000000060C567A0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "P")  */ 1 AS C1 FROM "SYS"."PROFNAM
E$" "P") innerQuery

0000000060C56C20
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "P")  */ 1 AS C1 FROM "SYS"."PROFNAM
E$" "P") innerQuery

0000000088F502A8
SELECT COUNT(1) FROM

000000008CBED1E8 SYS
COLTYPE$

0000000088F91DE0
begin   :owner :=upper('scott');   :table_name := upper('tiger'); end;

0000000060C52138
begin   :owner :=upper('scott');   :table_name := upper('tiger'); end;

000000008CA80E80
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000653D5660
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B2877E0 SYS
DBMS_XSTREAM_GG_ADM

0000000065351B50
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CA8D9C0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088D64818
f4b59626255a0da6516107d52f9cc45b

0000000088CA4838 SYS
WRI$_SQLSET_PLANS_TOCAP

000000008B063C90
DELETE FROM AUX_STAT

0000000060E33360
/* SQL Analyze(1) */

0000000060FBBCD0 PUBLIC
NLS_DATABASE_PARAMETERS

0000000060EEFC90
SELECT O.OBJ# FROM S

0000000088DB2848 APEX_030200
WWV_FLOW_UTILITIES

0000000088F86CF8
da957bc475a303b95574bdd24da17f2d

000000008CA35E48 SYS
SCHEDULER_FILEWATCHER_HISTORY

000000008B1DF668
e5e1a94be60e8fa1190e21d23421ff88

0000000060E820C0
UPDATE WRI$_ADV_RECO

0000000088DB9D08
insert into wrh$_mvparameter   (snap_id, dbid, instance_number, parameter_hash, ordinal, value,    isdefault, ismodified)  select    :s
nap_id, :dbid, :instance_number, i.ksppihash hash, sv.kspftctxvn,    substr(sv.kspftctxvl, 1, 512),    sv.kspftctxdf, decode(bitand(sv.
kspftctxvf,7), 1, 'MODIFIED', 'FALSE')  from x$ksppi i, x$ksppsv2 sv  where i.indx + 1 = sv.kspftctxpn    and bitand(i.ksppilrmflg,32)
= 32    and (((i.ksppinm not like '#_%' escape '#') or          (sv.kspftctxdf = 'FALSE') or          (bitand(sv.kspftctxvf,5) > 0)) or
         (i.ksppinm like '#_#_%' escape '#'))  order by    hash

000000008C90E6D0
insert into wrh$_mvparameter   (snap_id, dbid, instance_number, parameter_hash, ordinal, value,    isdefault, ismodified)  select    :s
nap_id, :dbid, :instance_number, i.ksppihash hash, sv.kspftctxvn,    substr(sv.kspftctxvl, 1, 512),    sv.kspftctxdf, decode(bitand(sv.
kspftctxvf,7), 1, 'MODIFIED', 'FALSE')  from x$ksppi i, x$ksppsv2 sv  where i.indx + 1 = sv.kspftctxpn    and bitand(i.ksppilrmflg,32)
= 32    and (((i.ksppinm not like '#_%' escape '#') or          (sv.kspftctxdf = 'FALSE') or          (bitand(sv.kspftctxvf,5) > 0)) or
         (i.ksppinm like '#_#_%' escape '#'))  order by    hash

000000008C9CBE10
insert into wrh$_mvparameter   (snap_id, dbid, instance_number, parameter_hash, ordinal, value,    isdefault, ismodified)  select    :s
nap_id, :dbid, :instance_number, i.ksppihash hash, sv.kspftctxvn,    substr(sv.kspftctxvl, 1, 512),    sv.kspftctxdf, decode(bitand(sv.
kspftctxvf,7), 1, 'MODIFIED', 'FALSE')  from x$ksppi i, x$ksppsv2 sv  where i.indx + 1 = sv.kspftctxpn    and bitand(i.ksppilrmflg,32)
= 32    and (((i.ksppinm not like '#_%' escape '#') or          (sv.kspftctxdf = 'FALSE') or          (bitand(sv.kspftctxvf,5) > 0)) or
         (i.ksppinm like '#_#_%' escape '#'))  order by    hash

000000008B254708
insert into wrh$_mvparameter   (snap_id, dbid, instance_number, parameter_hash, ordinal, value,    isdefault, ismodified)  select    :s
nap_id, :dbid, :instance_number, i.ksppihash hash, sv.kspftctxvn,    substr(sv.kspftctxvl, 1, 512),    sv.kspftctxdf, decode(bitand(sv.
kspftctxvf,7), 1, 'MODIFIED', 'FALSE')  from x$ksppi i, x$ksppsv2 sv  where i.indx + 1 = sv.kspftctxpn    and bitand(i.ksppilrmflg,32)
= 32    and (((i.ksppinm not like '#_%' escape '#') or          (sv.kspftctxdf = 'FALSE') or          (bitand(sv.kspftctxvf,5) > 0)) or
         (i.ksppinm like '#_#_%' escape '#'))  order by    hash

0000000088DBA188
insert into wrh$_mvparameter   (snap_id, dbid, instance_number, parameter_hash, ordinal, value,    isdefault, ismodified)  select    :s
nap_id, :dbid, :instance_number, i.ksppihash hash, sv.kspftctxvn,    substr(sv.kspftctxvl, 1, 512),    sv.kspftctxdf, decode(bitand(sv.
kspftctxvf,7), 1, 'MODIFIED', 'FALSE')  from x$ksppi i, x$ksppsv2 sv  where i.indx + 1 = sv.kspftctxpn    and bitand(i.ksppilrmflg,32)
= 32    and (((i.ksppinm not like '#_%' escape '#') or          (sv.kspftctxdf = 'FALSE') or          (bitand(sv.kspftctxvf,5) > 0)) or
         (i.ksppinm like '#_#_%' escape '#'))  order by    hash

0000000060D347A8
723c87793c560938d8484f2d6d958c2e

0000000088E95D38
bf442d5310e58e894a1058b891b3a0

000000008C925AB8
DELETE FROM WRI$_ADV

0000000060D29080
select min(minbkt),m

0000000092D362B8 $BUILD$
85e13d5a16f012c5

000000008C934A30
a45c5d152479d56ee53f9f45d53a12c3

0000000060D5F6D8
SELECT o.obj# from obj$ o, tab$ t, user$ u where  u.name = :1 and o.name = :2 and u.user# = o.owner# and  t.obj# = o.obj# and o.type# =
 2 and bitand(t.property, 131072) = 131072

0000000060D5FB58
SELECT o.obj# from obj$ o, tab$ t, user$ u where  u.name = :1 and o.name = :2 and u.user# = o.owner# and  t.obj# = o.obj# and o.type# =
 2 and bitand(t.property, 131072) = 131072

0000000060F02600 SYS
AQ$_PROPAGATION_STATUS

000000008B1E6010
b7ada89eb959bc13f558c0479a173b7

0000000092C91868
69a2079ec8b99ff706f0169fdc91660

0000000060E91660
select inst_id,ksusenum,ksusestn,ksusestv from x$ksumysta where bitand(ksspaflg,1)!=0 and bitand(ksuseflg,1)!=0 and ksusestn<(select ks
usgstl from x$ksusgif)

000000008B2A2660
select inst_id,ksusenum,ksusestn,ksusestv from x$ksumysta where bitand(ksspaflg,1)!=0 and bitand(ksuseflg,1)!=0 and ksusestn<(select ks
usgstl from x$ksusgif)

000000008B2AF6C8
update obj$ set obj#=:4, type#=:5,ctime=:6,mtime=:7,stime=:8,status=:9,dataobj#=:10,flags=:11,oid$=:12,spare1=:13, spare2=:14 where own
er#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname is null

0000000088D26710
update obj$ set obj#=:4, type#=:5,ctime=:6,mtime=:7,stime=:8,status=:9,dataobj#=:10,flags=:11,oid$=:12,spare1=:13, spare2=:14 where own
er#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname is null

0000000088C76E00
update obj$ set obj#=:4, type#=:5,ctime=:6,mtime=:7,stime=:8,status=:9,dataobj#=:10,flags=:11,oid$=:12,spare1=:13, spare2=:14 where own
er#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname is null

000000008B2AFB48
update obj$ set obj#=:4, type#=:5,ctime=:6,mtime=:7,stime=:8,status=:9,dataobj#=:10,flags=:11,oid$=:12,spare1=:13, spare2=:14 where own
er#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname is null

0000000088FC15D8
aafbbdb03697e6bf7cb74f56a4214519

0000000060F278A8 EXFSYS
EXPFIL_ALTEREXPTAB_MAINT

0000000088E2FB78 $BUILD$
34be7e4bed981d64

000000008B074F40
SELECT C.NAME FROM C

0000000060D79918
91887046b183f8742e7e79f239efccec

000000008CBB7F38
INSERT INTO EXFSYS.R

0000000088C45540
select min(minbkt),m

000000008B2B4910
bc8529283ee141aa1da1bcb4a712f553

0000000088F94928 $BUILD$
aa07dc0f4b117e17

0000000060F59C90
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000653BEED8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C913D88
INSERT INTO WRI$_ADV

0000000088D59298
select /*+  no_paral

0000000088EC3310
SELECT TYPE# FROM SYS.OBJ$ WHERE OBJ# = :B1

0000000088EC03C0
SELECT TYPE# FROM SYS.OBJ$ WHERE OBJ# = :B1

000000008B06FBA0
SELECT TYPE# FROM SYS.OBJ$ WHERE OBJ# = :B1

0000000060E7D980
54de1f2d0a990793d7faa5bd28815d8

0000000088CEE1E8 SYS
DBMS_XPLAN

000000008B1E6ED8 SYS
VTABLE$

0000000088DF43E8
91de253f10456de3309f658537b69130

000000008B1543F8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("M") FULL("M") NO_PARALLEL_INDEX("M
") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS$" "M") SAMPLESUB

0000000060E43618
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("M") FULL("M") NO_PARALLEL_INDEX("M
") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS$" "M") SAMPLESUB

000000008B1A3EE8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("M") FULL("M") NO_PARALLEL_INDEX("M
") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS$" "M") SAMPLESUB

000000008CB7C2E8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("M") FULL("M") NO_PARALLEL_INDEX("M
") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS$" "M") SAMPLESUB

0000000088CB4F58
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("M") FULL("M") NO_PARALLEL_INDEX("M
") */ 1 AS C1, 1 AS C2 FROM "SYS"."MON_MODS$" "M") SAMPLESUB

000000008CADC858
SELECT USERENV('LANG

0000000088CEE628 SYS
GV$SQL_MONITOR

000000008B1957C0
SELECT ID, CREATED_B

000000008CB99278
UPDATE KET$_CLIENT_TASKS     SET ATTRIBUTES = :atr,         TASK_PRIORITY = :pri,         CURR_JOB_NAME = :job,         WINDOW_NAME = N
ULL,        CURR_WIN_START = :wst,         EST_TYPE = 0,         EST_DURATION = 0,         STATUS = 2   WHERE CLIENT_ID = :cid     AND
OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

000000008B301F68
UPDATE KET$_CLIENT_TASKS     SET ATTRIBUTES = :atr,         TASK_PRIORITY = :pri,         CURR_JOB_NAME = :job,         WINDOW_NAME = N
ULL,        CURR_WIN_START = :wst,         EST_TYPE = 0,         EST_DURATION = 0,         STATUS = 2   WHERE CLIENT_ID = :cid     AND
OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

0000000088C5D498
UPDATE KET$_CLIENT_TASKS     SET ATTRIBUTES = :atr,         TASK_PRIORITY = :pri,         CURR_JOB_NAME = :job,         WINDOW_NAME = N
ULL,        CURR_WIN_START = :wst,         EST_TYPE = 0,         EST_DURATION = 0,         STATUS = 2   WHERE CLIENT_ID = :cid     AND
OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

0000000060E403C0
UPDATE KET$_CLIENT_TASKS     SET ATTRIBUTES = :atr,         TASK_PRIORITY = :pri,         CURR_JOB_NAME = :job,         WINDOW_NAME = N
ULL,        CURR_WIN_START = :wst,         EST_TYPE = 0,         EST_DURATION = 0,         STATUS = 2   WHERE CLIENT_ID = :cid     AND
OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

0000000088F4D780
UPDATE KET$_CLIENT_TASKS     SET ATTRIBUTES = :atr,         TASK_PRIORITY = :pri,         CURR_JOB_NAME = :job,         WINDOW_NAME = N
ULL,        CURR_WIN_START = :wst,         EST_TYPE = 0,         EST_DURATION = 0,         STATUS = 2   WHERE CLIENT_ID = :cid     AND
OPERATION_ID = :oid     AND TARGET_TYPE = :tgt     AND TARGET_NAME = :tgn

0000000088CB2EC8
select sdo_geor_def.listAllGeoRasterFieldsStr(:1,:2) from dual

0000000088D051E8
select sdo_geor_def.listAllGeoRasterFieldsStr(:1,:2) from dual

000000008B09C330 SYS
DBMS_STATS

0000000092D25558
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060D34BE8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C884370
delete from idl_ub2$ where obj#=:1 and part=:2

000000008C8847F0
delete from idl_ub2$ where obj#=:1 and part=:2

0000000060D53ED8
c4e38e35ac58a4bb7a6b84ef2f4d73b6

000000008B39FFF0
4c282b8fc877ffe5446108d3dc14a764

000000008B20CBE8
883830cc853d0f37585f7bd06e738665

0000000088EB5940
SELECT PARAMETER_VAL

000000008C9CEE38
/* SQL Analyze(1) */

00000000653C5500
1c09f75da2e73755b42a8959c484ba43

0000000088ECECE0 SYS
WRH$_TEMPSTATXS

0000000060E9ADC0
INSERT INTO SYSTEM.A

000000008B293B68
3325d60efbe40a2ba6289ddcfe0bff55

000000008C92E9B8 PUBLIC
XMLTYPE

000000008B3DAA88
95965dff6dfa9d6e8cbb7cf6dd32b234

0000000088EB8080 $BUILD$
bc425b44dcf4808d

0000000088C88C08
SELECT CASE WHEN LOW

0000000088D1EBD0
e55df0e2765fd7d85b6ab225fb6fdef

0000000088FE86F0
15bd54d0299ee8bf14305e5955148539

000000008C875548
39612daffb8025e3f166ca994cb77f4

0000000088CEDDA8 SYS
GV$SQL_OPTIMIZER_ENV

0000000060DC70A8
select substrb(dump(

0000000088DFE258
SELECT SYS.STREAMS$_

0000000060F0A7D0
UPDATE WRI$_ADV_ADDM

0000000060E5ABD8
5d0e8d872ddcd2f2113ce430fbf578f9

000000008B09A8D0 SYS
ODCICOLINFO

000000008B0E1B88
d1ddd68ed1edac67ce47973d6539529

0000000092D1CEA8
274e06dcc9c5fc1cf26eed7524cd449

000000008CBC8208 APEX_030200
WWV_FLOW_CUSTOM_AUTH_SETUPS

000000008CB4BE70 $BUILD$
6f93fdafd1f259cb

000000008C8FFCF0
SELECT XMLTYPE(I.DATA) AS DATA, D.DIRECTIVE_NAME FROM DBA_ADVISOR_DIR_TASK_INST I, DBA_ADVISOR_DIR_DEFINITIONS D WHERE I.TASK_ID = :B1
AND I.DIRECTIVE_ID = D.ID AND D.ADVISOR_NAME = 'ADDM'

000000008CA67830
SELECT XMLTYPE(I.DATA) AS DATA, D.DIRECTIVE_NAME FROM DBA_ADVISOR_DIR_TASK_INST I, DBA_ADVISOR_DIR_DEFINITIONS D WHERE I.TASK_ID = :B1
AND I.DIRECTIVE_ID = D.ID AND D.ADVISOR_NAME = 'ADDM'

0000000088C57C28
SELECT XMLTYPE(I.DATA) AS DATA, D.DIRECTIVE_NAME FROM DBA_ADVISOR_DIR_TASK_INST I, DBA_ADVISOR_DIR_DEFINITIONS D WHERE I.TASK_ID = :B1
AND I.DIRECTIVE_ID = D.ID AND D.ADVISOR_NAME = 'ADDM'

0000000060F28360
SELECT XMLTYPE(I.DATA) AS DATA, D.DIRECTIVE_NAME FROM DBA_ADVISOR_DIR_TASK_INST I, DBA_ADVISOR_DIR_DEFINITIONS D WHERE I.TASK_ID = :B1
AND I.DIRECTIVE_ID = D.ID AND D.ADVISOR_NAME = 'ADDM'

0000000088CA86E8
SELECT XMLTYPE(I.DATA) AS DATA, D.DIRECTIVE_NAME FROM DBA_ADVISOR_DIR_TASK_INST I, DBA_ADVISOR_DIR_DEFINITIONS D WHERE I.TASK_ID = :B1
AND I.DIRECTIVE_ID = D.ID AND D.ADVISOR_NAME = 'ADDM'

000000008B13DE48
SELECT XMLTYPE(I.DATA) AS DATA, D.DIRECTIVE_NAME FROM DBA_ADVISOR_DIR_TASK_INST I, DBA_ADVISOR_DIR_DEFINITIONS D WHERE I.TASK_ID = :B1
AND I.DIRECTIVE_ID = D.ID AND D.ADVISOR_NAME = 'ADDM'

000000008B2151E8
UPDATE SYSTEM.AQ$_QU

0000000088FA7128
d4086778f7c10423754c9c256a3a7333

0000000060E2E400
/* SQL Analyze(1) */

000000008B171470 $BUILD$
41dc08ef5e55e383

000000008B264618
SELECT ID FROM WWV_F

0000000092CD2308
SELECT EQUALATTRS FR

000000008B188180
BEGIN   aw_trunc_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner); END;

0000000088DF3F28
BEGIN   aw_trunc_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner); END;

000000008B281A80
delete from WRH$_STREAMS_APPLY_SUM tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B23B410
delete from WRH$_STREAMS_APPLY_SUM tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3424A0
SELECT PARAMETER_NAM

0000000060D322C8 SYS
GV$ASM_DISKGROUP

00000000652E4BF0
4ab9542b2d08995f5d8e8b9212224b27

000000008B3A6168
SELECT COUNT(*) FROM

0000000060D87B30
select substrb(dump(

0000000088E21FC8
SELECT name FROM sys.wri$_adv_tasks WHERE ID = :1

0000000060CAB0E8
SELECT name FROM sys.wri$_adv_tasks WHERE ID = :1

00000000653DE560
SELECT name FROM sys.wri$_adv_tasks WHERE ID = :1

0000000088D2E448
SELECT name FROM sys.wri$_adv_tasks WHERE ID = :1

0000000088C9A638
SELECT XMLELEMENT( "

00000000652DAA90
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),:"SYS_B_0"), NVL(SUM(C2),:"SYS_B_1") FROM (SELECT /*+ NO_PARALLEL("TEST1") FULL("TE
ST1") NO_PARALLEL_INDEX("TEST1") */ :"SYS_B_2" AS C1, :"SYS_B_3" AS C2 FROM "SCOTT"."TEST1" SAMPLE BLOCK (:"SYS_B_4" , :"SYS_B_5") SEED
 (:"SYS_B_6") "TEST1") SAMPLESUB

0000000060E0AD50
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),:"SYS_B_0"), NVL(SUM(C2),:"SYS_B_1") FROM (SELECT /*+ NO_PARALLEL("TEST1") FULL("TE
ST1") NO_PARALLEL_INDEX("TEST1") */ :"SYS_B_2" AS C1, :"SYS_B_3" AS C2 FROM "SCOTT"."TEST1" SAMPLE BLOCK (:"SYS_B_4" , :"SYS_B_5") SEED
 (:"SYS_B_6") "TEST1") SAMPLESUB

000000008C9F11F0
select substrb(dump(

0000000092D14528
SELECT COUNT(*) FROM

0000000060FC0930
UPDATE STREAMS$_SPLI

000000008B3676F8
select /*+  no_paral

000000008C9058E0
f9f66f2c75b3b4bfa51a15887faee1a7

0000000088F8B698 $BUILD$
aa0ba35ee12e34f1

0000000088EBB0D0 SYS
WRH$_SERVICE_WAIT_CLASS_PK

000000008CBAEF38
36f8bac9e0d974b2fb0c36e265ff81aa

0000000088FE01F0
58e8c142109e7c51f6d07ec6bd8c3902

0000000060F592D0
SELECT DEVELOPER_ROL

0000000088CC36F8
d014660034ba23a198bfd6ee86de8bd6

0000000060DEDE38
a738ad6547e98496dbf7e813bc4b0af

0000000092C6D060
1a9caa64fc3f95ca9ed5ba2456c64cd1

0000000088FA7BE8 SYS
ALL_RULE_SET_RULES

0000000060E9FF50
292c322a94135306d01ebe11202b875c

0000000088C918D8
DELETE WRI$_SQLSET_P

000000008C86CF68
94ad8c623771d6c01cd1205aebe8e216

000000008B096010
INSERT INTO SYS.AUX_

000000008C9919A8
a19c83e512f63df5a0674ba4450e54a5

000000008C99C4D0
bd6532b9876e20438e6d6aece67e982a

000000008CACDE08
94755b1bcf440d6ed429189295867dd0

0000000060D465E8
69485d556f876fc0a2bf5247a2908d9

000000008B3E9A20
UPDATE SYSTEM.AQ$_QU

000000008C91AB88
SELECT COUNT(*) FROM

000000008C853A48
SELECT NVL2(O.SUBNAM

0000000088C84C08
INSERT INTO WRI$_SQL

0000000088D5DB88 SYS
OLAP_CUBES$

000000008CB97968
delete from cdef$ where obj#=:1

0000000088FEA0C0
delete from cdef$ where obj#=:1

000000008B0B3CE0
84f93fd34bc4e20a5f25d27a377d5e5

000000008CA5FC48 SYS
JOB_ARRAY

000000008B1D6378
select /*+  no_paral

000000008CB50168
345744d1ce7e64ad7ded2cc88511fa4b

0000000060F200B0
SELECT INST_ID,INSTANCE_NUMBER FROM GV$INSTANCE

000000008B26BE80
SELECT INST_ID,INSTANCE_NUMBER FROM GV$INSTANCE

0000000088C8D358
UPDATE WRI$_SQLSET_S

000000008B0FF5A8
SELECT ID, NAME, SCH

0000000088C8FA18
INSERT INTO WRI$_SQL

0000000088E8E970 SYS
JOBATTR_ARRAY

000000008CB58568
b2d194b6396ae66825b4b5df17049d4

000000008C880DD0
SELECT AUTOTASK_STATUS,           ABA_STATE,           NVL(ABA_STATE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           NVL(AB
A_START_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           MW_NAME,            NVL(MW_START_TIME, TIMESTAMP '2001-01-01 01:01:
01.01 +01:01'),           NVL(RECONCILE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           INSTANCE_NAME      FROM KET$_AUTOTA
SK_STATUS     WHERE DUMMY_KEY=99999    FOR UPDATE

000000008B1F7980
SELECT AUTOTASK_STATUS,           ABA_STATE,           NVL(ABA_STATE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           NVL(AB
A_START_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           MW_NAME,            NVL(MW_START_TIME, TIMESTAMP '2001-01-01 01:01:
01.01 +01:01'),           NVL(RECONCILE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           INSTANCE_NAME      FROM KET$_AUTOTA
SK_STATUS     WHERE DUMMY_KEY=99999    FOR UPDATE

0000000088E702D0
SELECT AUTOTASK_STATUS,           ABA_STATE,           NVL(ABA_STATE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           NVL(AB
A_START_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           MW_NAME,            NVL(MW_START_TIME, TIMESTAMP '2001-01-01 01:01:
01.01 +01:01'),           NVL(RECONCILE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           INSTANCE_NAME      FROM KET$_AUTOTA
SK_STATUS     WHERE DUMMY_KEY=99999    FOR UPDATE

0000000060FFC860
SELECT AUTOTASK_STATUS,           ABA_STATE,           NVL(ABA_STATE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           NVL(AB
A_START_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           MW_NAME,            NVL(MW_START_TIME, TIMESTAMP '2001-01-01 01:01:
01.01 +01:01'),           NVL(RECONCILE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           INSTANCE_NAME      FROM KET$_AUTOTA
SK_STATUS     WHERE DUMMY_KEY=99999    FOR UPDATE

000000008B222BD0
SELECT AUTOTASK_STATUS,           ABA_STATE,           NVL(ABA_STATE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           NVL(AB
A_START_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           MW_NAME,            NVL(MW_START_TIME, TIMESTAMP '2001-01-01 01:01:
01.01 +01:01'),           NVL(RECONCILE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           INSTANCE_NAME      FROM KET$_AUTOTA
SK_STATUS     WHERE DUMMY_KEY=99999    FOR UPDATE

000000008CAB5F50
SELECT AUTOTASK_STATUS,           ABA_STATE,           NVL(ABA_STATE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           NVL(AB
A_START_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           MW_NAME,            NVL(MW_START_TIME, TIMESTAMP '2001-01-01 01:01:
01.01 +01:01'),           NVL(RECONCILE_TIME, TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),           INSTANCE_NAME      FROM KET$_AUTOTA
SK_STATUS     WHERE DUMMY_KEY=99999    FOR UPDATE

0000000060F53E30
SELECT USERID FROM W

0000000060E16560
c25f40e6c301b03a299d5d03e60d836

000000008B2A6A28
SELECT COUNT(*) AS T

000000008C93BD58
select substrb(dump(

0000000088CA95A8
UPDATE WRI$_ADV_DEF_

000000008B150278
SELECT BUILD_STATUS

0000000088CB2348
SELECT ENABLED FROM

0000000060EED930
SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(TOTAL - FREE, 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROUND((TOTAL - FREE) / TOTAL * 100, 2) PC
T_USED FROM (SELECT 'SGA' NAME, (SELECT SUM(VALUE / 1024 / 1024) FROM V$SGA) TOTAL, (SELECT SUM(BYTES / 1024 / 1024) FROM V$SGASTAT WHE
RE NAME = 'free memory') FREE FROM DUAL) UNION SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(USED, 2) USED_MB, ROUND(TOTAL - USED, 2) FRE
E_MB, ROUND(USED / TOTAL * 100, 2) PCT_USED FROM (SELECT 'PGA' NAME, (SELECT VALUE / 1024 / 1024 TOTAL FROM V$PGASTAT WHERE NAME = 'agg
regate PGA target parameter') TOTAL, (SELECT VALUE / 1024 / 1024 USED FROM V$PGASTAT WHERE NAME = 'total PGA allocated') USED FROM DUAL
) UNION SELECT NAME, ROUND(TOTAL, 2) TOTAL_MB, ROUND((TOTAL - FREE), 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROUND((TOTAL - FREE) / TOTAL *
 100, 2) PCT_USED FROM (SELECT 'Shared pool' NAME, (SELECT SUM(BYTES / 1024 / 1024) FROM V$SGASTAT WHERE POOL = 'shared pool') TOTAL, (
SELECT BYTES / 1024 / 1024 FROM V$SGASTAT WHERE NAME =

0000000060CDD880
SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(TOTAL - FREE, 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROUND((TOTAL - FREE) / TOTAL * 100, 2) PC
T_USED FROM (SELECT 'SGA' NAME, (SELECT SUM(VALUE / 1024 / 1024) FROM V$SGA) TOTAL, (SELECT SUM(BYTES / 1024 / 1024) FROM V$SGASTAT WHE
RE NAME = 'free memory') FREE FROM DUAL) UNION SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(USED, 2) USED_MB, ROUND(TOTAL - USED, 2) FRE
E_MB, ROUND(USED / TOTAL * 100, 2) PCT_USED FROM (SELECT 'PGA' NAME, (SELECT VALUE / 1024 / 1024 TOTAL FROM V$PGASTAT WHERE NAME = 'agg
regate PGA target parameter') TOTAL, (SELECT VALUE / 1024 / 1024 USED FROM V$PGASTAT WHERE NAME = 'total PGA allocated') USED FROM DUAL
) UNION SELECT NAME, ROUND(TOTAL, 2) TOTAL_MB, ROUND((TOTAL - FREE), 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROUND((TOTAL - FREE) / TOTAL *
 100, 2) PCT_USED FROM (SELECT 'Shared pool' NAME, (SELECT SUM(BYTES / 1024 / 1024) FROM V$SGASTAT WHERE POOL = 'shared pool') TOTAL, (
SELECT BYTES / 1024 / 1024 FROM V$SGASTAT WHERE NAME =

0000000092D73748
ffa053dbf510097feeb467c4fdf9c80f

0000000060CB39B0 MDSYS
SDO_TOPO_METADATA_TABLE

000000008B1A9458
select substrb(dump(

0000000092CCFA68
c90b677571465dbb2e383a57f63f3f2a

000000008B163960
select max(last_number) into :bind1 from dba_sequences where sequence_owner='SYS' and sequence_name='WRM$_DEEP_PURGE_INTERVAL'

0000000060F01FB0
select max(last_number) into :bind1 from dba_sequences where sequence_owner='SYS' and sequence_name='WRM$_DEEP_PURGE_INTERVAL'

000000008C9CCF68
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("I") FULL("I")
NO_PARALLEL_INDEX("I") */ 1 AS C1, CASE WHEN BITAND("I"."FLAGS",5145)=0 AND BITAND("I"."PROPERTY",32)<>32 AND BITAND("I"."PROPERTY",64)
<>64 AND BITAND("I"."FLAGS",2)<>2 AND "I"."TYPE#"<>4 AND "I"."TYPE#"<>8 THEN 1 ELSE 0 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.20326
9 , 1) SEED (1) "I") SAMPLESUB

0000000060D6AF80
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("I") FULL("I")
NO_PARALLEL_INDEX("I") */ 1 AS C1, CASE WHEN BITAND("I"."FLAGS",5145)=0 AND BITAND("I"."PROPERTY",32)<>32 AND BITAND("I"."PROPERTY",64)
<>64 AND BITAND("I"."FLAGS",2)<>2 AND "I"."TYPE#"<>4 AND "I"."TYPE#"<>8 THEN 1 ELSE 0 END AS C2 FROM "SYS"."IND$" SAMPLE BLOCK (2.20326
9 , 1) SEED (1) "I") SAMPLESUB

0000000088E514E8
e35a423cb9e364aad547a16b5bff0d41

0000000092C91D68
SELECT COUNT(*) FROM

000000008B2771C8
delete from WRH$_JAVA_POOL_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D1DCF0
delete from WRH$_JAVA_POOL_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
 and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >
= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CA1CEC8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.021102330
79) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("S
O#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.095982
3) OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "TS#3", ("S#1
", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ5", SCALE_ROWS=120.
0959823) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."TS$" "TS#3", "SYS"."SEG$" "S#
1", "SYS"."SYS_OBJECTS" "SO#2", "SYS"."OBJ$" SAMPLE BLO

000000008CA414E0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.021102330
79) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("S
O#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.095982
3) OPT_ESTIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "TS#3", ("S#1
", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ5", SCALE_ROWS=120.
0959823) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."TS$" "TS#3", "SYS"."SEG$" "S#
1", "SYS"."SYS_OBJECTS" "SO#2", "SYS"."OBJ$" SAMPLE BLO

000000006535C550 SYS
WRH$_FILESTATXS

0000000092C94A38
SELECT NAME BUTTON_N

0000000088FE2228
SELECT INSTANCE_NUMB

000000008B256938
5392700597543675956

000000008C9981C8
select substrb(dump(

000000008B262818
SELECT :B3 TYPE, AL.

0000000092D6C948
SELECT TO_NUMBER(NUL

0000000092C5C4E8
SELECT MIN(OPCODE_ID

000000008B0E6188
select high, bit from (select snap_id - 1 high, min(begin_interval_time) bit from wrm$_snapshot where dbid = :dbid and snap_id = (selec
t min(snap_id) from wrm$_snapshot s where dbid = :dbid and snap_id > :snap_id and status in (0,1) and not exists (select 1 from WRM$_BA
SELINE b where b.dbid = s.dbid and s.snap_id >= b.start_snap_id and s.snap_id <= b.end_snap_id)) group by snap_id union all select 2147
483647, systimestamp from  v$database where dbid <> :dbid order by 1 asc nulls last) where rownum = 1

000000008CAFE608
select high, bit from (select snap_id - 1 high, min(begin_interval_time) bit from wrm$_snapshot where dbid = :dbid and snap_id = (selec
t min(snap_id) from wrm$_snapshot s where dbid = :dbid and snap_id > :snap_id and status in (0,1) and not exists (select 1 from WRM$_BA
SELINE b where b.dbid = s.dbid and s.snap_id >= b.start_snap_id and s.snap_id <= b.end_snap_id)) group by snap_id union all select 2147
483647, systimestamp from  v$database where dbid <> :dbid order by 1 asc nulls last) where rownum = 1

0000000088FCF3C8 SYS
GV$SORT_SEGMENT

000000008CB5CCF0
select  TS# , NAME, INCLUDED_IN_DATABASE_BACKUP, BIGFILE, FLASHBACK_ON, ENCRYPT_IN_BACKUP from GV$TABLESPACE where inst_id = USERENV('I
nstance')

0000000060D7CE88
select  TS# , NAME, INCLUDED_IN_DATABASE_BACKUP, BIGFILE, FLASHBACK_ON, ENCRYPT_IN_BACKUP from GV$TABLESPACE where inst_id = USERENV('I
nstance')

0000000092D3DE78
SELECT ID FROM WWV_F

0000000088FE6B10
INSERT INTO BSLN_BAS

0000000060F14FF0
6550abcb63d9cb5c7a81c54157bc8c63

0000000088E595C8
insert into wrh$_resource_limit   (snap_id, dbid, instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value)  select    :snap_id, :dbid, :instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value  from    v$resource_limit  where    limit_value != ' UNLIMITED' and    max_utilization > 0

000000008CBA83F8
insert into wrh$_resource_limit   (snap_id, dbid, instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value)  select    :snap_id, :dbid, :instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value  from    v$resource_limit  where    limit_value != ' UNLIMITED' and    max_utilization > 0

000000008CB4CBE8
insert into wrh$_resource_limit   (snap_id, dbid, instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value)  select    :snap_id, :dbid, :instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value  from    v$resource_limit  where    limit_value != ' UNLIMITED' and    max_utilization > 0

000000008B25D300
insert into wrh$_resource_limit   (snap_id, dbid, instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value)  select    :snap_id, :dbid, :instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value  from    v$resource_limit  where    limit_value != ' UNLIMITED' and    max_utilization > 0

000000008CA2D410
insert into wrh$_resource_limit   (snap_id, dbid, instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value)  select    :snap_id, :dbid, :instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value  from    v$resource_limit  where    limit_value != ' UNLIMITED' and    max_utilization > 0

0000000088E59A48
insert into wrh$_resource_limit   (snap_id, dbid, instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value)  select    :snap_id, :dbid, :instance_number, resource_name, current_utilization,    max_utilization, initial_allo
cation, limit_value  from    v$resource_limit  where    limit_value != ' UNLIMITED' and    max_utilization > 0

0000000092C74138 SYS
V$FOREIGN_ARCHIVED_LOG

0000000092D5EC48 SYS
WRH$_TABLESPACE_STAT_PK

0000000088EDFCF0
SELECT COUNT(*) FROM

0000000088C50F38
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, DECODE(BITAND(T.FLAGS, 512),512,2,0), DECODE(BITAND(T.FLAGS, 256),256,1,0), T.ROWCNT, C
ASE BITAND(T.PROPERTY, 128) WHEN 128 THEN (SELECT TOV.BLKCNT FROM SYS.TAB$ TOV WHERE TOV.OBJ# = T.BOBJ#) ELSE T.BLKCNT END BLKCNT, T.AV
GRLN, T.CHNCNT, T.ANALYZETIME, T.SAMPLESIZE, TST.CACHEDBLK, TST.CACHEHIT, TST.LOGICALREAD, NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.TAB$
 T, SYS.TAB_STATS$ TST WHERE :B4 IS NULL AND U.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND OT.OBJ# = T.OB
J# AND T.OBJ# = TST.OBJ# (+) AND BITAND(T.PROPERTY, 512) != 512 AND BITAND(T.FLAGS, 536870912) != 536870912 AND (:B1 = 'CACHE_HISTORY'
OR (:B1 = 'DATA' AND BITAND(T.FLAGS,16) = 16) OR (:B1 = 'CACHE' AND TST.OBJ# IS NOT NULL) OR (:B1 = 'ALL' AND (BITAND(T.FLAGS,16) = 16
OR TST.OBJ# IS NOT NULL)) ) UNION ALL SELECT U.NAME, OP.NAME, OP.SUBNAME, NULL, DECODE(BITAND(TP.FLAGS, 16),16,2,0), DECODE(BITAND(TP.F
LAGS, 8),8,1,0), TP.ROWCNT, CASE BITAND(T.PROPERTY, 128

000000008B0622C0
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, DECODE(BITAND(T.FLAGS, 512),512,2,0), DECODE(BITAND(T.FLAGS, 256),256,1,0), T.ROWCNT, C
ASE BITAND(T.PROPERTY, 128) WHEN 128 THEN (SELECT TOV.BLKCNT FROM SYS.TAB$ TOV WHERE TOV.OBJ# = T.BOBJ#) ELSE T.BLKCNT END BLKCNT, T.AV
GRLN, T.CHNCNT, T.ANALYZETIME, T.SAMPLESIZE, TST.CACHEDBLK, TST.CACHEHIT, TST.LOGICALREAD, NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.TAB$
 T, SYS.TAB_STATS$ TST WHERE :B4 IS NULL AND U.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND OT.OBJ# = T.OB
J# AND T.OBJ# = TST.OBJ# (+) AND BITAND(T.PROPERTY, 512) != 512 AND BITAND(T.FLAGS, 536870912) != 536870912 AND (:B1 = 'CACHE_HISTORY'
OR (:B1 = 'DATA' AND BITAND(T.FLAGS,16) = 16) OR (:B1 = 'CACHE' AND TST.OBJ# IS NOT NULL) OR (:B1 = 'ALL' AND (BITAND(T.FLAGS,16) = 16
OR TST.OBJ# IS NOT NULL)) ) UNION ALL SELECT U.NAME, OP.NAME, OP.SUBNAME, NULL, DECODE(BITAND(TP.FLAGS, 16),16,2,0), DECODE(BITAND(TP.F
LAGS, 8),8,1,0), TP.ROWCNT, CASE BITAND(T.PROPERTY, 128

0000000088C77F20
e3a6ac3ad321a1af8fcc14b5133c416

000000008C97E280
select u.name, o.name,         decode(i.agt_name, NULL, 'SCHEDULER$_EVENT_AGENT', i.agt_name)  from   sys.user$ u, sys.obj$ o,       (s
elect si.obj# obj#, sm.rule_name agt_name from        sys.scheduler$_srcq_info si left outer join sys.scheduler$_srcq_map sm        on
(sm.oid = si.obj# and bitand(sm.flags, 2) <> 0)) i  where  i.obj# = o.obj# and o.owner# = u.user#

0000000092CC0E68
select u.name, o.name,         decode(i.agt_name, NULL, 'SCHEDULER$_EVENT_AGENT', i.agt_name)  from   sys.user$ u, sys.obj$ o,       (s
elect si.obj# obj#, sm.rule_name agt_name from        sys.scheduler$_srcq_info si left outer join sys.scheduler$_srcq_map sm        on
(sm.oid = si.obj# and bitand(sm.flags, 2) <> 0)) i  where  i.obj# = o.obj# and o.owner# = u.user#

000000008C8FFE60
select u.name, o.name,         decode(i.agt_name, NULL, 'SCHEDULER$_EVENT_AGENT', i.agt_name)  from   sys.user$ u, sys.obj$ o,       (s
elect si.obj# obj#, sm.rule_name agt_name from        sys.scheduler$_srcq_info si left outer join sys.scheduler$_srcq_map sm        on
(sm.oid = si.obj# and bitand(sm.flags, 2) <> 0)) i  where  i.obj# = o.obj# and o.owner# = u.user#

000000006534B3E0 SYS
COMPRESSION$

000000008B25C830
36c925b268b1b95e70c8a0113f43b12a

0000000088D667C8
SELECT STATE, (CASE

0000000060EF0A90
c9a0ec749f4f3313e9e79bf874355644

0000000088F29C20 $BUILD$
b0f1851b5ad34075

0000000088D8F1C8
fdb720abd01f2d6726262edc5aeec5f2

000000008B29AFD0
insert into WRM$_SNAPSHOT   (snap_id, dbid, instance_number, startup_time,    begin_interval_time, end_interval_time, snap_level,    st
atus, error_count, bl_moved, snap_flag, snap_timezone)  values   (:snap_id, :dbid, :instance_number, :startup_time,    :begin_interval_
time, :end_interval_time, :snap_level,    :status, 0, 0, :bind1, :bind2)

0000000092C989D8
insert into WRM$_SNAPSHOT   (snap_id, dbid, instance_number, startup_time,    begin_interval_time, end_interval_time, snap_level,    st
atus, error_count, bl_moved, snap_flag, snap_timezone)  values   (:snap_id, :dbid, :instance_number, :startup_time,    :begin_interval_
time, :end_interval_time, :snap_level,    :status, 0, 0, :bind1, :bind2)

0000000088CFEA40
insert into WRM$_SNAPSHOT   (snap_id, dbid, instance_number, startup_time,    begin_interval_time, end_interval_time, snap_level,    st
atus, error_count, bl_moved, snap_flag, snap_timezone)  values   (:snap_id, :dbid, :instance_number, :startup_time,    :begin_interval_
time, :end_interval_time, :snap_level,    :status, 0, 0, :bind1, :bind2)

0000000060F74B40
insert into WRM$_SNAPSHOT   (snap_id, dbid, instance_number, startup_time,    begin_interval_time, end_interval_time, snap_level,    st
atus, error_count, bl_moved, snap_flag, snap_timezone)  values   (:snap_id, :dbid, :instance_number, :startup_time,    :begin_interval_
time, :end_interval_time, :snap_level,    :status, 0, 0, :bind1, :bind2)

0000000060F3F3E0
insert into WRM$_SNAPSHOT   (snap_id, dbid, instance_number, startup_time,    begin_interval_time, end_interval_time, snap_level,    st
atus, error_count, bl_moved, snap_flag, snap_timezone)  values   (:snap_id, :dbid, :instance_number, :startup_time,    :begin_interval_
time, :end_interval_time, :snap_level,    :status, 0, 0, :bind1, :bind2)

000000008B29B450
insert into WRM$_SNAPSHOT   (snap_id, dbid, instance_number, startup_time,    begin_interval_time, end_interval_time, snap_level,    st
atus, error_count, bl_moved, snap_flag, snap_timezone)  values   (:snap_id, :dbid, :instance_number, :startup_time,    :begin_interval_
time, :end_interval_time, :snap_level,    :status, 0, 0, :bind1, :bind2)

0000000092CB74A8 SYS
CDEF$

0000000088C42420
DELETE FROM WWV_FLOW_FILE_OBJECTS$ WHERE SECURITY_GROUP_ID = 0

000000008CBCEBE0
DELETE FROM WWV_FLOW_FILE_OBJECTS$ WHERE SECURITY_GROUP_ID = 0

0000000060F11190
UPDATE STREAMS$_SPLI

000000008C9E3578
82620de95caa63c33eeb8c8237cb4e09

000000008B197718
16adef17c456837c99a0554544d3fd04

000000008B0A10C0
9620cfe1e7966914715f75e388f2943b

0000000060F24320
cd3744da5e17066dd59d0eedbbcee4f7

000000008C9F8E08 SYS
DBMS_SQLTUNE_INTERNAL

000000008CAEEBF8
668ebaf36def463c196f4700a545800f

000000008C8C5A68
69c48a539aead8ecadec718dadfa46dd

000000008CBC91A8
delete from WRH$_SEG_STAT_OBJ tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060F56740
delete from WRH$_SEG_STAT_OBJ tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060D68E38
cb87c155ccf5baeb795113ddb9af199f

000000008B22F300 $BUILD$
e36a87ec109bb8c6

000000008B0E47A8
SELECT 0 FROM RLM$SC

0000000060D084B8
64a9b25f5f0fa5e1181ff934658402aa

0000000088E2B4A8
/* SQL Analyze(1) */

0000000060ECB470
2b6e9a77a817225f9ce1989c13ecbcd6

000000008CBDDB40
9faa9fdd35b1cdd759e02d8756a6d8c4

000000008B224620 $BUILD$
ca41fa5c 7171301

0000000092C6CE30 APEX_030200
WWV_FLOW_PLATFORM

000000008B399120
b1b863b41909ea0594ccf96f501d083

0000000088E09988
alter session set ma

000000008B2AE2A8 SYS
UTL_URL

0000000092D3CC40
47adc09c34f78c2d121b6c5e5863a0fe

0000000088CEEA68 SYS
V$ACTIVE_SESSION_HISTORY

0000000088FF94E0
INSERT INTO EXF$ATTR

0000000092C3D178
346f70cda3227d855a05d824c5417817

0000000060E26360
select substrb(dump(

000000008C8577F0
select substrb(dump(

0000000060D5ED28 SYS
V$ASM_DISK

0000000060CCE410 SYS
V$ENABLEDPRIVS

0000000088E7C480 SYS
DBMS_PRVTAQIP

00000000653B05B0
select substrb(dump(

0000000060F22A40
eafe294e48cbb8071e361ae98c64c641

000000008B076AD0
SELECT /*+ ordered i

000000008CB78CC8 PUBLIC
DBMS_LOB

0000000060D22C28
c25f40e6c301b03a299d5d03e60d836

0000000060D56148
1797413f9f118a43dcc524d263115a24

000000008C8C55F8
SELECT COUNT(*) FROM

00000000652BA440 SYS
DBMS_SYS_SQL

000000008CA0A9C0 SYS
TABCOMPARTV$

000000006534FF80 SYS
DBMS_METADATA

000000008CBFB570
SELECT ON_DUP_SUBMIS

0000000088C90E88
INSERT INTO WRI$_SQL

000000008B1A52B8
16adef17c456837c99a0554544d3fd04

000000008B054E80
SELECT BITAND(FLAGS,

0000000060F0B680
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S")  */ 1 AS C1 FROM SYS."SUM$" "S"
 WHERE (BITAND("S"."XPFLAGS",8388608)=8388608)) innerQuery

0000000060F0B7F0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "S")  */ 1 AS C1 FROM SYS."SUM$" "S"
 WHERE (BITAND("S"."XPFLAGS",8388608)=8388608)) innerQuery

0000000088E229D8 PUBLIC
V$BUFFER_POOL

0000000060FCF458
bd4ef297442ccf3bcecd45ab1121337a

0000000088C9FC88
SELECT * FROM DBA_AD

0000000060E66390
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000060CC2578
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000060F49E20
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

0000000060F2D710
select         /*+ ordered */         bp.name as pool_name,         u.username as username,         ob.name as object_name,         ob.
subname as sub_name,         decode(ob.type#,          0,'NEXT OBJECT',1,'INDEX',2,'TABLE',3, 'CLUSTER',4,'VIEW',5, 'SYNONYM',
 6,'SEQUENCE',7, 'PROCEDURE',8, 'FUNCTION',9, 'PACKAGE',11, 'PACKAGE BODY',12, 'TRIGGER',13, 'TYPE',          14,'TYPE BODY',19, 'TABLE
 PARTITION', 20, 'INDEX PARTITION', 21, 'LOB',          22,'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE',28, 'JAVA SOURCE', 29, 'JAVA CLASS',
 30,'JAVA RESOURCE',          32,'INDEXTYPE',33, 'OPERATOR',34,'TABLE SUBPARTITION',35,'INDEX SUBPARTITION',40,'LOB PARTITION', 41, 'LO
B SUBPARTITION',          43, 'DIMENSION',          44, 'CONTEXT', 46, 'RULE SET', 47, 'RESOURCE PLAN',          48, 'CONSUMER GROUP',
         51, 'SUBSCRIPTION', 52, 'LOCATION',          55, 'XML SCHEMA', 56, 'JAVA DATA',          57, 'SECURITY PROFILE', 59, 'RULE',
        60, 'CAPTURE', 61, 'APPLY',          62, 'EVALU

000000008CBC8A58 SYS
DBMS_RULE_ADM

0000000060D64DC8
/* SQL Analyze(1) */

000000008C8C67A8
select inst_id, ksurlmnm, ksurlmcv, ksurlmmv,  LPAD(decode(bitand(ksurlmfg, 1), 0, to_char(ksurlmia), 'UNLIMITED'),10),  LPAD(decode(bi
tand(ksurlmfg, 2), 0, to_char(ksurlmlv), 'UNLIMITED'),10) from x$ksurlmt

000000008B10DDA8
select inst_id, ksurlmnm, ksurlmcv, ksurlmmv,  LPAD(decode(bitand(ksurlmfg, 1), 0, to_char(ksurlmia), 'UNLIMITED'),10),  LPAD(decode(bi
tand(ksurlmfg, 2), 0, to_char(ksurlmlv), 'UNLIMITED'),10) from x$ksurlmt

000000008CA48A48
SELECT THREAD#, SEQU

0000000092D81CE8 SYS
GV$SGA

0000000092C6E670 SYS
WRM$_SNAPSHOT

000000008B0D9D08
insert into sys.scheduler$_job (program_oid, schedule_expr, schedule_id, queue_owner, queue_name, queue_agent, event_rule, mxdur_msgid,
 last_enabled_time, class_oid, next_run_date, last_start_date, last_end_date, retry_count, run_count, failure_count, running_instance,
running_slave, flags, job_status, creator, client_id, guid, char_env, start_date, end_date, instance_id, fw_name, fw_oid, destination,
credential_name, credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker, program_action, schedule_limit, priority, job_we
ight, number_of_args, max_runs, max_failures, max_run_duration, comments, user_callback, user_callback_ctx, nls_env, source, env, datab
ase_role, owner_udn, dist_flags, obj#) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :2
0, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :4
7, :48, :49, :50, :51, :52, :53, :54)

0000000088DE8BE8
insert into sys.scheduler$_job (program_oid, schedule_expr, schedule_id, queue_owner, queue_name, queue_agent, event_rule, mxdur_msgid,
 last_enabled_time, class_oid, next_run_date, last_start_date, last_end_date, retry_count, run_count, failure_count, running_instance,
running_slave, flags, job_status, creator, client_id, guid, char_env, start_date, end_date, instance_id, fw_name, fw_oid, destination,
credential_name, credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker, program_action, schedule_limit, priority, job_we
ight, number_of_args, max_runs, max_failures, max_run_duration, comments, user_callback, user_callback_ctx, nls_env, source, env, datab

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
ase_role, owner_udn, dist_flags, obj#) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :2
0, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :4
7, :48, :49, :50, :51, :52, :53, :54)

000000008B117348
insert into sys.scheduler$_job (program_oid, schedule_expr, schedule_id, queue_owner, queue_name, queue_agent, event_rule, mxdur_msgid,
 last_enabled_time, class_oid, next_run_date, last_start_date, last_end_date, retry_count, run_count, failure_count, running_instance,
running_slave, flags, job_status, creator, client_id, guid, char_env, start_date, end_date, instance_id, fw_name, fw_oid, destination,
credential_name, credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker, program_action, schedule_limit, priority, job_we
ight, number_of_args, max_runs, max_failures, max_run_duration, comments, user_callback, user_callback_ctx, nls_env, source, env, datab
ase_role, owner_udn, dist_flags, obj#) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :2
0, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :4
7, :48, :49, :50, :51, :52, :53, :54)

0000000088C66550
insert into sys.scheduler$_job (program_oid, schedule_expr, schedule_id, queue_owner, queue_name, queue_agent, event_rule, mxdur_msgid,
 last_enabled_time, class_oid, next_run_date, last_start_date, last_end_date, retry_count, run_count, failure_count, running_instance,
running_slave, flags, job_status, creator, client_id, guid, char_env, start_date, end_date, instance_id, fw_name, fw_oid, destination,
credential_name, credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker, program_action, schedule_limit, priority, job_we
ight, number_of_args, max_runs, max_failures, max_run_duration, comments, user_callback, user_callback_ctx, nls_env, source, env, datab
ase_role, owner_udn, dist_flags, obj#) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :2
0, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :4
7, :48, :49, :50, :51, :52, :53, :54)

000000008CB87438
insert into sys.scheduler$_job (program_oid, schedule_expr, schedule_id, queue_owner, queue_name, queue_agent, event_rule, mxdur_msgid,
 last_enabled_time, class_oid, next_run_date, last_start_date, last_end_date, retry_count, run_count, failure_count, running_instance,
running_slave, flags, job_status, creator, client_id, guid, char_env, start_date, end_date, instance_id, fw_name, fw_oid, destination,
credential_name, credential_owner, credential_oid, dest_oid, job_dest_id, run_invoker, program_action, schedule_limit, priority, job_we
ight, number_of_args, max_runs, max_failures, max_run_duration, comments, user_callback, user_callback_ctx, nls_env, source, env, datab
ase_role, owner_udn, dist_flags, obj#) values (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :2
0, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30, :31, :32, :33, :34, :35, :36, :37, :38, :39, :40, :41, :42, :43, :44, :45, :46, :4
7, :48, :49, :50, :51, :52, :53, :54)

0000000088D33B28
162c840a1e894403a13cdee5865e5312

0000000060E7F8B0
UPDATE WRI$_ADV_ACTI

000000008CBE3A28
select col#,intcol#,charsetid,charsetform from col$ where obj#=:1 order by intcol# asc

0000000088D08E08
select col#,intcol#,charsetid,charsetform from col$ where obj#=:1 order by intcol# asc

0000000088C69E00
select col#,intcol#,charsetid,charsetform from col$ where obj#=:1 order by intcol# asc

000000008B2D5890
select col#,intcol#,charsetid,charsetform from col$ where obj#=:1 order by intcol# asc

000000008CBE3EA8
select col#,intcol#,charsetid,charsetform from col$ where obj#=:1 order by intcol# asc

0000000060D75188
8b281473c5f8b2605e15dd9e8b1ca888

0000000088EA3790 SYS
WRH$_WAITSTAT

0000000088EFA3A8
9d83e1a6e627684ecd5c66ffe5910cb

0000000088F80238
select substrb(dump(

0000000088FDEA78
847dd948a0ba43328868eea46d16545c

0000000060E9A590
/* SQL Analyze(1) */

000000008CBFC440 SYS
DBA_APPLY

000000008B04B830
DELETE FROM SYS.COL_

000000008C933840
select substrb(dump(

000000008B385980 $BUILD$
604fe3c5169f2854

0000000088EDBCD0 SYS
WRH$_FILESTATXS

0000000060E21030 SYS
AW$

000000008CB48FF8
14a2977ca30770fdbd8cabb130d669c1

0000000065338550 SYS
KU$_JAVA_T

0000000060F84C40
2949183698476655663

0000000088CECEC8 SYS
GV$SQLAREA_PLAN_HASH

000000008B15A638 APEX_030200
WWV_FLOW_LIST

0000000060DDDFB8
6a16eb53e1982ae084e1bf202d6174e

000000008B233270
SELECT obj_type, plan_id, description, creator, origin,                              created, last_modified
                     FROM sqlobj$auxdata                                                           WHERE signature = :1
                                                AND category = :2

0000000060DD58A8
SELECT obj_type, plan_id, description, creator, origin,                              created, last_modified
                     FROM sqlobj$auxdata                                                           WHERE signature = :1
                                                AND category = :2

0000000060DABCD8 XDB
DBMS_XDBZ

0000000060ED2F20
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0A9470
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F87758
95b5a1b338f6fd36ad87da1f83fb2e52

0000000092D1A4F8
e2053296639a93f0ef456252eee8789a

000000008B136188
update sys.scheduler$_job set  user_callback = :1, dist_flags = :2 where  obj# = :3

0000000092CF7618
update sys.scheduler$_job set  user_callback = :1, dist_flags = :2 where  obj# = :3

000000008B291050
update sys.scheduler$_job set  user_callback = :1, dist_flags = :2 where  obj# = :3

0000000088D6CF20
update sys.scheduler$_job set  user_callback = :1, dist_flags = :2 where  obj# = :3

0000000088FE3AD0
select /*+  no_paral

000000008B179B20
SELECT ORA_TQ_BASE$.NEXTVAL FROM DUAL

000000008B074110
SELECT ORA_TQ_BASE$.NEXTVAL FROM DUAL

0000000092D65A28 SYS
Generic

000000008B1D26E8
1d029fd8290843508140fc1f79187f

000000008B082CB0
SELECT PO.SUBNAME PN

000000008B3971F8
c5eeb901222bd92fb95fde8136e254a5

0000000060E25360
SELECT COUNT(*) FROM

0000000092D806B8
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'END_SNAPSHOT'

0000000088FD2358
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'END_SNAPSHOT'

0000000060EA38F0
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'END_SNAPSHOT'

000000008B146338
SELECT DECODE(VALUE, 'UNUSED', NULL, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'END_SNAPSHOT'

00000000652E9350
/* SQL Analyze(1) */

000000008CB9EC68
alter session set nl

000000008C8B2D18
SELECT A.DATABASE_TIME, ( CAST(A.END_TIME AS DATE) - CAST(A.BEGIN_TIME AS DATE) ) * 86400, A.ACTUAL_ANALYSIS, A.PERC_FLUSH_TIME FROM WR
I$_ADV_ADDM_TASKS A WHERE A.TASK_ID = :B1

000000008CB9A188
SELECT A.DATABASE_TIME, ( CAST(A.END_TIME AS DATE) - CAST(A.BEGIN_TIME AS DATE) ) * 86400, A.ACTUAL_ANALYSIS, A.PERC_FLUSH_TIME FROM WR
I$_ADV_ADDM_TASKS A WHERE A.TASK_ID = :B1

000000008B17BFA0
SELECT A.DATABASE_TIME, ( CAST(A.END_TIME AS DATE) - CAST(A.BEGIN_TIME AS DATE) ) * 86400, A.ACTUAL_ANALYSIS, A.PERC_FLUSH_TIME FROM WR
I$_ADV_ADDM_TASKS A WHERE A.TASK_ID = :B1

0000000088F64818
SELECT A.DATABASE_TIME, ( CAST(A.END_TIME AS DATE) - CAST(A.BEGIN_TIME AS DATE) ) * 86400, A.ACTUAL_ANALYSIS, A.PERC_FLUSH_TIME FROM WR
I$_ADV_ADDM_TASKS A WHERE A.TASK_ID = :B1

0000000060F95E90
SELECT A.DATABASE_TIME, ( CAST(A.END_TIME AS DATE) - CAST(A.BEGIN_TIME AS DATE) ) * 86400, A.ACTUAL_ANALYSIS, A.PERC_FLUSH_TIME FROM WR
I$_ADV_ADDM_TASKS A WHERE A.TASK_ID = :B1

0000000060F49410
SELECT A.DATABASE_TIME, ( CAST(A.END_TIME AS DATE) - CAST(A.BEGIN_TIME AS DATE) ) * 86400, A.ACTUAL_ANALYSIS, A.PERC_FLUSH_TIME FROM WR
I$_ADV_ADDM_TASKS A WHERE A.TASK_ID = :B1

0000000092D3C0B8
SELECT A.DATABASE_TIME, ( CAST(A.END_TIME AS DATE) - CAST(A.BEGIN_TIME AS DATE) ) * 86400, A.ACTUAL_ANALYSIS, A.PERC_FLUSH_TIME FROM WR
I$_ADV_ADDM_TASKS A WHERE A.TASK_ID = :B1

000000008CBC6D18
db6eb94c3b88c0b2d8dbb9b42b5153

000000008C8A3570
INSERT INTO RLM$SCHA

0000000088C9C7F8
SELECT EXTRACTVALUE(

000000008B0DA138
869107fdb338c3c08279f961b4cd29d2

000000008B278FA8
6ed6aad4c7bd496b30b849449a54aa3

0000000060F39E00
efb5f1b7771c3dc1aa1e41eb73eafa1c

0000000060F63950
select /*+  no_paral

000000008CBEDA78
alter session set NL

000000008CB630E8
8c994f936679389b2ba0db19ae3134a1

0000000060F0D590
SELECT HOST_NAME FRO

000000008CAB8DA0 SYS
GV$IOSTAT_FUNCTION_DETAIL

000000008B0FE738
4266ad41f92a147ae48039bfb85647c0

000000008C930BF8 SYS
WRI$_ADV_SEQ_TASK

000000008CB62608
SELECT PURPOSE FROM

0000000088EA99A0
438fd9eede601eb232abb93ba31f60ee

000000008CA5BEC8
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"COL" val, ntile(10) o
ver (order by nlssort("COL",'NLS_SORT = binary')) bkt  from "SCOTT"."HASH_TABLE" t  where "COL" is not null) group by val) group by max
bkt order by maxbkt

0000000060F81370
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"COL" val, ntile(10) o
ver (order by nlssort("COL",'NLS_SORT = binary')) bkt  from "SCOTT"."HASH_TABLE" t  where "COL" is not null) group by val) group by max
bkt order by maxbkt

0000000088E9E150
1a1e332b56fbb5d634be7e4bed981d64

0000000088CEEC98 SYS
_ALL_SQLSET_STS_TOPACK

000000008C927C48
SELECT CLEANUP FROM

0000000092CCD768 SYS
UNDO$

0000000092C3F448
ef5a177f241ce02f41b28653c0d366c8

0000000088E22368
SELECT TEMPLATE_BODY

000000008B07DE40
SELECT C.INTCOL# FRO

0000000092D750A8 SYS
X$KGLSIM

0000000088D126D0
18001d59771db203ef06d0b8aba0f2e6

000000008C8AB890
bdc456cae04c3f9e11d293322ff9cd1

000000008CBADFB8
select substrb(dump(

0000000060E7E8A0
DELETE FROM SYS.AQ$_

000000008CB5CE60
SELECT NVL(SUM(IMPAC

0000000088C5FA48
delete /*+ index(m) */ from sys.mon_mods$ m where obj# = :1

000000008CA452D0
delete /*+ index(m) */ from sys.mon_mods$ m where obj# = :1

0000000088E92260
delete /*+ index(m) */ from sys.mon_mods$ m where obj# = :1

0000000088E7F9A0
delete /*+ index(m) */ from sys.mon_mods$ m where obj# = :1

0000000088C5FEC8
delete /*+ index(m) */ from sys.mon_mods$ m where obj# = :1

000000008CAF3228
SELECT ALIAS FROM WW

000000008C857FB0
8fb12607aa69c005c0c99213410588f

0000000088C91628
DELETE WRI$_SQLSET_S

0000000088F6DBE0
c26ffde79a82fb76cb665c4a453ea55

000000008B354FD0 SYS
AUDSES$

0000000088F04568
96dda3773d9f9b93b8a21d135f9f0ab5

000000008B392800
1221de747902965363a7a4b3df7f345b

0000000060CBAFB8
2c9996701a33a4a61060771b82763343

0000000088EF0150 SYS
WRH$_SEG_STAT_PK

000000008C94CC80 SYS
WRI$_SCH_CONTROL

000000008CA4EEC0
UPDATE RLM$JOBQUEUE

000000008CA2BB30
9922594484807840074

000000008CBE68F8 SYS
LOB$

0000000060D5F848 $BUILD$
 d61101269ce2350

0000000065343F80 SYS
SUMDELTA$

0000000088C8C688
UPDATE WRI$_SQLSET_M

0000000092CB49D8
52cdc05399e55f257edaf456f0dbeddc

0000000065344290
b3b153cb724e9d98c323ecf4aa5e8c03

000000008C95B8E0 $BUILD$
5acca4e3a96f3298

000000008B20C518
delete from WRH$_IOSTAT_FUNCTION tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F6CC58
delete from WRH$_IOSTAT_FUNCTION tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060E56800
7c0bb1033285e507df03ddafb42e317b

0000000092C695C8
select intcol#,nvl(pos#,0),col#,nvl(spare1,0) from ccol$ where con#=:1

0000000088D61558
select intcol#,nvl(pos#,0),col#,nvl(spare1,0) from ccol$ where con#=:1

0000000088CF92B8
select intcol#,nvl(pos#,0),col#,nvl(spare1,0) from ccol$ where con#=:1

000000008C8547B8
select intcol#,nvl(pos#,0),col#,nvl(spare1,0) from ccol$ where con#=:1

000000008CB88FF8
select intcol#,nvl(pos#,0),col#,nvl(spare1,0) from ccol$ where con#=:1

0000000092C69A48
select intcol#,nvl(pos#,0),col#,nvl(spare1,0) from ccol$ where con#=:1

0000000088C57078 SYS
V$LOG

0000000088F9B2D8 SYS
GV$INSTANCE_RECOVERY

0000000088EC9980
select substrb(dump(

000000008CA7AF10
SELECT MAX(ID) FROM

000000008CAA3A00
select substrb(dump(

000000008CA5B368
SELECT O.* FROM DBA_

0000000088CBD640
UPDATE WWV_FLOW_DATA

0000000060CF9AD8
select substrb(dump(

0000000060C42370
SELECT DECODE(VALUE,

0000000060FDCA20
/* SQL Analyze(1) */

0000000092CAC878
13004318801199644986

0000000060F085F0
select substrb(dump(

000000008B1B6130
b05e67c3d1cedcd7f0019112b19bf1c

000000008B0DAD78
db6eb94c3b88c0b2d8dbb9b42b5153

000000008CBE2340
UPDATE SYS.SCHEDULER

0000000088CACA78
call dbms_scheduler.auto_purge (  )

000000008C95CE80
call dbms_scheduler.auto_purge (  )

000000008C8C11B8
UPDATE SYS.SCHEDULER

000000008B054140
SELECT COUNT(*) FROM

000000008C890970
15bd54d0299ee8bf14305e5955148539

0000000060F55CC0
9ee4fc3d598982d11851fc8c1f88ca49

0000000088ED4840
SELECT PRESTTRIG, DM

000000008C9D15A0
70b4a137ede8bb306b3d29639e234b8b

000000008B1FADB0
delete from WRH$_LATCH_CHILDREN_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F0D138
delete from WRH$_LATCH_CHILDREN_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B0C7FC8
9093e05fceefb63112b0e104de08dc14

000000008CB11688
select CONNECTION_POOL_NAME, STATUS, MINSIZE, MAXSIZE,           INCRSIZE, SESSION_CACHED_CURSORS, INACTIVITY_TIMEOUT,           MAX_TH
INK_TIME, MAX_USE_SESSION, MAX_LIFETIME_SESSION,           NUM_CBROK, MAXCONN_CBROK    from cpool$ where STATUS = :1

000000008CB11B08
select CONNECTION_POOL_NAME, STATUS, MINSIZE, MAXSIZE,           INCRSIZE, SESSION_CACHED_CURSORS, INACTIVITY_TIMEOUT,           MAX_TH
INK_TIME, MAX_USE_SESSION, MAX_LIFETIME_SESSION,           NUM_CBROK, MAXCONN_CBROK    from cpool$ where STATUS = :1

0000000088D25470 SYS
V$SHARED_SERVER

000000008CAA3D70
SELECT ID FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND BITAND(A.PROPERTY, :B2 ) = :B2 AND A.OWNER# = :B1

000000008B343FF0
SELECT ID FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND BITAND(A.PROPERTY, :B2 ) = :B2 AND A.OWNER# = :B1

0000000088DD1438
SELECT ID FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND BITAND(A.PROPERTY, :B2 ) = :B2 AND A.OWNER# = :B1

0000000092C3EA28
SELECT ID FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND BITAND(A.PROPERTY, :B2 ) = :B2 AND A.OWNER# = :B1

000000008CB18A40
SELECT ID FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND BITAND(A.PROPERTY, :B2 ) = :B2 AND A.OWNER# = :B1

0000000088D552A0
SELECT ID FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND BITAND(A.PROPERTY, :B2 ) = :B2 AND A.OWNER# = :B1

000000008C916B38
SELECT ID FROM SYS.WRI$_ADV_TASKS A WHERE A.NAME = :B3 AND BITAND(A.PROPERTY, :B2 ) = :B2 AND A.OWNER# = :B1

000000008B3D3478
SELECT count(*) FROM

000000008C9FBAF8
SELECT TABLE_NAME FR

0000000088CFBCA0
7c140974b656fe9a397b9479461733ba

000000008CA00038
37e228e7d4405a032d915fb87f224cd4

000000008CBEA3F8
select intcol#, toid, version#, intcols, intcol#s, flags, synobj# from subcoltype$ where obj#=:1 order by intcol# asc

0000000088D0E020
select intcol#, toid, version#, intcols, intcol#s, flags, synobj# from subcoltype$ where obj#=:1 order by intcol# asc

0000000088C6B340
select intcol#, toid, version#, intcols, intcol#s, flags, synobj# from subcoltype$ where obj#=:1 order by intcol# asc

0000000088D78C98
select intcol#, toid, version#, intcols, intcol#s, flags, synobj# from subcoltype$ where obj#=:1 order by intcol# asc

000000008CBEA878
select intcol#, toid, version#, intcols, intcol#s, flags, synobj# from subcoltype$ where obj#=:1 order by intcol# asc

0000000060CD4680
3bdfc7eaad501f41344e9f5774f53f1c

0000000065346520
f4fb20e8b6555b12c8a94804830dd581

000000008B3334B8
SELECT INST_ID,DEST_NAME, DECODE(REGEXP_SUBSTR(DESTINATION,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|
([1-9]?\d)))'),NULL,'None', REGEXP_SUBSTR(DESTINATION,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|([1-9
]?\d)))')) AS DESTINATION, DECODE(ERROR,NULL,'None',ERROR) AS ERROR FROM GV$ARCHIVE_DEST WHERE DESTINATION IS NOT NULL ORDER BY DEST_ID

0000000060E3BB80
SELECT INST_ID,DEST_NAME, DECODE(REGEXP_SUBSTR(DESTINATION,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|
([1-9]?\d)))'),NULL,'None', REGEXP_SUBSTR(DESTINATION,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|([1-9
]?\d)))')) AS DESTINATION, DECODE(ERROR,NULL,'None',ERROR) AS ERROR FROM GV$ARCHIVE_DEST WHERE DESTINATION IS NOT NULL ORDER BY DEST_ID

0000000092C71DE8
select i.obj#,i.ts#,i.file#,i.block#,i.intcols,i.type#,i.flags,i.property,i.pctfree$,i.initrans,i.maxtrans,i.blevel,i.leafcnt,i.distkey
,i.lblkkey,i.dblkkey,i.clufac,i.cols,i.analyzetime,i.samplesize,i.dataobj#,nvl(i.degree,1),nvl(i.instances,1),i.rowcnt,mod(i.pctthres$,
256),i.indmethod#,i.trunccnt,nvl(c.unicols,0),nvl(c.deferrable#+c.valid#,0),nvl(i.spare1,i.intcols),i.spare4,i.spare2,i.spare6,decode(i
.pctthres$,null,null,mod(trunc(i.pctthres$/256),256)),ist.cachedblk,ist.cachehit,ist.logicalread from ind$ i, ind_stats$ ist, (select e
nabled, min(cols) unicols,min(to_number(bitand(defer,1))) deferrable#,min(to_number(bitand(defer,4))) valid# from cdef$ where obj#=:1 a
nd enabled > 1 group by enabled) c where i.obj#=c.enabled(+) and i.obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

0000000092C5EC70
select i.obj#,i.ts#,i.file#,i.block#,i.intcols,i.type#,i.flags,i.property,i.pctfree$,i.initrans,i.maxtrans,i.blevel,i.leafcnt,i.distkey
,i.lblkkey,i.dblkkey,i.clufac,i.cols,i.analyzetime,i.samplesize,i.dataobj#,nvl(i.degree,1),nvl(i.instances,1),i.rowcnt,mod(i.pctthres$,
256),i.indmethod#,i.trunccnt,nvl(c.unicols,0),nvl(c.deferrable#+c.valid#,0),nvl(i.spare1,i.intcols),i.spare4,i.spare2,i.spare6,decode(i
.pctthres$,null,null,mod(trunc(i.pctthres$/256),256)),ist.cachedblk,ist.cachehit,ist.logicalread from ind$ i, ind_stats$ ist, (select e
nabled, min(cols) unicols,min(to_number(bitand(defer,1))) deferrable#,min(to_number(bitand(defer,4))) valid# from cdef$ where obj#=:1 a
nd enabled > 1 group by enabled) c where i.obj#=c.enabled(+) and i.obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

0000000092CDB0F8
select i.obj#,i.ts#,i.file#,i.block#,i.intcols,i.type#,i.flags,i.property,i.pctfree$,i.initrans,i.maxtrans,i.blevel,i.leafcnt,i.distkey
,i.lblkkey,i.dblkkey,i.clufac,i.cols,i.analyzetime,i.samplesize,i.dataobj#,nvl(i.degree,1),nvl(i.instances,1),i.rowcnt,mod(i.pctthres$,
256),i.indmethod#,i.trunccnt,nvl(c.unicols,0),nvl(c.deferrable#+c.valid#,0),nvl(i.spare1,i.intcols),i.spare4,i.spare2,i.spare6,decode(i
.pctthres$,null,null,mod(trunc(i.pctthres$/256),256)),ist.cachedblk,ist.cachehit,ist.logicalread from ind$ i, ind_stats$ ist, (select e
nabled, min(cols) unicols,min(to_number(bitand(defer,1))) deferrable#,min(to_number(bitand(defer,4))) valid# from cdef$ where obj#=:1 a
nd enabled > 1 group by enabled) c where i.obj#=c.enabled(+) and i.obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

000000008CB83EC8
select i.obj#,i.ts#,i.file#,i.block#,i.intcols,i.type#,i.flags,i.property,i.pctfree$,i.initrans,i.maxtrans,i.blevel,i.leafcnt,i.distkey
,i.lblkkey,i.dblkkey,i.clufac,i.cols,i.analyzetime,i.samplesize,i.dataobj#,nvl(i.degree,1),nvl(i.instances,1),i.rowcnt,mod(i.pctthres$,
256),i.indmethod#,i.trunccnt,nvl(c.unicols,0),nvl(c.deferrable#+c.valid#,0),nvl(i.spare1,i.intcols),i.spare4,i.spare2,i.spare6,decode(i
.pctthres$,null,null,mod(trunc(i.pctthres$/256),256)),ist.cachedblk,ist.cachehit,ist.logicalread from ind$ i, ind_stats$ ist, (select e
nabled, min(cols) unicols,min(to_number(bitand(defer,1))) deferrable#,min(to_number(bitand(defer,4))) valid# from cdef$ where obj#=:1 a
nd enabled > 1 group by enabled) c where i.obj#=c.enabled(+) and i.obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

0000000065358790
select i.obj#,i.ts#,i.file#,i.block#,i.intcols,i.type#,i.flags,i.property,i.pctfree$,i.initrans,i.maxtrans,i.blevel,i.leafcnt,i.distkey
,i.lblkkey,i.dblkkey,i.clufac,i.cols,i.analyzetime,i.samplesize,i.dataobj#,nvl(i.degree,1),nvl(i.instances,1),i.rowcnt,mod(i.pctthres$,
256),i.indmethod#,i.trunccnt,nvl(c.unicols,0),nvl(c.deferrable#+c.valid#,0),nvl(i.spare1,i.intcols),i.spare4,i.spare2,i.spare6,decode(i
.pctthres$,null,null,mod(trunc(i.pctthres$/256),256)),ist.cachedblk,ist.cachehit,ist.logicalread from ind$ i, ind_stats$ ist, (select e
nabled, min(cols) unicols,min(to_number(bitand(defer,1))) deferrable#,min(to_number(bitand(defer,4))) valid# from cdef$ where obj#=:1 a
nd enabled > 1 group by enabled) c where i.obj#=c.enabled(+) and i.obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

0000000092C72268
select i.obj#,i.ts#,i.file#,i.block#,i.intcols,i.type#,i.flags,i.property,i.pctfree$,i.initrans,i.maxtrans,i.blevel,i.leafcnt,i.distkey
,i.lblkkey,i.dblkkey,i.clufac,i.cols,i.analyzetime,i.samplesize,i.dataobj#,nvl(i.degree,1),nvl(i.instances,1),i.rowcnt,mod(i.pctthres$,
256),i.indmethod#,i.trunccnt,nvl(c.unicols,0),nvl(c.deferrable#+c.valid#,0),nvl(i.spare1,i.intcols),i.spare4,i.spare2,i.spare6,decode(i
.pctthres$,null,null,mod(trunc(i.pctthres$/256),256)),ist.cachedblk,ist.cachehit,ist.logicalread from ind$ i, ind_stats$ ist, (select e
nabled, min(cols) unicols,min(to_number(bitand(defer,1))) deferrable#,min(to_number(bitand(defer,4))) valid# from cdef$ where obj#=:1 a
nd enabled > 1 group by enabled) c where i.obj#=c.enabled(+) and i.obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#

000000008CBEB738
select col#,intcol#,toid,version#,packed,intcols,intcol#s,flags, synobj#, nvl(typidcol#, 0) from coltype$ where obj#=:1 order by intcol
# desc

0000000088D0F8B8
select col#,intcol#,toid,version#,packed,intcols,intcol#s,flags, synobj#, nvl(typidcol#, 0) from coltype$ where obj#=:1 order by intcol
# desc

0000000088C6B890
select col#,intcol#,toid,version#,packed,intcols,intcol#s,flags, synobj#, nvl(typidcol#, 0) from coltype$ where obj#=:1 order by intcol
# desc

0000000088D91C78
select col#,intcol#,toid,version#,packed,intcols,intcol#s,flags, synobj#, nvl(typidcol#, 0) from coltype$ where obj#=:1 order by intcol
# desc

000000008CBEBBB8
select col#,intcol#,toid,version#,packed,intcols,intcol#s,flags, synobj#, nvl(typidcol#, 0) from coltype$ where obj#=:1 order by intcol
# desc

0000000088CAF838
delete from sys.mon_mods$

000000008CAF8EE8
delete from sys.mon_mods$

0000000088F87958
delete from sys.mon_mods$

0000000088FCE6A8
delete from sys.mon_mods$

0000000060E5D140
delete from sys.mon_mods$

0000000060D22AB8
delete from sys.mon_mods$

0000000088E10478
delete from sys.mon_mods$

0000000060ED3810
delete from sys.mon_mods$

0000000060D92540
delete from sys.mon_mods$

000000008B3D5708
delete from sys.mon_mods$

000000008B2ADEE8
delete from sys.mon_mods$

000000008CA2DD60
delete from sys.mon_mods$

0000000088CAFCB8
delete from sys.mon_mods$

0000000088D04000
3b23e99f4c8dbdc6f84030a5215b4fc

00000000653C0760
select substrb(dump(

000000008C9D55D8
select substrb(dump(

0000000060F35AC0
2adc339680adc46ae7b3746380a5a5b0

000000008CB5C7B0
5df1ec207593e70137ca6881d08d2787

0000000060EF15B0
SELECT O.TYPE# FROM

000000008C913738
INSERT INTO WRI$_ADV

0000000060FE9560
select substrb(dump(

000000008C91BA88
SELECT D.PROPERTY FR

000000008B0B8720
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0BC328
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B2201F0
INSERT INTO sql$ (signature, inuse_features, flags, spare1, spare2)           VALUES (:1, :2, :3, null, null)

0000000060EC8610
INSERT INTO sql$ (signature, inuse_features, flags, spare1, spare2)           VALUES (:1, :2, :3, null, null)

0000000088DF66D8
INSERT INTO sql$ (signature, inuse_features, flags, spare1, spare2)           VALUES (:1, :2, :3, null, null)

0000000060DE9C30
INSERT INTO sql$ (signature, inuse_features, flags, spare1, spare2)           VALUES (:1, :2, :3, null, null)

0000000092D6FDC8 SYS
SCHEDULER_DISABLED

000000008B1F6B60
SELECT NVL(MIN(GRSP.

0000000092D18FB8
INSERT INTO RLM$PRIM

000000008B04CF00
SELECT COUNT(*) FROM

000000008B07CA50
SELECT O.SUBNAME PAR

0000000060E2D090
/* SQL Analyze(1) */

000000008B3A2090
1717472059085521267

000000008B047140 $BUILD$
215c8b595ed5aba6

0000000092D4BDF0
c25f40e6c301b03a299d5d03e60d836

0000000092D0A008
c25f40e6c301b03a299d5d03e60d836

000000008B310D80
e5b3110bf9b8e230224045a2509e958d

0000000088F41F28 SYS
X$BH

000000008C9280F8
SELECT * FROM SYS.WR

0000000088EA0C10 SYS
V$SQL_BIND_CAPTURE

0000000088D97930
SELECT ID FROM WWV_F

0000000088E3B768 SYS
WRH$_SYSSTAT

0000000060FDC820
28e018c6fdc2a76f345e78fa5f40bb88

0000000088FC9588
 SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
       null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
              'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'M
LSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NUL
L',               'n','NOT NULL',               NULL) col,  B.NUM_ROWS,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.N
UM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A.NUM_BUCKETS,  T.NUM_DISTINCT,  T.DENSITY,  T.NUM_BUCKETS,  T.NUM_NULLS,
  T.GLOBAL_STATS,  T.USER_STATS,  T.SAMPLE_SIZE,  to_char(T.last_analyzed,'YYYYMMDD HH24:MI:SS')   FROM DBA_TAB_COL_STATISTICS A, DBA_T
ABLES B,dba_tab_columns T  WHERE A.OWNER = B.OWNER and

000000008CB528F0
 SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
       null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
              'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'M
LSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NUL
L',               'n','NOT NULL',               NULL) col,  B.NUM_ROWS,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.N
UM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A.NUM_BUCKETS,  T.NUM_DISTINCT,  T.DENSITY,  T.NUM_BUCKETS,  T.NUM_NULLS,
  T.GLOBAL_STATS,  T.USER_STATS,  T.SAMPLE_SIZE,  to_char(T.last_analyzed,'YYYYMMDD HH24:MI:SS')   FROM DBA_TAB_COL_STATISTICS A, DBA_T
ABLES B,dba_tab_columns T  WHERE A.OWNER = B.OWNER and

0000000060CA28F0
c25f40e6c301b03a299d5d03e60d836

0000000060EFB670
a5874278df1163c7541962d36c66ae8f

0000000088C77720
bd8ff7f116095cd04f07c4184237ed0e

0000000088E0F638
SELECT SET_COUNT FRO

00000000652E3B70
select     INDEX_NAME,     BLEVEL BLev,     LEAF_BLOCKS,     DISTINCT_KEYS,     NUM_ROWS,     AVG_LEAF_BLOCKS_PER_KEY,     AVG_DATA_BLO
CKS_PER_KEY,     CLUSTERING_FACTOR,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_indexes t where     table_n
ame = :table_name and table_owner = :owner

00000000652F5C20
select     INDEX_NAME,     BLEVEL BLev,     LEAF_BLOCKS,     DISTINCT_KEYS,     NUM_ROWS,     AVG_LEAF_BLOCKS_PER_KEY,     AVG_DATA_BLO
CKS_PER_KEY,     CLUSTERING_FACTOR,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_indexes t where     table_n
ame = :table_name and table_owner = :owner

0000000092C82AE8 SYS
DEPENDENCY$

0000000088E58638
select cache#,type,subordinate#,parameter,count,usage,fixed, gets,fastgets,getmisses,scans,scanmisses,scancompletes,modifications,flush
es,dlm_requests,dlm_conflicts,dlm_releases from gv$rowcache where inst_id = USERENV('Instance')

0000000088C34068
select cache#,type,subordinate#,parameter,count,usage,fixed, gets,fastgets,getmisses,scans,scanmisses,scancompletes,modifications,flush
es,dlm_requests,dlm_conflicts,dlm_releases from gv$rowcache where inst_id = USERENV('Instance')

000000008C88D3C0
UPDATE SYS.WRI$_SEGADV_CNTRLTAB SET END_TIME = CURRENT_TIMESTAMP WHERE AUTO_TASKID = :B1

000000008B0347A8
UPDATE SYS.WRI$_SEGADV_CNTRLTAB SET END_TIME = CURRENT_TIMESTAMP WHERE AUTO_TASKID = :B1

000000008C8894C8
UPDATE SYS.WRI$_SEGADV_CNTRLTAB SET END_TIME = CURRENT_TIMESTAMP WHERE AUTO_TASKID = :B1

0000000088E1A780
UPDATE SYS.WRI$_SEGADV_CNTRLTAB SET END_TIME = CURRENT_TIMESTAMP WHERE AUTO_TASKID = :B1

000000008CA142C8
7073e46e955154b93b271902cf87cee2

0000000088F9F8C8
SELECT ID FROM WWV_F

0000000092D58978
select     COLUMN_NAME,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col,     NUM_DISTINCT,     round(100 * DENSITY,2),     NUM_BUCKETS,     NUM_NULLS,
     GLOBAL_STATS,     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tab_columns t where     table_na
me = :table_name and owner = upper(nvl(:owner,user))

0000000088D39EE8
select     COLUMN_NAME,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col,     NUM_DISTINCT,     round(100 * DENSITY,2),     NUM_BUCKETS,     NUM_NULLS,
     GLOBAL_STATS,     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tab_columns t where     table_na
me = :table_name and owner = upper(nvl(:owner,user))

0000000088CFF1E0 SYS
DBA_STREAMS_ADMINISTRATOR

000000008CAA8BC8
1be7c881bbf0803e8d7b1f542f93bd78

0000000060DCDD38
63fbae574ecdad5efec5f59299349c6a

000000008B1F40D0
f3352b417589ba0c9a23ac1849d6cc19

000000008B374868
select min(minbkt),m

000000008B048BB0 PUBLIC
DBMS_SESSION

000000008B1700A0
67e778ea1f8699cf7e71a9fc57b7be70

0000000092CC1278 SYS
WRI$_ADV_DIRECTIVE_META

000000008C870F98
9fe4e0239cc520782558100be5ce93bd

000000008CBF3560
SELECT RSET_ORDRCL F

0000000088DE4378 $BUILD$
f21de4fe9963dec1

000000008CA713D0 $BUILD$
58ac0289da5833db

0000000088E10F48
2de1a286d2ef4b59117739fb1091b04f

000000008C898738
SELECT /*+first_rows

0000000060CF1530
6147071f1323b5eeebcf4abf78c887b

000000008B0C83F8
5bc85d6c27785376bfa21350b9c21116

000000008C927768
SELECT MTIME FROM WR

000000008B3B59C8
SELECT OBJECT_ID FRO

0000000088C8CE28
UPDATE WRI$_SQLSET_M

0000000060E24FF0
SELECT MAX(A.DB_NAME

000000008B3A5068
SELECT MIN(SNAP_ID),

0000000088E274E8
ef5ef2e53811de067daef85a4d52f10

000000008CB5DBD0
93e68bd5f62696436065a5b1b1a56b6

0000000088DE7FA8
3716a2ed21ba1489fe3c484e57db2bf2

000000008CACAEA0
INSERT INTO SYS.WRI$_SEGADV_CNTRLTAB VALUES(:B2 , :B1 , 0, 0, 0, 0, 0, CURRENT_TIMESTAMP, NULL)

0000000060FECA80
INSERT INTO SYS.WRI$_SEGADV_CNTRLTAB VALUES(:B2 , :B1 , 0, 0, 0, 0, 0, CURRENT_TIMESTAMP, NULL)

0000000092C70A50
INSERT INTO SYS.WRI$_SEGADV_CNTRLTAB VALUES(:B2 , :B1 , 0, 0, 0, 0, 0, CURRENT_TIMESTAMP, NULL)

0000000088C46E70
INSERT INTO SYS.WRI$_SEGADV_CNTRLTAB VALUES(:B2 , :B1 , 0, 0, 0, 0, 0, CURRENT_TIMESTAMP, NULL)

000000008B2AF8E8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=1 AND BITAND("O"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" S
AMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

000000008B0E0238
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=1 AND BITAND("O"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" S
AMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

0000000088D5AB28
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=1 AND BITAND("O"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" S
AMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

0000000088F70D40
SELECT INST_ID,LPAD(

0000000092C87698
select pos#,intcol#,col#,spare1,bo#,spare2,spare3 from icol$ where obj#=:1

0000000088D1F9D0
select pos#,intcol#,col#,spare1,bo#,spare2,spare3 from icol$ where obj#=:1

0000000092D84B88
select pos#,intcol#,col#,spare1,bo#,spare2,spare3 from icol$ where obj#=:1

000000008CB84B88
select pos#,intcol#,col#,spare1,bo#,spare2,spare3 from icol$ where obj#=:1

0000000092C87B18
select pos#,intcol#,col#,spare1,bo#,spare2,spare3 from icol$ where obj#=:1

000000008B344990
SELECT PE.PRIM_ATTR,

0000000092CAB568 SYS
V$IR_REPAIR

000000008C931258 SYS
DBMS_LOB

0000000088FE7A60
SELECT DECODE(SUM(BITAND(TRIGFLAG, 67108864)), 67108864, 67108864, 0) + DECODE(SUM(BITAND(TRIGFLAG, 134217728)), 134217728, 134217728,
0) FROM ( SELECT /*+ ordered index(i) use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ# = :B1 AND I.TYPE# !=
3 AND I.BO# = T.OBJ# UNION ALL SELECT /*+ ordered index(i)  use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ#
 = :B1 AND I.TYPE# = 3 AND I.BO# = T.BOBJ# )

000000008B17F930
SELECT DECODE(SUM(BITAND(TRIGFLAG, 67108864)), 67108864, 67108864, 0) + DECODE(SUM(BITAND(TRIGFLAG, 134217728)), 134217728, 134217728,
0) FROM ( SELECT /*+ ordered index(i) use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ# = :B1 AND I.TYPE# !=
3 AND I.BO# = T.OBJ# UNION ALL SELECT /*+ ordered index(i)  use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ#
 = :B1 AND I.TYPE# = 3 AND I.BO# = T.BOBJ# )

000000008B265F88
SELECT DECODE(SUM(BITAND(TRIGFLAG, 67108864)), 67108864, 67108864, 0) + DECODE(SUM(BITAND(TRIGFLAG, 134217728)), 134217728, 134217728,
0) FROM ( SELECT /*+ ordered index(i) use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ# = :B1 AND I.TYPE# !=
3 AND I.BO# = T.OBJ# UNION ALL SELECT /*+ ordered index(i)  use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ#
 = :B1 AND I.TYPE# = 3 AND I.BO# = T.BOBJ# )

000000008C967490
SELECT DECODE(SUM(BITAND(TRIGFLAG, 67108864)), 67108864, 67108864, 0) + DECODE(SUM(BITAND(TRIGFLAG, 134217728)), 134217728, 134217728,
0) FROM ( SELECT /*+ ordered index(i) use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ# = :B1 AND I.TYPE# !=
3 AND I.BO# = T.OBJ# UNION ALL SELECT /*+ ordered index(i)  use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ#
 = :B1 AND I.TYPE# = 3 AND I.BO# = T.BOBJ# )

000000006530B390
SELECT DECODE(SUM(BITAND(TRIGFLAG, 67108864)), 67108864, 67108864, 0) + DECODE(SUM(BITAND(TRIGFLAG, 134217728)), 134217728, 134217728,
0) FROM ( SELECT /*+ ordered index(i) use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ# = :B1 AND I.TYPE# !=
3 AND I.BO# = T.OBJ# UNION ALL SELECT /*+ ordered index(i)  use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ#
 = :B1 AND I.TYPE# = 3 AND I.BO# = T.BOBJ# )

000000008B063210
SELECT DECODE(SUM(BITAND(TRIGFLAG, 67108864)), 67108864, 67108864, 0) + DECODE(SUM(BITAND(TRIGFLAG, 134217728)), 134217728, 134217728,
0) FROM ( SELECT /*+ ordered index(i) use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ# = :B1 AND I.TYPE# !=
3 AND I.BO# = T.OBJ# UNION ALL SELECT /*+ ordered index(i)  use_nl_with_index(t) */ T.TRIGFLAG FROM SYS.IND$ I, SYS.TAB$ T WHERE I.OBJ#
 = :B1 AND I.TYPE# = 3 AND I.BO# = T.BOBJ# )

0000000060F1BE50
6b51647babdb70478e81daa39094b64a

0000000060E7C3A0
delete from WRH$_SEG_STAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C64A70
delete from WRH$_SEG_STAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C984C90 SYS
AWRBL_DETAILS_TYPE_TABLE

000000008B108C28
SELECT DEFAULT_PAGE_

000000008C9E5560
SELECT INSTANCE_NAME FROM SYS.V_$INSTANCE

000000008B3F8C58
SELECT INSTANCE_NAME FROM SYS.V_$INSTANCE

0000000060F3DDD0
57d82a9fb4d339d56e0e4929a34e059

0000000092D2D188
SELECT KSPPCV.KSPPSTVL FROM X$KSPPCV KSPPCV, X$KSPPI KSPPI WHERE KSPPI.INDX = KSPPCV.INDX AND KSPPI.KSPPINM = '_optimizer_autostats_job
'

000000008B0929B0
SELECT KSPPCV.KSPPSTVL FROM X$KSPPCV KSPPCV, X$KSPPI KSPPI WHERE KSPPI.INDX = KSPPCV.INDX AND KSPPI.KSPPINM = '_optimizer_autostats_job
'

0000000088C95438
SELECT DBMS_ADVISOR.

0000000092CB7D88
e2053296639a93f0ef456252eee8789a

000000008B2CFF28
ff76a711c026a8fec0f621ac5eccdcc

0000000092D543A8 SYS
X$KCTICW

0000000088EC60E0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("INDPART$") FULL("INDPART$") NO_PARALLEL_INDEX("INDPART
$") */ 1 AS C1, 1 AS C2  FROM "SYS"."INDPART$" "INDPART$" WHERE BITAND("INDPART$"."FLAGS",2)<>2) SAMPLESUB

0000000088D9E0B8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("INDPART$") FULL("INDPART$") NO_PARALLEL_INDEX("INDPART
$") */ 1 AS C1, 1 AS C2  FROM "SYS"."INDPART$" "INDPART$" WHERE BITAND("INDPART$"."FLAGS",2)<>2) SAMPLESUB

000000008CBEF198
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("INDPART$") FULL("INDPART$") NO_PARALLEL_INDEX("INDPART
$") */ 1 AS C1, 1 AS C2  FROM "SYS"."INDPART$" "INDPART$" WHERE BITAND("INDPART$"."FLAGS",2)<>2) SAMPLESUB

000000008CB232B0
SELECT COUNT(*) FROM

000000008C932168 SYS
WRI$_ADV_TASKS

000000008C92D138
SELECT INST_ID FROM

0000000088CA0CD8
SELECT EXTRACTVALUE(

000000008C92DAA8 SYS
PRVT_SMGUTIL

000000008C945C78
a6ed62c04899fa626b10510028e1f28

0000000092C3C378
2ce14b76387bee632fb44224b57b62e9

000000008B043720
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D77378
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D7B8C8 SYS
X$KSUSE

0000000088E725B0
COMMIT

000000008B1CC5A8
select o.name,o.namespace,d.d_timestamp,o.owner# from dependency$ d,obj$ o, user$ u where d.p_obj#=:2 and d.p_timestamp=:3 and d.d_obj#
=o.obj# and o.owner#=u.user# and (u.name=:1 or u.ext_username=:1) and o.status in (2,3)

0000000060F17FF0
select o.name,o.namespace,d.d_timestamp,o.owner# from dependency$ d,obj$ o, user$ u where d.p_obj#=:2 and d.p_timestamp=:3 and d.d_obj#
=o.obj# and o.owner#=u.user# and (u.name=:1 or u.ext_username=:1) and o.status in (2,3)

000000008B207B78
select o.name,o.namespace,d.d_timestamp,o.owner# from dependency$ d,obj$ o, user$ u where d.p_obj#=:2 and d.p_timestamp=:3 and d.d_obj#
=o.obj# and o.owner#=u.user# and (u.name=:1 or u.ext_username=:1) and o.status in (2,3)

000000008CA40440 $BUILD$
4b3c9aaf32ef4496

0000000060DDB000
16ca272060087b658c73d55aee098ce2

00000000652E3950 $BUILD$
df03ddafb42e317b

000000008B2C7910
delete from WRH$_DLM_MISC_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060D3BD08
delete from WRH$_DLM_MISC_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060FAD748
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0EC1F0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060E01B30 SYS
AW_TRUNC_PROC

0000000060ED5A00
SELECT TABLE_NAME_KE

000000008CB93C98 EXFSYS
ADM_EXPFIL_SYSTRIG

0000000060E8A950
c664e0cb89c4b0652655ce9c66945593

0000000092D80B78 SYS
V$PROXY_ARCHIVEDLOG

000000008CB410D8 SYS
X$MUTEX_SLEEP

000000008C932E48 SYS
WRI$_ADV_DIRECTIVE_DEFS

0000000088E43C38
991e8a29534028cec2ed2cc4bbe1a89

000000008C9307B8 SYS
DBA_IND_STATISTICS

000000008B119F30
ddde9d26397dbd709d1609991a8d9255

000000008CADBB08
SELECT USERENV('PID'

000000008B37A878 SYS
SYSTEM_PRIVILEGE_MAP

000000008B38DEE8
/* SQL Analyze(1) */

000000008C93E940
INSERT INTO RLM$RULE

0000000092D40A08 SYS
SCHEDULER$_FWQ_ANT

0000000060E3C010 SCOTT
HASH_TABLE

000000008C91CB58
SELECT COUNT(*) FROM

0000000060E6C9C0 $BUILD$
e6c05fb0b5df2980

0000000088D5A258
SELECT VALUE, ORDINA

0000000088F0E868
dbb0469c2d46bd95b6917fa597638e12

000000008CBA9748
SELECT COUNT(*) FROM

000000008C937750 SYS
SCHEDULER$_JOB

000000008CAD7458 ORACLE_OCM
MGMT_CONFIG

000000008CA71260
begin   :owner :=upper('scott');   :table_name := upper('hash_table'); end;

000000008CA81228
begin   :owner :=upper('scott');   :table_name := upper('hash_table'); end;

000000008CBF4E20
9c064943fdefdf1d9bfe2e2b2db25b61

0000000088D73158 SYS
X$KEWRTSQLPLAN

000000008C866078 SYS
DBA_LOGSTDBY_PROGRESS

00000000652AFFC0
4a5811abe9f13229437f0ac762e44169

000000008CA06610
e8e984ba2a5a0f4ac6829cab89061078

0000000088E7D010
7e7bb977971ea3d82700644477d663f

000000008C86E078 SYS
WRH$_SGASTAT_U

000000008B230310
select     COLUMN_NAME,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col,     NUM_DISTINCT,     DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STA
TS,     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tab_columns t where     table_name = 'TEST'

0000000060EF7850
select     COLUMN_NAME,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
      null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
             'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'ML
SLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NULL
',               'n','NOT NULL',               NULL) col,     NUM_DISTINCT,     DENSITY,     NUM_BUCKETS,     NUM_NULLS,     GLOBAL_STA
TS,     USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tab_columns t where     table_name = 'TEST'

000000008C905280
858192892b4fbc87ec56fc4a550c6fd4

000000008C8648F8
SELECT NVL(F.STANDBY

000000008B1FB550
insert into cdef$(obj#,con#,type#,intcols,condlength,condition,robj#,rcon#,match#,refact,enabled,cols,defer,mtime,spare1,spare2,spare3)
values(:1,:2,:3,decode(:4,0,null,:4),decode(:5,0,null,:5),:6,decode(:7,0,null,:7),decode(:8,0,null,:8),decode(:9,0,null,:9),decode(:10,
0,null,:10), decode(:11,0,null,:11),:12, decode(:13,0,null,:13),:14,:15,:16,:17)

00000000653DF5E0
insert into cdef$(obj#,con#,type#,intcols,condlength,condition,robj#,rcon#,match#,refact,enabled,cols,defer,mtime,spare1,spare2,spare3)
values(:1,:2,:3,decode(:4,0,null,:4),decode(:5,0,null,:5),:6,decode(:7,0,null,:7),decode(:8,0,null,:8),decode(:9,0,null,:9),decode(:10,
0,null,:10), decode(:11,0,null,:11),:12, decode(:13,0,null,:13),:14,:15,:16,:17)

000000008C9230D8
DELETE FROM SYS.WRI$

0000000088E4CB28
SELECT COUNT(*) FROM

000000008C9EDEC8
59879fe723b04ddac237574cb8678bf0

0000000092D752C8
update tabpart$ set dataobj# = :1, part# = :2, hiboundlen = :3, hiboundval = :4, ts# = :5, file# = :6, block# = :7, pctfree$ = :8, pctu
sed$ = :9, initrans = :10, maxtrans = :11, flags = :12, analyzetime = :13, samplesize = :14, rowcnt = :15, blkcnt = :16, empcnt = :17,
avgspc = :18, chncnt = :19, avgrln = :20, bhiboundval = EMPTY_BLOB() where obj# = :21 returning bhiboundval into :22

0000000060EAA8C0
update tabpart$ set dataobj# = :1, part# = :2, hiboundlen = :3, hiboundval = :4, ts# = :5, file# = :6, block# = :7, pctfree$ = :8, pctu
sed$ = :9, initrans = :10, maxtrans = :11, flags = :12, analyzetime = :13, samplesize = :14, rowcnt = :15, blkcnt = :16, empcnt = :17,
avgspc = :18, chncnt = :19, avgrln = :20, bhiboundval = EMPTY_BLOB() where obj# = :21 returning bhiboundval into :22

000000008CBB2650
b7ada89eb959bc13f558c0479a173b7

0000000088C69390
8de1dd94bf4de60f5d5cc956783dba11

0000000060CC6F70 SYS
X$KCCRL

000000008B0BD620
780ae28b3ede9c75c506dde1c373fd4a

0000000088D76AA8
SELECT 'shared pool ('||NVL(DECODE(TO_CHAR(KSMDSIDX),'0','0 - Unused',KSMDSIDX), 'Total')||'):' SUBPOOL , SUM(KSMSSLEN) BYTES , ROUND(S
UM(KSMSSLEN)/1048576,2) MB FROM X$KSMSS WHERE KSMSSLEN > 0 GROUP BY ROLLUP (KSMDSIDX) ORDER BY SUBPOOL ASC

0000000088D5C5B8
SELECT 'shared pool ('||NVL(DECODE(TO_CHAR(KSMDSIDX),'0','0 - Unused',KSMDSIDX), 'Total')||'):' SUBPOOL , SUM(KSMSSLEN) BYTES , ROUND(S
UM(KSMSSLEN)/1048576,2) MB FROM X$KSMSS WHERE KSMSSLEN > 0 GROUP BY ROLLUP (KSMDSIDX) ORDER BY SUBPOOL ASC

0000000060FE3200
SELECT /*+all_rows*/

0000000060FD3F88
insert into icol$(obj#,bo#,intcol#,pos#,segcol#,segcollength,offset,col#,spare1,spare2,spare3) values(:1,:2,:3,:4,0,0,0,:5,:6,:7,:8)

000000008CBCE630
insert into icol$(obj#,bo#,intcol#,pos#,segcol#,segcollength,offset,col#,spare1,spare2,spare3) values(:1,:2,:3,:4,0,0,0,:5,:6,:7,:8)

000000008B173D00
1dfe2e0d71483af69e518e533a0a4530

000000008B1EBE78
613e7fde2f45249d589182d8d66c2d6

000000008CB14AD8 SYS
DBMS_SWRF_INTERNAL

0000000088E87D10
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F29FA8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088C8B7E8
UPDATE WRI$_SQLSET_P

0000000088C98148
SELECT XMLTYPE.APPEN

000000008CB1D578
8af92a816b5b4fe09e26695a3608b149

0000000092C7D578 SYS
C_OBJ#_INTCOL#

0000000088E11238
insert into wrh$_osstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, osstat_id, val
ue  from    v$osstat

000000008C96A030
insert into wrh$_osstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, osstat_id, val
ue  from    v$osstat

000000008B101948
insert into wrh$_osstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, osstat_id, val
ue  from    v$osstat

000000008B0A9300
insert into wrh$_osstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, osstat_id, val
ue  from    v$osstat

0000000088D3D488
insert into wrh$_osstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, osstat_id, val
ue  from    v$osstat

0000000088E116B8
insert into wrh$_osstat   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, osstat_id, val
ue  from    v$osstat

0000000088E61A58 SYS
1

0000000088EC7C90
a5ad393039947d3c9fff5eef4958c31d

000000008B143CD8
c69070cf9903a4428b02efe8d8f9be9f

0000000092C89158
5b8882eed873c59ac2f58aeee184488e

000000008B05DF00
SELECT 1 FROM DUAL W

0000000060CA2DD0 $BUILD$
fbf3cdf9535d1a6c

000000008B174BF0 SYS
DBA_XSTREAM_ADMINISTRATOR

0000000088D96068 SYS
WRH$_OPTIMIZER_ENV

0000000060E71B88
374b1cf8cf80e49dfdf2050fe30ade4b

000000008CA02B28
SELECT XMLCONCAT(:B2

000000008C8BABC8
61494276c309fb066872338bef5c694a

000000008CA72780
select privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 and grantee#=:2 group by privilege#,nvl(col#,0)

000000008B153AD8
select privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 and grantee#=:2 group by privilege#,nvl(col#,0)

0000000088D9D7F8
select privilege#,nvl(col#,0),max(mod(nvl(option$,0),2))from objauth$ where obj#=:1 and grantee#=:2 group by privilege#,nvl(col#,0)

0000000092C622A8
SELECT D.COLUMN_NAME

000000008B2A56B8
eafe294e48cbb8071e361ae98c64c641

0000000088E0D828
insert into wrh$_sys_time_model   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_i
d, value  from    v$sys_time_model  order by    stat_id

000000008C94F300
insert into wrh$_sys_time_model   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_i
d, value  from    v$sys_time_model  order by    stat_id

000000008B1B2720
insert into wrh$_sys_time_model   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_i
d, value  from    v$sys_time_model  order by    stat_id

0000000092D70208
insert into wrh$_sys_time_model   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_i
d, value  from    v$sys_time_model  order by    stat_id

000000008CBFE0A0
insert into wrh$_sys_time_model   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_i
d, value  from    v$sys_time_model  order by    stat_id

0000000088E0DCA8
insert into wrh$_sys_time_model   (snap_id, dbid, instance_number, stat_id, value)  select    :snap_id, :dbid, :instance_number, stat_i
d, value  from    v$sys_time_model  order by    stat_id

0000000060E5E0A0
2b6e9a77a817225f9ce1989c13ecbcd6

000000008B0920E0
DELETE FROM STATS_TA

0000000088EDD350 SYS
DBA_PART_HISTOGRAMS

0000000088C97C28
SELECT D.ATTR1, D.AT

000000008B24EBA8
select /*+  no_paral

000000008C9127D8
UPDATE SYS.WRI$_ADV_

0000000088F87AC8
select * from DBA_PART_HISTOGRAMS where table_name = 'HASH_TABLE'

0000000060F34560
select * from DBA_PART_HISTOGRAMS where table_name = 'HASH_TABLE'

0000000092CE0AF8
48c33050a45de5157fe1808a63874c10

000000008CA02398
delete from WRH$_LATCH_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092C63370
delete from WRH$_LATCH_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

00000000653CBDE0
SELECT TO_CHAR(CREAT

000000008CB3EBF0 SYS
DBMS_AQADM_SYS

0000000088F9D1B8
6e756dc41ffe9869aa07dc0f4b117e17

0000000088CA36E8 SYS
WRI$_SQLSET_WORKSPACE

000000008C84DC70
e357974324d717913f256ac9e9c647c5

0000000060DB9638
2722a7386024ba2c63d0ba02816234fa

0000000088C7A548
ee5121d056a70c022facdcbb5538645

0000000088CD5CC8
SELECT EXTRACTVALUE(

0000000088E26718
delete from ccol$ where obj#=:1

0000000088DB6DB8
delete from ccol$ where obj#=:1

000000008B05F7B0
SELECT T.FLAGS FROM

0000000092D334F0
select /*+  no_paral

0000000060E962B0
select substrb(dump(

0000000088F05698 $BUILD$
dca49527cd1b2c33

000000008CACBF00
/* SQL Analyze(1) */

000000008CA81BD8
6882431340ee151e816b80dca7a96df7

0000000088E02DD8
insert into WRH$_EVENT_HISTOGRAM    (snap_id, dbid, instance_number,     event_id, wait_time_milli, wait_count) select :snap_id, :dbid,
 :instance_number,        d.ksledhash, s.kslsesmaxdur, s.kslsesval   from x$kslseshist s,        x$ksled d  where s.kslsesenum = d.indx
    and s.kslsesval > 0  order by    d.ksledhash, s.kslsesmaxdur

000000008C9335F0
insert into WRH$_EVENT_HISTOGRAM    (snap_id, dbid, instance_number,     event_id, wait_time_milli, wait_count) select :snap_id, :dbid,
 :instance_number,        d.ksledhash, s.kslsesmaxdur, s.kslsesval   from x$kslseshist s,        x$ksled d  where s.kslsesenum = d.indx
    and s.kslsesval > 0  order by    d.ksledhash, s.kslsesmaxdur

000000008CB59A08
insert into WRH$_EVENT_HISTOGRAM    (snap_id, dbid, instance_number,     event_id, wait_time_milli, wait_count) select :snap_id, :dbid,
 :instance_number,        d.ksledhash, s.kslsesmaxdur, s.kslsesval   from x$kslseshist s,        x$ksled d  where s.kslsesenum = d.indx
    and s.kslsesval > 0  order by    d.ksledhash, s.kslsesmaxdur

0000000060F50C50
insert into WRH$_EVENT_HISTOGRAM    (snap_id, dbid, instance_number,     event_id, wait_time_milli, wait_count) select :snap_id, :dbid,
 :instance_number,        d.ksledhash, s.kslsesmaxdur, s.kslsesval   from x$kslseshist s,        x$ksled d  where s.kslsesenum = d.indx
    and s.kslsesval > 0  order by    d.ksledhash, s.kslsesmaxdur

0000000088E03258
insert into WRH$_EVENT_HISTOGRAM    (snap_id, dbid, instance_number,     event_id, wait_time_milli, wait_count) select :snap_id, :dbid,
 :instance_number,        d.ksledhash, s.kslsesmaxdur, s.kslsesval   from x$kslseshist s,        x$ksled d  where s.kslsesenum = d.indx
    and s.kslsesval > 0  order by    d.ksledhash, s.kslsesmaxdur

000000008CA3AF40
ebb2776de95a746719d7ecb32839cfc

000000008C865548
SELECT COUNT(*) FROM

0000000060CF9E58
a5874278df1163c7541962d36c66ae8f

0000000088F921C8 $BUILD$
75001c0387e32b95

000000008B0BF570
SELECT ON_MAX_SESSIO

000000008B0B48B0
25d75620e6d3487e18921ac3ec048ba

000000008B1092A8
UPDATE WWV_FLOW_DATA

000000008B058850
SELECT SPARE1 FROM S

000000008B17A500
b05e67c3d1cedcd7f0019112b19bf1c

0000000088E1F108 SYS
WRH$_CR_BLOCK_SERVER

0000000060FFA0F0 APEX_030200
WWV_FLOW_LOG

0000000088E03D08
select sequence#, id, name,          start_time, end_time,          enabled_by_scheduler, window_name, allowed_automated_switches,
     cpu_managed, instance_caging, parallel_execution_managed          from gv$rsrc_plan_history          where inst_id = userenv('inst
ance')

0000000088F4DE00
select sequence#, id, name,          start_time, end_time,          enabled_by_scheduler, window_name, allowed_automated_switches,
     cpu_managed, instance_caging, parallel_execution_managed          from gv$rsrc_plan_history          where inst_id = userenv('inst
ance')

000000008B0DFF68
SELECT ID FROM WWV_F

000000008CA0DC90 SYS
DBMS_SQLPA

0000000060FC4950
SELECT PROP, APP, MA

000000008B256258
SELECT /*+ ordered*/

000000008C95F750
f93a5498ca8744704cc64f22ccaf09d2

0000000060F73800 EXFSYS
EXPFIL_RESTRICT_TYPEEVOLVE

0000000088EB2370
2ce6d4eba42a136d123bc431edc0c4f9

0000000088FC53E8 SYS
XQSEQUENCEFROMXMLTYPE

0000000088D94D78 SYS
WRH$_SQL_SUMMARY

00000000652DD8F0 SYS
DBA_IND_COLUMNS

000000008B26F5D8
INSERT INTO sql$text (signature, sql_handle, sql_text)                        VALUES (:1, :2, :3)

0000000088F608E8
INSERT INTO sql$text (signature, sql_handle, sql_text)                        VALUES (:1, :2, :3)

0000000060DE9570
INSERT INTO sql$text (signature, sql_handle, sql_text)                        VALUES (:1, :2, :3)

000000008CAE70A8
aed972e15d0178c4d13c5d8c7e468af5

0000000060E74DD0 $BUILD$
719849ccdcb8fef0

000000008B37E068
9a7513a7a314f6753af577b5e312decd

0000000060CDAA48
3a9b479e3630f1912a9d9d1b2e275a0

0000000088F64BC8
select /*+  no_paral

0000000088F254F8
c215ec1818aef5f1cbf5295ed11fe1c

000000008B0427A0 SYS
DICTIONARY_OBJ_TYPE

000000008CB3FDB0
SELECT DBMS_LOCK_ID.

000000008B0D93F8
ebe813e13432c33bbf295797666582e1

0000000060FD76F0
2a7cdc2394513b6d7716b11c73656e94

000000008B1885A8
3c9eaf9cae77874a3e12d8065759f6e6

000000008B1F8E50
select inst_id,          seq_kgskscs,          consumer_group_id_kgskscs,          name_kgskscs,          requests_kgskscs,          cp
u_wait_time_kgskscs,          cpu_waits_kgskscs,          consumed_cpu_time_kgskscs,          yields_kgskscs,          decode(total_lot
teries_kgskscs, 0, 0,          floor((100 * lottery_presents_kgskscs) / total_lotteries_kgskscs)),          decode(total_lotteries_kgsk
scs, 0, 0,          floor((100 * lottery_alones_kgskscs) / total_lotteries_kgskscs)),          decode(total_runs_kgskscs, 0, 0,
  floor((100 * lottery_runs_kgskscs) / total_runs_kgskscs)),           active_sess_limit_hit_kgskscs,          undo_limit_hit_kgskscs,
         swch_in_time_kgskscs, swch_out_time_kgskscs,          swch_in_mb_kgskscs, swch_out_mb_kgskscs,          swch_in_reqs_kgskscs,
swch_out_reqs_kgskscs,          sql_canceled_kgskscs,          active_sess_killed_kgskscs,          idle_sess_killed_kgskscs,
idle_blkr_sess_killed_kgskscs,          queued_time_kgs

0000000088F3EC98
select inst_id,          seq_kgskscs,          consumer_group_id_kgskscs,          name_kgskscs,          requests_kgskscs,          cp
u_wait_time_kgskscs,          cpu_waits_kgskscs,          consumed_cpu_time_kgskscs,          yields_kgskscs,          decode(total_lot
teries_kgskscs, 0, 0,          floor((100 * lottery_presents_kgskscs) / total_lotteries_kgskscs)),          decode(total_lotteries_kgsk
scs, 0, 0,          floor((100 * lottery_alones_kgskscs) / total_lotteries_kgskscs)),          decode(total_runs_kgskscs, 0, 0,
  floor((100 * lottery_runs_kgskscs) / total_runs_kgskscs)),           active_sess_limit_hit_kgskscs,          undo_limit_hit_kgskscs,
         swch_in_time_kgskscs, swch_out_time_kgskscs,          swch_in_mb_kgskscs, swch_out_mb_kgskscs,          swch_in_reqs_kgskscs,
swch_out_reqs_kgskscs,          sql_canceled_kgskscs,          active_sess_killed_kgskscs,          idle_sess_killed_kgskscs,
idle_blkr_sess_killed_kgskscs,          queued_time_kgs

0000000088CA2798
SELECT SP.NAME NAME

000000008B3688B8
select /*+  no_paral

000000008B09F4D0
821379f057f1be767311cae7e9f7f759

000000008B039808
f6c70ab150f271cdaecdae46ec7906f0

000000008C84CAA8
4cc9e8a0cc13723ef7c1bd9c9d516e59

000000008B04C6C0
SELECT COUNT(*) FROM

0000000092D7D028 SYS
X$KSLEI

0000000092D70CA8 SYS
X$KSUXSINST

000000008B322498 $BUILD$
b16167bccfbca107

000000008CBB7140
dd0b9ee180f9759844e06316a0ba626a

000000008B32B838
bd9e5af123b9adda5a274237cb178ea1

000000008C9073D0
select /*+  no_paral

0000000060F6A188
SELECT INSTANCE_NAME

000000008B0F9A78
UPDATE STREAMS$_SPLI

000000008B32D6D8 $BUILD$
5ef1ee5363431c8c

000000008B29ECD0
3b642487a7c95796c43e978766a26558

000000008CA06A40
SELECT C.TYPE# FROM SYS.OBJ$ O, SYS.USER$ U, SYS.COL$ C WHERE O.TYPE#= 2 AND O.NAME = :B3 AND O.OWNER# = U.USER# AND U.NAME = :B2 AND C
.OBJ#=O.OBJ# AND C.NAME =:B1

000000008B078670
SELECT C.TYPE# FROM SYS.OBJ$ O, SYS.USER$ U, SYS.COL$ C WHERE O.TYPE#= 2 AND O.NAME = :B3 AND O.OWNER# = U.USER# AND U.NAME = :B2 AND C
.OBJ#=O.OBJ# AND C.NAME =:B1

000000008CA45F40 $BUILD$
e7c7d6a2f410b1c4

000000008B30BD38
/* SQL Analyze(1) */

0000000088CABCF8
SELECT /*+ use_nl(u,o,t) */ NVL(T.DEGREE,1) FROM USER$ U,OBJ$ O,TAB$ T WHERE U.NAME=:B2 AND O.NAME=:B1 AND O.OBJ#=T.OBJ# AND U.USER#=O.
OWNER#

000000008CAD7678
SELECT /*+ use_nl(u,o,t) */ NVL(T.DEGREE,1) FROM USER$ U,OBJ$ O,TAB$ T WHERE U.NAME=:B2 AND O.NAME=:B1 AND O.OBJ#=T.OBJ# AND U.USER#=O.
OWNER#

0000000088CC0FF0
SELECT /*+ use_nl(u,o,t) */ NVL(T.DEGREE,1) FROM USER$ U,OBJ$ O,TAB$ T WHERE U.NAME=:B2 AND O.NAME=:B1 AND O.OBJ#=T.OBJ# AND U.USER#=O.
OWNER#

000000008B073940
SELECT /*+ use_nl(u,o,t) */ NVL(T.DEGREE,1) FROM USER$ U,OBJ$ O,TAB$ T WHERE U.NAME=:B2 AND O.NAME=:B1 AND O.OBJ#=T.OBJ# AND U.USER#=O.
OWNER#

000000008B0AEF10
SELECT OPCODE_ID, EQ

000000008B2C7130
select /*+  no_paral

0000000060CFA918
5bcf9f49f8ae39470a6d57e18242a83

0000000092C48F20 MDSYS
SDO_GEOR_DEF

0000000088FE2DF0
b2d194b6396ae66825b4b5df17049d4

000000008CB078C0 SYS
DBA_RULES

0000000088F0C788
50e0e16c8f9a0a9697cac7bdf5e66235

000000008C84D280
select max(RETENTION) from SYS_FBA_FA

000000008B1579A8
select max(RETENTION) from SYS_FBA_FA

000000008C8534C8
select max(RETENTION) from SYS_FBA_FA

0000000088E64440
ca83e1083b4dbbbd4e899ea6f1ad35ba

0000000092D82330
71bf9a5f12113d1746f83d9929d601ee

000000006531DB10
select substrb(dump(

0000000088CCED38
SELECT SNAP_ID, MAX(

000000008B15FF80
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INSERTS")),to_char(substrb(dump(min("INSERTS"),16,0,32),1,120)),to_char(substrb(dump
(max("INSERTS"),16,0,32),1,120)),to_char(count("UPDATES")),to_char(substrb(dump(min("UPDATES"),16,0,32),1,120)),to_char(substrb(dump(ma
x("UPDATES"),16,0,32),1,120)),to_char(count("DELETES")),to_char(substrb(dump(min("DELETES"),16,0,32),1,120)),to_char(substrb(dump(max("
DELETES"),16,0,32),1,120)),to_char(count("TIMESTAMP")),to_char(substrb(dump(min("TIMESTAMP"),16,0,32),1,120)),to_char(substrb(dump(max(
"TIMESTAMP"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAG
S"),16,0,32),1,120)),to_char(count("DROP_SEGMENTS")),to

0000000060FEC6E0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INSERTS")),to_char(substrb(dump(min("INSERTS"),16,0,32),1,120)),to_char(substrb(dump
(max("INSERTS"),16,0,32),1,120)),to_char(count("UPDATES")),to_char(substrb(dump(min("UPDATES"),16,0,32),1,120)),to_char(substrb(dump(ma
x("UPDATES"),16,0,32),1,120)),to_char(count("DELETES")),to_char(substrb(dump(min("DELETES"),16,0,32),1,120)),to_char(substrb(dump(max("
DELETES"),16,0,32),1,120)),to_char(count("TIMESTAMP")),to_char(substrb(dump(min("TIMESTAMP"),16,0,32),1,120)),to_char(substrb(dump(max(
"TIMESTAMP"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAG
S"),16,0,32),1,120)),to_char(count("DROP_SEGMENTS")),to

0000000088DF7668
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INSERTS")),to_char(substrb(dump(min("INSERTS"),16,0,32),1,120)),to_char(substrb(dump
(max("INSERTS"),16,0,32),1,120)),to_char(count("UPDATES")),to_char(substrb(dump(min("UPDATES"),16,0,32),1,120)),to_char(substrb(dump(ma
x("UPDATES"),16,0,32),1,120)),to_char(count("DELETES")),to_char(substrb(dump(min("DELETES"),16,0,32),1,120)),to_char(substrb(dump(max("
DELETES"),16,0,32),1,120)),to_char(count("TIMESTAMP")),to_char(substrb(dump(min("TIMESTAMP"),16,0,32),1,120)),to_char(substrb(dump(max(
"TIMESTAMP"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAG
S"),16,0,32),1,120)),to_char(count("DROP_SEGMENTS")),to

0000000092D2C1B8
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("OBJ#")),to_char(substrb(dump(min("OBJ#"),16,0,32),1,120)),to_char(substr
b(dump(max("OBJ#"),16,0,32),1,120)),to_char(count("INSERTS")),to_char(substrb(dump(min("INSERTS"),16,0,32),1,120)),to_char(substrb(dump
(max("INSERTS"),16,0,32),1,120)),to_char(count("UPDATES")),to_char(substrb(dump(min("UPDATES"),16,0,32),1,120)),to_char(substrb(dump(ma
x("UPDATES"),16,0,32),1,120)),to_char(count("DELETES")),to_char(substrb(dump(min("DELETES"),16,0,32),1,120)),to_char(substrb(dump(max("
DELETES"),16,0,32),1,120)),to_char(count("TIMESTAMP")),to_char(substrb(dump(min("TIMESTAMP"),16,0,32),1,120)),to_char(substrb(dump(max(
"TIMESTAMP"),16,0,32),1,120)),to_char(count("FLAGS")),to_char(substrb(dump(min("FLAGS"),16,0,32),1,120)),to_char(substrb(dump(max("FLAG
S"),16,0,32),1,120)),to_char(count("DROP_SEGMENTS")),to

000000008B0DAF78
DELETE FROM SYS.SCHE

0000000088F5D488 $BUILD$
8f1c71421abe61d4

0000000088E76A70
SELECT SUM(CASE WHEN

000000008B24C660
eafe294e48cbb8071e361ae98c64c641

0000000088C5C048 EXFSYS
RLM$COLLPREDS

0000000060D9C088
select /*+  no_parallel_index(t, "WRH$_SEG_STAT_OBJ_PK")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_mon
itoring no_substrb_pad  no_expand index(t,"WRH$_SEG_STAT_OBJ_PK") */ count(*) as nrw,count(distinct sys_op_lbid(6580,'L',t.rowid)) as n
lb,null as ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."WRH$_SEG_STAT_OBJ" t where "DBID" is not null or "TS#" is no
t null or "OBJ#" is not null or "DATAOBJ#" is not null

000000008C90B0D0
select /*+  no_parallel_index(t, "WRH$_SEG_STAT_OBJ_PK")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_mon
itoring no_substrb_pad  no_expand index(t,"WRH$_SEG_STAT_OBJ_PK") */ count(*) as nrw,count(distinct sys_op_lbid(6580,'L',t.rowid)) as n
lb,null as ndk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SYS"."WRH$_SEG_STAT_OBJ" t where "DBID" is not null or "TS#" is no
t null or "OBJ#" is not null or "DATAOBJ#" is not null

000000008B1362F8 EXFSYS
RLM$DMLEVTTRIGS

000000008CB22A00 SYS
SCHEDULER$_JOB_RUN_DETAILS

000000008B064AE0
SELECT KSPPSTVL * 2

0000000060EC25A0
cbb53504eba0382d911c420a3fd9c874

000000008B0C2740
981e8b433447af35f6683e71612932cc

0000000088DA8A38
74d686a639f80ccad8179e14a8386c4c

000000008C8B50E0
select  NAME , VALUE from GV$SGA where inst_id = USERENV('Instance')

0000000088F0E288
select  NAME , VALUE from GV$SGA where inst_id = USERENV('Instance')

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

0000000060D47518
19483c414646e970ecf0214861159c5

0000000060F20220
b554460c7e9581447245acfa76d7a5bc

000000008B132028
SELECT PARAMETER_VAL

0000000088D41428
SELECT O.NAME, U.NAM

000000008B118500
SELECT COUNT(CURRENT_OBJ#) FROM DBA_HIST_ACTIVE_SESS_HISTORY WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIME = 0 AND SNAP_ID > :B1 AND TIME
_WAITED > 0

000000008B1532A8
SELECT COUNT(CURRENT_OBJ#) FROM DBA_HIST_ACTIVE_SESS_HISTORY WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIME = 0 AND SNAP_ID > :B1 AND TIME
_WAITED > 0

0000000088FDC400
SELECT COUNT(CURRENT_OBJ#) FROM DBA_HIST_ACTIVE_SESS_HISTORY WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIME = 0 AND SNAP_ID > :B1 AND TIME
_WAITED > 0

0000000088FCB328
SELECT COUNT(CURRENT_OBJ#) FROM DBA_HIST_ACTIVE_SESS_HISTORY WHERE WAIT_CLASS = 'User I/O' AND WAIT_TIME = 0 AND SNAP_ID > :B1 AND TIME
_WAITED > 0

0000000060D72498 SYS
DBMS_AQ_INV

000000008C870798
88548bd7d9d8530a75bd83ec4092436

000000008B37B678
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SK
IP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 42949672
95 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(
1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

000000008B37B7E8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SK
IP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 42949672
95 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(
1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

000000008B098840
INSERT INTO SYS.AUX_

0000000092CA7098
UPDATE WWV_FLOW_DATA

000000008C9834B8
67e778ea1f8699cf7e71a9fc57b7be70

000000008B36C898
b78edfcdf0e69fe51bdc4ea7ca91371b

0000000088E6BFF0
select  PARENT_NAME, LOCATION, NWFAIL_COUNT, SLEEP_COUNT,  WTR_SLP_COUNT, LONGHOLD_COUNT, LOCATION from GV$LATCH_MISSES where inst_id =
 USERENV('Instance')

000000008CB342E8
select  PARENT_NAME, LOCATION, NWFAIL_COUNT, SLEEP_COUNT,  WTR_SLP_COUNT, LONGHOLD_COUNT, LOCATION from GV$LATCH_MISSES where inst_id =
 USERENV('Instance')

0000000092D77008
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_histhead_history     where savtime < :1 and rownum <= NVL(:2, rownum)

0000000060F49580
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_histhead_history     where savtime < :1 and rownum <= NVL(:2, rownum)

0000000060E4F700
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_histhead_history     where savtime < :1 and rownum <= NVL(:2, rownum)

000000008CA10028
INSERT INTO sys.wri$_adv_rec_actions (task_id, rec_id, act_id) VALUES (:1,:2,:3)

000000008CAF1908
INSERT INTO sys.wri$_adv_rec_actions (task_id, rec_id, act_id) VALUES (:1,:2,:3)

000000008CB0FDC8
select inst_id,kglnaobj,kglfnobj,kglobt03,kglobhs0+kglobhs1+kglobhs2+kglobhs3+kglobhs4+kglobhs5+kglobhs6,kglobt08+kglobt11,kglobt10,kgl
obt01,kglobccc,kglobclc,kglhdlmd,kglhdlkc,kglobt04,kglobt05,kglobt48,kglobt35,kglobpc6,kglhdldc,substr(to_char(kglnatim,'YYYY-MM-DD/HH2
4:MI:SS'),1,19),kglhdivc,kglobt12,kglobt13,kglobwdw,kglobt14,kglobwap,kglobwcc,kglobwcl,kglobwui,kglobt42,kglobt43,kglobt15,kglobt02,de
code(kglobt32, 0, 'NONE',                 1, 'ALL_ROWS',                 2, 'FIRST_ROWS',                 3, 'RULE',                 4,
 'CHOOSE', 'UNKNOWN'),kglobtn0,kglobcce,kglobcceh,kglobt17,kglobt18,kglobts4,kglhdkmk,kglhdpar,kglnahsh,kglobt46,kglobt30,kglobts0,kglo
bt19,kglobts1,kglobt20,kglobt21,kglobts2,kglobt06,kglobt07,decode(kglobt28, 0, NULL, kglobt28),kglhdadr,decode(bitand(kglobt00,64),64,
'Y', 'N'),decode(kglobsta,       1, 'VALID',       2, 'VALID_AUTH_ERROR',       3, 'VALID_COMPILE_ERROR',       4, 'VALID_UNAUTH',
  5, 'INVALID_UNAUTH',       6, 'INVALID'),kglobt31,kgl

0000000060EDE698
select inst_id,kglnaobj,kglfnobj,kglobt03,kglobhs0+kglobhs1+kglobhs2+kglobhs3+kglobhs4+kglobhs5+kglobhs6,kglobt08+kglobt11,kglobt10,kgl
obt01,kglobccc,kglobclc,kglhdlmd,kglhdlkc,kglobt04,kglobt05,kglobt48,kglobt35,kglobpc6,kglhdldc,substr(to_char(kglnatim,'YYYY-MM-DD/HH2
4:MI:SS'),1,19),kglhdivc,kglobt12,kglobt13,kglobwdw,kglobt14,kglobwap,kglobwcc,kglobwcl,kglobwui,kglobt42,kglobt43,kglobt15,kglobt02,de
code(kglobt32, 0, 'NONE',                 1, 'ALL_ROWS',                 2, 'FIRST_ROWS',                 3, 'RULE',                 4,
 'CHOOSE', 'UNKNOWN'),kglobtn0,kglobcce,kglobcceh,kglobt17,kglobt18,kglobts4,kglhdkmk,kglhdpar,kglnahsh,kglobt46,kglobt30,kglobts0,kglo
bt19,kglobts1,kglobt20,kglobt21,kglobts2,kglobt06,kglobt07,decode(kglobt28, 0, NULL, kglobt28),kglhdadr,decode(bitand(kglobt00,64),64,
'Y', 'N'),decode(kglobsta,       1, 'VALID',       2, 'VALID_AUTH_ERROR',       3, 'VALID_COMPILE_ERROR',       4, 'VALID_UNAUTH',
  5, 'INVALID_UNAUTH',       6, 'INVALID'),kglobt31,kgl

0000000060E72F70
SELECT D.PORT, D.SHA

0000000088C6EE90
89f1838999e7e04d2cd3332f56d6a3be

0000000088F13C48
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=34 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME
" NOT LIKE 'DR#%') THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

0000000088D90AA8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=34 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME
" NOT LIKE 'DR#%') THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

000000008CBEC688
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=34 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME
" NOT LIKE 'DR#%') THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O") SAMPLESUB

0000000092D80F38 SYS
X$KSMSD

000000008B1CAB08
UPDATE RLM$EVENTSTRU

0000000092C9BAB8
select substrb(dump(

000000008B3DC4C0 APEX_030200
WWV_FLOW_GLOBAL

000000008C8C3CE8
4769ddb6121bd637252e2ea6fc5bcbcf

000000008CACE0F8
367da00762224f9874eb78f85e1604c8

000000008B297770 PUBLIC
USER_TABLES

0000000088C870A8
SELECT /*+ LEADING(A

0000000088FFE620
LOCK TABLE SYS.MON_MODS_ALL$ IN EXCLUSIVE MODE

000000008B0BCC80
LOCK TABLE SYS.MON_MODS_ALL$ IN EXCLUSIVE MODE

000000008C90B620
LOCK TABLE SYS.MON_MODS_ALL$ IN EXCLUSIVE MODE

000000008B094240
LOCK TABLE SYS.MON_MODS_ALL$ IN EXCLUSIVE MODE

000000008B2A03C8
2adc9927ee43556ad9d434592a00a44a

0000000088F831A8
 SELECT VALUE$ FROM SYS.PROPS$ WHERE NAME = 'OGG_TRIGGER_OPTIMIZATION'

0000000060D2BB70
 SELECT VALUE$ FROM SYS.PROPS$ WHERE NAME = 'OGG_TRIGGER_OPTIMIZATION'

0000000088FE84A0
 SELECT VALUE$ FROM SYS.PROPS$ WHERE NAME = 'OGG_TRIGGER_OPTIMIZATION'

000000008C88B2A0
INSERT INTO sys.wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:
11,:12,:13)

000000008CABE988
INSERT INTO sys.wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:
11,:12,:13)

0000000088ED80C0
INSERT INTO sys.wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:
11,:12,:13)

000000008C8FF130
INSERT INTO sys.wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:
11,:12,:13)

0000000088C850A8
SELECT ATTR1 FROM DB

0000000060D0DCC8 SYS
WRH$_OSSTAT_BL

0000000088C6B030 MDSYS
SDO_GEORASTER

000000008C92C728
SELECT P.VALUE, E.ID

0000000088F17C38
select INST_ID,           PAT_PRED * 1024,           round(PAT_PRED/PAT_CURR, 4),           decode(status, 0, 'OFF', 'ON'),           B
YTES_PROCESSED * 1024,                   ESTD_TIME,                                EXTRA_BYTES_RW * 1024,                    round(deco
de(BYTES_PROCESSED+EXTRA_BYTES_RW, 0, 0,                  (BYTES_PROCESSED*100)/(BYTES_PROCESSED+EXTRA_BYTES_RW))),           OVERALLOC
    from   X$QESMMAPADV

0000000088DF5538
select INST_ID,           PAT_PRED * 1024,           round(PAT_PRED/PAT_CURR, 4),           decode(status, 0, 'OFF', 'ON'),           B
YTES_PROCESSED * 1024,                   ESTD_TIME,                                EXTRA_BYTES_RW * 1024,                    round(deco
de(BYTES_PROCESSED+EXTRA_BYTES_RW, 0, 0,                  (BYTES_PROCESSED*100)/(BYTES_PROCESSED+EXTRA_BYTES_RW))),           OVERALLOC
    from   X$QESMMAPADV

000000008C9218E8
SELECT T.NAME, P.VAL

000000008CB915D8 SYS
OPBINDING$

000000008CB017C8 SYS
WRI$_DBU_USAGE_SAMPLE

0000000088E3BB48
213906f8664198e834097d645c9fc107

0000000088C55C28 DBSNMP
BSLN_METRIC_T

0000000060FB1FD0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O")  */ 4294967295 AS C1, COUNT(*)
 AS C2, COUNT(CASE WHEN ("O"."LINKNAME" IS NULL) AND ("O"."TYPE#"<>10) AND ("O"."NAME"<>'_NEXT_OBJECT') AND ("O"."NAME"<>'_default_audi
ting_options_') THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O" WHERE ("O"."LINKNAME" IS NULL)) inne
rQuery

0000000060EAA490
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O")  */ 4294967295 AS C1, COUNT(*)
 AS C2, COUNT(CASE WHEN ("O"."LINKNAME" IS NULL) AND ("O"."TYPE#"<>10) AND ("O"."NAME"<>'_NEXT_OBJECT') AND ("O"."NAME"<>'_default_audi
ting_options_') THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O" WHERE ("O"."LINKNAME" IS NULL)) inne
rQuery

000000008CB94AF8
SELECT MAX(LENGTH(TO

0000000088F3D8D8
a40e5833bdb7ef889108431f513df0da

0000000060FED900
delete from WRH$_INST_CACHE_TRANSFER_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B2F5758
delete from WRH$_INST_CACHE_TRANSFER_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088E62908 SYS
WRH$_SGASTAT_U

000000008B0D49F8
INSERT INTO SYS.SCHE

0000000060DE9350 $BUILD$
7335ac1a61441ab7

0000000088CA2F68
SELECT EXTRACT(OTHER

000000008CB4D778
4e2dc922bc1a784b7c7751b8b456b7c4

000000008B1882F0
SELECT COUNT(*) FROM

0000000088E7EC60 SYS
DBMS_TRANSACTION

0000000060D19A18 $BUILD$
8c73d55aee098ce2

000000008C894630 SYS
V$IOSTAT_FILE

0000000060F93E40
delete from WRM$_SNAPSHOT_DETAILS snap_det   where snap_det.dbid = :dbid   and snap_det.snap_id >= :beg_snap   and snap_det.snap_id <=
:end_snap

000000008CA05550
delete from WRM$_SNAPSHOT_DETAILS snap_det   where snap_det.dbid = :dbid   and snap_det.snap_id >= :beg_snap   and snap_det.snap_id <=
:end_snap

000000008B32C3E8
d751142c3b7971bd655864a445f58a87

000000008CBA3618
d25ba01f53e60356ab23d6efbcb20294

0000000060FAF8C0
SELECT Q.NAME FROM S

000000008C8BA478
select substrb(dump(

000000008CA3C4A0
select /*+  no_paral

000000008B0C7B68
select INST_ID, RMRN

000000008CAEAFE8 SYS
WRI$_ADV_SQLACCESS_ADV

0000000088D344F0
4286e0117e73806f26d9321427009e2c

000000008B0616D0
SELECT /*+ ordered

0000000092C636D0
4bb9adfa46e913dd13bc6cb3e14cf166

0000000088DD15A8
4204360521155881944

0000000092CB9288
SELECT TABLE_NAME_KE

00000000653A0860
update smon_scn_time set time_mp=:1, time_dp=:2, scn=:3, scn_wrp=:4,  scn_bas=:5, num_mappings=:6, tim_scn_map=:7 where scn =  (select
min(scn) from smon_scn_time)

0000000060EC68E0
update smon_scn_time set time_mp=:1, time_dp=:2, scn=:3, scn_wrp=:4,  scn_bas=:5, num_mappings=:6, tim_scn_map=:7 where scn =  (select
min(scn) from smon_scn_time)

0000000060EE2D00
update smon_scn_time set time_mp=:1, time_dp=:2, scn=:3, scn_wrp=:4,  scn_bas=:5, num_mappings=:6, tim_scn_map=:7 where scn =  (select
min(scn) from smon_scn_time)

0000000088C7EE98 SYS
DBA_SCHEDULER_WINDOW_LOG

0000000060EDCE40
update histgrm$ set obj# = decode(obj#,:1,:2) WHERE obj# in (:1)

000000008B369910
update histgrm$ set obj# = decode(obj#,:1,:2) WHERE obj# in (:1)

0000000060FB6150
336eaa4516c54a9f2816acc4f368a08

000000008C8DC178 SYS
LAST_OBSERVED_EVENT

0000000060C70520
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000652B1B68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CA67A20
SELECT NEXT_CHANGE#

0000000088FA5DF8 EXFSYS
RLM$EVTCLEANUP

000000008C952350
insert into ind$(bo#,obj#,ts#,file#,block#,intcols,type#,flags,property,pctfree$,initrans,maxtrans,blevel,leafcnt,distkey,lblkkey,dblkk
ey,clufac,cols,analyzetime,samplesize,dataobj#,degree,instances,rowcnt,pctthres$,indmethod#,trunccnt,spare1,spare4,spare2,spare6)values
(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,decode(:23,1,null,:23),decode(:24,1,null,:24),:25, :32*
256+:26,:27,:28,:29,:30,:31,:33)

0000000060FFDF00
insert into ind$(bo#,obj#,ts#,file#,block#,intcols,type#,flags,property,pctfree$,initrans,maxtrans,blevel,leafcnt,distkey,lblkkey,dblkk
ey,clufac,cols,analyzetime,samplesize,dataobj#,degree,instances,rowcnt,pctthres$,indmethod#,trunccnt,spare1,spare4,spare2,spare6)values
(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,decode(:23,1,null,:23),decode(:24,1,null,:24),:25, :32*
256+:26,:27,:28,:29,:30,:31,:33)

0000000060CB3CD0
b1d2dc7e4358d65f5154dc9a7e933000

000000008CA0F478
99da9acfaef4e42132827ed7ba0c85a6

000000008CBE7058 $BUILD$
dcc9fd0f7f9aa94c

0000000060F469A0
ea869ce79cded5b6ae49174ec9706c0

000000008B07D490
SELECT SU.NAME, SO.N

0000000092EB3300 $BUILD$
 59993e0425439af

0000000088D35AF0
a7e9da0d77a6cc6c8f54f0ac8453a70d

000000008CBE0E40 SYS
INDSUBPART$

0000000088D0AF60
4762609cb8de46b01d9c27a6ef07ae89

0000000088DB1208
UPDATE WRH$_SQL_BIND_METADATA SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRST
ALE)

000000008C893000
UPDATE WRH$_SQL_BIND_METADATA SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRST
ALE)

000000008CB15088
UPDATE WRH$_SQL_BIND_METADATA SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRST
ALE)

0000000088DB1688
UPDATE WRH$_SQL_BIND_METADATA SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (SQL_ID) IN (SELECT STR1_KEWRATTR FROM X$KEWRATTRST
ALE)

000000008C940240
4634cf6146ebf3a425973d83f0b4f6b8

0000000092D4DBC8
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  DECLARE          ename VARCHAR2(30);        BEGIN          en
ame := dbms_sqltune.execute_tuning_task(                     'SYS_AUTO_SQL_TUNING_TASK');        END;  :mydate := next_date; IF broken
THEN :b := 1; ELSE :b := 0; END IF; END;

000000008B280708
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  DECLARE          ename VARCHAR2(30);        BEGIN          en
ame := dbms_sqltune.execute_tuning_task(                     'SYS_AUTO_SQL_TUNING_TASK');        END;  :mydate := next_date; IF broken
THEN :b := 1; ELSE :b := 0; END IF; END;

0000000060CB94D8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "U#3")  */ 1 AS C1 FROM "SYS"."TS$" "TS#2", "SYS"."USER$" "U#3", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0
" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,
'CACHE',9,'SPACE HEADER','UNDEFINED') LIKE 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."T
YPE#"<>8) AND ("S#1"."TYPE#"<>10) AND ("S#1"."USER#"="U#3"."USER#"(+)) AND ("S#1"."TS#"="TS#2"."TS#")) innerQuery

000000008CAEB658
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "U#3")  */ 1 AS C1 FROM "SYS"."TS$" "TS#2", "SYS"."USER$" "U#3", "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0
" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,
'CACHE',9,'SPACE HEADER','UNDEFINED') LIKE 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."T
YPE#"<>8) AND ("S#1"."TYPE#"<>10) AND ("S#1"."USER#"="U#3"."USER#"(+)) AND ("S#1"."TS#"="TS#2"."TS#")) innerQuery

000000008CAEB218 SYS
WRI$_ADV_HDM_T

0000000088D99180
select /*+  no_paral

0000000060F97BA0
7cda76911a5aef12ec66a7ea377b0865

0000000088CD5F48
WITH MONITOR_DATA AS

000000008B326A70
select     TABLE_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
 USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tables t where     owner = upper(nvl(:owner,user)) and
 table_name = upper(:table_name)

000000008B2A9B58
select     TABLE_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
 USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tables t where     owner = upper(nvl(:owner,user)) and
 table_name = upper(:table_name)

00000000652F5280
select     TABLE_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     GLOBAL_STATS,
 USER_STATS,     SAMPLE_SIZE,     to_char(t.last_analyzed,'MM-DD-YYYY') from dba_tables t where     owner = upper(nvl(:owner,user)) and
 table_name = upper(:table_name)

0000000060F59600
ea869ce79cded5b6ae49174ec9706c0

0000000088F58590
6baf1288053c9fc1181bbddcb842df4

000000008B1AF8A0
SELECT attr5 FROM WRI$_ADV_RATIONALE WHERE rowid = :1

0000000088D9DB78
SELECT attr5 FROM WRI$_ADV_RATIONALE WHERE rowid = :1

0000000088DFD488
SELECT T.CLIENT_ID,         T.OPERATION_ID,         T.TARGET_TYPE,         T.TARGET_NAME,         T.CURR_JOB_NAME,         TO_NUMBER(BI
TAND(T.ATTRIBUTES, 131072)),         CASE NVL((SELECT J.STATE                     FROM DBA_SCHEDULER_JOBS J                    WHERE T.
CURR_JOB_NAME = J.JOB_NAME), 'MISSING')           WHEN 'MISSING' THEN 4           WHEN 'RUNNING' THEN 1           WHEN 'DISABLED' THEN
2           WHEN 'SCHEDULED' THEN 3           WHEN 'RETRY SCHEDULED' THEN 99           WHEN 'COMPLETED' THEN 99           WHEN 'BROKEN'
 THEN 99           WHEN 'FAILED' THEN 99           WHEN 'REMOTE' THEN 99           WHEN 'SUCCEEDED' THEN 99           WHEN 'STOPPED' TH
EN 99           WHEN 'CHAIN_STALLED' THEN 99           ELSE 99         END AS CONSOLIDATED_STATE,         CASE NVL(JRD.STATUS,'MISSING'
)           WHEN 'MISSING' THEN 4           WHEN 'SUCCEEDED' THEN 10           WHEN 'FAILED' THEN 11           WHEN 'STOPPED' THEN
        CASE             WHEN JRD.ADDITIONAL_INFO LIKE

0000000092D75458
SELECT T.CLIENT_ID,         T.OPERATION_ID,         T.TARGET_TYPE,         T.TARGET_NAME,         T.CURR_JOB_NAME,         TO_NUMBER(BI
TAND(T.ATTRIBUTES, 131072)),         CASE NVL((SELECT J.STATE                     FROM DBA_SCHEDULER_JOBS J                    WHERE T.
CURR_JOB_NAME = J.JOB_NAME), 'MISSING')           WHEN 'MISSING' THEN 4           WHEN 'RUNNING' THEN 1           WHEN 'DISABLED' THEN
2           WHEN 'SCHEDULED' THEN 3           WHEN 'RETRY SCHEDULED' THEN 99           WHEN 'COMPLETED' THEN 99           WHEN 'BROKEN'
 THEN 99           WHEN 'FAILED' THEN 99           WHEN 'REMOTE' THEN 99           WHEN 'SUCCEEDED' THEN 99           WHEN 'STOPPED' TH
EN 99           WHEN 'CHAIN_STALLED' THEN 99           ELSE 99         END AS CONSOLIDATED_STATE,         CASE NVL(JRD.STATUS,'MISSING'
)           WHEN 'MISSING' THEN 4           WHEN 'SUCCEEDED' THEN 10           WHEN 'FAILED' THEN 11           WHEN 'STOPPED' THEN
        CASE             WHEN JRD.ADDITIONAL_INFO LIKE

000000008CAB2BC8
SELECT T.CLIENT_ID,         T.OPERATION_ID,         T.TARGET_TYPE,         T.TARGET_NAME,         T.CURR_JOB_NAME,         TO_NUMBER(BI
TAND(T.ATTRIBUTES, 131072)),         CASE NVL((SELECT J.STATE                     FROM DBA_SCHEDULER_JOBS J                    WHERE T.
CURR_JOB_NAME = J.JOB_NAME), 'MISSING')           WHEN 'MISSING' THEN 4           WHEN 'RUNNING' THEN 1           WHEN 'DISABLED' THEN
2           WHEN 'SCHEDULED' THEN 3           WHEN 'RETRY SCHEDULED' THEN 99           WHEN 'COMPLETED' THEN 99           WHEN 'BROKEN'
 THEN 99           WHEN 'FAILED' THEN 99           WHEN 'REMOTE' THEN 99           WHEN 'SUCCEEDED' THEN 99           WHEN 'STOPPED' TH
EN 99           WHEN 'CHAIN_STALLED' THEN 99           ELSE 99         END AS CONSOLIDATED_STATE,         CASE NVL(JRD.STATUS,'MISSING'
)           WHEN 'MISSING' THEN 4           WHEN 'SUCCEEDED' THEN 10           WHEN 'FAILED' THEN 11           WHEN 'STOPPED' THEN
        CASE             WHEN JRD.ADDITIONAL_INFO LIKE

0000000092C6C6F0
select col#, grantee#, privilege#,max(mod(nvl(option$,0),2)) from objauth$ where obj#=:1 and col# is not null group by privilege#, col#
, grantee# order by col#, grantee#

0000000088D682B0
select col#, grantee#, privilege#,max(mod(nvl(option$,0),2)) from objauth$ where obj#=:1 and col# is not null group by privilege#, col#
, grantee# order by col#, grantee#

0000000088CB8EE8
select col#, grantee#, privilege#,max(mod(nvl(option$,0),2)) from objauth$ where obj#=:1 and col# is not null group by privilege#, col#
, grantee# order by col#, grantee#

000000008B326E40
select col#, grantee#, privilege#,max(mod(nvl(option$,0),2)) from objauth$ where obj#=:1 and col# is not null group by privilege#, col#
, grantee# order by col#, grantee#

0000000092C412B8
select col#, grantee#, privilege#,max(mod(nvl(option$,0),2)) from objauth$ where obj#=:1 and col# is not null group by privilege#, col#
, grantee# order by col#, grantee#

0000000092C6CB70
select col#, grantee#, privilege#,max(mod(nvl(option$,0),2)) from objauth$ where obj#=:1 and col# is not null group by privilege#, col#
, grantee# order by col#, grantee#

0000000060E01620
8693ce1f269e6480fea0f8552885634e

000000008B0EDA90
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088EC4B20
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088CB65D8
618e8d07a51af70a9413fb5a5d1f227

000000008B11F468
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 165

00000000652F4C40
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 165

0000000088DB1008
e2ab98ac9e6ec7557ff1f54bc1e9b69

0000000060E0B110
select substrb(dump(

0000000092D1F0D8
ae0885818e022aa4b731e4b5c045484e

000000008B177490 APEX_030200
WWV_FLOW_FILE_API

000000008B06A7A0
SELECT /*+ ordered *

0000000060FE5D70 $BUILD$
312e105082d96c1b

000000008CB5A530
XDB

0000000092D2CC78
select /*+  no_paral

0000000060FC01A0 PUBLIC
SYS_XQ_UPKXML2SQL

000000008CA67E30
SELECT GREATEST(NVL(

000000008C924458
DELETE FROM WRI$_ADV

0000000092EC15B0 SYS
GV$STREAMS_POOL_ADVICE

000000008B0BB500
SELECT APPLY_NAME, (

000000008C9E27E8
select substrb(dump(

000000008C9841D8
select vindex,itypetoid,imethod#,iflags,itypeowner,itypename from vtable$ where obj#=:1 order by vindex

000000008C940F68
select vindex,itypetoid,imethod#,iflags,itypeowner,itypename from vtable$ where obj#=:1 order by vindex

000000008B0A3030
select vindex,itypetoid,imethod#,iflags,itypeowner,itypename from vtable$ where obj#=:1 order by vindex

000000008CBEE068 SYS
ATTRCOL$

0000000088D62970
select /*+  no_paral

0000000092CC9938
INSERT INTO SYS.WRI$_ADV_PARAMETERS (TASK_ID,NAME,DATATYPE,VALUE,FLAGS,DESCRIPTION) VALUES (:B6 , :B5 , :B4 , :B3 , :B2 , :B1 )

000000008CBC3228
INSERT INTO SYS.WRI$_ADV_PARAMETERS (TASK_ID,NAME,DATATYPE,VALUE,FLAGS,DESCRIPTION) VALUES (:B6 , :B5 , :B4 , :B3 , :B2 , :B1 )

000000008B0B4540
INSERT INTO SYS.WRI$_ADV_PARAMETERS (TASK_ID,NAME,DATATYPE,VALUE,FLAGS,DESCRIPTION) VALUES (:B6 , :B5 , :B4 , :B3 , :B2 , :B1 )

000000008C959E30
INSERT INTO SYS.WRI$_ADV_PARAMETERS (TASK_ID,NAME,DATATYPE,VALUE,FLAGS,DESCRIPTION) VALUES (:B6 , :B5 , :B4 , :B3 , :B2 , :B1 )

000000008C928AD8
INSERT INTO SYS.WRI$_ADV_PARAMETERS (TASK_ID,NAME,DATATYPE,VALUE,FLAGS,DESCRIPTION) VALUES (:B6 , :B5 , :B4 , :B3 , :B2 , :B1 )

0000000088CF41E8 SYS
V$SQL

000000008B27D7B8
UPDATE RLM$RULESET S

00000000652ED590
select s.inst_id, s.svchsh, s.svcnam, m.extid, m.sname, s.kewsval  from x$kewssvcv s, x$kewssmap m  where s.kewsoff = m.offst and m.agg
id = 3

000000008B227110
select s.inst_id, s.svchsh, s.svcnam, m.extid, m.sname, s.kewsval  from x$kewssvcv s, x$kewssmap m  where s.kewsoff = m.offst and m.agg
id = 3

000000008B122928
732d1523e906e89a5839117a4fa53ef

000000008C9348C0
SELECT       elapsed_time,       cpu_time,       buffer_gets,       disk_reads,       direct_writes,       executions,       plan_hash_
value,       last_load_time,      (SELECT other_xml       FROM v$sql_plan P       WHERE P.sql_id = :1 AND             rownum = 1 AND
          P.plan_hash_value = S.plan_hash_value AND             P.child_address = S.last_active_child_address AND             P.id = 1)
 other_xml FROM       (SELECT               elapsed_time/executions as elapsed_time,               cpu_time/executions as cpu_time,
           buffer_gets/executions as buffer_gets,               disk_reads/executions as disk_reads,               direct_writes/execut
ions as direct_writes,               rows_processed/executions as rows_processed,               fetches/executions as fetches,
      executions,               plan_hash_value,               last_active_child_address,               last_load_time         FROM
         (SELECT                    elapsed_time,

000000008CAD7B98
SELECT       elapsed_time,       cpu_time,       buffer_gets,       disk_reads,       direct_writes,       executions,       plan_hash_
value,       last_load_time,      (SELECT other_xml       FROM v$sql_plan P       WHERE P.sql_id = :1 AND             rownum = 1 AND
          P.plan_hash_value = S.plan_hash_value AND             P.child_address = S.last_active_child_address AND             P.id = 1)
 other_xml FROM       (SELECT               elapsed_time/executions as elapsed_time,               cpu_time/executions as cpu_time,
           buffer_gets/executions as buffer_gets,               disk_reads/executions as disk_reads,               direct_writes/execut
ions as direct_writes,               rows_processed/executions as rows_processed,               fetches/executions as fetches,
      executions,               plan_hash_value,               last_active_child_address,               last_load_time         FROM
         (SELECT                    elapsed_time,

000000008B22BCB0
SELECT SUM(BYTES/1024/1024/1024) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY
PARTITION_NAME ORDER BY PARTITION_NAME

000000008CAB5240
SELECT SUM(BYTES/1024/1024/1024) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY
PARTITION_NAME ORDER BY PARTITION_NAME

0000000088D2E6B8
SELECT SUM(BYTES/1024/1024/1024) G ,PARTITION_NAME FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 ) GROUP BY
PARTITION_NAME ORDER BY PARTITION_NAME

000000008C9A88C8 SYS
V$PROCESS

0000000060D2EE18 SYS
GV$SGA_DYNAMIC_COMPONENTS

0000000088C898A8
DELETE WRI$_SQLSET_P

0000000060F86738
SELECT * FROM V$BUFFER_POOL

00000000652DBB50
SELECT * FROM V$BUFFER_POOL

000000008CAA37D0
SELECT * FROM V$BUFFER_POOL

000000008B2BFE90
select substrb(dump(

000000008B12D308
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B21FDD0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B24B878
b880561ea09d979497e04dff516b3299

0000000060E76260
54eac2744de72cc13e67578d7b8fd58

000000008C905480
/* SQL Analyze(1) */

0000000088FFC520
select /*+  no_paral

0000000088FCE148
SELECT BLDS.BSLN_GUID ,BLDS.METRIC_ID ,:B4 ,BLDS.TIMEGROUP ,BLDS.DBID ,BLDS.INSTANCE_NAME ,TP.THRESHOLD_METHOD ,TP.NUM_OCCURRENCES ,TP.
WARNING_PARAM ,TP.CRITICAL_PARAM ,TP.FAIL_ACTION ,ST.SAMPLE_COUNT ,ROUND(ST.MINIMUM,3) AS MINIMUM ,ROUND(ST.MAXIMUM,3) AS MAXIMUM ,ROUN
D(ST.PCTILE_95,3) AS PCTILE_95 ,ROUND(ST.PCTILE_99,3) AS PCTILE_99 ,ROUND(ST.EST_PCTILE_999,3) AS PCTILE_999 ,ROUND(ST.EST_PCTILE_9999,
3) AS PCTILE_9999 ,EST_FIT_QUALITY ,EST_SAMPLE_COUNT FROM BSLN_THRESHOLD_PARAMS TP ,BSLN_STATISTICS ST ,(SELECT B.BSLN_GUID AS BSLN_GUI
D ,B.DBID AS DBID ,B.INSTANCE_NAME AS INSTANCE_NAME ,B.TIMEGROUPING AS TIMEGROUPING ,BSLN.TIMEGROUP(B.TIMEGROUPING,:B4 ) AS TIMEGROUP ,
D.METRIC_ID AS METRIC_ID FROM BSLN_BASELINES B ,BSLN_METRIC_DEFAULTS D WHERE B.STATUS = DECODE(:B2 , NULL, :B3 , B.STATUS) AND B.BSLN_G
UID = NVL(:B2 ,B.BSLN_GUID) AND B.TIMEGROUPING IS NOT NULL AND D.METRIC_ID = NVL(:B1 ,D.METRIC_ID) ) BLDS WHERE BLDS.BSLN_GUID = TP.BSL
N_GUID AND BLDS.METRIC_ID = TP.METRIC_ID AND BLDS.BSLN_

000000008C98BEE0
SELECT BLDS.BSLN_GUID ,BLDS.METRIC_ID ,:B4 ,BLDS.TIMEGROUP ,BLDS.DBID ,BLDS.INSTANCE_NAME ,TP.THRESHOLD_METHOD ,TP.NUM_OCCURRENCES ,TP.
WARNING_PARAM ,TP.CRITICAL_PARAM ,TP.FAIL_ACTION ,ST.SAMPLE_COUNT ,ROUND(ST.MINIMUM,3) AS MINIMUM ,ROUND(ST.MAXIMUM,3) AS MAXIMUM ,ROUN
D(ST.PCTILE_95,3) AS PCTILE_95 ,ROUND(ST.PCTILE_99,3) AS PCTILE_99 ,ROUND(ST.EST_PCTILE_999,3) AS PCTILE_999 ,ROUND(ST.EST_PCTILE_9999,
3) AS PCTILE_9999 ,EST_FIT_QUALITY ,EST_SAMPLE_COUNT FROM BSLN_THRESHOLD_PARAMS TP ,BSLN_STATISTICS ST ,(SELECT B.BSLN_GUID AS BSLN_GUI
D ,B.DBID AS DBID ,B.INSTANCE_NAME AS INSTANCE_NAME ,B.TIMEGROUPING AS TIMEGROUPING ,BSLN.TIMEGROUP(B.TIMEGROUPING,:B4 ) AS TIMEGROUP ,
D.METRIC_ID AS METRIC_ID FROM BSLN_BASELINES B ,BSLN_METRIC_DEFAULTS D WHERE B.STATUS = DECODE(:B2 , NULL, :B3 , B.STATUS) AND B.BSLN_G
UID = NVL(:B2 ,B.BSLN_GUID) AND B.TIMEGROUPING IS NOT NULL AND D.METRIC_ID = NVL(:B1 ,D.METRIC_ID) ) BLDS WHERE BLDS.BSLN_GUID = TP.BSL
N_GUID AND BLDS.METRIC_ID = TP.METRIC_ID AND BLDS.BSLN_

000000008B3F9648
SELECT BLDS.BSLN_GUID ,BLDS.METRIC_ID ,:B4 ,BLDS.TIMEGROUP ,BLDS.DBID ,BLDS.INSTANCE_NAME ,TP.THRESHOLD_METHOD ,TP.NUM_OCCURRENCES ,TP.
WARNING_PARAM ,TP.CRITICAL_PARAM ,TP.FAIL_ACTION ,ST.SAMPLE_COUNT ,ROUND(ST.MINIMUM,3) AS MINIMUM ,ROUND(ST.MAXIMUM,3) AS MAXIMUM ,ROUN
D(ST.PCTILE_95,3) AS PCTILE_95 ,ROUND(ST.PCTILE_99,3) AS PCTILE_99 ,ROUND(ST.EST_PCTILE_999,3) AS PCTILE_999 ,ROUND(ST.EST_PCTILE_9999,
3) AS PCTILE_9999 ,EST_FIT_QUALITY ,EST_SAMPLE_COUNT FROM BSLN_THRESHOLD_PARAMS TP ,BSLN_STATISTICS ST ,(SELECT B.BSLN_GUID AS BSLN_GUI
D ,B.DBID AS DBID ,B.INSTANCE_NAME AS INSTANCE_NAME ,B.TIMEGROUPING AS TIMEGROUPING ,BSLN.TIMEGROUP(B.TIMEGROUPING,:B4 ) AS TIMEGROUP ,
D.METRIC_ID AS METRIC_ID FROM BSLN_BASELINES B ,BSLN_METRIC_DEFAULTS D WHERE B.STATUS = DECODE(:B2 , NULL, :B3 , B.STATUS) AND B.BSLN_G
UID = NVL(:B2 ,B.BSLN_GUID) AND B.TIMEGROUPING IS NOT NULL AND D.METRIC_ID = NVL(:B1 ,D.METRIC_ID) ) BLDS WHERE BLDS.BSLN_GUID = TP.BSL
N_GUID AND BLDS.METRIC_ID = TP.METRIC_ID AND BLDS.BSLN_

000000008C846E10
select substrb(dump(

000000008B34FF78 SYS
DBA_AWS

000000008B156728
SELECT INCARNATION#, INCARNATION#, RESETLOGS_CHANGE#, RESETLOGS_TIME FROM V$DATABASE_INCARNATION WHERE STATUS = 'CURRENT'

0000000088ECFEB0
SELECT INCARNATION#, INCARNATION#, RESETLOGS_CHANGE#, RESETLOGS_TIME FROM V$DATABASE_INCARNATION WHERE STATUS = 'CURRENT'

000000008CA95800 SYS
AQ$_SUBSCRIBER_TABLE

000000008B03B1F8 SYS
SYS_OBJECTS

000000008CA79B10
SELECT O.OBJ#, CO.NA

0000000092C81698
select order#,columns,types from access$ where d_obj#=:1

000000008B3369C8
select order#,columns,types from access$ where d_obj#=:1

0000000088D30848
select order#,columns,types from access$ where d_obj#=:1

0000000088D54578
select order#,columns,types from access$ where d_obj#=:1

0000000088FE5080
select order#,columns,types from access$ where d_obj#=:1

000000008B110F40
select order#,columns,types from access$ where d_obj#=:1

0000000092C81B18
select order#,columns,types from access$ where d_obj#=:1

0000000060D84A88
SELECT /*+ leading(u osp tsp) */ OP.SUBNAME FROM SYS.USER$ U, SYS.OBJ$ OSP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OP WHERE U.NAME = :B3 AND OSP
.OWNER# = U.USER# AND OSP.NAME = :B2 AND OSP.NAMESPACE = 1 AND OSP.REMOTEOWNER IS NULL AND OSP.LINKNAME IS NULL AND OSP.SUBNAME = :B1 A
ND OSP.TYPE# = 34 AND OSP.OBJ# = TSP.OBJ# AND OP.OBJ# = TSP.POBJ#

000000008B088840
SELECT /*+ leading(u osp tsp) */ OP.SUBNAME FROM SYS.USER$ U, SYS.OBJ$ OSP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OP WHERE U.NAME = :B3 AND OSP
.OWNER# = U.USER# AND OSP.NAME = :B2 AND OSP.NAMESPACE = 1 AND OSP.REMOTEOWNER IS NULL AND OSP.LINKNAME IS NULL AND OSP.SUBNAME = :B1 A
ND OSP.TYPE# = 34 AND OSP.OBJ# = TSP.OBJ# AND OP.OBJ# = TSP.POBJ#

000000008B0E1FB8
DELETE FROM sys.snap_loadertime$ sd  WHERE sd.tableobj# = :1

000000008B1016E8
DELETE FROM sys.snap_loadertime$ sd  WHERE sd.tableobj# = :1

000000008B12F858
SELECT COOKIE, PASSE

000000008B197A28
SELECT BP.RECID, BP.

0000000060C998C0
select table_name from dict where table_name like '%DBA%COLU%'

000000008B28F7E8
select table_name from dict where table_name like '%DBA%COLU%'

0000000060D44430
7e60ae14fa8dd45bbdef91c23c3f95

0000000060EF70C0
87fdf86ca1795cbaa0ff66e4743765fb

0000000088F32378 SYS
WRH$_ACTIVE_SESSION_HISTORY_PK

0000000088CCF868
SELECT MIN(SNAP_ID)

0000000092CD34D8
select substrb(dump(

000000008B0A7520
select pid, serial#, category, allocated, used, max_allocated from gv$process_memory where inst_id = USERENV('Instance')

0000000092C393D8
select pid, serial#, category, allocated, used, max_allocated from gv$process_memory where inst_id = USERENV('Instance')

0000000088C74A80
5bf1f14aab81cc3b11886e3770d38e

0000000092D1B5E8 SYS
WRH$_LATCH_PK

000000008C88B638
select /*+  no_paral

00000000652D1AE0 SYS
TP$

000000008B092FA0
SELECT /*+ leading(S

000000008C89E8C8
select substrb(dump(

000000008CB35678
SELECT COUNT(*) FROM

000000008CA95F70 $BUILD$
41df4a8cf9b4bb58

000000008B125638
26623fdcdf766db85b11fbeed3850a3b

000000008CBAE338
SELECT CASE WHEN BITAND(FLAGS,2) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,2048) FROM SYS.IND$ T WHERE T.OBJ# = :B1

000000008B0C4150
SELECT CASE WHEN BITAND(FLAGS,2) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,2048) FROM SYS.IND$ T WHERE T.OBJ# = :B1

000000008B06F0F0
SELECT CASE WHEN BITAND(FLAGS,2) = 0 THEN NULL ELSE ANALYZETIME END, BITAND(FLAGS,2048) FROM SYS.IND$ T WHERE T.OBJ# = :B1

0000000060C4BE10
2adba16322aa4af64efa1c96a3baf98d

000000008B13EAD0
cce011046b7ffd49c15462b967fda20b

000000008CBE9DF8 SYS
SUBCOLTYPE$

0000000060EDBDB0
126d6ef6e8917aa385ebb411cd4346ba

0000000060F296B0
6c74c279bd18e4cf9f948a983fe7843

000000008C943068
select bo#, intcol# from icoldep$ where obj#=:1

0000000088C6EC30
select bo#, intcol# from icoldep$ where obj#=:1

000000008CABE7E8
select bo#, intcol# from icoldep$ where obj#=:1

000000008C9434E8
select bo#, intcol# from icoldep$ where obj#=:1

0000000092D6FFE8 SYS
V$WAITSTAT

000000008C935900 SYS
UTL_RAW

000000008B3B4788
SELECT SUBNAME, PROP

0000000088E9A230
SELECT S.REPAIR_TYPE

0000000088DBC3B8
select substrb(dump(

000000008B3FEE18
821b215a2e5a6d97333c5eb027d8f45e

0000000088EBA690
select inst_id,df_fenum,to_number(df_fecrc_scn), to_date(df_fecrc_tim,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), df_fetsn,df_ferf
n, decode(df_fetsn,0,decode(bitand(df_festa,2),0,'SYSOFF','SYSTEM'),   decode(bitand(df_festa,18),0,'OFFLINE',2,'ONLINE','RECOVER')), d
ecode(df_fedor,2,'READ ONLY',   decode(bitand(df_festa, 12),     0,'DISABLED',4,'READ ONLY',12,'READ WRITE','UNKNOWN')), to_number(df_f
ecps), to_date(df_fecpt,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), to_number(df_feurs), to_date(df_feurt,'MM/DD/RR HH24:MI:SS','N
LS_CALENDAR=Gregorian'), to_number(df_fests), decode(df_fests,NULL,to_date(NULL),  to_date(df_festt,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR
=Gregorian')), to_number(df_feofs),to_number(df_feonc_scn), to_date(df_feonc_tim,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), df_fh
fsz*df_febsz,df_fhfsz,df_fecsz*df_febsz,df_febsz,df_fnnam, df_fefdb, df_fnbof,  decode(df_fepax, 0, 'UNKNOWN', 65535, 'NONE', df_fnauxn
am),     to_number(df_fhfirstunrecscn),

000000008B362458
select inst_id,df_fenum,to_number(df_fecrc_scn), to_date(df_fecrc_tim,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), df_fetsn,df_ferf
n, decode(df_fetsn,0,decode(bitand(df_festa,2),0,'SYSOFF','SYSTEM'),   decode(bitand(df_festa,18),0,'OFFLINE',2,'ONLINE','RECOVER')), d
ecode(df_fedor,2,'READ ONLY',   decode(bitand(df_festa, 12),     0,'DISABLED',4,'READ ONLY',12,'READ WRITE','UNKNOWN')), to_number(df_f
ecps), to_date(df_fecpt,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), to_number(df_feurs), to_date(df_feurt,'MM/DD/RR HH24:MI:SS','N

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
LS_CALENDAR=Gregorian'), to_number(df_fests), decode(df_fests,NULL,to_date(NULL),  to_date(df_festt,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR
=Gregorian')), to_number(df_feofs),to_number(df_feonc_scn), to_date(df_feonc_tim,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), df_fh
fsz*df_febsz,df_fhfsz,df_fecsz*df_febsz,df_febsz,df_fnnam, df_fefdb, df_fnbof,  decode(df_fepax, 0, 'UNKNOWN', 65535, 'NONE', df_fnauxn
am),     to_number(df_fhfirstunrecscn),

0000000092C3E0E8
select sdo_geor_def.isDropColumn(:1) from dual

0000000060C985F0
select sdo_geor_def.isDropColumn(:1) from dual

0000000088C867D8
SELECT W.SQL_ID, W.S

000000008B2C67B0
cef0429a290691c83a49a378e3a2d601

000000008C9F6A00 SYS
DBMS_SQLTUNE_UTIL2

0000000088D96668
SELECT snap_id , OPTIMIZER_ENV_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.OPTENVHV_KEWROEE  OPTIMIZE
R_ENV_HASH_VALUE FROM X$KEWRTOPTENV t1, WRH$_OPTIMIZER_ENV t2      WHERE t2.dbid(+)  = :dbid  AND t2.OPTIMIZER_ENV_HASH_VALUE(+) = t1.O
PTENVHV_KEWROEE) WHERE nvl(snap_id, 0) < :snap_id

000000008B235300
SELECT snap_id , OPTIMIZER_ENV_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.OPTENVHV_KEWROEE  OPTIMIZE
R_ENV_HASH_VALUE FROM X$KEWRTOPTENV t1, WRH$_OPTIMIZER_ENV t2      WHERE t2.dbid(+)  = :dbid  AND t2.OPTIMIZER_ENV_HASH_VALUE(+) = t1.O
PTENVHV_KEWROEE) WHERE nvl(snap_id, 0) < :snap_id

000000008CBC9CF8
SELECT snap_id , OPTIMIZER_ENV_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.OPTENVHV_KEWROEE  OPTIMIZE
R_ENV_HASH_VALUE FROM X$KEWRTOPTENV t1, WRH$_OPTIMIZER_ENV t2      WHERE t2.dbid(+)  = :dbid  AND t2.OPTIMIZER_ENV_HASH_VALUE(+) = t1.O
PTENVHV_KEWROEE) WHERE nvl(snap_id, 0) < :snap_id

0000000060F6ABC0
SELECT snap_id , OPTIMIZER_ENV_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.OPTENVHV_KEWROEE  OPTIMIZE
R_ENV_HASH_VALUE FROM X$KEWRTOPTENV t1, WRH$_OPTIMIZER_ENV t2      WHERE t2.dbid(+)  = :dbid  AND t2.OPTIMIZER_ENV_HASH_VALUE(+) = t1.O
PTENVHV_KEWROEE) WHERE nvl(snap_id, 0) < :snap_id

0000000088D96AE8
SELECT snap_id , OPTIMIZER_ENV_HASH_VALUE FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.OPTENVHV_KEWROEE  OPTIMIZE
R_ENV_HASH_VALUE FROM X$KEWRTOPTENV t1, WRH$_OPTIMIZER_ENV t2      WHERE t2.dbid(+)  = :dbid  AND t2.OPTIMIZER_ENV_HASH_VALUE(+) = t1.O
PTENVHV_KEWROEE) WHERE nvl(snap_id, 0) < :snap_id

0000000088CC08F0
lock table sys.mon_mods$ in exclusive mode

000000008CB312D8
lock table sys.mon_mods$ in exclusive mode

000000008B23A850
lock table sys.mon_mods$ in exclusive mode

000000008B11B060
lock table sys.mon_mods$ in exclusive mode

0000000060D18460
lock table sys.mon_mods$ in exclusive mode

000000008C9598B0
lock table sys.mon_mods$ in exclusive mode

0000000088E4A9F8
lock table sys.mon_mods$ in exclusive mode

0000000060D99550
lock table sys.mon_mods$ in exclusive mode

000000008B036298
lock table sys.mon_mods$ in exclusive mode

0000000060C3BA80
lock table sys.mon_mods$ in exclusive mode

0000000060F00DC0
lock table sys.mon_mods$ in exclusive mode

0000000088CC0D70
lock table sys.mon_mods$ in exclusive mode

000000008B3CC2C8
e9449200c5d3efd4798fbbfeabb2a8c4

0000000060F8F550
select substrb(dump(

000000008C9E0DD0 APEX_030200
WWV_FLOW_PURGED_SESSIONS$

0000000060CB3030 MDSYS
SDO_TOPO_GEOMETRY_LAYER

0000000060EA5950
96bc223916aa5dfc4b73aa141b009f8

000000008C8A4090
select sysdate + 10/1440 from dual

000000008B3136F0
select sysdate + 10/1440 from dual

0000000092C63EE0
select file# from file$ where ts#=:1

000000008B2A8D58
select file# from file$ where ts#=:1

0000000092C64360
select file# from file$ where ts#=:1

0000000088F94448
SELECT CHAR_VALUE FROM SYSTEM.PRODUCT_PRIVS WHERE   (UPPER('SQL*Plus') LIKE UPPER(PRODUCT)) AND   ((USER LIKE USERID) OR (USERID = 'PUB
LIC')) AND   (UPPER(ATTRIBUTE) = 'ROLES')

0000000060E540A0
SELECT CHAR_VALUE FROM SYSTEM.PRODUCT_PRIVS WHERE   (UPPER('SQL*Plus') LIKE UPPER(PRODUCT)) AND   ((USER LIKE USERID) OR (USERID = 'PUB
LIC')) AND   (UPPER(ATTRIBUTE) = 'ROLES')

0000000060D2DC58
f17e21ef4ee04a3da07584a58d8e477e

000000008CAF71C8 SYS
V$RSRC_PLAN_HISTORY

0000000088E4BA58
71bc999f612564c419c5a9ed500deaca

000000008B054A90
SELECT COUNT(*) FROM

000000008CBC45C8 SYS
DUAL

000000008B1CF6D8
155a475be022ee6b8ebda2b860095c64

000000008B256EC8
65791431f68fb1be5d4c080ccae9798d

000000008B06C480
SELECT /*+ ordered f

000000006530C9C0
42d450b0bd12699237fac9cabede990e

0000000092D60948 SYS
X$KCCTS

000000008B315548
5a5c13a6a1a308fc5ed7a29a76cbc8

0000000088DDC9F0
INSERT INTO RLM$PRIM

0000000088F96A80
select /*+  no_parallel_index(t, "I_HHA")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_subs
trb_pad  no_expand index(t,"I_HHA") */ count(*) as nrw,count(distinct sys_op_lbid(87483,'L',t.rowid)) as nlb,count(distinct "INF") as n
dk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SCOTT"."HASH_TABLE" t where "INF" is not null

0000000088F840C8
select /*+  no_parallel_index(t, "I_HHA")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_subs
trb_pad  no_expand index(t,"I_HHA") */ count(*) as nrw,count(distinct sys_op_lbid(87483,'L',t.rowid)) as nlb,count(distinct "INF") as n
dk,sys_op_countchg(substrb(t.rowid,1,15),1) as clf from "SCOTT"."HASH_TABLE" t where "INF" is not null

0000000060D31D18
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 155

0000000060D13598
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 155

0000000060D4F6F0
2e616a97e2a136a86b7d026d73105ae7

000000008C920CB8
SELECT COUNT(*) FROM

000000008C85F4A0 DBSNMP
BSLN

0000000088C9F4A8
SELECT PLAN_ID, PLAN

000000008C85E170 SYS
V_$METRICNAME

0000000088C632E0
1a502de2eed7d616a04ff267a57472eb

0000000088DC88F8
select SERVICE_NAME_HASH , SERVICE_NAME , STAT_ID ,  STAT_NAME , VALUE from GV$SERVICE_STATS  where inst_id = USERENV('Instance')

0000000092D226A8
select SERVICE_NAME_HASH , SERVICE_NAME , STAT_ID ,  STAT_NAME , VALUE from GV$SERVICE_STATS  where inst_id = USERENV('Instance')

0000000060F3C010
3325d60efbe40a2ba6289ddcfe0bff55

000000008B10D3D0
b69f3632171f7067e1884362c9479a16

000000008B2EFB70
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

00000000653F27B0
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008CB88A58
select substrb(dump(

000000008B3634F0
INSERT INTO WRI$_ADV

0000000060EDD1F8
SELECT SCRIPT_ID FROM DBA_RECOVERABLE_SCRIPT_HIST WHERE (SYSDATE - CREATION_TIME) >= :B1

0000000088D751B0
SELECT SCRIPT_ID FROM DBA_RECOVERABLE_SCRIPT_HIST WHERE (SYSDATE - CREATION_TIME) >= :B1

000000008CB8B368 SYS
SYS$RAWTOANY

0000000060E3C320
select substrb(dump(

0000000060D69038
3333a6f3951c62cac2d72285ea4372a

000000008C930E18 SYS
DBA_DIRECTORIES

0000000092D60B68 SYS
X$KCCFN

000000008B10E4E8
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  sys.dbms_streams_auto_int.clean_auto_split_merge;  :mydate :=
 next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

000000008CA46A70
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  sys.dbms_streams_auto_int.clean_auto_split_merge;  :mydate :=
 next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

0000000088D1C3C0
create global tempor

00000000653D8520
fdb71e3dd72589aaa96841d22a865b3

0000000088E5E658
7f5259471f5383ccfc3a966b99bf0c76

000000008B188E28
SELECT 1 FROM DUAL W

000000008CAABB88
SELECT TO_NUMBER(VAL

0000000088FF35F0 SYS
PRVT_HDM

0000000060DCA998
416fe8a1ab58cb57edb28450ea090ed1

0000000060DA0BA0
select substrb(dump(

000000008CBB2340 SYS
V$DB_CACHE_ADVICE

00000000652CE530
select  PARTITION_NAME,SUBPARTITION_NAME,NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_SPACE,CHAIN_CNT,  AVG_ROW_LEN,GLOBAL_STATS,USER_STATS,SAMPLE_
SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_tab_subpartitions t where     table_owner = upper(nvl(:owner,user)) and table_n
ame = upper(:table_name) order by SUBPARTITION_POSITION

0000000060F62520
select  PARTITION_NAME,SUBPARTITION_NAME,NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_SPACE,CHAIN_CNT,  AVG_ROW_LEN,GLOBAL_STATS,USER_STATS,SAMPLE_
SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_tab_subpartitions t where     table_owner = upper(nvl(:owner,user)) and table_n
ame = upper(:table_name) order by SUBPARTITION_POSITION

0000000060F31180
select  PARTITION_NAME,SUBPARTITION_NAME,NUM_ROWS,BLOCKS,EMPTY_BLOCKS,AVG_SPACE,CHAIN_CNT,  AVG_ROW_LEN,GLOBAL_STATS,USER_STATS,SAMPLE_
SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_tab_subpartitions t where     table_owner = upper(nvl(:owner,user)) and table_n
ame = upper(:table_name) order by SUBPARTITION_POSITION

0000000060F78C00
select /*+  no_paral

0000000088F74D90
87f94a23e43b3827acaedd41a9c51d1e

0000000065335EE0
67880585537d08ccf5739731c891dc9f

000000008B2544E8 EXFSYS
RLM$SCHACTLIST

000000008CA16870
fadff51864d4762eb2981abea4f7e256

0000000088C5C718
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  A.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008B2233D8
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  A.NUM_ROWS,  T.NUM_NULLS,  round(100 * T.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000092CB8078
DELETE FROM RLM$EQUA

000000008C935B20 SYS
SCHEDULER$_CLASS

0000000088CEC648 SYS
DBA_SQL_PATCHES

000000008CA24738
b3410bfda199076b77f196a81e18e0ae

0000000088D654B8 SYS
X$KCVFH

000000008B2B8848
/* SQL Analyze(1) */

000000008C9F9400
declare     cursor c_sga is SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(TOTAL - FREE, 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROUND((TOTAL
- FREE) / TOTAL * 100, 2) pct_used   FROM (SELECT 'SGA' NAME,                (SELECT SUM(VALUE / 1024 / 1024) FROM V$SGA) TOTAL,
         (SELECT SUM(BYTES / 1024 / 1024)                   FROM V$SGASTAT                  WHERE NAME = 'free memory') FREE
FROM DUAL) UNION SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(USED, 2) USED_MB, ROUND(TOTAL - USED, 2) FREE_MB, ROUND(USED / TOTAL * 100
, 2) pct_used   FROM (SELECT 'PGA' NAME,                (SELECT VALUE / 1024 / 1024 TOTAL                   FROM V$PGASTAT
     WHERE NAME = 'aggregate PGA target parameter') TOTAL,                (SELECT VALUE / 1024 / 1024 USED                   FROM V$PGA
STAT                  WHERE NAME = 'total PGA allocated') USED           FROM DUAL) UNION SELECT NAME, ROUND(TOTAL, 2) TOTAL_MB, ROUND(
(TOTAL - FREE), 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROU

000000008C94A0A0
declare     cursor c_sga is SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(TOTAL - FREE, 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROUND((TOTAL
- FREE) / TOTAL * 100, 2) pct_used   FROM (SELECT 'SGA' NAME,                (SELECT SUM(VALUE / 1024 / 1024) FROM V$SGA) TOTAL,
         (SELECT SUM(BYTES / 1024 / 1024)                   FROM V$SGASTAT                  WHERE NAME = 'free memory') FREE
FROM DUAL) UNION SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(USED, 2) USED_MB, ROUND(TOTAL - USED, 2) FREE_MB, ROUND(USED / TOTAL * 100
, 2) pct_used   FROM (SELECT 'PGA' NAME,                (SELECT VALUE / 1024 / 1024 TOTAL                   FROM V$PGASTAT
     WHERE NAME = 'aggregate PGA target parameter') TOTAL,                (SELECT VALUE / 1024 / 1024 USED                   FROM V$PGA
STAT                  WHERE NAME = 'total PGA allocated') USED           FROM DUAL) UNION SELECT NAME, ROUND(TOTAL, 2) TOTAL_MB, ROUND(
(TOTAL - FREE), 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROU

000000008CAF4558
declare     cursor c_sga is SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(TOTAL - FREE, 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROUND((TOTAL
- FREE) / TOTAL * 100, 2) pct_used   FROM (SELECT 'SGA' NAME,                (SELECT SUM(VALUE / 1024 / 1024) FROM V$SGA) TOTAL,
         (SELECT SUM(BYTES / 1024 / 1024)                   FROM V$SGASTAT                  WHERE NAME = 'free memory') FREE
FROM DUAL) UNION SELECT NAME, ROUND(TOTAL,2) TOTAL_MB, ROUND(USED, 2) USED_MB, ROUND(TOTAL - USED, 2) FREE_MB, ROUND(USED / TOTAL * 100
, 2) pct_used   FROM (SELECT 'PGA' NAME,                (SELECT VALUE / 1024 / 1024 TOTAL                   FROM V$PGASTAT
     WHERE NAME = 'aggregate PGA target parameter') TOTAL,                (SELECT VALUE / 1024 / 1024 USED                   FROM V$PGA
STAT                  WHERE NAME = 'total PGA allocated') USED           FROM DUAL) UNION SELECT NAME, ROUND(TOTAL, 2) TOTAL_MB, ROUND(
(TOTAL - FREE), 2) USED_MB, ROUND(FREE, 2) FREE_MB, ROU

0000000060DE33C8 APEX_030200
WWV_FLOW_IMAGE_PREFIX

000000008B095DB0
INSERT INTO SYS.AUX_

0000000088FE6730
24df364f3cf2c3957efd403f62d30c

0000000088CC6CA8
SELECT XMLELEMENT( "

0000000088C945B8
SELECT XMLCONCAT(:B5

0000000060EDA390
a29569b0fae3de621d7a61de549497cb

0000000092CC7948 SYS
IND$

000000008B2BDEA8
select substrb(dump(

0000000088C55908 SYS
_CURRENT_EDITION_OBJ

0000000088CAF9A8
fd1509c38040bf0ed6333a0265328abb

0000000060D10F08
a5d0689f23e4d1dacadc3ef7eae9704a

0000000060F69B88
SELECT         elapsed_time_total/executions elapsed_time,         cpu_time_total/executions cpu_time_total,         buffer_gets_total/
executions buffer_gets_total,         disk_reads_total/executions disk_reads,         direct_writes_total/executions direct_writes,
     executions,         plan_hash_value,         to_char(plan_time, 'YYYY-MM-DD/HH24:MI:SS') plan_time,         (SELECT   other_xml
       FROM     dba_hist_sql_plan P          WHERE    P.dbid = S.dbid AND                   rownum = 1 AND                   P.plan_has
h_value = S.plan_hash_value AND                   P.id = 1 AND                   P.sql_id = :1) other_xml FROM      (SELECT plan_hash_v
alue,              dbid,              sum(CPU_TIME) AS cpu_time_total,              sum(BUFFER_GETS) AS buffer_gets_total,
 sum(DISK_READS) AS disk_reads_total,              sum(DIRECT_WRITES) AS direct_writes_total,              sum(ROWS_PROCESSED) AS rows_
processed_total,              sum(FETCHES) AS fetches_t

000000008B2DF140
SELECT         elapsed_time_total/executions elapsed_time,         cpu_time_total/executions cpu_time_total,         buffer_gets_total/
executions buffer_gets_total,         disk_reads_total/executions disk_reads,         direct_writes_total/executions direct_writes,
     executions,         plan_hash_value,         to_char(plan_time, 'YYYY-MM-DD/HH24:MI:SS') plan_time,         (SELECT   other_xml
       FROM     dba_hist_sql_plan P          WHERE    P.dbid = S.dbid AND                   rownum = 1 AND                   P.plan_has
h_value = S.plan_hash_value AND                   P.id = 1 AND                   P.sql_id = :1) other_xml FROM      (SELECT plan_hash_v
alue,              dbid,              sum(CPU_TIME) AS cpu_time_total,              sum(BUFFER_GETS) AS buffer_gets_total,
 sum(DISK_READS) AS disk_reads_total,              sum(DIRECT_WRITES) AS direct_writes_total,              sum(ROWS_PROCESSED) AS rows_
processed_total,              sum(FETCHES) AS fetches_t

0000000060CF21E0
SELECT         elapsed_time_total/executions elapsed_time,         cpu_time_total/executions cpu_time_total,         buffer_gets_total/
executions buffer_gets_total,         disk_reads_total/executions disk_reads,         direct_writes_total/executions direct_writes,
     executions,         plan_hash_value,         to_char(plan_time, 'YYYY-MM-DD/HH24:MI:SS') plan_time,         (SELECT   other_xml
       FROM     dba_hist_sql_plan P          WHERE    P.dbid = S.dbid AND                   rownum = 1 AND                   P.plan_has
h_value = S.plan_hash_value AND                   P.id = 1 AND                   P.sql_id = :1) other_xml FROM      (SELECT plan_hash_v
alue,              dbid,              sum(CPU_TIME) AS cpu_time_total,              sum(BUFFER_GETS) AS buffer_gets_total,
 sum(DISK_READS) AS disk_reads_total,              sum(DIRECT_WRITES) AS direct_writes_total,              sum(ROWS_PROCESSED) AS rows_
processed_total,              sum(FETCHES) AS fetches_t

000000008B3D9188 APEX_030200
WWV_FLOWS

0000000088EE8410
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 157

000000008C951A88
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 157

000000008CB86BE8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("TCP") FULL("TCP") NO_PARALLEL_INDEX("TCP") */ 1 AS C1,
 1 AS C2  FROM "SYS"."TABCOMPART$" "TCP" WHERE BITAND("TCP"."FLAGS",32)<>32) SAMPLESUB

000000008C9F29B0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("TCP") FULL("TCP") NO_PARALLEL_INDEX("TCP") */ 1 AS C1,
 1 AS C2  FROM "SYS"."TABCOMPART$" "TCP" WHERE BITAND("TCP"."FLAGS",32)<>32) SAMPLESUB

0000000060F4B140
select /*+  no_paral

0000000060D647F8 SYS
WRH$_LATCH_PARENT_BL

0000000088DD3F38
8cd6ecccfc57ca9760a837cd6507769

000000008C8AC470
79804197b292d39e06edfebdec8fa65

000000008CA7A6B0 SYS
DBMS_SPACE_ADMIN

000000008C997278 SYS
WRH$_SERVICE_WAIT_CLASS_BL

0000000088E557D8
d8ede380430c5f11d497a5982287e3c6

0000000088C616E8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."FLAGS",16)=16 AND BITAND("T"."TRIGFLAG",67108864)<>67108864 THEN 1 ELSE 0 END
AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "T") SAMPLESUB

0000000092D13EF8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."FLAGS",16)=16 AND BITAND("T"."TRIGFLAG",67108864)<>67108864 THEN 1 ELSE 0 END
AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "T") SAMPLESUB

000000008CBD8DB0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("T") FULL("T")
NO_PARALLEL_INDEX("T") */ 1 AS C1, CASE WHEN BITAND("T"."FLAGS",16)=16 AND BITAND("T"."TRIGFLAG",67108864)<>67108864 THEN 1 ELSE 0 END
AS C2 FROM "SYS"."TAB$" SAMPLE BLOCK (2.203269 , 1) SEED (1) "T") SAMPLESUB

0000000088C87748
SELECT O.ATTR1 SQL_I

0000000060F9E720
/* SQL Analyze(1) */

000000008B31C848 SYS
X$KTSSO

0000000088C7F198
select /*+  no_paral

0000000088FF5B00 SYS
WRH$_RSRC_CONSUMER_GROUP

000000008B136C78 SYS
X$KMGSBSADV

000000008B330058
SELECT NVL(MAX(NEXT_

000000008CBF0DE8
SELECT PRV_PRCRULE,

000000008B191000
select substrb(dump(

0000000088C5EF98
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

000000008CA4D360
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

000000008B1CD238
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

0000000060E7A170
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

0000000088EA7150
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

0000000060E1C000
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

0000000060FC3BE0
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

000000008CBFF840
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

0000000088C5F418
delete /*+ index(mm) */ from sys.mon_mods_all$ mm where obj# = :1

000000008B17B2E0
DELETE FROM EXF$JAVA

00000000653D1A40 $BUILD$
32dcbe9798c5bc19

0000000060F04D40
select substrb(dump(

000000008B1A3618
select inst_id, kglstdsc, kglstget, kglstght, decode(kglstget,0,1,kglstght/kglstget),kglstpin,kglstpht, decode(kglstpin,0,1,kglstpht/kg
lstpin),kglstrld,kglstinv, kglstlrq, kglstprq, kglstprq, kglstmiv, kglstmiv from x$kglst where kglsttyp = 'NAMESPACE' and kglstget != 0
                      and LENGTH(kglstdsc) <= 15

000000008B2783B8
select inst_id, kglstdsc, kglstget, kglstght, decode(kglstget,0,1,kglstght/kglstget),kglstpin,kglstpht, decode(kglstpin,0,1,kglstpht/kg
lstpin),kglstrld,kglstinv, kglstlrq, kglstprq, kglstprq, kglstmiv, kglstmiv from x$kglst where kglsttyp = 'NAMESPACE' and kglstget != 0
                      and LENGTH(kglstdsc) <= 15

000000008C87C0F8
6d7fee888683adaccae3944bd21e0fe

000000008B2DA1B0
select  t.INDEX_NAME,t.PARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER_KEY,  t.AVG_DATA_BLO
CKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_ind_partit
ions t,dba_indexes i where     i.table_name = 'EMP' and i.table_owner = 'SCOTT' and i.owner = t.index_owner and i.index_name=t.index_na
me

000000008B1D5308
select  t.INDEX_NAME,t.PARTITION_NAME,t.BLEVEL BLev,t.LEAF_BLOCKS,t.DISTINCT_KEYS,t.NUM_ROWS,t.AVG_LEAF_BLOCKS_PER_KEY,  t.AVG_DATA_BLO
CKS_PER_KEY,t.CLUSTERING_FACTOR,t.GLOBAL_STATS,t.USER_STATS,t.SAMPLE_SIZE,to_char(t.last_analyzed,'MM-DD-YYYY') from     dba_ind_partit
ions t,dba_indexes i where     i.table_name = 'EMP' and i.table_owner = 'SCOTT' and i.owner = t.index_owner and i.index_name=t.index_na
me

0000000092C6C860 APEX_030200
WWV_SEQ

0000000088D64F48
SELECT S.SNAP_ID, S.BEGIN_INTERVAL, S.END_INTERVAL FROM (SELECT SS.SNAP_ID, CAST(SS.BEGIN_INTERVAL_TIME AS DATE) AS BEGIN_INTERVAL, CAS
T(SS.END_INTERVAL_TIME AS DATE) AS END_INTERVAL FROM WRM$_SNAPSHOT SS WHERE SS.DBID = :B3 AND SS.INSTANCE_NUMBER = :B2 AND SS.SNAP_ID <
= :B1 ORDER BY SS.DBID, SS.INSTANCE_NUMBER, SS.SNAP_ID DESC) S WHERE ROWNUM <= 2

0000000092CBDAD8
SELECT S.SNAP_ID, S.BEGIN_INTERVAL, S.END_INTERVAL FROM (SELECT SS.SNAP_ID, CAST(SS.BEGIN_INTERVAL_TIME AS DATE) AS BEGIN_INTERVAL, CAS
T(SS.END_INTERVAL_TIME AS DATE) AS END_INTERVAL FROM WRM$_SNAPSHOT SS WHERE SS.DBID = :B3 AND SS.INSTANCE_NUMBER = :B2 AND SS.SNAP_ID <
= :B1 ORDER BY SS.DBID, SS.INSTANCE_NUMBER, SS.SNAP_ID DESC) S WHERE ROWNUM <= 2

0000000088EA39E8
SELECT S.SNAP_ID, S.BEGIN_INTERVAL, S.END_INTERVAL FROM (SELECT SS.SNAP_ID, CAST(SS.BEGIN_INTERVAL_TIME AS DATE) AS BEGIN_INTERVAL, CAS
T(SS.END_INTERVAL_TIME AS DATE) AS END_INTERVAL FROM WRM$_SNAPSHOT SS WHERE SS.DBID = :B3 AND SS.INSTANCE_NUMBER = :B2 AND SS.SNAP_ID <
= :B1 ORDER BY SS.DBID, SS.INSTANCE_NUMBER, SS.SNAP_ID DESC) S WHERE ROWNUM <= 2

0000000092C34458
SELECT S.SNAP_ID, S.BEGIN_INTERVAL, S.END_INTERVAL FROM (SELECT SS.SNAP_ID, CAST(SS.BEGIN_INTERVAL_TIME AS DATE) AS BEGIN_INTERVAL, CAS
T(SS.END_INTERVAL_TIME AS DATE) AS END_INTERVAL FROM WRM$_SNAPSHOT SS WHERE SS.DBID = :B3 AND SS.INSTANCE_NUMBER = :B2 AND SS.SNAP_ID <
= :B1 ORDER BY SS.DBID, SS.INSTANCE_NUMBER, SS.SNAP_ID DESC) S WHERE ROWNUM <= 2

000000008B39CD28
SELECT S.SNAP_ID, S.BEGIN_INTERVAL, S.END_INTERVAL FROM (SELECT SS.SNAP_ID, CAST(SS.BEGIN_INTERVAL_TIME AS DATE) AS BEGIN_INTERVAL, CAS
T(SS.END_INTERVAL_TIME AS DATE) AS END_INTERVAL FROM WRM$_SNAPSHOT SS WHERE SS.DBID = :B3 AND SS.INSTANCE_NUMBER = :B2 AND SS.SNAP_ID <
= :B1 ORDER BY SS.DBID, SS.INSTANCE_NUMBER, SS.SNAP_ID DESC) S WHERE ROWNUM <= 2

000000008B14E928
SELECT S.SNAP_ID, S.BEGIN_INTERVAL, S.END_INTERVAL FROM (SELECT SS.SNAP_ID, CAST(SS.BEGIN_INTERVAL_TIME AS DATE) AS BEGIN_INTERVAL, CAS
T(SS.END_INTERVAL_TIME AS DATE) AS END_INTERVAL FROM WRM$_SNAPSHOT SS WHERE SS.DBID = :B3 AND SS.INSTANCE_NUMBER = :B2 AND SS.SNAP_ID <
= :B1 ORDER BY SS.DBID, SS.INSTANCE_NUMBER, SS.SNAP_ID DESC) S WHERE ROWNUM <= 2

000000008B3E5880 APEX_030200
WWV_FLOW_SECURITY

000000008B205B38
INSERT INTO WWV_FLOW

0000000088D377F0
4e2dc922bc1a784b7c7751b8b456b7c4

0000000088D34380
SELECT VALUE FROM V$PARAMETER WHERE NAME='compatible'

000000008B2C28E8
SELECT VALUE FROM V$PARAMETER WHERE NAME='compatible'

0000000088DE2158
select substrb(dump(

000000008C872E98
cce9b2a3e6ac25074b3c9aaf32ef4496

000000008CB87F68
SELECT OBJECT_ID, METRIC_VALUE, MESSAGE_LEVEL FROM SYS.WRI$_ALERT_OUTSTANDING , SYS.TS$ WHERE OBJECT_ID <> 0 AND SYS.TS$.TS# = OBJECT_I
D AND SYS.TS$.CONTENTS$ = 0 AND (DECODE(BITAND(SYS.TS$.FLAGS, 16), 16, 1, 0) = 0)

000000008B2A4D08
SELECT OBJECT_ID, METRIC_VALUE, MESSAGE_LEVEL FROM SYS.WRI$_ALERT_OUTSTANDING , SYS.TS$ WHERE OBJECT_ID <> 0 AND SYS.TS$.TS# = OBJECT_I
D AND SYS.TS$.CONTENTS$ = 0 AND (DECODE(BITAND(SYS.TS$.FLAGS, 16), 16, 1, 0) = 0)

000000008B397D00
SELECT * FROM BSLN_BASELINES WHERE BSLN_GUID = :B1

000000008B266998
SELECT * FROM BSLN_BASELINES WHERE BSLN_GUID = :B1

000000008B3F8A18
SELECT * FROM BSLN_BASELINES WHERE BSLN_GUID = :B1

0000000060E93858
SELECT COUNT(*) FROM

000000008B100658
SELECT END_INTERVAL_

000000008C893EF0
881f34d736cbdd28f22fcbead52db0ff

0000000092D31F08
c22142cdb6a93a2932c159d82b144387

0000000060F73570
SELECT RESETLOGS_CHA

0000000088C95FD8
SELECT XMLELEMENT( "

0000000060FBEF18
select /*+  no_paral

0000000092C7B0B8 SYS
OBJAUTH$

000000008C9AE2A0 XDB
XDbD/PLZ01TcHgNAgAIIegtw==

0000000060CEF558
SELECT /* DS_SVC */

0000000060F2BAF0
/* SQL Analyze(1) */

000000008B278248
delete from WRH$_STREAMS_CAPTURE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3DCD48
delete from WRH$_STREAMS_CAPTURE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B28CBB8 APEX_030200
DUAL

000000008C95A298
select * from v$buffer_pool

000000008CB42038
select * from v$buffer_pool

0000000060CD4AE0 $BUILD$
97e04dff516b3299

000000008B3A44F8
f2d9a2d1fa49801b7c619a5a172e930

0000000060FE59E0 $BUILD$
6237b794 9dd7a4b

000000008C968120
b08a18f166b16334c32b96c14278d620

000000008B353A60
SELECT RECID, RECID,

0000000092CE01B0
DELETE FROM SYS.SCHE

000000008C968E10 EXFSYS
DBMS_RLMGR_DR

0000000060D61A70 $BUILD$
6872fa9bbd493c65

000000008CA6A630
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("TP") FULL("TP") NO_PARALLEL_INDEX("TP") */ 1 AS C1, 1
AS C2  FROM "SYS"."TABPART$" "TP" WHERE BITAND("TP"."FLAGS",32)<>32) SAMPLESUB

0000000060E6ADD0
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("TP") FULL("TP") NO_PARALLEL_INDEX("TP") */ 1 AS C1, 1
AS C2  FROM "SYS"."TABPART$" "TP" WHERE BITAND("TP"."FLAGS",32)<>32) SAMPLESUB

000000008B0D6698
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("TP") FULL("TP") NO_PARALLEL_INDEX("TP") */ 1 AS C1, 1
AS C2  FROM "SYS"."TABPART$" "TP" WHERE BITAND("TP"."FLAGS",32)<>32) SAMPLESUB

000000008B19CFA8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("TP") FULL("TP") NO_PARALLEL_INDEX("TP") */ 1 AS C1, 1
AS C2  FROM "SYS"."TABPART$" "TP" WHERE BITAND("TP"."FLAGS",32)<>32) SAMPLESUB

0000000088D4C4A8
delete from WRH$_OPTIMIZER_ENV tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    an
d not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b
.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092CCE0E8
delete from WRH$_OPTIMIZER_ENV tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    an
d not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b
.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B184408
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SID" val,count(*) cnt  from "SYS
"."STATS_TARGET$" t  where "SID" is not null  group by "SID") order by val

0000000088F07CF8
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SID" val,count(*) cnt  from "SYS
"."STATS_TARGET$" t  where "SID" is not null  group by "SID") order by val

000000008CA91FC0
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SID" val,count(*) cnt  from "SYS
"."STATS_TARGET$" t  where "SID" is not null  group by "SID") order by val

000000008B185438
select substrb(dump(val,16,0,32),1,120) ep, cnt from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel_index(t) d
bms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"SID" val,count(*) cnt  from "SYS
"."STATS_TARGET$" t  where "SID" is not null  group by "SID") order by val

0000000088D22340
d5dd4537b1a6318a62005c2ccbccde3

0000000092CFA4C8 $BUILD$
e9effc494fe74388

0000000088EFC678 SYS
GV$MANAGED_STANDBY

0000000060E6C290 SYS
DBMS_LOGREP_UTIL

000000008B3D88C8
SELECT T.FLAGS, T.NA

0000000088F38F60 $BUILD$
ec221f74469fa7bd

0000000088CCF2D8
SELECT MAX(END_INTER

000000008B1D35E8
ddba19a320f695c969f67910439dee

0000000088EDD1E0
INSERT INTO wrh$_datafile   (snap_id, dbid, file#, creation_change#, filename,    ts#, tsname, block_size) SELECT /*+ ordered index(f)
index(ts) */    :lah_snap_id lah, :dbid dbid, f.file# file#,    f.crscnbas + (f.crscnwrp * power(2,32)) creation_change#,    v.name fil
ename, ts.ts# ts#, ts.name tsname, ts.blocksize block_size  FROM  v$dbfile v, file$ f, ts$ ts  WHERE f.file#   = v.file#    and f.statu
s$ = 2    and f.ts#     = ts.ts#    and not exists (SELECT 1 from wrh$_datafile dfh                     WHERE dfh.file#            = f.
file#                       AND dfh.creation_change# = (f.crscnbas +                                                (f.crscnwrp * power
(2,32)))                       AND dfh.dbid             = :dbid2)

0000000092D2B798
INSERT INTO wrh$_datafile   (snap_id, dbid, file#, creation_change#, filename,    ts#, tsname, block_size) SELECT /*+ ordered index(f)
index(ts) */    :lah_snap_id lah, :dbid dbid, f.file# file#,    f.crscnbas + (f.crscnwrp * power(2,32)) creation_change#,    v.name fil
ename, ts.ts# ts#, ts.name tsname, ts.blocksize block_size  FROM  v$dbfile v, file$ f, ts$ ts  WHERE f.file#   = v.file#    and f.statu
s$ = 2    and f.ts#     = ts.ts#    and not exists (SELECT 1 from wrh$_datafile dfh                     WHERE dfh.file#            = f.
file#                       AND dfh.creation_change# = (f.crscnbas +                                                (f.crscnwrp * power
(2,32)))                       AND dfh.dbid             = :dbid2)

0000000088EDD660
INSERT INTO wrh$_datafile   (snap_id, dbid, file#, creation_change#, filename,    ts#, tsname, block_size) SELECT /*+ ordered index(f)
index(ts) */    :lah_snap_id lah, :dbid dbid, f.file# file#,    f.crscnbas + (f.crscnwrp * power(2,32)) creation_change#,    v.name fil
ename, ts.ts# ts#, ts.name tsname, ts.blocksize block_size  FROM  v$dbfile v, file$ f, ts$ ts  WHERE f.file#   = v.file#    and f.statu
s$ = 2    and f.ts#     = ts.ts#    and not exists (SELECT 1 from wrh$_datafile dfh                     WHERE dfh.file#            = f.
file#                       AND dfh.creation_change# = (f.crscnbas +                                                (f.crscnwrp * power
(2,32)))                       AND dfh.dbid             = :dbid2)

000000008B238480
93e68bd5f62696436065a5b1b1a56b6

0000000088E14868
SELECT RM.CONF#, RM.NAME, RM.VALUE FROM V$RMAN_CONFIGURATION RM WHERE ((:B2 IS NULL OR UPPER(:B2 ) = UPPER(RM.NAME)) AND (:B1 IS NULL O
R UPPER(:B1 ) = UPPER(RM.VALUE)))

0000000088E6F430
SELECT RM.CONF#, RM.NAME, RM.VALUE FROM V$RMAN_CONFIGURATION RM WHERE ((:B2 IS NULL OR UPPER(:B2 ) = UPPER(RM.NAME)) AND (:B1 IS NULL O
R UPPER(:B1 ) = UPPER(RM.VALUE)))

0000000092CAE168
select substrb(dump(

0000000060D585E0
2b7313745935366b51e14a17e5737183

000000008B33C2F0
SELECT NAME FROM WWV

00000000652D9FD0
1ac4260b46ce29821d752a28e62abc36

000000008C838C48
df09877e163e5b76f0ebde24ac5b3f2d

0000000060FD0FA8
SELECT :B1 TYPE_CON,

000000008C8BF818
732d1523e906e89a5839117a4fa53ef

000000008B150B18 SYS
DBA_ADVISOR_FINDINGS

000000008C9A7380
select /*+  no_paral

000000008B3F91E8 $BUILD$
eeb467c4fdf9c80f

0000000060EE7E50
1bc4c8d5faa2df703d8c121faaab13e6

0000000088FD25E8
4266ad41f92a147ae48039bfb85647c0

000000008B07D180
SELECT SU.NAME, SO.N

0000000092CA8778
SELECT LOG_ID , REGE

0000000060CF88C8
ee0939a6dd26084ecdd0a459fdf0611a

0000000060DC8AC8
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and ((p.instance
_id is not null    and (to_char(p.instance_id) = :1))    or (p.instance_id is null and p.class_oid is not null    and p.class_oid in (s
elect b.obj# from sys.scheduler$_class b      where bitand(b.flags, :2) <> 0 and lower(b.affinity) = lower(:3))))   UNION ALL   select
q.obj#, q.flags, q.next_run_date, q.job_status, q.class

0000000088CB5698
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and ((p.instance
_id is not null    and (to_char(p.instance_id) = :1))    or (p.instance_id is null and p.class_oid is not null    and p.class_oid in (s
elect b.obj# from sys.scheduler$_class b      where bitand(b.flags, :2) <> 0 and lower(b.affinity) = lower(:3))))   UNION ALL   select
q.obj#, q.flags, q.next_run_date, q.job_status, q.class

0000000060DC8F48
select next_run_date, obj#, run_job, sch_job from (select decode(bitand(a.flags, 16384), 0, a.next_run_date,                a.last_enab
led_time) next_run_date,       a.obj# obj#, decode(bitand(a.flags, 16384), 0, 0, 1) run_job, a.sch_job  sch_job  from  (select p.obj# o
bj#, p.flags flags, p.next_run_date next_run_date,      p.job_status job_status, p.class_oid class_oid,      p.last_enabled_time last_e
nabled_time, p.instance_id instance_id,      1 sch_job   from sys.scheduler$_job p   where bitand(p.job_status, 3) = 1    and ((bitand(
p.flags, 134217728 + 268435456) = 0) or         (bitand(p.job_status, 1024) <> 0))    and bitand(p.flags, 4096) = 0    and ((p.instance
_id is not null    and (to_char(p.instance_id) = :1))    or (p.instance_id is null and p.class_oid is not null    and p.class_oid in (s
elect b.obj# from sys.scheduler$_class b      where bitand(b.flags, :2) <> 0 and lower(b.affinity) = lower(:3))))   UNION ALL   select
q.obj#, q.flags, q.next_run_date, q.job_status, q.class

0000000088FD88C0 SYS
WRH$_ROWCACHE_SUMMARY_PK

0000000088EF5DE8 PUBLIC
AWR_OBJECT_INFO_TYPE

0000000092C91578
29c8cf1a9f6ade901e21be5a8a3aa327

00000000653F6DB0
bf806964b28aec582ee819623a5d89dc

000000008CBDD2A0 $BUILD$
c2f58aeee184488e

0000000088F96500
SELECT TS_ID, OBJN, OBJD, REASON_VALUE, REASON, CREATION_TIME, SEGMENT_OWNER, SEGMENT_NAME, PARTITION_NAME, SEGMENT_TYPE, TABLESPACE_NA
ME FROM SYS.WRI$_SEGADV_OBJLIST WHERE REASON IN ('COMPRESSION', 'SPACE_ALLOC', 'SPACE_USAGE', 'CHAINROWS', 'SCAN', 'ADDM', 'IOWAIT') AN
D STATUS IN ('NEW', 'BEING_PROCESSED') ORDER BY CREATION_TIME, REASON, REASON_VALUE DESC

000000008B210568
SELECT TS_ID, OBJN, OBJD, REASON_VALUE, REASON, CREATION_TIME, SEGMENT_OWNER, SEGMENT_NAME, PARTITION_NAME, SEGMENT_TYPE, TABLESPACE_NA
ME FROM SYS.WRI$_SEGADV_OBJLIST WHERE REASON IN ('COMPRESSION', 'SPACE_ALLOC', 'SPACE_USAGE', 'CHAINROWS', 'SCAN', 'ADDM', 'IOWAIT') AN
D STATUS IN ('NEW', 'BEING_PROCESSED') ORDER BY CREATION_TIME, REASON, REASON_VALUE DESC

000000008B036638
SELECT TS_ID, OBJN, OBJD, REASON_VALUE, REASON, CREATION_TIME, SEGMENT_OWNER, SEGMENT_NAME, PARTITION_NAME, SEGMENT_TYPE, TABLESPACE_NA
ME FROM SYS.WRI$_SEGADV_OBJLIST WHERE REASON IN ('COMPRESSION', 'SPACE_ALLOC', 'SPACE_USAGE', 'CHAINROWS', 'SCAN', 'ADDM', 'IOWAIT') AN
D STATUS IN ('NEW', 'BEING_PROCESSED') ORDER BY CREATION_TIME, REASON, REASON_VALUE DESC

0000000060F790E0
SELECT VALUE FROM V$

0000000060F80F00
SELECT EXECUTION_TYP

0000000060EF3DA8
select substrb(dump(

0000000092D5A798 SYS
X$KCBSC

000000008CA73500
table_1_ff_22b_0_0_0

000000008CA73760
table_1_ff_22b_0_0_0

0000000088D35430 SYS
DBMS_OBFUSCATION_LIB

0000000088F4EBF8
alter table test1 st

0000000088F22608
4c6855784e08880730b0adc51f7ff59

0000000060DBE460
SELECT CAPTURE_USER

000000008C9CC798
ba853e1dba2cc96eb4931671e2a8777

0000000088D2E978 SYS

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
DICT

0000000088D32D48
acc84660c4ff0cdebd5318b24a0c520e

000000008C947518
SELECT A.HOW_CREATED

000000008B1E3448
a738ad6547e98496dbf7e813bc4b0af

0000000060E4AD10
SELECT MAX(ID), MAX(

0000000088DA5258
9519de745a9dab30840a0cf5742a7863

0000000092C7CD38
select ts#,file#,block#,cols,nvl(size$,-1),pctfree$,pctused$,initrans,maxtrans,hashkeys,func,extind,avgchn,nvl(degree,1),nvl(instances,
1),nvl(flags,0),nvl(spare1,0)from clu$ where obj#=:1

0000000092D69218
select ts#,file#,block#,cols,nvl(size$,-1),pctfree$,pctused$,initrans,maxtrans,hashkeys,func,extind,avgchn,nvl(degree,1),nvl(instances,
1),nvl(flags,0),nvl(spare1,0)from clu$ where obj#=:1

000000008B3E09E0
select ts#,file#,block#,cols,nvl(size$,-1),pctfree$,pctused$,initrans,maxtrans,hashkeys,func,extind,avgchn,nvl(degree,1),nvl(instances,
1),nvl(flags,0),nvl(spare1,0)from clu$ where obj#=:1

0000000092C7D1B8
select ts#,file#,block#,cols,nvl(size$,-1),pctfree$,pctused$,initrans,maxtrans,hashkeys,func,extind,avgchn,nvl(degree,1),nvl(instances,
1),nvl(flags,0),nvl(spare1,0)from clu$ where obj#=:1

000000008C9272A8
SELECT VALUE FROM WR

0000000088CAA208 SYS
PRVT_WORKLOAD_NOPRIV

000000008C9E7390
82e4ce628a14adf943a8a06edafa7582

0000000088D68EC8 $BUILD$
21d5e0048561601f

0000000060F6B980 SYS
DBMS_SCHEDULER_LIB

000000008CBBF7F8
/* SQL Analyze(1) */

000000008C964678
d7e453cde05fb7216c59b5398e3917a3

000000008B083E30
SELECT PO.SUBNAME PN

0000000060C94FB0
124f864fbe9273570bf0b78e420fb9

000000008B280CF0
1004614640953018942

0000000088CEA9D8
SELECT MIN(CAST(FROM

000000008C9142A8
SELECT COUNT(*) FROM

0000000060C6F9F0
a08b65e7ebd7c7d8abd482b2db66dc1d

0000000092CAF8A8
SELECT L.THREAD#, LF

0000000088ED0370 SYS
WRH$_PERSISTENT_QUEUES

000000008B2697B8
723861f8ce4e1696a3d9b1c266855d0

0000000060E50270
72be447c7285373334cc98ea6461ad42

000000008C845E38
update obj$ set obj#=:4, type#=:5,ctime=:6,mtime=:7,stime=:8,status=:9,dataobj#=:10,flags=:11,oid$=:12,spare1=:13, spare2=:14 where own
er#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname=:15

000000008B2C9110
update obj$ set obj#=:4, type#=:5,ctime=:6,mtime=:7,stime=:8,status=:9,dataobj#=:10,flags=:11,oid$=:12,spare1=:13, spare2=:14 where own
er#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname=:15

0000000060E138B0 $BUILD$
cf95b13ef7200df7

000000008B1BD600
select /*+  no_paral

0000000060E27EB0
SELECT /*+ leading(u o) */ O.SUBNAME PART_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TABPART$ TP, SYS.TABCOMPART$ TCP WHERE
 :B3 IS NULL AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS N
ULL AND O.TYPE# = 19 AND O.OBJ# = TP.OBJ#(+) AND O.OBJ# = TCP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.SUBNAME PA
RT_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND
 O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 19 UNION ALL SELECT /*+ leading(u osp tsp) */ OP.SUBNAM
E PART_NAME, OP.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ OSP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OP WHERE U.NAME = :B2 AND OSP.OWNER# = U.USE
R# AND OSP.NAME = :B1 AND OSP.NAMESPACE = 1 AND OSP.REMOTEOWNER IS NULL AND OSP.LINKNAME IS NULL AND OSP.SUBNAME = :B3 AND OSP.TYPE# =
34 AND OSP.OBJ# = TSP.OBJ# AND OP.OBJ# = TSP.POBJ# ) WH

0000000060F4E0C0
SELECT /*+ leading(u o) */ O.SUBNAME PART_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TABPART$ TP, SYS.TABCOMPART$ TCP WHERE
 :B3 IS NULL AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS N
ULL AND O.TYPE# = 19 AND O.OBJ# = TP.OBJ#(+) AND O.OBJ# = TCP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.SUBNAME PA
RT_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND
 O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 19 UNION ALL SELECT /*+ leading(u osp tsp) */ OP.SUBNAM
E PART_NAME, OP.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ OSP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OP WHERE U.NAME = :B2 AND OSP.OWNER# = U.USE
R# AND OSP.NAME = :B1 AND OSP.NAMESPACE = 1 AND OSP.REMOTEOWNER IS NULL AND OSP.LINKNAME IS NULL AND OSP.SUBNAME = :B3 AND OSP.TYPE# =
34 AND OSP.OBJ# = TSP.OBJ# AND OP.OBJ# = TSP.POBJ# ) WH

0000000060E7DFC0
SELECT /*+ leading(u o) */ O.SUBNAME PART_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TABPART$ TP, SYS.TABCOMPART$ TCP WHERE
 :B3 IS NULL AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS N
ULL AND O.TYPE# = 19 AND O.OBJ# = TP.OBJ#(+) AND O.OBJ# = TCP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.SUBNAME PA
RT_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND
 O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 19 UNION ALL SELECT /*+ leading(u osp tsp) */ OP.SUBNAM
E PART_NAME, OP.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ OSP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OP WHERE U.NAME = :B2 AND OSP.OWNER# = U.USE
R# AND OSP.NAME = :B1 AND OSP.NAMESPACE = 1 AND OSP.REMOTEOWNER IS NULL AND OSP.LINKNAME IS NULL AND OSP.SUBNAME = :B3 AND OSP.TYPE# =
34 AND OSP.OBJ# = TSP.OBJ# AND OP.OBJ# = TSP.POBJ# ) WH

000000008B08AD40
SELECT /*+ leading(u o) */ O.SUBNAME PART_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TABPART$ TP, SYS.TABCOMPART$ TCP WHERE
 :B3 IS NULL AND U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS N
ULL AND O.TYPE# = 19 AND O.OBJ# = TP.OBJ#(+) AND O.OBJ# = TCP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.SUBNAME PA
RT_NAME, O.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 1 AND
 O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 19 UNION ALL SELECT /*+ leading(u osp tsp) */ OP.SUBNAM
E PART_NAME, OP.OBJ# OBJ_NUM FROM SYS.USER$ U, SYS.OBJ$ OSP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OP WHERE U.NAME = :B2 AND OSP.OWNER# = U.USE
R# AND OSP.NAME = :B1 AND OSP.NAMESPACE = 1 AND OSP.REMOTEOWNER IS NULL AND OSP.LINKNAME IS NULL AND OSP.SUBNAME = :B3 AND OSP.TYPE# =
34 AND OSP.OBJ# = TSP.OBJ# AND OP.OBJ# = TSP.POBJ# ) WH

000000008B107308
SELECT DECODE(VALUE, 'NONE', 0, 1) FROM V$PARAMETER WHERE LOWER(NAME) = 'control_management_pack_access'

000000008B1B6560
SELECT DECODE(VALUE, 'NONE', 0, 1) FROM V$PARAMETER WHERE LOWER(NAME) = 'control_management_pack_access'

000000008CAC60E8
847dd948a0ba43328868eea46d16545c

0000000088DFED28 $BUILD$
12922cc3f1408a2e

0000000060C3B090 SYS
AQ$_RECIPIENTS

000000008C86EE38 SYS
AQ$_SCHEDULER_FILEWATCHER_QT_L

0000000060E3B0E0 SYS
OLAP_CUBE_DIMENSIONS$

0000000088D69D38
292889622b461165119943eb69c47f6

000000008CB95EB8
select sql_id, plan_hash_value, bucket_id,        begin_snap, end_snap from   (select   dbid, sql_id, bucket_id, plan_hash_value,
    begin_snap, end_snap, cpu_plus_io from     (select  dbid, sql_id, bucket_id, plan_hash_value,                   begin_snap, end_sna
p, cpu_plus_io,                   row_number() over (partition by bucket_id                                      order by     cpu_plus_
io desc)                     as within_bucket_rnk           from    (select   dbid, sql_id, bucket_id,                             max(
plan_hash_value) keep (dense_rank last                               order by cpu_plus_io) plan_hash_value,
 max(begin_snap) keep (dense_rank last                               order by cpu_plus_io) begin_snap,                             max(
end_snap) keep (dense_rank last                               order by cpu_plus_io) end_snap,                             max(cpu_plus_
io) cpu_plus_io                    from     (select dbi

000000008B361050
select sql_id, plan_hash_value, bucket_id,        begin_snap, end_snap from   (select   dbid, sql_id, bucket_id, plan_hash_value,
    begin_snap, end_snap, cpu_plus_io from     (select  dbid, sql_id, bucket_id, plan_hash_value,                   begin_snap, end_sna
p, cpu_plus_io,                   row_number() over (partition by bucket_id                                      order by     cpu_plus_
io desc)                     as within_bucket_rnk           from    (select   dbid, sql_id, bucket_id,                             max(
plan_hash_value) keep (dense_rank last                               order by cpu_plus_io) plan_hash_value,
 max(begin_snap) keep (dense_rank last                               order by cpu_plus_io) begin_snap,                             max(
end_snap) keep (dense_rank last                               order by cpu_plus_io) end_snap,                             max(cpu_plus_
io) cpu_plus_io                    from     (select dbi

0000000092C47200
select sql_id, plan_hash_value, bucket_id,        begin_snap, end_snap from   (select   dbid, sql_id, bucket_id, plan_hash_value,
    begin_snap, end_snap, cpu_plus_io from     (select  dbid, sql_id, bucket_id, plan_hash_value,                   begin_snap, end_sna
p, cpu_plus_io,                   row_number() over (partition by bucket_id                                      order by     cpu_plus_
io desc)                     as within_bucket_rnk           from    (select   dbid, sql_id, bucket_id,                             max(
plan_hash_value) keep (dense_rank last                               order by cpu_plus_io) plan_hash_value,
 max(begin_snap) keep (dense_rank last                               order by cpu_plus_io) begin_snap,                             max(
end_snap) keep (dense_rank last                               order by cpu_plus_io) end_snap,                             max(cpu_plus_
io) cpu_plus_io                    from     (select dbi

0000000088D87148
616b3a5d53182784763be5e792c529c4

0000000060DA7550
select component, current_size, min_size, max_size, user_specified_size,     oper_count, last_oper_type, last_oper_mode, last_oper_time
, granule_size   from gv$memory_dynamic_components   where inst_id = USERENV('Instance')

0000000088F54428
select component, current_size, min_size, max_size, user_specified_size,     oper_count, last_oper_type, last_oper_mode, last_oper_time
, granule_size   from gv$memory_dynamic_components   where inst_id = USERENV('Instance')

000000008B28B238 SYS
GV$SCHEDULER_RUNNING_JOBS

000000008B252E28
SELECT DECODE(TYPE,

000000008B3D45E8 APEX_030200
WWV_FLOW_PLSQL_JOB

0000000088E3DB60
SELECT ID FROM WWV_F

000000008C8626D8
select lobtsn, lobrdba, lobobjid from x$lobstat   where lobspcdealloc > 0 and lobcurrtime >= :1   order by lobspcdealloc desc

000000008B2567C8
select lobtsn, lobrdba, lobobjid from x$lobstat   where lobspcdealloc > 0 and lobcurrtime >= :1   order by lobspcdealloc desc

000000008C862848
select lobtsn, lobrdba, lobobjid from x$lobstat   where lobspcdealloc > 0 and lobcurrtime >= :1   order by lobspcdealloc desc

0000000088C91388
DELETE WRI$_SQLSET_B

0000000088E4B418
select /*+  no_paral

000000008CA3FB20
SELECT CAPTURE_USER

000000008CB21C30
SELECT RESETLOGS_CHA

0000000060E63C60
c59bccec102673fbefb9afef353722f

000000008B320D28
select distinct(-privilege#),nvl(option$,0) from sysauth$ where grantee#=:1 and privilege#<0

000000008C89BCA8
select distinct(-privilege#),nvl(option$,0) from sysauth$ where grantee#=:1 and privilege#<0

0000000060F92190
SELECT :B1 TYPE_CON,

0000000088E2ACE8
e16067c0985cb1cb83bd4ecf2f3140c8

000000008B34C850
SELECT BEGIN_INTERVA

0000000088F6B7A8
select     TABLE_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     to_char(t.last_an
alyzed,'MM-DD-YYYY') from dba_tables t where     owner = 'SCOTT' and table_name = 'EMP'

000000008C903C80
select     TABLE_NAME,     NUM_ROWS,     BLOCKS,     EMPTY_BLOCKS,     AVG_SPACE,     CHAIN_CNT,     AVG_ROW_LEN,     to_char(t.last_an
alyzed,'MM-DD-YYYY') from dba_tables t where     owner = 'SCOTT' and table_name = 'EMP'

000000008CAB4F90
SELECT GREATEST(NVL(

0000000088E4FBB0
1e72adecced337a334088361336bcbb3

000000008CAEAB98 SYS
WRI$_ADV_WORKLOAD

0000000060F1FA70 SYS
DBMS_ASSERT

0000000060D3DB88
670692365acf11152f732823861d1cc

0000000088DF9F48 SYS
ANYTYPE

000000008B1EEB68
declare     v_database_role varchar2(100) :=null;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;
  v_switchover  varchar2(100) :=null;     v_force_logging varchar2(100) :=null;    cursor c_lag is select inst_id,name,value from gv$da
taguard_stats where name like '%lag%' order by inst_id,name;   v_lag c_lag%rowtype;   cursor c_max_sequence is select thread#,max(seque
nce#) as max_sequence from v$archived_log group by thread# order by thread#;   cursor c_dest_error is select inst_id,dest_name,   decod
e(regexp_substr(destination,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))'),null,'None',   r
egexp_substr(destination,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))')) as destination,
decode(error,null,'None',error) as error from gv$archive_dest where destination is not null order by dest_id;   v_dest_error c_dest_err
or%rowtype;   v_max_sequence c_max_sequence%rowtype;

000000006532F5D0
declare     v_database_role varchar2(100) :=null;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;
  v_switchover  varchar2(100) :=null;     v_force_logging varchar2(100) :=null;    cursor c_lag is select inst_id,name,value from gv$da
taguard_stats where name like '%lag%' order by inst_id,name;   v_lag c_lag%rowtype;   cursor c_max_sequence is select thread#,max(seque
nce#) as max_sequence from v$archived_log group by thread# order by thread#;   cursor c_dest_error is select inst_id,dest_name,   decod
e(regexp_substr(destination,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))'),null,'None',   r
egexp_substr(destination,'((25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))\.){3}(25[0-5]|2[0-4]\d|((1\d{2})|([1-9]?\d)))')) as destination,
decode(error,null,'None',error) as error from gv$archive_dest where destination is not null order by dest_id;   v_dest_error c_dest_err
or%rowtype;   v_max_sequence c_max_sequence%rowtype;

0000000088E71C40
f70a40e6b81497efef8a1969ea710ea5

000000008B3A90C8 SYS
DBMS_AUTO_TASK_ADMIN

000000008C914598
SELECT EXEC_NAME FRO

0000000092D50D18 DBSNMP
BSLN_INTERNAL

0000000088E80160
3c4575bde944ad084bcea3bcedf70d98

0000000088C6F6A0
insert into sys.wri$_optstat_tab_history(obj#,rowcnt,blkcnt,avgrln, analyzetime,samplesize,cachedblk,cachehit,logicalread,savtime,spare
1,flags)  values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12)

0000000092D11508
insert into sys.wri$_optstat_tab_history(obj#,rowcnt,blkcnt,avgrln, analyzetime,samplesize,cachedblk,cachehit,logicalread,savtime,spare
1,flags)  values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12)

000000008B0A6900
insert into sys.wri$_optstat_tab_history(obj#,rowcnt,blkcnt,avgrln, analyzetime,samplesize,cachedblk,cachehit,logicalread,savtime,spare
1,flags)  values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12)

0000000060E70750
insert into sys.wri$_optstat_tab_history(obj#,rowcnt,blkcnt,avgrln, analyzetime,samplesize,cachedblk,cachehit,logicalread,savtime,spare
1,flags)  values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12)

0000000088C6FB20
insert into sys.wri$_optstat_tab_history(obj#,rowcnt,blkcnt,avgrln, analyzetime,samplesize,cachedblk,cachehit,logicalread,savtime,spare
1,flags)  values  (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12)

000000008B3B4C48
SELECT U.NAME, O.NAM

000000008CB7B888
72be447c7285373334cc98ea6461ad42

0000000092D31968
bc2e645428b8682ed7d72cd0c5ad3f39

000000008CB4FD78
SELECT T.NAME, T.SCH

0000000060FE9930
9491ca844a8446e1e75fbefe724204b2

0000000060FBA550 SCOTT
I_HHA

0000000060FEEAD0
select column_name from dba_tab_columns where owner=:1 and table_name=:2

0000000060E3DEB0
select column_name from dba_tab_columns where owner=:1 and table_name=:2

0000000088EFC238
select column_name from dba_tab_columns where owner=:1 and table_name=:2

000000008C926268
DELETE FROM WRI$_ADV

0000000088E25E28 SYS
V_$PGASTAT

000000008CB9F0F8
DELETE FROM RLM$SCHA

000000008B054450
SELECT COUNT(*) FROM

000000008B04C160
DELETE FROM SYS.COL_

0000000060CA2FF0
SELECT PARAMETER_VAL

000000008B1A3788
select substrb(dump(

0000000060DD1BF8 SYS
WRH$_INTERCONNECT_PINGS_BL

0000000088CAC838
b8c386265b6c44d09f649250e82c6e6c

0000000092C7DCB8 SYS
I_IND_STATS$_OBJ#

0000000088E73EF8 PUBLIC
USER_SCHEDULER_JOBS

0000000060F23710
select substrb(dump(

0000000088C74C90
select * from scott.emp

000000008CAC8B78
select * from scott.emp

000000008B30E2C8
select * from scott.emp

0000000092D16A50
SELECT WRI$_ADV_SEQ_EXEC.NEXTVAL FROM DUAL

000000008C91F098
SELECT WRI$_ADV_SEQ_EXEC.NEXTVAL FROM DUAL

000000008C8677C8
71bf9a5f12113d1746f83d9929d601ee

0000000060DC64C8 ORACLE_OCM
V$INSTANCE

000000008B27A228
UPDATE sys.wri$_adv_tasks SET mtime = SYSDATE WHERE id = :1

0000000092D4B800
UPDATE sys.wri$_adv_tasks SET mtime = SYSDATE WHERE id = :1

00000000652BD4A0
UPDATE sys.wri$_adv_tasks SET mtime = SYSDATE WHERE id = :1

0000000060C91600
UPDATE sys.wri$_adv_tasks SET mtime = SYSDATE WHERE id = :1

0000000088F46578
DELETE FROM RLM$EQUA

000000008B34D918
2e616a97e2a136a86b7d026d73105ae7

0000000060CA43B0
select /*+  no_paral

000000008CAF7E48 SYS
V$SGASTAT

0000000088C6E7C0
INSERT INTO SYS.SCHE

0000000088D19280 SCOTT
SCOTT

0000000060DDC058
ffd7aea7efb61a721c1de067c669b4b2

000000008B0E05D8
select substrb(dump(

000000008C8DE3B8 SYS
B

0000000088F86EF8 PUBLIC
V$BUFFER_POOL?

000000008B3B5498
SELECT OBJECT_TYPE,

0000000088FBFFC8
BEGIN   DBMS_STATS.GATHER_TABLE_STATS(ownname          => 'SCOTT',                                 tabname          => 'HASH_TABLE',
                              estimate_percent => 100,                                 method_opt       => 'FOR ALL COLUMNS SIZE 10',
                               no_invalidate    => FALSE,                                 degree           => 1,
          granularity      => 'ALL',                                 cascade          => TRUE); END;

000000008B158438
BEGIN   DBMS_STATS.GATHER_TABLE_STATS(ownname          => 'SCOTT',                                 tabname          => 'HASH_TABLE',
                              estimate_percent => 100,                                 method_opt       => 'FOR ALL COLUMNS SIZE 10',
                               no_invalidate    => FALSE,                                 degree           => 1,
          granularity      => 'ALL',                                 cascade          => TRUE); END;

0000000060DEB0C8
SELECT COUNT(*) FROM

0000000060D8C628
5839188172e9899c39db72ca5580d616

000000008CBD5A50 SYS
V$BACKUP

000000008CA84C28
SELECT COUNT(*) FROM

000000008C90A310
70b4a137ede8bb306b3d29639e234b8b

000000008C9E0520 SYS
WRH$_SYSSTAT_BL

0000000092D262A8
5db9da1e14251ebe4ad255e3488a7986

0000000088F93B20
d53d00726c300f3075d1f859e9e87b

0000000088E41A28
d32d74ace478baf38d3de7a388339165

000000008C878928 EXFSYS
RLM$ROWIDTAB

0000000092D2E5D8 SYS
X$KVIT

0000000060CD6130
c4e5219063d284cd903d2e5d47a5a19

000000008B361448
BEGIN    prvt_advisor.delete_expired_tasks;  END;

000000008B266B08
BEGIN    prvt_advisor.delete_expired_tasks;  END;

0000000088EF0560
SELECT LENGTH(ADDR)*

0000000092C82748
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_na
me("innerQuery") NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C
3  FROM SYS."OBJ$" "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

0000000088C4CE58
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_na
me("innerQuery") NO_INDEX_FFS( "O2")  */ 4294967295 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C
3  FROM SYS."OBJ$" "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

0000000088D48710
SELECT /*+ ordered l

000000008B0C0C10
SELECT PRIM_ESLIAS,

0000000088CC0590
UPDATE SYS.SCHEDULER

000000008CBA7478 SYS
GV$OSSTAT

0000000088E5EF68 SYS
SCHEDULER$_INSTANCE_S

000000008B30E068
b4f335256ed143ca6e4c74234eba35af

0000000088FEEDA8
6d11d7de2049577d933d2385337fc737

0000000092D1AB48 EXFSYS
RLM$JOBQUEUE

000000008B2C7560
SELECT P1.PARAMETER_

0000000088DAF198 $BUILD$
6c1f30c23883d665

000000008B299938
d25ba01f53e60356ab23d6efbcb20294

0000000088E90950 SYS
X$KDXST

000000008C931478 SYS
WRI$_ADV_USAGE

0000000092C8D118 SYS
PROPS$

000000008B14F398 SYS
WRI$_ADV_ADDM_FDG

0000000060FF18F0
/* SQL Analyze(1) */

0000000088D18860
select SYS_CONTEXT('USERENV', 'SERVER_HOST'), SYS_CONTEXT('USERENV', 'DB_UNIQUE_NAME'), SYS_CONTEXT('USERENV', 'INSTANCE_NAME'), SYS_CO
NTEXT('USERENV', 'SERVICE_NAME'), INSTANCE_NUMBER, STARTUP_TIME, SYS_CONTEXT('USERENV', 'DB_DOMAIN') from v$instance where INSTANCE_NAM
E=SYS_CONTEXT('USERENV', 'INSTANCE_NAME')

000000008CAC3BB8
select SYS_CONTEXT('USERENV', 'SERVER_HOST'), SYS_CONTEXT('USERENV', 'DB_UNIQUE_NAME'), SYS_CONTEXT('USERENV', 'INSTANCE_NAME'), SYS_CO
NTEXT('USERENV', 'SERVICE_NAME'), INSTANCE_NUMBER, STARTUP_TIME, SYS_CONTEXT('USERENV', 'DB_DOMAIN') from v$instance where INSTANCE_NAM
E=SYS_CONTEXT('USERENV', 'INSTANCE_NAME')

0000000088E820C0 SYS
WRH$_DB_CACHE_ADVICE

0000000060E16B50
eafe294e48cbb8071e361ae98c64c641

000000008CA0E950 SYS
DBMS_AUTOTASK_PRVT

0000000088E06DE8
select file#, block# from recyclebin$ where ts# = :1     and file# != 0 and block# != 0 and space = 0

0000000088D273F0
select file#, block# from recyclebin$ where ts# = :1     and file# != 0 and block# != 0 and space = 0

0000000088C9D568
SELECT EXTRACTVALUE(

0000000088D9AF88
select substrb(dump(

000000008C9186E8
SELECT STATUS FROM W

000000008B094950
UPDATE MON_MODS_ALL$

0000000088EB5270
SELECT COUNT(*), MAX

0000000088E66E20
insert into wrh$_sgastat   (snap_id, dbid, instance_number, pool, name, bytes)  select    :snap_id, :dbid, :instance_number, pool, name
, bytes   from     (select pool, name, bytes,             100*(bytes) / (sum(bytes) over (partition by pool)) part_pct        from v$sg
astat)   where part_pct >= 1      or pool is null      or name = 'free memory'   order by name, pool

0000000088FF0510
insert into wrh$_sgastat   (snap_id, dbid, instance_number, pool, name, bytes)  select    :snap_id, :dbid, :instance_number, pool, name
, bytes   from     (select pool, name, bytes,             100*(bytes) / (sum(bytes) over (partition by pool)) part_pct        from v$sg
astat)   where part_pct >= 1      or pool is null      or name = 'free memory'   order by name, pool

0000000060F228D0
insert into wrh$_sgastat   (snap_id, dbid, instance_number, pool, name, bytes)  select    :snap_id, :dbid, :instance_number, pool, name
, bytes   from     (select pool, name, bytes,             100*(bytes) / (sum(bytes) over (partition by pool)) part_pct        from v$sg
astat)   where part_pct >= 1      or pool is null      or name = 'free memory'   order by name, pool

000000008B33CC58
insert into wrh$_sgastat   (snap_id, dbid, instance_number, pool, name, bytes)  select    :snap_id, :dbid, :instance_number, pool, name
, bytes   from     (select pool, name, bytes,             100*(bytes) / (sum(bytes) over (partition by pool)) part_pct        from v$sg
astat)   where part_pct >= 1      or pool is null      or name = 'free memory'   order by name, pool

0000000092C442D8
insert into wrh$_sgastat   (snap_id, dbid, instance_number, pool, name, bytes)  select    :snap_id, :dbid, :instance_number, pool, name
, bytes   from     (select pool, name, bytes,             100*(bytes) / (sum(bytes) over (partition by pool)) part_pct        from v$sg
astat)   where part_pct >= 1      or pool is null      or name = 'free memory'   order by name, pool

0000000088E672A0
insert into wrh$_sgastat   (snap_id, dbid, instance_number, pool, name, bytes)  select    :snap_id, :dbid, :instance_number, pool, name
, bytes   from     (select pool, name, bytes,             100*(bytes) / (sum(bytes) over (partition by pool)) part_pct        from v$sg
astat)   where part_pct >= 1      or pool is null      or name = 'free memory'   order by name, pool

000000008C836B08
alter session set NL

0000000092D569F8 SYS
X$KCFIO

0000000088C971C8
SELECT COMMAND, ATTR

0000000088D3BFF0
SELECT COUNT(*) FROM

0000000088C9E998
SELECT COMMAND, ATTR

000000008C93DF58 SYS
SCHEDULER$_WINGRP_MEMBER

0000000088D07C48
cce9a35c5dc4abe4cc52a92b7e2ba318

0000000088EE7680
8ff6660f7c005e66241ceae21c905eb

000000008C87AA08
SELECT OPCODE_ID FRO

0000000060F5F1E0
c215ec1818aef5f1cbf5295ed11fe1c

0000000088F48CE8
UPDATE STREAMS$_SPLI

000000008C925868
DELETE FROM WRI$_ADV

0000000092D15200
update sys.scheduler$_job set  last_start_date = :1, running_instance = :2, running_slave = :3, job_status = :4 where  obj# = :5

0000000088DA0BC8
update sys.scheduler$_job set  last_start_date = :1, running_instance = :2, running_slave = :3, job_status = :4 where  obj# = :5

0000000060FAA248
update sys.scheduler$_job set  last_start_date = :1, running_instance = :2, running_slave = :3, job_status = :4 where  obj# = :5

0000000060EF0390
update sys.scheduler$_job set  last_start_date = :1, running_instance = :2, running_slave = :3, job_status = :4 where  obj# = :5

000000008B3270A0
update sys.scheduler$_job set  last_start_date = :1, running_instance = :2, running_slave = :3, job_status = :4 where  obj# = :5

0000000092D5B018 SYS
X$KCBFWAIT

0000000060F6F1F0
SELECT COUNT(*) FROM

000000008B287670
select 'select dbms_metadata.get_ddl(''CONSTRAINT'','''|| co.constraint_name || ''',''' || co.owner || ''') from dual;' cons_ddl from
    dba_constraints co,      dba_cons_columns cc where     co.owner              = cc.owner and co.table_name         = cc.table_name a
nd co.constraint_name    = cc.constraint_name and co.constraint_type    <> 'R' and co.table_name = :table_name AND co.owner = :owner or
der by      co.owner,      co.table_name,      co.constraint_type,      co.constraint_name

000000008B319600
select 'select dbms_metadata.get_ddl(''CONSTRAINT'','''|| co.constraint_name || ''',''' || co.owner || ''') from dual;' cons_ddl from
    dba_constraints co,      dba_cons_columns cc where     co.owner              = cc.owner and co.table_name         = cc.table_name a
nd co.constraint_name    = cc.constraint_name and co.constraint_type    <> 'R' and co.table_name = :table_name AND co.owner = :owner or
der by      co.owner,      co.table_name,      co.constraint_type,      co.constraint_name

0000000065313850
a7d0a75ff4baf3a2197c26f430948e02

000000008C9CEA98
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F525C8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000652B2E80 $BUILD$
 1f6714a37c3aadb

000000008B3A9948 SYS
DBMS_WORKLOAD_REPOSITORY

0000000060D57EA0 SYS
WRI$_DBU_CPU_USAGE

0000000092EBB978
fb2817f3fa2785bcd5f9961583c9e85

0000000088F9B638
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_histgrm_history      where savtime < :1 and rownum <= NVL(:2, rownum)

000000008CA5C5A8
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_histgrm_history      where savtime < :1 and rownum <= NVL(:2, rownum)

0000000088F9BAB8
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_histgrm_history      where savtime < :1 and rownum <= NVL(:2, rownum)

0000000088C79898
d38412f2bf1351fad24d77a1516bfc84

0000000060DE0398 $BUILD$
da2a43e2527a84f1

0000000088FF1650
SELECT C.RULE_SET, C

000000008CB99E78 SYS
SYS_XQ_UPKXML2SQL

000000008B0B0BC0
90dc8b8b9ba07deda2a43e2527a84f1

000000008C9F2D30
update partobj$ set partcnt = :1 where obj# = :2

0000000060F4C130
update partobj$ set partcnt = :1 where obj# = :2

000000008B3AC960
update partobj$ set partcnt = :1 where obj# = :2

000000008B2AD688
SELECT T.TASK_ID AS

000000008CB3F070
e3a0be5f24db236e3918d3b5127caea

0000000088E13408
SELECT RECID, RECID,

000000008B047830
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_QA_LRG_TYPE'

0000000088D033F0
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_QA_LRG_TYPE'

0000000092CEFAC8
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_QA_LRG_TYPE'

000000008B049120
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_QA_LRG_TYPE'

0000000088E53C88 $BUILD$
e1884362c9479a16

0000000088E69C40
insert into wrh$_sga   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  from v$
sga

0000000088FEB2C0
insert into wrh$_sga   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  from v$
sga

0000000088F68C68
insert into wrh$_sga   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  from v$
sga

0000000088E6A0C0
insert into wrh$_sga   (snap_id, dbid, instance_number, name, value)  select    :snap_id, :dbid, :instance_number, name, value  from v$
sga

000000008CA22A18
cce9b2a3e6ac25074b3c9aaf32ef4496

0000000092D30318 $BUILD$
ddbcf11a93e54249

0000000092CD05B8 SYS
UET$

0000000060D6A308
748c32db6801e12c2361119db5a194bf

0000000088EA8390 SYS
X$KRSTPVRS

000000008CAAD758
INSERT INTO WWV_FLOW

000000008CB4E6D8
c289a4fe5c2ae6819bbad301bb3d7340

0000000088CCEFF8
SELECT EXTRACT(SECON

000000008C8BCA58
7016926218852d84f21de4fe9963dec1

0000000060EDAE10
DELETE FROM RLM$EQUA

0000000088DA7598
58e8c142109e7c51f6d07ec6bd8c3902

0000000088F02240 SYS
V$TEMPFILE

0000000060F96EA0 SYS
WRH$_DATAFILE

000000008B0BA900
analyze index @IND.S

0000000088D9B528
analyze index @IND.S

000000008CA79F40 SYS
ARGUMENT$

0000000092CAAE48
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  sys.dbms_streams_auto_int.clean_recoverable_script;  :mydate
:= next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

0000000060FA6EE0
DECLARE job BINARY_INTEGER := :job;  next_date TIMESTAMP WITH TIME ZONE := :mydate;  broken BOOLEAN := FALSE;  job_name VARCHAR2(30) :=
 :job_name;  job_subname VARCHAR2(30) := :job_subname;  job_owner VARCHAR2(30) := :job_owner;  job_start TIMESTAMP WITH TIME ZONE := :j
ob_start;  job_scheduled_start TIMESTAMP WITH TIME ZONE := :job_scheduled_start;  window_start TIMESTAMP WITH TIME ZONE := :window_star
t;  window_end TIMESTAMP WITH TIME ZONE := :window_end;  chain_id VARCHAR2(14) :=  :chainid;  credential_owner varchar2(30) := :credown
;  credential_name  varchar2(30) := :crednam;  destination_owner varchar2(30) := :destown;  destination_name varchar2(30) := :destnam;
 job_dest_id varchar2(14) := :jdestid;  log_id number := :log_id;  BEGIN  sys.dbms_streams_auto_int.clean_recoverable_script;  :mydate
:= next_date; IF broken THEN :b := 1; ELSE :b := 0; END IF; END;

0000000088CA9AA8
UPDATE WRI$_ADV_DEF_

0000000088FD1C38
bc414735d653fcabe490d532c16840b9

0000000060E78230
SELECT LPAD(VERSION,

0000000088F39720
3b642487a7c95796c43e978766a26558

000000008CB9B918
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=2 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME"
 NOT LIKE 'DR#%') AND BITAND("O"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O")
SAMPLESUB

000000008B2C2548
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=2 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME"
 NOT LIKE 'DR#%') AND BITAND("O"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O")
SAMPLESUB

000000008CBEBF48
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS IGNORE_WHERE_CLAUSE NO_PARALLEL(SAMPLESUB) opt_param('parallel_execution_enabled', 'false') NO_P
ARALLEL_INDEX(SAMPLESUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ IGNORE_WHERE_CLAUSE NO_PARALLEL("O") FULL("O")
NO_PARALLEL_INDEX("O") */ 1 AS C1, CASE WHEN "O"."TYPE#"=2 AND (BITAND("O"."FLAGS",16)<>16 OR "O"."NAME" NOT LIKE 'DR$%' AND "O"."NAME"
 NOT LIKE 'DR#%') AND BITAND("O"."FLAGS",128)<>128 THEN 1 ELSE 0 END AS C2 FROM "SYS"."OBJ$" SAMPLE BLOCK (2.916275 , 1) SEED (1) "O")
SAMPLESUB

0000000092D3F028
select s.inst_id, s.kswsclstabnm, s.kswsclstabnmh, s.kswsclsid,  s.kswsclsnum, s.kswsclsname, s.kswsclswts, round(s.kswsclstim / 10000)
 from x$kswsclstab s  where s.kswsclswts != 0

000000008CB143E8
select s.inst_id, s.kswsclstabnm, s.kswsclstabnmh, s.kswsclsid,  s.kswsclsnum, s.kswsclsname, s.kswsclswts, round(s.kswsclstim / 10000)
 from x$kswsclstab s  where s.kswsclswts != 0

000000008C882B30
4e7f03ffc5808b36f6c3e747844cee9f

0000000088D007E0 SYS
LOGMNR_DDL_TRIGGER_PROC

00000000653C6AE0
select INSTANCE_NUMB

000000008B038638
2ce14b76387bee632fb44224b57b62e9

000000008B2EB708 MDSYS
SDO_GEOR_DEF

000000008B0E1348 SYS
GV$MEMORY_RESIZE_OPS

000000008B3A9D98 SYS
DBA_HIST_BASELINE_TEMPLATE

000000008B1B71C0
3a9b479e3630f1912a9d9d1b2e275a0

0000000088C6A6A0
ff570d14f2b593459620e8d8bfd8255d

0000000088F59DC8
SCOTT

0000000088C8EE68
UPDATE WRI$_SQLSET_S

0000000060ECAFE0 SYS
RE$ATTRIBUTE_VALUE_LIST

0000000088EF9608
4f88feacdf1dfcd5a9dc3683c4ac5858

0000000088FD0428
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000653B2FD8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F862C0 SYS

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
V$SQLAREA

0000000060C89C30
99637e5e1ff80d4734ef515defa4e2bd

000000008B2E25A0
/* SQL Analyze(1) */

0000000088E71A20 SYS
X$KRASGA

0000000088F1E548
7fc6130b5c56ca94632e4eb9435385dd

000000008B3B3C20 SYS
RE$NV_NODE

0000000060F393A0
17238007705193885029

0000000088F864E8
17274938840684210930

000000008B0BDB30 SYS
V$RMAN_CONFIGURATION

000000008CB21438
ea869ce79cded5b6ae49174ec9706c0

0000000092C62F70
SELECT O.OBJ# FROM O

0000000060F93A10
96dda3773d9f9b93b8a21d135f9f0ab5

0000000060DBF860
5053301527d8574268632774f77f459

000000008C92C9F8
SELECT NAME, ID FROM

000000008C9CCD48 $BUILD$
d8c8faa22eeaf292

000000008B15BC18 SYS
X$KCCPD

000000008B194F60 $BUILD$
  6e199fbf39fec2

0000000088F177D8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "L")  */ 1 AS C1 FROM "SYS"."LOB$" S
AMPLE BLOCK(56.8586, 8) SEED(1)  "L") innerQuery

0000000092C9E2D8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "L")  */ 1 AS C1 FROM "SYS"."LOB$" S
AMPLE BLOCK(56.8586, 8) SEED(1)  "L") innerQuery

000000008CB51780
table_1_ff_223_0_0_0

000000008CB519E0
table_1_ff_223_0_0_0

0000000088FA3858
SELECT * FROM DBA_CA

000000008CA6C830 $BUILD$
b2b2e48428d9af4e

000000008B074CD0
SELECT /*+ rule */ K

000000008C8696A8
delete from obj$ where obj# = :1

000000008CB4E8D8
delete from obj$ where obj# = :1

000000008C869B28
delete from obj$ where obj# = :1

0000000060FA87A0
UPDATE SYS.SCHEDULER

0000000092C613A8
cd7dea7a6989f03ec9fd0afad15eee7

0000000060E1DDE0
select substrb(dump(

0000000060D75C38 SYS
V$MYSTAT

000000008CAE7958
INSERT INTO SYS.SCHE

0000000088DFF1A8 SYS
WRH$_OSSTAT_PK

0000000088E91DA0
539c4e2b345582bc74896c5de64071f

0000000088F71CE8
610dd0e9f19bf7208fa1a803b7fd9603

000000008B136ED8
select inst_id,          plw.seq_kskplw,          decode(plw.id_kskplw, 0, to_number(null), plw.id_kskplw),          plw.name_kskplw,
        plw.start_tm_kskplw,          plw.end_tm_kskplw,          decode(plw.window_id_kskplw, 0, 'FALSE', 'TRUE'),          o.name,
       decode(plw.auto_switch_kskplw, 0, 'FALSE', 'TRUE'),          decode(plw.cpu_rm_kskplw, 0, 'OFF', 'ON'),          decode(plw.inst
ance_caging_kskplw, 0, 'OFF', 'ON'),          plw.pqq_status_kskplw          from x$kskplw plw, obj$ o          where plw.window_id_ksk
plw = o.obj#(+)

000000008B128438
select inst_id,          plw.seq_kskplw,          decode(plw.id_kskplw, 0, to_number(null), plw.id_kskplw),          plw.name_kskplw,
        plw.start_tm_kskplw,          plw.end_tm_kskplw,          decode(plw.window_id_kskplw, 0, 'FALSE', 'TRUE'),          o.name,
       decode(plw.auto_switch_kskplw, 0, 'FALSE', 'TRUE'),          decode(plw.cpu_rm_kskplw, 0, 'OFF', 'ON'),          decode(plw.inst
ance_caging_kskplw, 0, 'OFF', 'ON'),          plw.pqq_status_kskplw          from x$kskplw plw, obj$ o          where plw.window_id_ksk
plw = o.obj#(+)

000000008CBF9470
UPDATE RLM$PRIMEVTTY

000000008CBCA5F8
5a53b140fea8dfc2238781c4b3a8bad2

000000008C9134D8
UPDATE WRI$_ADV_TASK

0000000060E66890
c4e38e35ac58a4bb7a6b84ef2f4d73b6

000000008B1767D0
e5a01d4d6b415fde9104488c2e6c006

0000000092D26EE8
/* SQL Analyze(1) */

000000008CA6E0E0
select procedure#,entrypoint# from procedurec$ where obj#=:1 order by procedure#

000000008C8B9D18
select procedure#,entrypoint# from procedurec$ where obj#=:1 order by procedure#

000000008B0D4DF8
select procedure#,entrypoint# from procedurec$ where obj#=:1 order by procedure#

000000008CB4AFC0
select procedure#,entrypoint# from procedurec$ where obj#=:1 order by procedure#

000000008CA6E560
select procedure#,entrypoint# from procedurec$ where obj#=:1 order by procedure#

0000000060EAE950
SELECT SUM(CASE WHEN

000000008CB44A18
2aa2e2e9224fa9ecd61101269ce2350

0000000088EDE170
7e491bbbb897428afb584a940630cca

0000000060E83450
3e9a455c89548671b411eb36841a1100

000000008B1EF498
688ae9fa7f261ad6c14119acd05595eb

0000000088E543F8
select p.valchar from sys.optstat_user_prefs$ p where p.obj#=:1   and p.pname=:2

0000000088F6B918
select p.valchar from sys.optstat_user_prefs$ p where p.obj#=:1   and p.pname=:2

000000008CA15378
update sys.scheduler$_job set  program_oid = :1, schedule_id = :2, last_enabled_time = :3, retry_count = :4, run_count = :5, failure_co
unt = :6, flags = :7, job_status = :8 where  obj# = :9

0000000060E398E0
update sys.scheduler$_job set  program_oid = :1, schedule_id = :2, last_enabled_time = :3, retry_count = :4, run_count = :5, failure_co
unt = :6, flags = :7, job_status = :8 where  obj# = :9

0000000060EFC730
update sys.scheduler$_job set  program_oid = :1, schedule_id = :2, last_enabled_time = :3, retry_count = :4, run_count = :5, failure_co
unt = :6, flags = :7, job_status = :8 where  obj# = :9

000000008CA157F8
update sys.scheduler$_job set  program_oid = :1, schedule_id = :2, last_enabled_time = :3, retry_count = :4, run_count = :5, failure_co
unt = :6, flags = :7, job_status = :8 where  obj# = :9

0000000088FFEB30
select /*+  no_paral

0000000088F53CF8
SELECT MAX(ID), MAX(

000000008B19FF38
612830f0f83c2c2934cd9424e750c287

0000000060D44C88
96c2e326211991c82ed11ee835f395d3

0000000060EC5548
delete from WRH$_SHARED_POOL_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060E9CB80
delete from WRH$_SHARED_POOL_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D55630
SELECT CAPTURE_NAME

000000008B2E4C08
e3549f7c1544a3582f6cbd54213b894a

00000000652DAF20
SELECT /*+ leading(u op tcp tsp osp) */ OSP.SUBNAME SUBPART_NAME, OSP.OBJ# SPOBJ#, OP.SUBNAME PART_NAME FROM SYS.USER$ U, SYS.OBJ$ OP,
SYS.TABCOMPART$ TCP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OSP WHERE :B3 IS NULL AND U.NAME = :B2 AND OP.OWNER# = U.USER# AND OP.NAME = :B1 AND
 OP.NAMESPACE = 1 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME IS NULL AND OP.TYPE# = 19 AND OP.OBJ# = TCP.OBJ# AND OP.OBJ# = TSP.POBJ# A
ND OSP.OBJ# = TSP.OBJ# UNION ALL SELECT /*+ leading(u op tsp)                use_nl_with_index(tsp) */ OSP.SUBNAME SUBPART_NAME, OSP.OB
J# SPOBJ#, :B3 PART_NAME FROM SYS.USER$ U, SYS.OBJ$ OP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OSP WHERE U.NAME = :B2 AND OP.OWNER# = U.USER# AN
D OP.NAME = :B1 AND OP.NAMESPACE = 1 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME IS NULL AND OP.SUBNAME = :B3 AND OP.OBJ# = TSP.POBJ# AN
D TSP.OBJ# = OSP.OBJ# UNION ALL SELECT /*+ leading(u osp tsp) */ OSP.SUBNAME SUBPART_NAME, OSP.OBJ# SPOBJ#, OP.SUBNAME PART_NAME FROM S
YS.USER$ U, SYS.OBJ$ OP, SYS.TABSUBPART$ TSP, SYS.OBJ$

000000008B08A660
SELECT /*+ leading(u op tcp tsp osp) */ OSP.SUBNAME SUBPART_NAME, OSP.OBJ# SPOBJ#, OP.SUBNAME PART_NAME FROM SYS.USER$ U, SYS.OBJ$ OP,
SYS.TABCOMPART$ TCP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OSP WHERE :B3 IS NULL AND U.NAME = :B2 AND OP.OWNER# = U.USER# AND OP.NAME = :B1 AND
 OP.NAMESPACE = 1 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME IS NULL AND OP.TYPE# = 19 AND OP.OBJ# = TCP.OBJ# AND OP.OBJ# = TSP.POBJ# A
ND OSP.OBJ# = TSP.OBJ# UNION ALL SELECT /*+ leading(u op tsp)                use_nl_with_index(tsp) */ OSP.SUBNAME SUBPART_NAME, OSP.OB
J# SPOBJ#, :B3 PART_NAME FROM SYS.USER$ U, SYS.OBJ$ OP, SYS.TABSUBPART$ TSP, SYS.OBJ$ OSP WHERE U.NAME = :B2 AND OP.OWNER# = U.USER# AN
D OP.NAME = :B1 AND OP.NAMESPACE = 1 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME IS NULL AND OP.SUBNAME = :B3 AND OP.OBJ# = TSP.POBJ# AN
D TSP.OBJ# = OSP.OBJ# UNION ALL SELECT /*+ leading(u osp tsp) */ OSP.SUBNAME SUBPART_NAME, OSP.OBJ# SPOBJ#, OP.SUBNAME PART_NAME FROM S
YS.USER$ U, SYS.OBJ$ OP, SYS.TABSUBPART$ TSP, SYS.OBJ$

000000008CA450D0
23f2e48fffd8d0a810650ded4bc01dcb

00000000653A6620 $BUILD$
9bfe2e2b2db25b61

0000000088D9E870
SELECT COUNT(*) FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 )

000000008B10F6C8
SELECT COUNT(*) FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 )

000000008B0E62F8
SELECT COUNT(*) FROM DBA_SEGMENTS WHERE SEGMENT_NAME = UPPER(:B2 ) AND OWNER = UPPER(:B1 )

0000000088E6E5F0
SELECT TO_CHAR('UNKN

0000000092D6D9F8
d144022b31541cb774d3a77728e5557e

000000008CB0B528 SYS
DATABASE

0000000088D937A8
c4e38e35ac58a4bb7a6b84ef2f4d73b6

0000000088FE7510
SELECT INST_ID, INST

000000008B1E5DF0 $BUILD$
ef4cee37371f0292

000000008B232530 PUBLIC
V$SQL_BIND_CAPTURE

0000000088F80A98
140bd70c1a766b1bbf4363117b17f7af

0000000088C5FBB8 SYS
DBA_ROLES

000000008B25AB58 PUBLIC
DBMS_RANDOM

00000000653F7E70
BEGIN   FOR I IN 1 .. 10000 LOOP     INSERT INTO HASH_TABLE     VALUES (TO_CHAR(SYSDATE, 'yyyymmdd') ||LPAD(ROUND(DBMS_RANDOM.VALUE(1,
999999999)), 9, 0),'helloword hash partition table');   END LOOP; END;

0000000060DCD2D8
BEGIN   FOR I IN 1 .. 10000 LOOP     INSERT INTO HASH_TABLE     VALUES (TO_CHAR(SYSDATE, 'yyyymmdd') ||LPAD(ROUND(DBMS_RANDOM.VALUE(1,
999999999)), 9, 0),'helloword hash partition table');   END LOOP; END;

000000008B0F43E8
37fd89f777884116a4e8181bd23710ff

000000008B3FC248
MERGE /*+ INDEX(@sel$2 sqlobj$data                                                                   (signature category obj_type plan_
id)) */              INTO sqlobj$data                                                              USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET comp_data = :5
                           WHEN NOT MATCHED THEN                                                           INSERT (signature, category,
 obj_type, plan_id, comp_data,                            spare1, spare2)                                                       VALUES
(:6, :7, :8, :9, :10, null, null)

000000008CBDB9C0
MERGE /*+ INDEX(@sel$2 sqlobj$data                                                                   (signature category obj_type plan_
id)) */              INTO sqlobj$data                                                              USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET comp_data = :5
                           WHEN NOT MATCHED THEN                                                           INSERT (signature, category,
 obj_type, plan_id, comp_data,                            spare1, spare2)                                                       VALUES
(:6, :7, :8, :9, :10, null, null)

0000000088D40290
MERGE /*+ INDEX(@sel$2 sqlobj$data                                                                   (signature category obj_type plan_
id)) */              INTO sqlobj$data                                                              USING dual ON (signature = :1
                                                         AND category = :2
AND obj_type = :3                                                             AND plan_id = :4)
      WHEN MATCHED THEN                                                               UPDATE SET comp_data = :5
                           WHEN NOT MATCHED THEN                                                           INSERT (signature, category,
 obj_type, plan_id, comp_data,                            spare1, spare2)                                                       VALUES
(:6, :7, :8, :9, :10, null, null)

000000008B360D60
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060ECE110
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C9DC270
c7d4ecb14863c535f278d4e0f39c1d8c

0000000088C8E168
UPDATE WRI$_SQLSET_S

000000008C9D6B18 SYS
SCHEDULER$_DESTINATIONS

000000008B0AADD0
31904ab7108c284242af68afc3fa4a17

000000008CA12EB8
4f6e5981d00578e45a89a448eb8954f4

000000008B35A1B8 SYS
SCHEDULER$_LWJOB_OBJ

000000008B166E00 SYS
WRH$_SYSTEM_EVENT_PK

000000008B04B5A0
DELETE FROM SYS.COL_

000000008CB536E0
select substrb(dump(

000000008CAE1310
INSERT INTO RLM$COLL

000000008CBE80C8
52f3bd8253b29a0f9edcecdcbe1de605

0000000088F8CC28 $BUILD$
1eb28fe44dead25d

0000000060F5CA60
SELECT AR.RULE_SET_E

000000008C968320
SELECT DISTINCT(X.BS

000000008C934FA0 SYS
SCHEDULER$_LIGHTWEIGHT_JOB

0000000092D193F8 SYS
X$KEWSSVCV

000000008C8E1518 SYS
DBMS_AQADM

000000008B268208 SYS
SUM$

0000000088E78B98
5a53b140fea8dfc2238781c4b3a8bad2

000000008CAF1C58
select avgchn from clu$ where obj#=:1

000000008CB88188
select avgchn from clu$ where obj#=:1

0000000088EC2D40
select avgchn from clu$ where obj#=:1

000000008B383AE0 SYS
SUPEROBJ$

000000008C988260 SYS
WRH$_STREAMS_APPLY_SUM

0000000060D69CC8
813b2d26d7edb7ecafff7ec2d8532343

0000000060CE24F0
f71aa535c97ed95d54ee311937a7a95b

000000008B0D6C78
SELECT MIN(ID) ID FR

000000008C8DF7C8 SYS
DBMS_AQADM_SYS

000000008CBFD1F0
16030b5c728b234081e54a3c95c2a581

0000000060D66048
6394e9c5c9f72cfc56ba6d4087743715

0000000088D00D30
SELECT T.PROPERTY FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T WHERE U.NAME = :B2 AND U.USER# = O.OWNER# AND O.NAME = :B1 AND O.TYPE# = 2 A
ND O.OBJ# = T.OBJ#

0000000092CF0468
SELECT T.PROPERTY FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T WHERE U.NAME = :B2 AND U.USER# = O.OWNER# AND O.NAME = :B1 AND O.TYPE# = 2 A
ND O.OBJ# = T.OBJ#

0000000060F13BB0
SELECT T.PROPERTY FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T WHERE U.NAME = :B2 AND U.USER# = O.OWNER# AND O.NAME = :B1 AND O.TYPE# = 2 A
ND O.OBJ# = T.OBJ#

000000008B04AB90
SELECT T.PROPERTY FROM SYS.USER$ U, SYS.OBJ$ O, SYS.TAB$ T WHERE U.NAME = :B2 AND U.USER# = O.OWNER# AND O.NAME = :B1 AND O.TYPE# = 2 A
ND O.OBJ# = T.OBJ#

000000008CB345A8
select /*+ index(idl_ub2$ i_idl_ub21) +*/ piece#,length,piece from idl_ub2$ where obj#=:1 and part=:2 and version=:3 order by piece#

0000000088CF59B8
select /*+ index(idl_ub2$ i_idl_ub21) +*/ piece#,length,piece from idl_ub2$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB8FF08
select /*+ index(idl_ub2$ i_idl_ub21) +*/ piece#,length,piece from idl_ub2$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008C90AA20
select /*+ index(idl_ub2$ i_idl_ub21) +*/ piece#,length,piece from idl_ub2$ where obj#=:1 and part=:2 and version=:3 order by piece#

000000008CB34A28
select /*+ index(idl_ub2$ i_idl_ub21) +*/ piece#,length,piece from idl_ub2$ where obj#=:1 and part=:2 and version=:3 order by piece#

0000000092C42BA8
SELECT COUNT(*) FROM

000000008B2A2DA0
e5036cec5852dbaef7899f3a640f4570

0000000060E3A5E0 SYS
XMLTYPE

000000008CA99820
SELECT RECID, STAMP,

0000000092CFEE18
SELECT A.DATATYPE, A.DESCRIPTION FROM SYS.WRI$_ADV_DEF_PARAMETERS A WHERE A.NAME = :B2 AND (A.ADVISOR_ID = :B1 OR A.ADVISOR_ID = 0)

000000008C91B518
SELECT A.DATATYPE, A.DESCRIPTION FROM SYS.WRI$_ADV_DEF_PARAMETERS A WHERE A.NAME = :B2 AND (A.ADVISOR_ID = :B1 OR A.ADVISOR_ID = 0)

0000000088EFFE88 SYS
DBA_RECOVERABLE_SCRIPT_HIST

0000000088C99EE8
SELECT XMLELEMENT( "

0000000060E24DC0
SELECT XMLTYPE(:B1 )

000000008CBD7920
select /*+  no_paral

0000000060F62690
5d68bc6cd0571f5277e11d212e79d68b

0000000088FB6248 $BUILD$
607d71a028f23ed1

000000008C8DAAA8
select substrb(dump(

0000000092D32E18 APEX_030200
HTF

0000000060D81B58
7ef60da5d68418074e7be977865a13f0

0000000065329C70 SYS
WRH$_BUFFERED_SUBSCRIBERS

0000000088F36828
aff7e618c1ae80172801eb11206fd69a

0000000060F884F0
2de1a286d2ef4b59117739fb1091b04f

000000008CA39EE0 $BUILD$
8ffa7c888c389659

0000000092CD9AD8
SELECT DECODE(VALUE, 'UNUSED', 0, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'DB_ID'

0000000088F5FBE8
SELECT DECODE(VALUE, 'UNUSED', 0, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'DB_ID'

000000008B10EEE8
SELECT DECODE(VALUE, 'UNUSED', 0, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'DB_ID'

000000008B213778
SELECT DECODE(VALUE, 'UNUSED', 0, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'DB_ID'

000000008B146858
SELECT DECODE(VALUE, 'UNUSED', 0, TO_NUMBER(VALUE)) FROM WRI$_ADV_PARAMETERS WHERE TASK_ID = :B1 AND NAME = 'DB_ID'

0000000088D2D348
UPDATE WRI$_ADV_FIND

0000000060E202C0
select table_name from user_tables

000000008B1953B0
select table_name from user_tables

000000008B246C20
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAM
PLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT,
 HG.EPVALUE, BITAND(H.SPARE2, 4), NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.HIST_HEAD$ H, HISTGRM$ HG WHERE :B4 IS NULL AND U
.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND C.OBJ# = OT.OBJ# AND (:B1 IS NULL OR C.NAME = :B1 ) AND H.OB
J# = OT.OBJ# AND H.INTCOL# = C.INTCOL# AND HG.OBJ#(+) = H.OBJ# AND HG.INTCOL#(+) = H.INTCOL# UNION ALL SELECT U.NAME, OT.NAME, OP.SUBNA
ME, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAMPLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.
AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT, HG.EPVALUE, BITAND(H.SPARE2, 4), NULL
 FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.TABPART

000000008B21C0C0
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAM
PLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT,
 HG.EPVALUE, BITAND(H.SPARE2, 4), NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.HIST_HEAD$ H, HISTGRM$ HG WHERE :B4 IS NULL AND U
.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND C.OBJ# = OT.OBJ# AND (:B1 IS NULL OR C.NAME = :B1 ) AND H.OB
J# = OT.OBJ# AND H.INTCOL# = C.INTCOL# AND HG.OBJ#(+) = H.OBJ# AND HG.INTCOL#(+) = H.INTCOL# UNION ALL SELECT U.NAME, OT.NAME, OP.SUBNA
ME, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAMPLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.
AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT, HG.EPVALUE, BITAND(H.SPARE2, 4), NULL
 FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.TABPART

000000008B192F40
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAM
PLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT,
 HG.EPVALUE, BITAND(H.SPARE2, 4), NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.HIST_HEAD$ H, HISTGRM$ HG WHERE :B4 IS NULL AND U
.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND C.OBJ# = OT.OBJ# AND (:B1 IS NULL OR C.NAME = :B1 ) AND H.OB
J# = OT.OBJ# AND H.INTCOL# = C.INTCOL# AND HG.OBJ#(+) = H.OBJ# AND HG.INTCOL#(+) = H.INTCOL# UNION ALL SELECT U.NAME, OT.NAME, OP.SUBNA
ME, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAMPLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.
AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT, HG.EPVALUE, BITAND(H.SPARE2, 4), NULL
 FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.TABPART

000000008B0C1CB0
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAM
PLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT,
 HG.EPVALUE, BITAND(H.SPARE2, 4), NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.HIST_HEAD$ H, HISTGRM$ HG WHERE :B4 IS NULL AND U
.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND C.OBJ# = OT.OBJ# AND (:B1 IS NULL OR C.NAME = :B1 ) AND H.OB
J# = OT.OBJ# AND H.INTCOL# = C.INTCOL# AND HG.OBJ#(+) = H.OBJ# AND HG.INTCOL#(+) = H.INTCOL# UNION ALL SELECT U.NAME, OT.NAME, OP.SUBNA
ME, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAMPLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.
AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT, HG.EPVALUE, BITAND(H.SPARE2, 4), NULL
 FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.TABPART

0000000088D623E8
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAM
PLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT,
 HG.EPVALUE, BITAND(H.SPARE2, 4), NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.HIST_HEAD$ H, HISTGRM$ HG WHERE :B4 IS NULL AND U
.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND C.OBJ# = OT.OBJ# AND (:B1 IS NULL OR C.NAME = :B1 ) AND H.OB
J# = OT.OBJ# AND H.INTCOL# = C.INTCOL# AND HG.OBJ#(+) = H.OBJ# AND HG.INTCOL#(+) = H.INTCOL# UNION ALL SELECT U.NAME, OT.NAME, OP.SUBNA
ME, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAMPLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.
AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT, HG.EPVALUE, BITAND(H.SPARE2, 4), NULL
 FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.TABPART

0000000088DF35A8
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAM
PLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT,
 HG.EPVALUE, BITAND(H.SPARE2, 4), NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.HIST_HEAD$ H, HISTGRM$ HG WHERE :B4 IS NULL AND U
.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND C.OBJ# = OT.OBJ# AND (:B1 IS NULL OR C.NAME = :B1 ) AND H.OB
J# = OT.OBJ# AND H.INTCOL# = C.INTCOL# AND HG.OBJ#(+) = H.OBJ# AND HG.INTCOL#(+) = H.INTCOL# UNION ALL SELECT U.NAME, OT.NAME, OP.SUBNA
ME, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAMPLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.
AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT, HG.EPVALUE, BITAND(H.SPARE2, 4), NULL
 FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.TABPART

000000008B071D20
SELECT /*+ rule */ U.NAME, OT.NAME, NULL, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAM
PLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT,
 HG.EPVALUE, BITAND(H.SPARE2, 4), NULL FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.HIST_HEAD$ H, HISTGRM$ HG WHERE :B4 IS NULL AND U
.NAME = :B3 AND OT.OWNER# = U.USER# AND OT.NAME = :B2 AND OT.TYPE# = 2 AND C.OBJ# = OT.OBJ# AND (:B1 IS NULL OR C.NAME = :B1 ) AND H.OB
J# = OT.OBJ# AND H.INTCOL# = C.INTCOL# AND HG.OBJ#(+) = H.OBJ# AND HG.INTCOL#(+) = H.INTCOL# UNION ALL SELECT U.NAME, OT.NAME, OP.SUBNA
ME, NULL, C.NAME, BITAND(H.SPARE2, 2), BITAND(H.SPARE2, 1), H.DISTCNT, H.DENSITY, H.SPARE1, H.SAMPLE_SIZE, H.NULL_CNT, H.TIMESTAMP#, H.
AVGCLN, H.LOWVAL, H.HIVAL, H.MINIMUM, H.MAXIMUM, NULL, NULL, H.CACHE_CNT, HG.BUCKET, HG.ENDPOINT, HG.EPVALUE, BITAND(H.SPARE2, 4), NULL
 FROM SYS.USER$ U, SYS.OBJ$ OT, SYS.COL$ C, SYS.TABPART

0000000060EB8270
SELECT HELP_TEXT FRO

0000000060C5A6D8
DELETE FROM SYS.SCHEDULER$_WINDOW_DETAILS WHERE LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E WHERE E.TYPE# = 69 AND E.LOG
_DATE < :B2 - NUMTODSINTERVAL(:B1 , 'DAY'))

000000008B20BEB8
DELETE FROM SYS.SCHEDULER$_WINDOW_DETAILS WHERE LOG_ID IN (SELECT E.LOG_ID FROM SYS.SCHEDULER$_EVENT_LOG E WHERE E.TYPE# = 69 AND E.LOG
_DATE < :B2 - NUMTODSINTERVAL(:B1 , 'DAY'))

0000000088FE9420
SELECT USER FROM SYS.DUAL

0000000060E14230
SELECT USER FROM SYS.DUAL

000000008CADD378
SELECT USER FROM SYS.DUAL

0000000092D5B648
select /*+  no_paral

000000008B0CDE08
b2a66f0b447c610281e2c364828e1be

000000008B36B550
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060D02A90
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060E03B40
94117a5c53e72592834b90f05c05e734

000000008CB52290
29a76fa2dadf08af63a5c0436a6eb75e

0000000092C3FE78 SYS
X$KRFBLOG

0000000060F60C80
60581bbc18b400ecba1163dc7829c47a

0000000092C606A8
select i.obj#, i.flags, u.name, o.name, o.type#     from sys.obj$ o, sys.user$ u, sys.ind_online$ i    where  (bitand(i.flags, 256) = 2
56 or bitand(i.flags, 512) = 512) and           (not((i.type# = 9) and bitand(i.flags,8) = 8)) and           o.obj#=i.obj# and o.owner#
 = u.user#

000000008CBAFEC8
select i.obj#, i.flags, u.name, o.name, o.type#     from sys.obj$ o, sys.user$ u, sys.ind_online$ i    where  (bitand(i.flags, 256) = 2
56 or bitand(i.flags, 512) = 512) and           (not((i.type# = 9) and bitand(i.flags,8) = 8)) and           o.obj#=i.obj# and o.owner#
 = u.user#

0000000092C60B28
select i.obj#, i.flags, u.name, o.name, o.type#     from sys.obj$ o, sys.user$ u, sys.ind_online$ i    where  (bitand(i.flags, 256) = 2
56 or bitand(i.flags, 512) = 512) and           (not((i.type# = 9) and bitand(i.flags,8) = 8)) and           o.obj#=i.obj# and o.owner#
 = u.user#

000000008C887540
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

000000008C9F58D8
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

0000000060E384F0
SELECT GROUP_NUMBER,

000000008B2A4FF8
SELECT ID, NAME, ITE

0000000060FF2D60 SYS
SYS_TEMP_0FD9D6628_EB3C8

0000000060C40300
618e8d07a51af70a9413fb5a5d1f227

0000000092D73B68 SYS
X$KSPPCV

000000008B3813A0
update tab$ set ts#=:2,file#=:3,block#=:4,bobj#=decode(:5,0,null,:5),tab#=decode(:6,0,null,:6),intcols=:7,kernelcols=:8,clucols=decode(
:9,0,null,:9),audit$=:10,flags=:11,pctfree$=:12,pctused$=:13,initrans=:14,maxtrans=:15,rowcnt=:16,blkcnt=:17,empcnt=:18,avgspc=:19,chnc
nt=:20,avgrln=:21,analyzetime=:22,samplesize=:23,cols=:24,property=:25,degree=decode(:26,1,null,:26),instances=decode(:27,1,null,:27),d
ataobj#=:28,avgspc_flb=:29,flbcnt=:30,trigflag=:31,spare1=:32,spare2=decode(:33,0,null,:33),spare4=:34,spare6=:35 where obj#=:1

0000000088C6CD50
update tab$ set ts#=:2,file#=:3,block#=:4,bobj#=decode(:5,0,null,:5),tab#=decode(:6,0,null,:6),intcols=:7,kernelcols=:8,clucols=decode(
:9,0,null,:9),audit$=:10,flags=:11,pctfree$=:12,pctused$=:13,initrans=:14,maxtrans=:15,rowcnt=:16,blkcnt=:17,empcnt=:18,avgspc=:19,chnc
nt=:20,avgrln=:21,analyzetime=:22,samplesize=:23,cols=:24,property=:25,degree=decode(:26,1,null,:26),instances=decode(:27,1,null,:27),d
ataobj#=:28,avgspc_flb=:29,flbcnt=:30,trigflag=:31,spare1=:32,spare2=decode(:33,0,null,:33),spare4=:34,spare6=:35 where obj#=:1

000000008CA6E300
update tab$ set ts#=:2,file#=:3,block#=:4,bobj#=decode(:5,0,null,:5),tab#=decode(:6,0,null,:6),intcols=:7,kernelcols=:8,clucols=decode(
:9,0,null,:9),audit$=:10,flags=:11,pctfree$=:12,pctused$=:13,initrans=:14,maxtrans=:15,rowcnt=:16,blkcnt=:17,empcnt=:18,avgspc=:19,chnc
nt=:20,avgrln=:21,analyzetime=:22,samplesize=:23,cols=:24,property=:25,degree=decode(:26,1,null,:26),instances=decode(:27,1,null,:27),d
ataobj#=:28,avgspc_flb=:29,flbcnt=:30,trigflag=:31,spare1=:32,spare2=decode(:33,0,null,:33),spare4=:34,spare6=:35 where obj#=:1

000000008B0DB8C8
update tab$ set ts#=:2,file#=:3,block#=:4,bobj#=decode(:5,0,null,:5),tab#=decode(:6,0,null,:6),intcols=:7,kernelcols=:8,clucols=decode(
:9,0,null,:9),audit$=:10,flags=:11,pctfree$=:12,pctused$=:13,initrans=:14,maxtrans=:15,rowcnt=:16,blkcnt=:17,empcnt=:18,avgspc=:19,chnc
nt=:20,avgrln=:21,analyzetime=:22,samplesize=:23,cols=:24,property=:25,degree=decode(:26,1,null,:26),instances=decode(:27,1,null,:27),d
ataobj#=:28,avgspc_flb=:29,flbcnt=:30,trigflag=:31,spare1=:32,spare2=decode(:33,0,null,:33),spare4=:34,spare6=:35 where obj#=:1

000000008B381820
update tab$ set ts#=:2,file#=:3,block#=:4,bobj#=decode(:5,0,null,:5),tab#=decode(:6,0,null,:6),intcols=:7,kernelcols=:8,clucols=decode(
:9,0,null,:9),audit$=:10,flags=:11,pctfree$=:12,pctused$=:13,initrans=:14,maxtrans=:15,rowcnt=:16,blkcnt=:17,empcnt=:18,avgspc=:19,chnc
nt=:20,avgrln=:21,analyzetime=:22,samplesize=:23,cols=:24,property=:25,degree=decode(:26,1,null,:26),instances=decode(:27,1,null,:27),d
ataobj#=:28,avgspc_flb=:29,flbcnt=:30,trigflag=:31,spare1=:32,spare2=decode(:33,0,null,:33),spare4=:34,spare6=:35 where obj#=:1

00000000653407B0
SELECT c.name               as column_name,        cu.timestamp         as timestamp,        cu.equality_preds    as where_equal_search
,        cu.equijoin_preds    as equal_join,        cu.nonequijoin_preds as none_equal_join,        cu.range_preds       as where_range
_search,        cu.like_preds        as where_like_search,        cu.null_preds        as where_null_search FROM sys.col$ c, sys.col_us
age$ cu, sys.obj$ o, sys.user$ u WHERE c.obj# = cu.obj# (+) AND c.intcol# = cu.intcol# (+) AND c.obj# = o.obj# AND o.owner# = u.user# A
ND o.name = :table_name AND u.name = :owner ORDER BY c.col#

000000008B15C5A0
SELECT c.name               as column_name,        cu.timestamp         as timestamp,        cu.equality_preds    as where_equal_search
,        cu.equijoin_preds    as equal_join,        cu.nonequijoin_preds as none_equal_join,        cu.range_preds       as where_range
_search,        cu.like_preds        as where_like_search,        cu.null_preds        as where_null_search FROM sys.col$ c, sys.col_us
age$ cu, sys.obj$ o, sys.user$ u WHERE c.obj# = cu.obj# (+) AND c.intcol# = cu.intcol# (+) AND c.obj# = o.obj# AND o.owner# = u.user# A
ND o.name = :table_name AND u.name = :owner ORDER BY c.col#

000000008CA39700
SELECT c.name               as column_name,        cu.timestamp         as timestamp,        cu.equality_preds    as where_equal_search
,        cu.equijoin_preds    as equal_join,        cu.nonequijoin_preds as none_equal_join,        cu.range_preds       as where_range
_search,        cu.like_preds        as where_like_search,        cu.null_preds        as where_null_search FROM sys.col$ c, sys.col_us
age$ cu, sys.obj$ o, sys.user$ u WHERE c.obj# = cu.obj# (+) AND c.intcol# = cu.intcol# (+) AND c.obj# = o.obj# AND o.owner# = u.user# A
ND o.name = :table_name AND u.name = :owner ORDER BY c.col#

000000008CAECBE8
6b5a692fdad8c1e5b1cbcd0c90b057e9

000000008CB62ED8 SYS
OID$

000000008C8A3950
/* SQL Analyze(1) */

000000008CAAC308 SYS
V$BACKUP_SPFILE

0000000092C67E80
SELECT REGEXP_SUBSTR

0000000088EAF450 SYS
RECO_SCRIPT$

0000000088CA3F88 SYS
WRI$_SQLSET_STMT_ID_SEQ

0000000065344F20
a81278113323e60b43df904633c813f4

0000000088D0D990
SELECT SRC_COLUMN_NA

000000008CAEB438 SYS
WRI$_ADV_ABSTRACT_T

000000008CA4BA28
16367818223288924276

0000000060D89B68 $BUILD$
46165b4fd8d2a5a3

0000000060EA09C0
5a09d6bdd3eb07dfeddc2feb33ffdc74

000000008CB22460
delete from WRH$_FILEMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088D73378
delete from WRH$_FILEMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B183DA8
a59536a2a6e7993e2d7ed26d9b995115

0000000088CEC868 SYS
GV$SQL_SHARED_CURSOR

0000000088DE5598
insert into WRH$_RSRC_CONSUMER_GROUP   (snap_id, dbid, instance_number,    sequence#, consumer_group_id, consumer_group_name,    reques
ts, cpu_wait_time, cpu_waits, consumed_cpu_time, yields,    active_sess_limit_hit, undo_limit_hit,    switches_in_cpu_time, switches_ou
t_cpu_time,    switches_in_io_megabytes, switches_out_io_megabytes,    switches_in_io_requests, switches_out_io_requests,    sql_cancel
ed,    active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,    queued_time, queue_time_outs,    io_service_time, io_service_wai
ts,    small_read_megabytes, small_write_megabytes,    large_read_megabytes, large_write_megabytes,   small_read_requests, small_write_
requests,    large_read_requests, large_write_requests,    pqs_queued, pq_queued_time, pq_queue_time_outs,    pqs_completed, pq_servers
_used, pq_active_time)  (select      :snap_id, :dbid, :instance_number,      cg.sequence#,      cg.id, cg.name,      cg.requests, cg.cp
u_wait_time, cg.cpu_waits,      cg.consumed_cpu_time, c

000000008C95B230
insert into WRH$_RSRC_CONSUMER_GROUP   (snap_id, dbid, instance_number,    sequence#, consumer_group_id, consumer_group_name,    reques
ts, cpu_wait_time, cpu_waits, consumed_cpu_time, yields,    active_sess_limit_hit, undo_limit_hit,    switches_in_cpu_time, switches_ou
t_cpu_time,    switches_in_io_megabytes, switches_out_io_megabytes,    switches_in_io_requests, switches_out_io_requests,    sql_cancel
ed,    active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,    queued_time, queue_time_outs,    io_service_time, io_service_wai
ts,    small_read_megabytes, small_write_megabytes,    large_read_megabytes, large_write_megabytes,   small_read_requests, small_write_
requests,    large_read_requests, large_write_requests,    pqs_queued, pq_queued_time, pq_queue_time_outs,    pqs_completed, pq_servers
_used, pq_active_time)  (select      :snap_id, :dbid, :instance_number,      cg.sequence#,      cg.id, cg.name,      cg.requests, cg.cp
u_wait_time, cg.cpu_waits,      cg.consumed_cpu_time, c

000000008B233550
insert into WRH$_RSRC_CONSUMER_GROUP   (snap_id, dbid, instance_number,    sequence#, consumer_group_id, consumer_group_name,    reques
ts, cpu_wait_time, cpu_waits, consumed_cpu_time, yields,    active_sess_limit_hit, undo_limit_hit,    switches_in_cpu_time, switches_ou
t_cpu_time,    switches_in_io_megabytes, switches_out_io_megabytes,    switches_in_io_requests, switches_out_io_requests,    sql_cancel
ed,    active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,    queued_time, queue_time_outs,    io_service_time, io_service_wai
ts,    small_read_megabytes, small_write_megabytes,    large_read_megabytes, large_write_megabytes,   small_read_requests, small_write_
requests,    large_read_requests, large_write_requests,    pqs_queued, pq_queued_time, pq_queue_time_outs,    pqs_completed, pq_servers
_used, pq_active_time)  (select      :snap_id, :dbid, :instance_number,      cg.sequence#,      cg.id, cg.name,      cg.requests, cg.cp
u_wait_time, cg.cpu_waits,      cg.consumed_cpu_time, c

0000000092C61238
insert into WRH$_RSRC_CONSUMER_GROUP   (snap_id, dbid, instance_number,    sequence#, consumer_group_id, consumer_group_name,    reques
ts, cpu_wait_time, cpu_waits, consumed_cpu_time, yields,    active_sess_limit_hit, undo_limit_hit,    switches_in_cpu_time, switches_ou
t_cpu_time,    switches_in_io_megabytes, switches_out_io_megabytes,    switches_in_io_requests, switches_out_io_requests,    sql_cancel
ed,    active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,    queued_time, queue_time_outs,    io_service_time, io_service_wai
ts,    small_read_megabytes, small_write_megabytes,    large_read_megabytes, large_write_megabytes,   small_read_requests, small_write_
requests,    large_read_requests, large_write_requests,    pqs_queued, pq_queued_time, pq_queue_time_outs,    pqs_completed, pq_servers
_used, pq_active_time)  (select      :snap_id, :dbid, :instance_number,      cg.sequence#,      cg.id, cg.name,      cg.requests, cg.cp
u_wait_time, cg.cpu_waits,      cg.consumed_cpu_time, c

000000008B15C1C0
insert into WRH$_RSRC_CONSUMER_GROUP   (snap_id, dbid, instance_number,    sequence#, consumer_group_id, consumer_group_name,    reques
ts, cpu_wait_time, cpu_waits, consumed_cpu_time, yields,    active_sess_limit_hit, undo_limit_hit,    switches_in_cpu_time, switches_ou
t_cpu_time,    switches_in_io_megabytes, switches_out_io_megabytes,    switches_in_io_requests, switches_out_io_requests,    sql_cancel
ed,    active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,    queued_time, queue_time_outs,    io_service_time, io_service_wai
ts,    small_read_megabytes, small_write_megabytes,    large_read_megabytes, large_write_megabytes,   small_read_requests, small_write_
requests,    large_read_requests, large_write_requests,    pqs_queued, pq_queued_time, pq_queue_time_outs,    pqs_completed, pq_servers
_used, pq_active_time)  (select      :snap_id, :dbid, :instance_number,      cg.sequence#,      cg.id, cg.name,      cg.requests, cg.cp
u_wait_time, cg.cpu_waits,      cg.consumed_cpu_time, c

0000000092C3B3F8
insert into WRH$_RSRC_CONSUMER_GROUP   (snap_id, dbid, instance_number,    sequence#, consumer_group_id, consumer_group_name,    reques
ts, cpu_wait_time, cpu_waits, consumed_cpu_time, yields,    active_sess_limit_hit, undo_limit_hit,    switches_in_cpu_time, switches_ou
t_cpu_time,    switches_in_io_megabytes, switches_out_io_megabytes,    switches_in_io_requests, switches_out_io_requests,    sql_cancel
ed,    active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,    queued_time, queue_time_outs,    io_service_time, io_service_wai
ts,    small_read_megabytes, small_write_megabytes,    large_read_megabytes, large_write_megabytes,   small_read_requests, small_write_
requests,    large_read_requests, large_write_requests,    pqs_queued, pq_queued_time, pq_queue_time_outs,    pqs_completed, pq_servers
_used, pq_active_time)  (select      :snap_id, :dbid, :instance_number,      cg.sequence#,      cg.id, cg.name,      cg.requests, cg.cp
u_wait_time, cg.cpu_waits,      cg.consumed_cpu_time, c

0000000088DE5A18
insert into WRH$_RSRC_CONSUMER_GROUP   (snap_id, dbid, instance_number,    sequence#, consumer_group_id, consumer_group_name,    reques
ts, cpu_wait_time, cpu_waits, consumed_cpu_time, yields,    active_sess_limit_hit, undo_limit_hit,    switches_in_cpu_time, switches_ou
t_cpu_time,    switches_in_io_megabytes, switches_out_io_megabytes,    switches_in_io_requests, switches_out_io_requests,    sql_cancel
ed,    active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,    queued_time, queue_time_outs,    io_service_time, io_service_wai
ts,    small_read_megabytes, small_write_megabytes,    large_read_megabytes, large_write_megabytes,   small_read_requests, small_write_
requests,    large_read_requests, large_write_requests,    pqs_queued, pq_queued_time, pq_queue_time_outs,    pqs_completed, pq_servers
_used, pq_active_time)  (select      :snap_id, :dbid, :instance_number,      cg.sequence#,      cg.id, cg.name,      cg.requests, cg.cp
u_wait_time, cg.cpu_waits,      cg.consumed_cpu_time, c

0000000088F9C268 SYS
V$INSTANCE_RECOVERY

0000000088FA92A0 SYS
X$KTFTHC

000000008CAC1E18
47adc09c34f78c2d121b6c5e5863a0fe

000000008CA52680 SYS
WRI$_OPTSTAT_OPR

000000008B3BE3E8
ba002f4cde4560c23a30a18135b31831

000000008C8861A0
732d1523e906e89a5839117a4fa53ef

000000008B057F80
DELETE FROM OPTSTAT_

0000000092C48040
56702055b39a5ce2a8c470ff55890df2

0000000092C40AE8
select metadata from kopm$  where name='DB_FDO'

000000008CACB1F0
select metadata from kopm$  where name='DB_FDO'

0000000092CD1E08
select metadata from kopm$  where name='DB_FDO'

0000000092C40E78
select metadata from kopm$  where name='DB_FDO'

0000000060D27A00 $BUILD$
397b9479461733ba

000000008B1D7ED8
LOCK TABLE SYS.STATS_TARGET$ IN EXCLUSIVE MODE

0000000088E38F08
LOCK TABLE SYS.STATS_TARGET$ IN EXCLUSIVE MODE

0000000088CFF8D0
LOCK TABLE SYS.STATS_TARGET$ IN EXCLUSIVE MODE

000000008B06A560
LOCK TABLE SYS.STATS_TARGET$ IN EXCLUSIVE MODE

000000008CBF43F0
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_ALLOCATED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#
, DATAOBJ# ORDER BY SUM(ABS(SPACE_ALLOCATED_DELTA)) DESC

0000000060EAF900
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_ALLOCATED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#
, DATAOBJ# ORDER BY SUM(ABS(SPACE_ALLOCATED_DELTA)) DESC

000000008B245370
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_ALLOCATED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#
, DATAOBJ# ORDER BY SUM(ABS(SPACE_ALLOCATED_DELTA)) DESC

000000008C89FBF8
SELECT TS#, OBJ#, DATAOBJ#, SUM(ABS(SPACE_ALLOCATED_DELTA)) FROM SYS.WRH$_SEG_STAT WHERE SNAP_ID > :B1 AND TS# <> 0 GROUP BY TS# , OBJ#
, DATAOBJ# ORDER BY SUM(ABS(SPACE_ALLOCATED_DELTA)) DESC

000000008B31A3E0
aafbbdb03697e6bf7cb74f56a4214519

0000000088E907E0
insert into wrh$_latch_misses_summary   (snap_id, dbid, instance_number, parent_name, where_in_code,    nwfail_count, sleep_count, wtr_
slp_count)  select    :snap_id, :dbid, :instance_number, parent_name, "WHERE",    sum(nwfail_count), sum(sleep_count), sum(wtr_slp_coun
t)  from    v$latch_misses  where    sleep_count > 0  group by    parent_name, "WHERE"  order by    parent_name, "WHERE"

0000000088FD8000
insert into wrh$_latch_misses_summary   (snap_id, dbid, instance_number, parent_name, where_in_code,    nwfail_count, sleep_count, wtr_
slp_count)  select    :snap_id, :dbid, :instance_number, parent_name, "WHERE",    sum(nwfail_count), sum(sleep_count), sum(wtr_slp_coun
t)  from    v$latch_misses  where    sleep_count > 0  group by    parent_name, "WHERE"  order by    parent_name, "WHERE"

0000000060D198A8
insert into wrh$_latch_misses_summary   (snap_id, dbid, instance_number, parent_name, where_in_code,    nwfail_count, sleep_count, wtr_
slp_count)  select    :snap_id, :dbid, :instance_number, parent_name, "WHERE",    sum(nwfail_count), sum(sleep_count), sum(wtr_slp_coun
t)  from    v$latch_misses  where    sleep_count > 0  group by    parent_name, "WHERE"  order by    parent_name, "WHERE"

0000000088C4CB18
insert into wrh$_latch_misses_summary   (snap_id, dbid, instance_number, parent_name, where_in_code,    nwfail_count, sleep_count, wtr_
slp_count)  select    :snap_id, :dbid, :instance_number, parent_name, "WHERE",    sum(nwfail_count), sum(sleep_count), sum(wtr_slp_coun
t)  from    v$latch_misses  where    sleep_count > 0  group by    parent_name, "WHERE"  order by    parent_name, "WHERE"

0000000088E90C60
insert into wrh$_latch_misses_summary   (snap_id, dbid, instance_number, parent_name, where_in_code,    nwfail_count, sleep_count, wtr_
slp_count)  select    :snap_id, :dbid, :instance_number, parent_name, "WHERE",    sum(nwfail_count), sum(sleep_count), sum(wtr_slp_coun
t)  from    v$latch_misses  where    sleep_count > 0  group by    parent_name, "WHERE"  order by    parent_name, "WHERE"

0000000060E16D70
875cf935e92e6ee57acadc6145e0d5

0000000088EBC3D0 SYS
WRH$_SERVICE_WAIT_CLASS

0000000088C69170 SYS
SERVICE$

00000000652EE820 SYS
EARCHBMS_OUTPUTEPUT_LINE


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
0000000088E7C000 MDSYS
SDO_GEOR

0000000060F169B0
91de253f10456de3309f658537b69130

0000000088D6FFC0 SYS
X$KCCFLE

0000000088D93638
INSERT INTO wrh$_optimizer_env         (snap_id, dbid, optimizer_env_hash_value, optimizer_env)    SELECT         :lah_snap_id lsnid, :
dbid dbid,         ope.optenvhv_kewroee, ope.optenv_kewroee    FROM      x$kewrattrnew atn, x$kewrtoptenv ope    WHERE      atn.num1_ke
wrattr = ope.optenvhv_kewroee

000000008B238FD0
INSERT INTO wrh$_optimizer_env         (snap_id, dbid, optimizer_env_hash_value, optimizer_env)    SELECT         :lah_snap_id lsnid, :
dbid dbid,         ope.optenvhv_kewroee, ope.optenv_kewroee    FROM      x$kewrattrnew atn, x$kewrtoptenv ope    WHERE      atn.num1_ke
wrattr = ope.optenvhv_kewroee

0000000088E77110
INSERT INTO wrh$_optimizer_env         (snap_id, dbid, optimizer_env_hash_value, optimizer_env)    SELECT         :lah_snap_id lsnid, :
dbid dbid,         ope.optenvhv_kewroee, ope.optenv_kewroee    FROM      x$kewrattrnew atn, x$kewrtoptenv ope    WHERE      atn.num1_ke
wrattr = ope.optenvhv_kewroee

0000000088D93AB8
INSERT INTO wrh$_optimizer_env         (snap_id, dbid, optimizer_env_hash_value, optimizer_env)    SELECT         :lah_snap_id lsnid, :
dbid dbid,         ope.optenvhv_kewroee, ope.optenv_kewroee    FROM      x$kewrattrnew atn, x$kewrtoptenv ope    WHERE      atn.num1_ke
wrattr = ope.optenvhv_kewroee

000000008B38C0D0
select low, bit from  (select snap_id - 1 low, min(begin_interval_time) bit from wrm$_snapshot where dbid = :dbid and snap_id = (select
 min(snap_id) from wrm$_snapshot where dbid = :dbid and status in (0,1)) group by snap_id union all select 2147483647, systimestamp fro
m  v$database where dbid <> :dbid order by 1 asc nulls last ) where rownum = 1

0000000092CC3668
select low, bit from  (select snap_id - 1 low, min(begin_interval_time) bit from wrm$_snapshot where dbid = :dbid and snap_id = (select
 min(snap_id) from wrm$_snapshot where dbid = :dbid and status in (0,1)) group by snap_id union all select 2147483647, systimestamp fro
m  v$database where dbid <> :dbid order by 1 asc nulls last ) where rownum = 1

0000000088CF4A58 SYS
DBMS_SQLTCB_INTERNAL

0000000060D74F58 SYS
AQ$_QUEUE_TABLE_AFFINITIES

000000008C903620
cef0429a290691c83a49a378e3a2d601

000000008B304198 $BUILD$
6cb336e560a741da

000000008CBB9870
c0d448f183aa3d1f61aed049b0b9a18d

0000000088CF0EE8
664d9da0bd73b83989cbb33eae03fd40

000000008C8B1640
select inst_id, addr, indx, ksuprpid, ksuprpname, ksuprunm, ksuprser, ksuprtid, ksuprpnm, ksuprtfi, ksuprtfn, decode(bitand(ksuprflg,2)
,0,null,1), decode(ksllawat,hextoraw('00'),null,ksllawat), decode(ksllaspn,hextoraw('00'),null,ksllaspn), ksuprpum,ksuprpnam+ksuprpram,
ksuprpfm, case when ksuprpnam+ksuprpram > ksuprpmm       then ksuprpnam+ksuprpram       else ksuprpmm end  from x$ksupr where bitand(ks
spaflg,1)!=0

0000000060D67988
select inst_id, addr, indx, ksuprpid, ksuprpname, ksuprunm, ksuprser, ksuprtid, ksuprpnm, ksuprtfi, ksuprtfn, decode(bitand(ksuprflg,2)
,0,null,1), decode(ksllawat,hextoraw('00'),null,ksllawat), decode(ksllaspn,hextoraw('00'),null,ksllaspn), ksuprpum,ksuprpnam+ksuprpram,
ksuprpfm, case when ksuprpnam+ksuprpram > ksuprpmm       then ksuprpnam+ksuprpram       else ksuprpmm end  from x$ksupr where bitand(ks
spaflg,1)!=0

000000008CBDC4F0 ORACLE_OCM
MGMT_CONFIG

0000000060F30710
select  NUM , NAME , TYPE , VALUE , DISPLAY_VALUE,  ISDEFAULT , ISSES_MODIFIABLE , ISSYS_MODIFIABLE , ISINSTANCE_MODIFIABLE, ISMODIFIED
 , ISADJUSTED , ISDEPRECATED, ISBASIC, DESCRIPTION, UPDATE_COMMENT, HASH from GV$SYSTEM_PARAMETER where inst_id = USERENV('Instance')

000000008B24A968
select  NUM , NAME , TYPE , VALUE , DISPLAY_VALUE,  ISDEFAULT , ISSES_MODIFIABLE , ISSYS_MODIFIABLE , ISINSTANCE_MODIFIABLE, ISMODIFIED
 , ISADJUSTED , ISDEPRECATED, ISBASIC, DESCRIPTION, UPDATE_COMMENT, HASH from GV$SYSTEM_PARAMETER where inst_id = USERENV('Instance')

000000008B0F9908
MERGE /*+ dynamic_sampling(ST 4) dynamic_sampling_est_cdn(ST) */ INTO STATS_TARGET$ ST USING (SELECT STALENESS, OSIZE, OBJ#, TYPE#, AFL
AGS, STATUS, SID, SERIAL#, PART#, BO# FROM ( SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS
,16), 16, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSE
RTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STAL
ENESS, CASE WHEN BITAND(T.PROPERTY, 32) = 32 OR T.FILE# = 0 THEN DBMS_STATS_INTERNAL.GET_TABLE_BLOCK_COUNT(U.NAME, O.NAME, NULL, NULL,
'TRUE') WHEN S.TYPE# = 5 THEN DBMS_STATS_INTERNAL.SEGMENT_NUMBER_BLOCKS(T.TS#, T.FILE#, T.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0)
, O.DATAOBJ#, S.BLOCKS, 'TRUE') ELSE NULL END * NVL(TS.BLOCKSIZE, :B6 ) OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, 32 + CASE WHEN ((BITAND(T.FL
AGS,16) = 16 AND (BITAND(M.FLAGS,1) != 0 OR (M.INSERTS

0000000088DE65A8
MERGE /*+ dynamic_sampling(ST 4) dynamic_sampling_est_cdn(ST) */ INTO STATS_TARGET$ ST USING (SELECT STALENESS, OSIZE, OBJ#, TYPE#, AFL
AGS, STATUS, SID, SERIAL#, PART#, BO# FROM ( SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS
,16), 16, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSE
RTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STAL
ENESS, CASE WHEN BITAND(T.PROPERTY, 32) = 32 OR T.FILE# = 0 THEN DBMS_STATS_INTERNAL.GET_TABLE_BLOCK_COUNT(U.NAME, O.NAME, NULL, NULL,
'TRUE') WHEN S.TYPE# = 5 THEN DBMS_STATS_INTERNAL.SEGMENT_NUMBER_BLOCKS(T.TS#, T.FILE#, T.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0)
, O.DATAOBJ#, S.BLOCKS, 'TRUE') ELSE NULL END * NVL(TS.BLOCKSIZE, :B6 ) OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, 32 + CASE WHEN ((BITAND(T.FL
AGS,16) = 16 AND (BITAND(M.FLAGS,1) != 0 OR (M.INSERTS

000000008B13CA78
MERGE /*+ dynamic_sampling(ST 4) dynamic_sampling_est_cdn(ST) */ INTO STATS_TARGET$ ST USING (SELECT STALENESS, OSIZE, OBJ#, TYPE#, AFL
AGS, STATUS, SID, SERIAL#, PART#, BO# FROM ( SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS
,16), 16, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSE
RTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STAL
ENESS, CASE WHEN BITAND(T.PROPERTY, 32) = 32 OR T.FILE# = 0 THEN DBMS_STATS_INTERNAL.GET_TABLE_BLOCK_COUNT(U.NAME, O.NAME, NULL, NULL,
'TRUE') WHEN S.TYPE# = 5 THEN DBMS_STATS_INTERNAL.SEGMENT_NUMBER_BLOCKS(T.TS#, T.FILE#, T.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0)
, O.DATAOBJ#, S.BLOCKS, 'TRUE') ELSE NULL END * NVL(TS.BLOCKSIZE, :B6 ) OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, 32 + CASE WHEN ((BITAND(T.FL
AGS,16) = 16 AND (BITAND(M.FLAGS,1) != 0 OR (M.INSERTS

000000008B0661D0
MERGE /*+ dynamic_sampling(ST 4) dynamic_sampling_est_cdn(ST) */ INTO STATS_TARGET$ ST USING (SELECT STALENESS, OSIZE, OBJ#, TYPE#, AFL
AGS, STATUS, SID, SERIAL#, PART#, BO# FROM ( SELECT /*+ no_expand dynamic_sampling(4) dynamic_sampling_est_cdn */ DECODE(BITAND(T.FLAGS
,16), 16, ROUND( LOG(0.01, NVL( LEAST( 100, GREATEST( 0.01, (DECODE(BITAND(M.FLAGS, 1), 1, GREATEST(T.ROWCNT, M.INSERTS), LEAST((M.INSE
RTS + M.DELETES + M.UPDATES), GREATEST(T.ROWCNT, (T.ROWCNT + M.INSERTS - M.DELETES)))) / (T.ROWCNT + 0.01)))), 0.01)), 1), -100.0) STAL
ENESS, CASE WHEN BITAND(T.PROPERTY, 32) = 32 OR T.FILE# = 0 THEN DBMS_STATS_INTERNAL.GET_TABLE_BLOCK_COUNT(U.NAME, O.NAME, NULL, NULL,
'TRUE') WHEN S.TYPE# = 5 THEN DBMS_STATS_INTERNAL.SEGMENT_NUMBER_BLOCKS(T.TS#, T.FILE#, T.BLOCK#, S.TYPE#, S.CACHEHINT, NVL(S.SPARE1,0)
, O.DATAOBJ#, S.BLOCKS, 'TRUE') ELSE NULL END * NVL(TS.BLOCKSIZE, :B6 ) OSIZE, O.OBJ# OBJ#, O.TYPE# TYPE#, 32 + CASE WHEN ((BITAND(T.FL
AGS,16) = 16 AND (BITAND(M.FLAGS,1) != 0 OR (M.INSERTS

000000008B22EF10
select substrb(dump(

000000008B3AAA78 SYS
DBA_SQLSET

000000008B2A8298
SELECT VALUE FROM AL

0000000088E9F850 SYS
V$ENQUEUE_STATISTICS

000000008B30CDE0
71bf9a5f12113d1746f83d9929d601ee

0000000088EC0A80
f721d8adbd89fc027cffd9f06f4e2034

000000008B06EB60
SELECT CASE WHEN BIT

0000000060D0E4A8 SYS
DBMS_STREAMS_ADM_UTL

000000008C924718
DELETE FROM WRI$_ADV

0000000088DFBDB8
SELECT NVL(MAX(SNAPID),0) FROM SYS.WRI$_SEGADV_CNTRLTAB

0000000060ECC7E0
SELECT NVL(MAX(SNAPID),0) FROM SYS.WRI$_SEGADV_CNTRLTAB

000000008CA352F8
SELECT NVL(MAX(SNAPID),0) FROM SYS.WRI$_SEGADV_CNTRLTAB

000000008CBA7698
SELECT NVL(MAX(SNAPID),0) FROM SYS.WRI$_SEGADV_CNTRLTAB

0000000060ED3090
/* SQL Analyze(1) */

00000000653F5C30 SCOTT
HASH_TABLE

0000000088EC2070 SYS
WRH$_SERVICE_STAT

0000000060F1E820
fffe2f1b4f953c0e82e3b53cbd5e2fa6

0000000088CBB0C0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060ECFAA0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B120C88
delete from WRH$_MEMORY_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C95FB80
delete from WRH$_MEMORY_TARGET_ADVICE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060C55F80
SELECT /* DS_SVC */

0000000088CCC5B8
SELECT XMLELEMENT( "

0000000088CA43D8 SYS
SQL_PLAN_STAT_ROW_TYPE

0000000060E228E0
37773f89c7d0f880bea8e92367537cfc

000000008CA591E8
e7dc57663fa5e2091e9a0dd957cdace4

000000008CA041C0
6e548693f5757ae665891adf431d82ba

0000000060E967B0
SELECT inst_id, COMPONENT_ID_KSFDSTCMP,                                     decode(COMPONENT_ID_KSFDSTCMP,
               0, 'RMAN', 1, 'DBWR', 2, 'LGWR', 3, 'ARCH',                               4, 'XDB',  5, 'Streams AQ',
                            6, 'Data Pump', 7, 'Recovery', 8, 'Buffer Cache Reads',                   9, 'Direct Reads', 10, 'Direct Wr
ites',                                   12, 'Archive Manager', 13, 'Others'),                                     FILETYPE_KSFDSTCMP,
                                                      decode(FILETYPE_KSFDSTCMP,                                                1,'Cont
rol File', 2, 'Data File', 3, 'Log File',                          4,'Archive Log',  6, 'Temp File',
      9,'Data File Backup', 10,'Data File Incremental Backup',                  11,'Archive Log Backup', 12, 'Data File Copy',
                   17,'Flashback Log', 18,'Data Pump Du

0000000092D4C448
SELECT inst_id, COMPONENT_ID_KSFDSTCMP,                                     decode(COMPONENT_ID_KSFDSTCMP,
               0, 'RMAN', 1, 'DBWR', 2, 'LGWR', 3, 'ARCH',                               4, 'XDB',  5, 'Streams AQ',
                            6, 'Data Pump', 7, 'Recovery', 8, 'Buffer Cache Reads',                   9, 'Direct Reads', 10, 'Direct Wr
ites',                                   12, 'Archive Manager', 13, 'Others'),                                     FILETYPE_KSFDSTCMP,
                                                      decode(FILETYPE_KSFDSTCMP,                                                1,'Cont
rol File', 2, 'Data File', 3, 'Log File',                          4,'Archive Log',  6, 'Temp File',
      9,'Data File Backup', 10,'Data File Incremental Backup',                  11,'Archive Log Backup', 12, 'Data File Copy',
                   17,'Flashback Log', 18,'Data Pump Du

0000000088C904F8
SELECT DELETEXML(XML

000000008B378E08
update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,extpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535
, NULL, :13),groups=decode(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:17),scanhint=:18, bitmapranges
=:19 where ts#=:1 and file#=:2 and block#=:3

0000000088D18C00
update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,extpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535
, NULL, :13),groups=decode(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:17),scanhint=:18, bitmapranges
=:19 where ts#=:1 and file#=:2 and block#=:3

000000008CBDD9D0
update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,extpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535
, NULL, :13),groups=decode(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:17),scanhint=:18, bitmapranges
=:19 where ts#=:1 and file#=:2 and block#=:3

0000000092CA4FC8
update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,extpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535
, NULL, :13),groups=decode(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:17),scanhint=:18, bitmapranges
=:19 where ts#=:1 and file#=:2 and block#=:3

000000008B379198
update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,extpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535
, NULL, :13),groups=decode(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:17),scanhint=:18, bitmapranges
=:19 where ts#=:1 and file#=:2 and block#=:3

000000008B0985E0
INSERT INTO SYS.AUX_

0000000060E947B0
4771acc79ea76dc16a770044a6df93a7

0000000088CA8858
select substrb(dump(

0000000088C88558
UPDATE WRI$_SQLMON_U

0000000088CFA048
select substrb(dump(

0000000065344DB0
select master from sys.mlog$ where master = :2 and mowner = :1

000000008B0B5DF0
select master from sys.mlog$ where master = :2 and mowner = :1

000000008C94FA00 SYS
WRH$_WAITSTAT

000000008B0D4688 SYS
GO$SQL_BIND_CAPTURE

000000008CA543B0
SELECT COUNT(*) FROM

0000000060C58F30
ac797a9811f554cbbb1405af3d654154

000000008C9FE778
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088FC8028
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B21BA70 SYS
GV$SYSSTAT

000000008C96C0D0
SELECT /*+ordered*/

0000000088C37838
8ae4d788f26d43f0c8b22bfaad9e9c23

000000008B3A7E38
SELECT COUNT(*) FROM

0000000060C507C8
select substrb(dump(

000000008B29BEA0
begin   :owner :=upper('scott');   :table_name := upper('test'); end;

0000000088C47D98
begin   :owner :=upper('scott');   :table_name := upper('test'); end;

0000000060C56910
8d7d666b2d1c701d1478a33fd2023df3

0000000092C75998 SYS
DBMS_SCHEDULER

0000000088F1E3D8
insert into wrh$_sysmetric_summary     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, num_in
terval,      maxval, minval, average, standard_deviation, sum_squares)  select      :snap_id, :dbid, :instance_number,      begtime, en
dtime, intsize_csec,      groupid, metricid, numintv, max, min, avg, std, sumsq    FROM x$kewmsmdv WHERE groupid = 2

0000000092CCDD98
insert into wrh$_sysmetric_summary     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, num_in
terval,      maxval, minval, average, standard_deviation, sum_squares)  select      :snap_id, :dbid, :instance_number,      begtime, en
dtime, intsize_csec,      groupid, metricid, numintv, max, min, avg, std, sumsq    FROM x$kewmsmdv WHERE groupid = 2

0000000088F899D8
insert into wrh$_sysmetric_summary     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, num_in
terval,      maxval, minval, average, standard_deviation, sum_squares)  select      :snap_id, :dbid, :instance_number,      begtime, en
dtime, intsize_csec,      groupid, metricid, numintv, max, min, avg, std, sumsq    FROM x$kewmsmdv WHERE groupid = 2

0000000088F1E858
insert into wrh$_sysmetric_summary     (snap_id, dbid, instance_number,      begin_time, end_time, intsize, group_id, metric_id, num_in
terval,      maxval, minval, average, standard_deviation, sum_squares)  select      :snap_id, :dbid, :instance_number,      begtime, en
dtime, intsize_csec,      groupid, metricid, numintv, max, min, avg, std, sumsq    FROM x$kewmsmdv WHERE groupid = 2

0000000060FD3B40
select snap_id + 1 low, max(end_interval_time) eit from wrm$_snapshot where dbid = :dbid and snap_id = (select max(snap_id) from wrm$_s
napshot s where dbid = :dbid and snap_id < :snap_id and status in (0,1) and not exists (select 1 from WRM$_BASELINE b where b.dbid = s.
dbid and s.snap_id >= b.start_snap_id and s.snap_id <= b.end_snap_id)) group by snap_id

0000000060F7DEE0
select snap_id + 1 low, max(end_interval_time) eit from wrm$_snapshot where dbid = :dbid and snap_id = (select max(snap_id) from wrm$_s
napshot s where dbid = :dbid and snap_id < :snap_id and status in (0,1) and not exists (select 1 from WRM$_BASELINE b where b.dbid = s.
dbid and s.snap_id >= b.start_snap_id and s.snap_id <= b.end_snap_id)) group by snap_id

0000000060FEFE70
ef594b9422aa8547bd07c7b2859482c

000000008B2E3CA8
select substrb(dump(

0000000092D5ADF8
31904ab7108c284242af68afc3fa4a17

000000008B08B6D0
SELECT /*+ rule */ O

0000000088FBCA28 SYS
WRH$_WAITSTAT_PK

0000000092CE7538 SYS
ALL_RULE_SETS

000000008B33EE08
delete from WRH$_ROWCACHE_SUMMARY_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_i
d >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092CA2838
delete from WRH$_ROWCACHE_SUMMARY_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_i
d >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C983890
SELECT OPTIMIZATION

0000000088D6A6E8
select substrb(dump(

000000008B134428
49b06e261a3b73feb5eb9ca59c511170

0000000088ECB7E0
SELECT BUILD_STATUS,

0000000060F17750
select st.inst_id, eqt.name, st.ksqsttyp, st.ksqstrsn,           st.ksqstreq, st.ksqstwat, st.ksqstsgt, st.ksqstfgt, st.ksqstwtm,
     st.ksqstexpl, st.ksqstevidx    from X$KSQST st, X$KSQEQTYP eqt    where (st.inst_id = eqt.inst_id) and (st.ksqsttyp = eqt.resname)
 and          (st.indx > 0)

0000000088E8A910
select st.inst_id, eqt.name, st.ksqsttyp, st.ksqstrsn,           st.ksqstreq, st.ksqstwat, st.ksqstsgt, st.ksqstfgt, st.ksqstwtm,
     st.ksqstexpl, st.ksqstevidx    from X$KSQST st, X$KSQEQTYP eqt    where (st.inst_id = eqt.inst_id) and (st.ksqsttyp = eqt.resname)
 and          (st.indx > 0)

0000000088C92C18
SELECT F.OBJECT_ID F

0000000060F2EEE0
delete from WRH$_TEMPSTATXS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B1702C0
delete from WRH$_TEMPSTATXS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060F9FD10
9cfd2727f30195e759a1d5c68bb699b4

000000008B38A6F0 SYS
V$QUEUE

0000000088F8F9A8
a6fae6deb9c4a9359c89c99fc131fc1

0000000088FEB6B0
select substrb(dump(

0000000088EF8FA8
f9e9460e6aabc892754b74d2721321a3

000000008CB98318
SELECT 1 FROM WWV_FL

0000000060E20EC0
SELECT FLAGS FROM SYS.PARTOBJ$ WHERE OBJ# = :B1

000000008B05FCC0
SELECT FLAGS FROM SYS.PARTOBJ$ WHERE OBJ# = :B1

0000000088E61158 SYS
SYS_FBA_TRACKEDTABLES

0000000060EC16C0 SYS
ODCIVARCHAR2LIST

0000000092C87E68
20d34e9fc6a4e32fcb66771315a5d303

000000008CA7C6B0 SYS
WRH$_MEMORY_TARGET_ADVICE

0000000092C72B68
select t.ts#,t.file#,t.block#,nvl(t.bobj#,0),nvl(t.tab#,0),t.intcols,nvl(t.clucols,0),t.audit$,t.flags,t.pctfree$,t.pctused$,t.initrans
,t.maxtrans,t.rowcnt,t.blkcnt,t.empcnt,t.avgspc,t.chncnt,t.avgrln,t.analyzetime,t.samplesize,t.cols,t.property,nvl(t.degree,1),nvl(t.in
stances,1),t.avgspc_flb,t.flbcnt,t.kernelcols,nvl(t.trigflag, 0),nvl(t.spare1,0),nvl(t.spare2,0),t.spare4,t.spare6,ts.cachedblk,ts.cach
ehit,ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

0000000088D24670
select t.ts#,t.file#,t.block#,nvl(t.bobj#,0),nvl(t.tab#,0),t.intcols,nvl(t.clucols,0),t.audit$,t.flags,t.pctfree$,t.pctused$,t.initrans
,t.maxtrans,t.rowcnt,t.blkcnt,t.empcnt,t.avgspc,t.chncnt,t.avgrln,t.analyzetime,t.samplesize,t.cols,t.property,nvl(t.degree,1),nvl(t.in
stances,1),t.avgspc_flb,t.flbcnt,t.kernelcols,nvl(t.trigflag, 0),nvl(t.spare1,0),nvl(t.spare2,0),t.spare4,t.spare6,ts.cachedblk,ts.cach
ehit,ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

0000000092D80918
select t.ts#,t.file#,t.block#,nvl(t.bobj#,0),nvl(t.tab#,0),t.intcols,nvl(t.clucols,0),t.audit$,t.flags,t.pctfree$,t.pctused$,t.initrans
,t.maxtrans,t.rowcnt,t.blkcnt,t.empcnt,t.avgspc,t.chncnt,t.avgrln,t.analyzetime,t.samplesize,t.cols,t.property,nvl(t.degree,1),nvl(t.in
stances,1),t.avgspc_flb,t.flbcnt,t.kernelcols,nvl(t.trigflag, 0),nvl(t.spare1,0),nvl(t.spare2,0),t.spare4,t.spare6,ts.cachedblk,ts.cach
ehit,ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

0000000088FD0BB8
select t.ts#,t.file#,t.block#,nvl(t.bobj#,0),nvl(t.tab#,0),t.intcols,nvl(t.clucols,0),t.audit$,t.flags,t.pctfree$,t.pctused$,t.initrans
,t.maxtrans,t.rowcnt,t.blkcnt,t.empcnt,t.avgspc,t.chncnt,t.avgrln,t.analyzetime,t.samplesize,t.cols,t.property,nvl(t.degree,1),nvl(t.in
stances,1),t.avgspc_flb,t.flbcnt,t.kernelcols,nvl(t.trigflag, 0),nvl(t.spare1,0),nvl(t.spare2,0),t.spare4,t.spare6,ts.cachedblk,ts.cach
ehit,ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

0000000092C72FE8
select t.ts#,t.file#,t.block#,nvl(t.bobj#,0),nvl(t.tab#,0),t.intcols,nvl(t.clucols,0),t.audit$,t.flags,t.pctfree$,t.pctused$,t.initrans
,t.maxtrans,t.rowcnt,t.blkcnt,t.empcnt,t.avgspc,t.chncnt,t.avgrln,t.analyzetime,t.samplesize,t.cols,t.property,nvl(t.degree,1),nvl(t.in
stances,1),t.avgspc_flb,t.flbcnt,t.kernelcols,nvl(t.trigflag, 0),nvl(t.spare1,0),nvl(t.spare2,0),t.spare4,t.spare6,ts.cachedblk,ts.cach
ehit,ts.logicalread from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)

000000008B20A038 B
DENSITY

000000008CB17CC8
SELECT * FROM SYS.SC

000000008C9E3378
4bf35c3bafdb97e52dddb662998f940c

000000008C9CE608 PUBLIC
EARCHBMS_OUTPUTEPUT_LINE

000000008B1F6E50
b53b543b6a65d6b141df4a8cf9b4bb58

000000008CA5DF88
1a1e332b56fbb5d634be7e4bed981d64

0000000088C7B720 PUBLIC
USER_TRIGGERS

000000008CB588D8
7648651ea793e10c1ed5cbd66f7fcab0

000000008C9699D0
fef3175482efc936982a7d441166744d

000000008B050080
SELECT PART_NAME, PO

000000008CB7EA88
SELECT TABOWNER, TABNAME, PARTNAME, TSNAME, TBSID, SEGSIZE, SEGOBJD, SEGOBJN, SEGMENT_TYPE FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEX
ES > 3 AND SEGSIZE > 10485760 ORDER BY SEGSIZE DESC

0000000060FF7900
SELECT TABOWNER, TABNAME, PARTNAME, TSNAME, TBSID, SEGSIZE, SEGOBJD, SEGOBJN, SEGMENT_TYPE FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEX
ES > 3 AND SEGSIZE > 10485760 ORDER BY SEGSIZE DESC

0000000088E516E8
SELECT TABOWNER, TABNAME, PARTNAME, TSNAME, TBSID, SEGSIZE, SEGOBJD, SEGOBJN, SEGMENT_TYPE FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEX
ES > 3 AND SEGSIZE > 10485760 ORDER BY SEGSIZE DESC

000000008CACE858
SELECT TABOWNER, TABNAME, PARTNAME, TSNAME, TBSID, SEGSIZE, SEGOBJD, SEGOBJN, SEGMENT_TYPE FROM SYS_UNCOMPRESSED_SEGS WHERE TOTAL_INDEX
ES > 3 AND SEGSIZE > 10485760 ORDER BY SEGSIZE DESC

000000008C9959E8
b45ba1a074cd46cb3dbad78c15881ef4

0000000088E20E98
insert into wrh$_mttr_target_advice        (snap_id, dbid, instance_number,         mttr_target_for_estimate, advice_status, dirty_limi
t,         estd_cache_writes, estd_cache_write_factor,         estd_total_writes, estd_total_write_factor,         estd_total_ios, estd
_total_io_factor)   select :snap_id, :dbid, :instance_number,          mttr_target_for_estimate, advice_status, dirty_limit,          e
std_cache_writes, estd_cache_write_factor,          estd_total_writes, estd_total_write_factor,          estd_total_ios, estd_total_io_
factor     from v$mttr_target_advice

000000008C9E2B58
insert into wrh$_mttr_target_advice        (snap_id, dbid, instance_number,         mttr_target_for_estimate, advice_status, dirty_limi
t,         estd_cache_writes, estd_cache_write_factor,         estd_total_writes, estd_total_write_factor,         estd_total_ios, estd
_total_io_factor)   select :snap_id, :dbid, :instance_number,          mttr_target_for_estimate, advice_status, dirty_limit,          e
std_cache_writes, estd_cache_write_factor,          estd_total_writes, estd_total_write_factor,          estd_total_ios, estd_total_io_
factor     from v$mttr_target_advice

0000000088E21318
insert into wrh$_mttr_target_advice        (snap_id, dbid, instance_number,         mttr_target_for_estimate, advice_status, dirty_limi
t,         estd_cache_writes, estd_cache_write_factor,         estd_total_writes, estd_total_write_factor,         estd_total_ios, estd
_total_io_factor)   select :snap_id, :dbid, :instance_number,          mttr_target_for_estimate, advice_status, dirty_limit,          e
std_cache_writes, estd_cache_write_factor,          estd_total_writes, estd_total_write_factor,          estd_total_ios, estd_total_io_
factor     from v$mttr_target_advice

000000008CA1E998
SELECT JOB_NAME FROM

0000000060E1FE00
SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#, ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME, ICP.ANALYZETIME) LAST_ANALYZ
ED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE :B3 IS NULL AND
 U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.TYPE#
= 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#,
ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME,ICP.ANALYZETIME) LAST_ANALYZED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.
USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE =
4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+
) UNION ALL SELECT /*+ leading(u osp isp op) */ OP.OBJ#

0000000060EED7C0
SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#, ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME, ICP.ANALYZETIME) LAST_ANALYZ
ED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE :B3 IS NULL AND
 U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.TYPE#
= 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#,
ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME,ICP.ANALYZETIME) LAST_ANALYZED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.
USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE =
4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+
) UNION ALL SELECT /*+ leading(u osp isp op) */ OP.OBJ#

0000000060E7C510
SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#, ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME, ICP.ANALYZETIME) LAST_ANALYZ
ED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE :B3 IS NULL AND
 U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.TYPE#
= 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#,
ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME,ICP.ANALYZETIME) LAST_ANALYZED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.
USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE =
4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+
) UNION ALL SELECT /*+ leading(u osp isp op) */ OP.OBJ#

000000008B089EA0
SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#, ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME, ICP.ANALYZETIME) LAST_ANALYZ
ED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE :B3 IS NULL AND
 U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE = 4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.TYPE#
= 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+) UNION ALL SELECT * FROM ( SELECT /*+ leading(u o) */ O.OBJ# POBJN, NVL(IP.PART#,
ICP.PART#) PN, O.SUBNAME PNAME, NVL(IP.ANALYZETIME,ICP.ANALYZETIME) LAST_ANALYZED, NVL(IP.FLAGS, ICP.FLAGS) FLAGS, :B4 REASON FROM SYS.
USER$ U, SYS.OBJ$ O, SYS.INDPART$ IP, SYS.INDCOMPART$ ICP WHERE U.NAME = :B2 AND O.OWNER# = U.USER# AND O.NAME = :B1 AND O.NAMESPACE =
4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND O.SUBNAME = :B3 AND O.TYPE# = 20 AND O.OBJ# = IP.OBJ#(+) AND O.OBJ# = ICP.OBJ#(+
) UNION ALL SELECT /*+ leading(u osp isp op) */ OP.OBJ#

0000000092CD3168
select substrb(dump(

0000000088DB00C8
71bc999f612564c419c5a9ed500deaca

0000000088D84050
b7ada89eb959bc13f558c0479a173b7

0000000088FD0D28 SYS
DBA_QUEUE_TABLES

0000000088D5B398
f79d226eb7519e8b0f1851b5ad34075

0000000060D0E2A8
9cc73346a83ae54787aac295a84d7a3f

0000000088C50B78
5839188172e9899c39db72ca5580d616

0000000088D27F48
d1ddd68ed1edac67ce47973d6539529

000000008CAB7A30
MDSYS

0000000088D98CA0
UPDATE STREAMS$_SPLI

000000008CA69970
select SYS_CONTEXT('USERENV','SESSION_USER') from dual

0000000088D29FD0
select SYS_CONTEXT('USERENV','SESSION_USER') from dual

000000008CBB16E8
select SYS_CONTEXT('USERENV','SESSION_USER') from dual

000000008CA69DF0
select SYS_CONTEXT('USERENV','SESSION_USER') from dual

000000008C92FCF8 SYS
WRI$_ADV_RECOMMENDATIONS

000000008CB36EF8
869107fdb338c3c08279f961b4cd29d2

000000008B3757A8 SYS
DBMS_WORKLOAD_CAPTURE_LIB

000000008C912CE8
INSERT INTO WRI$_ADV

000000008CA7A540
select position#,sequence#,level#,argument,type#,charsetid,charsetform,properties,nvl(length, 0), nvl(precision#, 0),nvl(scale, 0),nvl(
radix, 0), type_owner,type_name,type_subname,type_linkname,pls_type from argument$ where obj#=:1 and procedure#=:2 order by sequence# d
esc

000000008CA42DC0
select position#,sequence#,level#,argument,type#,charsetid,charsetform,properties,nvl(length, 0), nvl(precision#, 0),nvl(scale, 0),nvl(
radix, 0), type_owner,type_name,type_subname,type_linkname,pls_type from argument$ where obj#=:1 and procedure#=:2 order by sequence# d
esc

0000000088FEACC0
select position#,sequence#,level#,argument,type#,charsetid,charsetform,properties,nvl(length, 0), nvl(precision#, 0),nvl(scale, 0),nvl(
radix, 0), type_owner,type_name,type_subname,type_linkname,pls_type from argument$ where obj#=:1 and procedure#=:2 order by sequence# d
esc

000000008CAD3018
select position#,sequence#,level#,argument,type#,charsetid,charsetform,properties,nvl(length, 0), nvl(precision#, 0),nvl(scale, 0),nvl(
radix, 0), type_owner,type_name,type_subname,type_linkname,pls_type from argument$ where obj#=:1 and procedure#=:2 order by sequence# d
esc

000000008CA7A9C0
select position#,sequence#,level#,argument,type#,charsetid,charsetform,properties,nvl(length, 0), nvl(precision#, 0),nvl(scale, 0),nvl(
radix, 0), type_owner,type_name,type_subname,type_linkname,pls_type from argument$ where obj#=:1 and procedure#=:2 order by sequence# d
esc

000000008C959200
5719fcc1b2ef3b184bcc8140d9f5e0f1

000000008B169CC0
84f93fd34bc4e20a5f25d27a377d5e5

0000000065311F20 SYS
DBA_TAB_MODIFICATIONS

0000000088FC6E68
SELECT :B2 FROM DUAL WHERE :B1 IS NULL UNION ALL SELECT TP.OBJ# FROM SYS.TABPART$ TP, SYS.INDPART$ IP WHERE TP.BO# = :B2 AND IP.PART# =
 TP.PART# AND IP.OBJ# = :B1 UNION ALL SELECT TP.OBJ# FROM SYS.TABCOMPART$ TP, SYS.INDCOMPART$ IP WHERE TP.BO# = :B2 AND IP.PART# = TP.P
ART# AND IP.OBJ# = :B1 UNION ALL SELECT TSP.OBJ# FROM SYS.TABSUBPART$ TSP, SYS.TABCOMPART$ TCP, SYS.INDSUBPART$ ISP, SYS.INDCOMPART$ IC
P WHERE TCP.BO# = :B2 AND TSP.POBJ# = TCP.OBJ# AND ISP.SUBPART# = TSP.SUBPART# AND ICP.PART# = TCP.PART# AND ISP.POBJ# = ICP.OBJ# AND I
SP.OBJ# = :B1

000000008B37DA68
SELECT :B2 FROM DUAL WHERE :B1 IS NULL UNION ALL SELECT TP.OBJ# FROM SYS.TABPART$ TP, SYS.INDPART$ IP WHERE TP.BO# = :B2 AND IP.PART# =
 TP.PART# AND IP.OBJ# = :B1 UNION ALL SELECT TP.OBJ# FROM SYS.TABCOMPART$ TP, SYS.INDCOMPART$ IP WHERE TP.BO# = :B2 AND IP.PART# = TP.P
ART# AND IP.OBJ# = :B1 UNION ALL SELECT TSP.OBJ# FROM SYS.TABSUBPART$ TSP, SYS.TABCOMPART$ TCP, SYS.INDSUBPART$ ISP, SYS.INDCOMPART$ IC
P WHERE TCP.BO# = :B2 AND TSP.POBJ# = TCP.OBJ# AND ISP.SUBPART# = TSP.SUBPART# AND ICP.PART# = TCP.PART# AND ISP.POBJ# = ICP.OBJ# AND I
SP.OBJ# = :B1

0000000060E56200
SELECT :B2 FROM DUAL WHERE :B1 IS NULL UNION ALL SELECT TP.OBJ# FROM SYS.TABPART$ TP, SYS.INDPART$ IP WHERE TP.BO# = :B2 AND IP.PART# =
 TP.PART# AND IP.OBJ# = :B1 UNION ALL SELECT TP.OBJ# FROM SYS.TABCOMPART$ TP, SYS.INDCOMPART$ IP WHERE TP.BO# = :B2 AND IP.PART# = TP.P
ART# AND IP.OBJ# = :B1 UNION ALL SELECT TSP.OBJ# FROM SYS.TABSUBPART$ TSP, SYS.TABCOMPART$ TCP, SYS.INDSUBPART$ ISP, SYS.INDCOMPART$ IC
P WHERE TCP.BO# = :B2 AND TSP.POBJ# = TCP.OBJ# AND ISP.SUBPART# = TSP.SUBPART# AND ICP.PART# = TCP.PART# AND ISP.POBJ# = ICP.OBJ# AND I
SP.OBJ# = :B1

0000000060F831F0
SELECT :B2 FROM DUAL WHERE :B1 IS NULL UNION ALL SELECT TP.OBJ# FROM SYS.TABPART$ TP, SYS.INDPART$ IP WHERE TP.BO# = :B2 AND IP.PART# =
 TP.PART# AND IP.OBJ# = :B1 UNION ALL SELECT TP.OBJ# FROM SYS.TABCOMPART$ TP, SYS.INDCOMPART$ IP WHERE TP.BO# = :B2 AND IP.PART# = TP.P
ART# AND IP.OBJ# = :B1 UNION ALL SELECT TSP.OBJ# FROM SYS.TABSUBPART$ TSP, SYS.TABCOMPART$ TCP, SYS.INDSUBPART$ ISP, SYS.INDCOMPART$ IC
P WHERE TCP.BO# = :B2 AND TSP.POBJ# = TCP.OBJ# AND ISP.SUBPART# = TSP.SUBPART# AND ICP.PART# = TCP.PART# AND ISP.POBJ# = ICP.OBJ# AND I
SP.OBJ# = :B1

0000000088E83650
SELECT :B2 FROM DUAL WHERE :B1 IS NULL UNION ALL SELECT TP.OBJ# FROM SYS.TABPART$ TP, SYS.INDPART$ IP WHERE TP.BO# = :B2 AND IP.PART# =
 TP.PART# AND IP.OBJ# = :B1 UNION ALL SELECT TP.OBJ# FROM SYS.TABCOMPART$ TP, SYS.INDCOMPART$ IP WHERE TP.BO# = :B2 AND IP.PART# = TP.P
ART# AND IP.OBJ# = :B1 UNION ALL SELECT TSP.OBJ# FROM SYS.TABSUBPART$ TSP, SYS.TABCOMPART$ TCP, SYS.INDSUBPART$ ISP, SYS.INDCOMPART$ IC
P WHERE TCP.BO# = :B2 AND TSP.POBJ# = TCP.OBJ# AND ISP.SUBPART# = TSP.SUBPART# AND ICP.PART# = TCP.PART# AND ISP.POBJ# = ICP.OBJ# AND I
SP.OBJ# = :B1

000000008B060E60
SELECT :B2 FROM DUAL WHERE :B1 IS NULL UNION ALL SELECT TP.OBJ# FROM SYS.TABPART$ TP, SYS.INDPART$ IP WHERE TP.BO# = :B2 AND IP.PART# =
 TP.PART# AND IP.OBJ# = :B1 UNION ALL SELECT TP.OBJ# FROM SYS.TABCOMPART$ TP, SYS.INDCOMPART$ IP WHERE TP.BO# = :B2 AND IP.PART# = TP.P
ART# AND IP.OBJ# = :B1 UNION ALL SELECT TSP.OBJ# FROM SYS.TABSUBPART$ TSP, SYS.TABCOMPART$ TCP, SYS.INDSUBPART$ ISP, SYS.INDCOMPART$ IC
P WHERE TCP.BO# = :B2 AND TSP.POBJ# = TCP.OBJ# AND ISP.SUBPART# = TSP.SUBPART# AND ICP.PART# = TCP.PART# AND ISP.POBJ# = ICP.OBJ# AND I
SP.OBJ# = :B1

000000008CADBF68
SELECT USERENV('SCHE

0000000092D20FB8
20aed08c46daf999508198ab2b3550f2

000000008C848CE0 SYS
WRH$_RULE_SET

000000008C9D7F88
248a4277418c821c3b17702dfde23b

0000000088E25C28
f70f298dc94381cd1a59ef4791936fc3

0000000088F01788
bda7ffff73fc57a415f0ef7a78e11ec6

000000008B13C708
SELECT ATTRIBUTE,SCOPE,NUMERIC_VALUE,CHAR_VALUE,DATE_VALUE FROM SYSTEM.PRODUCT_PRIVS WHERE (UPPER('SQL*Plus') LIKE UPPER(PRODUCT)) AND
(USER LIKE USERID)

0000000060FA8A10
SELECT ATTRIBUTE,SCOPE,NUMERIC_VALUE,CHAR_VALUE,DATE_VALUE FROM SYSTEM.PRODUCT_PRIVS WHERE (UPPER('SQL*Plus') LIKE UPPER(PRODUCT)) AND
(USER LIKE USERID)

0000000092D741D8
SELECT COUNT(*) FROM

000000008C9327D8 SYS
WRI$_ADV_EXECUTIONS

000000008CB27948 SYS
LINK$

000000008CAFB718 SYS
WRM$_DATABASE_INSTANCE

0000000088D78048
4c20590c381ecfa479bee3d73cdb5911

000000008B33B3D0
SELECT /*+ ordered i

0000000088F0D6F8
SELECT EXTRACTVALUE(

000000008CAA4B80 SYS
JOB

0000000060F40A80
16bb15465bb8aca7b107b2878d915e8e

0000000060FE6860
SELECT TO_TIMESTAMP(

0000000088C8F2D8
INSERT ALL WHEN (:B3

000000008C97AEC0 SYS
DBMS_LOGSTDBY

0000000088EBE730
insert into WRH$_SERVICE_WAIT_CLASS   (snap_id, dbid, instance_number,    service_name_hash, wait_class_id, wait_class,    total_waits,
 time_waited) select   :snap_id, :dbid, :instance_number,   stat.service_name_hash, stat.wait_class_id, stat.wait_class,   stat.total_w
aits, stat.time_waited from  v$active_services asvc, v$service_wait_class stat where  asvc.name_hash = stat.service_name_hash

0000000088ED0AB0
insert into WRH$_SERVICE_WAIT_CLASS   (snap_id, dbid, instance_number,    service_name_hash, wait_class_id, wait_class,    total_waits,
 time_waited) select   :snap_id, :dbid, :instance_number,   stat.service_name_hash, stat.wait_class_id, stat.wait_class,   stat.total_w
aits, stat.time_waited from  v$active_services asvc, v$service_wait_class stat where  asvc.name_hash = stat.service_name_hash

0000000092D46240
insert into WRH$_SERVICE_WAIT_CLASS   (snap_id, dbid, instance_number,    service_name_hash, wait_class_id, wait_class,    total_waits,
 time_waited) select   :snap_id, :dbid, :instance_number,   stat.service_name_hash, stat.wait_class_id, stat.wait_class,   stat.total_w
aits, stat.time_waited from  v$active_services asvc, v$service_wait_class stat where  asvc.name_hash = stat.service_name_hash

0000000060FFFA70
insert into WRH$_SERVICE_WAIT_CLASS   (snap_id, dbid, instance_number,    service_name_hash, wait_class_id, wait_class,    total_waits,
 time_waited) select   :snap_id, :dbid, :instance_number,   stat.service_name_hash, stat.wait_class_id, stat.wait_class,   stat.total_w
aits, stat.time_waited from  v$active_services asvc, v$service_wait_class stat where  asvc.name_hash = stat.service_name_hash

000000008B3BC638
insert into WRH$_SERVICE_WAIT_CLASS   (snap_id, dbid, instance_number,    service_name_hash, wait_class_id, wait_class,    total_waits,
 time_waited) select   :snap_id, :dbid, :instance_number,   stat.service_name_hash, stat.wait_class_id, stat.wait_class,   stat.total_w
aits, stat.time_waited from  v$active_services asvc, v$service_wait_class stat where  asvc.name_hash = stat.service_name_hash

0000000088EBEBB0
insert into WRH$_SERVICE_WAIT_CLASS   (snap_id, dbid, instance_number,    service_name_hash, wait_class_id, wait_class,    total_waits,
 time_waited) select   :snap_id, :dbid, :instance_number,   stat.service_name_hash, stat.wait_class_id, stat.wait_class,   stat.total_w
aits, stat.time_waited from  v$active_services asvc, v$service_wait_class stat where  asvc.name_hash = stat.service_name_hash

000000008B3599E8
select decode(failover_method, NULL, 0 , 'BASIC', 1, 'PRECONNECT', 2 , 'PREPARSE', 4 , 0), decode(failover_type, NULL, 1 , 'NONE', 1 ,
'SESSION', 2, 'SELECT',  4, 1), failover_retries, failover_delay, flags from service$ where name = :1

0000000088F18A58
select decode(failover_method, NULL, 0 , 'BASIC', 1, 'PRECONNECT', 2 , 'PREPARSE', 4 , 0), decode(failover_type, NULL, 1 , 'NONE', 1 ,
'SESSION', 2, 'SELECT',  4, 1), failover_retries, failover_delay, flags from service$ where name = :1

000000008B3A9B78 SYS
DBMS_SWRF_INTERNAL

000000008B0958F0
INSERT INTO SYS.AUX_

000000008CB225D0
b8437480dae6edc212f03945aad7bcb2

0000000088EB4D00
1ceb03ef57f7261abc281c8e5d978f5c

0000000060E4F500
430d0122b34272d89da6893da28f85af

000000008B38D528
c322f8e796c600596872fa9bbd493c65

000000008B086EA0
SELECT /*+ rule */ C

000000008C8384D8
7f28acbbc78981c3e36a87ec109bb8c6

000000008C8C2F38
248672b9c60cfbb387f018f49ad15de

000000008B0820E0
SELECT /*+ rule */ V

0000000088EAA6D0 $BUILD$
edebd42214761ea4

0000000060F660B0
select substrb(dump(

000000008B0F69F8
SELECT ID, SECURITY_

000000008C899CF8
c9feee85d219d564a7091d5b98dbc96b

0000000060F22160
SELECT VALUE$ FROM S

0000000060F6E200 SYS
WRH$_MVPARAMETER_BL

000000008CA24C48 SYS
X$KSLWSC

000000008C9F8C98
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("T") FULL("T") NO_PARALLEL_INDEX("T") */ 1 AS C1, 1 AS
C2  FROM "SYS"."TABPART$" "T" WHERE BITAND("T"."FLAGS",2097152)<>2097152 AND BITAND("T"."FLAGS",32)<>32) SAMPLESUB

000000008B285760
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("T") FULL("T") NO_PARALLEL_INDEX("T") */ 1 AS C1, 1 AS
C2  FROM "SYS"."TABPART$" "T" WHERE BITAND("T"."FLAGS",2097152)<>2097152 AND BITAND("T"."FLAGS",32)<>32) SAMPLESUB

000000008B3C9788
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("T") FULL("T") NO_PARALLEL_INDEX("T") */ 1 AS C1, 1 AS
C2  FROM "SYS"."TABPART$" "T" WHERE BITAND("T"."FLAGS",2097152)<>2097152 AND BITAND("T"."FLAGS",32)<>32) SAMPLESUB

000000008CBC22C8
SELECT /* OPT_DYN_SAMP */ /*+ ALL_ROWS opt_param('parallel_execution_enabled', 'false') NO_PARALLEL(SAMPLESUB) NO_PARALLEL_INDEX(SAMPLE
SUB) NO_SQL_TUNE */ NVL(SUM(C1),0), NVL(SUM(C2),0) FROM (SELECT /*+ NO_PARALLEL("T") FULL("T") NO_PARALLEL_INDEX("T") */ 1 AS C1, 1 AS
C2  FROM "SYS"."TABPART$" "T" WHERE BITAND("T"."FLAGS",2097152)<>2097152 AND BITAND("T"."FLAGS",32)<>32) SAMPLESUB

000000008B2FE300 $BUILD$
fec5f59299349c6a

0000000060F6A3B8
SELECT DECODE(COUNT(

000000008B2A9318
select /*+  no_paral

0000000060E49A10
select nvl2(stale_stats, decode(stale_stats, 'NO', 3, 1), 2) from   dba_tab_statistics where  owner=:1 and table_name=:2

0000000060C5E660
select nvl2(stale_stats, decode(stale_stats, 'NO', 3, 1), 2) from   dba_tab_statistics where  owner=:1 and table_name=:2

000000008B21D3F0
select nvl2(stale_stats, decode(stale_stats, 'NO', 3, 1), 2) from   dba_tab_statistics where  owner=:1 and table_name=:2

0000000088E1E038
59d93349399bef6bb76f865693233c02

000000008B133938
SELECT COUNT(*) FROM

000000008CAEE3B8
75070403403fac7372f953d9b6ec93b

0000000088E38128 SYS
WRH$_PARAMETER

000000008CBAF138
select table_name from dict where table_name like '%DBA_TAB%'

000000008B3C7BA8
select table_name from dict where table_name like '%DBA_TAB%'

0000000088CF0928
SELECT DBINC.RESETLO

000000008B1AFDF0
SELECT PRIM_ESLIAS,

0000000088E26AF8
SELECT ID FROM WWV_F

0000000065332750 $BUILD$
32ca144b284163b6

0000000065389760
5e91d758eed86193a7f62c4dbffaf0e

0000000092C6F1E0 SYS
VIEW$

0000000060F58120
dae7b38ee5c0c01df01d71c085963ce2

000000008CA83CF0
e377575f1452998b722a9a8e728ff090

0000000088EBC750
6b3b02556e06a2bcca8df569fe83a388

000000008B09B590 SYS
USER_SYS_PRIVS

000000008CA673B8 PUBLIC
DBA_AUDIT_TRAIL

000000008C9241E8
DELETE FROM WRI$_ADV

000000008B15C330
SELECT OBJECT_ID FRO


KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
0000000088E33D78
50e0e16c8f9a0a9697cac7bdf5e66235

0000000092D73D88 SYS
X$KSPPI

000000008C882F90 $BUILD$
89740da0 1983f85

000000008CA49A40 PUBLIC
PLITBLM

000000008B29EF20
select a.owner,a.table_name,a.constraint_name,b.column_name,lpad(a.constraint_type,10) as constraint_type,a.index_name,a.status from al
l_constraints a,all_cons_columns b where a.owner = b.owner and a.constraint_name = b.constraint_name and a.table_name = :table_name

0000000060C34670
select a.owner,a.table_name,a.constraint_name,b.column_name,lpad(a.constraint_type,10) as constraint_type,a.index_name,a.status from al
l_constraints a,all_cons_columns b where a.owner = b.owner and a.constraint_name = b.constraint_name and a.table_name = :table_name

0000000088C9B888
SELECT MAX(E.EXECUTI

000000008B3A5C68
SELECT MAX(NAME) KEE

000000008B32C278
select count(*) from sys.scheduler$_job_argument where oid = :1

0000000092CCF498
select count(*) from sys.scheduler$_job_argument where oid = :1

000000008B32C6F8
select count(*) from sys.scheduler$_job_argument where oid = :1

0000000060CA2AF0
select privilege# from sysauth$ where (grantee#=:1 or grantee#=1) and privilege#>0

000000008C84B730
select privilege# from sysauth$ where (grantee#=:1 or grantee#=1) and privilege#>0

0000000060D2A030
50f7a4284d825bba4f7e00efc9998be1

000000008B30F900
select i.obj#, i.flags, u.name, o.name, o.type#     from sys.obj$ o, sys.user$ u, sys.ind$ idx, sys.ind_online$ i    where  bitand(i.fl
ags, 512) = 512 and o.obj#=idx.obj# and           o.owner# = u.user# and idx.obj#=i.obj#

0000000092D30538
select i.obj#, i.flags, u.name, o.name, o.type#     from sys.obj$ o, sys.user$ u, sys.ind$ idx, sys.ind_online$ i    where  bitand(i.fl
ags, 512) = 512 and o.obj#=idx.obj# and           o.owner# = u.user# and idx.obj#=i.obj#

0000000060CE8638
select i.obj#, i.flags, u.name, o.name, o.type#     from sys.obj$ o, sys.user$ u, sys.ind$ idx, sys.ind_online$ i    where  bitand(i.fl
ags, 512) = 512 and o.obj#=idx.obj# and           o.owner# = u.user# and idx.obj#=i.obj#

000000008B047540
select i.obj#, i.flags, u.name, o.name, o.type#     from sys.obj$ o, sys.user$ u, sys.ind$ idx, sys.ind_online$ i    where  bitand(i.fl
ags, 512) = 512 and o.obj#=idx.obj# and           o.owner# = u.user# and idx.obj#=i.obj#

000000008CAD5E00
81bdc264c639917e5aecf82e2f49b37d

000000008CA0D4A0
b53b543b6a65d6b141df4a8cf9b4bb58

0000000060CBD9C8
882cbbc89a7f6d72d4e88a6e2dc27f99

0000000060EA44C0 $BUILD$
cefbb979bb8b676b

0000000060DAD4F8
select min(minbkt),m

0000000088C89B28
DELETE WRI$_SQLSET_S

000000008CBC5368 SCOTT
USER_TABLES

0000000088ECA300
SELECT snap_id , SERVICE_NAME_HASH FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.NAME_HASH  SERVICE_NAME_HASH FROM
 V$ACTIVE_SERVICES t1, WRH$_SERVICE_NAME t2      WHERE t2.dbid(+)  = :dbid  AND t2.SERVICE_NAME_HASH(+) = t1.NAME_HASH) WHERE nvl(snap_
id, 0) < :snap_id

0000000092D29A48
SELECT snap_id , SERVICE_NAME_HASH FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.NAME_HASH  SERVICE_NAME_HASH FROM
 V$ACTIVE_SERVICES t1, WRH$_SERVICE_NAME t2      WHERE t2.dbid(+)  = :dbid  AND t2.SERVICE_NAME_HASH(+) = t1.NAME_HASH) WHERE nvl(snap_
id, 0) < :snap_id

0000000088ECA780
SELECT snap_id , SERVICE_NAME_HASH FROM   (SELECT /*+ ordered use_nl(t2) index(t2) */ t2.snap_id , t1.NAME_HASH  SERVICE_NAME_HASH FROM
 V$ACTIVE_SERVICES t1, WRH$_SERVICE_NAME t2      WHERE t2.dbid(+)  = :dbid  AND t2.SERVICE_NAME_HASH(+) = t1.NAME_HASH) WHERE nvl(snap_
id, 0) < :snap_id

000000008B2B0958
SELECT RAISE_EVENTS,

000000008CA9E4F0
DELETE FROM WRI$_ADV

000000008B35C050 EXFSYS
RLM$PARSEOBYCLS

000000008CAA8EB8
table_1_ff_22f_0_0_0

000000008CAA9118
table_1_ff_22f_0_0_0

0000000060D5B868 $BUILD$
ad80911d1ba41f69

0000000065346E10
select o.name, u.name from sys.obj$ o, sys.user$ u where u.user#=o.owner#  and o.obj# = :1

000000008C9DA208
select o.name, u.name from sys.obj$ o, sys.user$ u where u.user#=o.owner#  and o.obj# = :1

0000000060FCE000 SYS
GV$DATAGUARD_STATS

000000008C9655A8 EXFSYS
EXF$EXPSETSTATS

000000008B236F50
fc1dfc43da4925798b1b39eca8e1f927

0000000060CA9440
table_4_9_d0_0_0_0

0000000060D46A48
table_4_9_d0_0_0_0

000000008B150058 SYS
DBA_ADVISOR_OBJECTS

0000000092CBE388
INSERT INTO SYS.WRI$_ADV_TASKS (ID,OWNER#,OWNER_NAME,NAME,DESCRIPTION,ADVISOR_ID,ADVISOR_NAME, CTIME,MTIME,PARENT_ID,PARENT_REC_ID, PRO
PERTY,VERSION, EXEC_START,EXEC_END,STATUS,STATUS_MSG_ID,PCT_COMPLETION_TIME, PROGRESS_METRIC,METRIC_UNITS,ACTIVITY_COUNTER,REC_COUNT,ER
ROR_MSG#, SOURCE,HOW_CREATED ) VALUES (:B11 ,:B10 ,:B9 ,:B8 ,:B7 , :B6 ,:B5 ,SYSDATE,SYSDATE,:B4 ,0,:B3 , PRVT_ADVISOR.GET_DB_VERSION,
NULL,NULL, :B2 ,0,0,0,'',0,0,0,'',:B1 )

0000000088F8A698
INSERT INTO SYS.WRI$_ADV_TASKS (ID,OWNER#,OWNER_NAME,NAME,DESCRIPTION,ADVISOR_ID,ADVISOR_NAME, CTIME,MTIME,PARENT_ID,PARENT_REC_ID, PRO
PERTY,VERSION, EXEC_START,EXEC_END,STATUS,STATUS_MSG_ID,PCT_COMPLETION_TIME, PROGRESS_METRIC,METRIC_UNITS,ACTIVITY_COUNTER,REC_COUNT,ER
ROR_MSG#, SOURCE,HOW_CREATED ) VALUES (:B11 ,:B10 ,:B9 ,:B8 ,:B7 , :B6 ,:B5 ,SYSDATE,SYSDATE,:B4 ,0,:B3 , PRVT_ADVISOR.GET_DB_VERSION,
NULL,NULL, :B2 ,0,0,0,'',0,0,0,'',:B1 )

000000008C9FCEE8
INSERT INTO SYS.WRI$_ADV_TASKS (ID,OWNER#,OWNER_NAME,NAME,DESCRIPTION,ADVISOR_ID,ADVISOR_NAME, CTIME,MTIME,PARENT_ID,PARENT_REC_ID, PRO
PERTY,VERSION, EXEC_START,EXEC_END,STATUS,STATUS_MSG_ID,PCT_COMPLETION_TIME, PROGRESS_METRIC,METRIC_UNITS,ACTIVITY_COUNTER,REC_COUNT,ER
ROR_MSG#, SOURCE,HOW_CREATED ) VALUES (:B11 ,:B10 ,:B9 ,:B8 ,:B7 , :B6 ,:B5 ,SYSDATE,SYSDATE,:B4 ,0,:B3 , PRVT_ADVISOR.GET_DB_VERSION,
NULL,NULL, :B2 ,0,0,0,'',0,0,0,'',:B1 )

000000008B38B440
INSERT INTO SYS.WRI$_ADV_TASKS (ID,OWNER#,OWNER_NAME,NAME,DESCRIPTION,ADVISOR_ID,ADVISOR_NAME, CTIME,MTIME,PARENT_ID,PARENT_REC_ID, PRO
PERTY,VERSION, EXEC_START,EXEC_END,STATUS,STATUS_MSG_ID,PCT_COMPLETION_TIME, PROGRESS_METRIC,METRIC_UNITS,ACTIVITY_COUNTER,REC_COUNT,ER
ROR_MSG#, SOURCE,HOW_CREATED ) VALUES (:B11 ,:B10 ,:B9 ,:B8 ,:B7 , :B6 ,:B5 ,SYSDATE,SYSDATE,:B4 ,0,:B3 , PRVT_ADVISOR.GET_DB_VERSION,
NULL,NULL, :B2 ,0,0,0,'',0,0,0,'',:B1 )

0000000088DD4FE8
INSERT INTO SYS.WRI$_ADV_TASKS (ID,OWNER#,OWNER_NAME,NAME,DESCRIPTION,ADVISOR_ID,ADVISOR_NAME, CTIME,MTIME,PARENT_ID,PARENT_REC_ID, PRO
PERTY,VERSION, EXEC_START,EXEC_END,STATUS,STATUS_MSG_ID,PCT_COMPLETION_TIME, PROGRESS_METRIC,METRIC_UNITS,ACTIVITY_COUNTER,REC_COUNT,ER
ROR_MSG#, SOURCE,HOW_CREATED ) VALUES (:B11 ,:B10 ,:B9 ,:B8 ,:B7 , :B6 ,:B5 ,SYSDATE,SYSDATE,:B4 ,0,:B3 , PRVT_ADVISOR.GET_DB_VERSION,
NULL,NULL, :B2 ,0,0,0,'',0,0,0,'',:B1 )

000000008B1718C0
INSERT INTO SYS.WRI$_ADV_TASKS (ID,OWNER#,OWNER_NAME,NAME,DESCRIPTION,ADVISOR_ID,ADVISOR_NAME, CTIME,MTIME,PARENT_ID,PARENT_REC_ID, PRO
PERTY,VERSION, EXEC_START,EXEC_END,STATUS,STATUS_MSG_ID,PCT_COMPLETION_TIME, PROGRESS_METRIC,METRIC_UNITS,ACTIVITY_COUNTER,REC_COUNT,ER
ROR_MSG#, SOURCE,HOW_CREATED ) VALUES (:B11 ,:B10 ,:B9 ,:B8 ,:B7 , :B6 ,:B5 ,SYSDATE,SYSDATE,:B4 ,0,:B3 , PRVT_ADVISOR.GET_DB_VERSION,
NULL,NULL, :B2 ,0,0,0,'',0,0,0,'',:B1 )

000000008C928D68
INSERT INTO SYS.WRI$_ADV_TASKS (ID,OWNER#,OWNER_NAME,NAME,DESCRIPTION,ADVISOR_ID,ADVISOR_NAME, CTIME,MTIME,PARENT_ID,PARENT_REC_ID, PRO
PERTY,VERSION, EXEC_START,EXEC_END,STATUS,STATUS_MSG_ID,PCT_COMPLETION_TIME, PROGRESS_METRIC,METRIC_UNITS,ACTIVITY_COUNTER,REC_COUNT,ER
ROR_MSG#, SOURCE,HOW_CREATED ) VALUES (:B11 ,:B10 ,:B9 ,:B8 ,:B7 , :B6 ,:B5 ,SYSDATE,SYSDATE,:B4 ,0,:B3 , PRVT_ADVISOR.GET_DB_VERSION,
NULL,NULL, :B2 ,0,0,0,'',0,0,0,'',:B1 )

0000000088F36018
update WRM$_DATABASE_INSTANCE set    last_ash_sample_id = :last_ash_sample_id where  instance_number    = :instance_number   and  dbid
              = :dbid   and  startup_time = (select max(startup_time)                        from   WRM$_DATABASE_INSTANCE
           where  instance_number = :instance_number2                          and  dbid            = :dbid2 )

0000000092CC6918
update WRM$_DATABASE_INSTANCE set    last_ash_sample_id = :last_ash_sample_id where  instance_number    = :instance_number   and  dbid
              = :dbid   and  startup_time = (select max(startup_time)                        from   WRM$_DATABASE_INSTANCE
           where  instance_number = :instance_number2                          and  dbid            = :dbid2 )

000000008B3E1F50
update WRM$_DATABASE_INSTANCE set    last_ash_sample_id = :last_ash_sample_id where  instance_number    = :instance_number   and  dbid
              = :dbid   and  startup_time = (select max(startup_time)                        from   WRM$_DATABASE_INSTANCE
           where  instance_number = :instance_number2                          and  dbid            = :dbid2 )

0000000060F3B2A0
update WRM$_DATABASE_INSTANCE set    last_ash_sample_id = :last_ash_sample_id where  instance_number    = :instance_number   and  dbid
              = :dbid   and  startup_time = (select max(startup_time)                        from   WRM$_DATABASE_INSTANCE
           where  instance_number = :instance_number2                          and  dbid            = :dbid2 )

000000008C993B98
update WRM$_DATABASE_INSTANCE set    last_ash_sample_id = :last_ash_sample_id where  instance_number    = :instance_number   and  dbid
              = :dbid   and  startup_time = (select max(startup_time)                        from   WRM$_DATABASE_INSTANCE
           where  instance_number = :instance_number2                          and  dbid            = :dbid2 )

0000000088F36498
update WRM$_DATABASE_INSTANCE set    last_ash_sample_id = :last_ash_sample_id where  instance_number    = :instance_number   and  dbid
              = :dbid   and  startup_time = (select max(startup_time)                        from   WRM$_DATABASE_INSTANCE
           where  instance_number = :instance_number2                          and  dbid            = :dbid2 )

0000000088D474B0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_E
STIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I
_OBJ5", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823) OPT_ES
TIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS(
"O#4")  */ 1 AS C1 FROM "SYS"."SEG$" "S#1", "SYS"."SYS_OBJECTS" "SO#2", "SYS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#
4"."OBJ#"="SO#2"."OBJECT_ID") AND ("O#4"."TYPE#"="SO#2"."OBJECT_TYPE_ID") AND ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"=
"SO#2"."HEADER_BLOCK") AND ("S#1"."TS#"="SO#2"."TS_NUMB

0000000060D0B158
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_E
STIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I
_OBJ5", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823) OPT_ES
TIMATE(@"innerQuery", JOIN, ("S#1", "SO#2"), SCALE_ROWS=202.9211759) */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS(
"O#4")  */ 1 AS C1 FROM "SYS"."SEG$" "S#1", "SYS"."SYS_OBJECTS" "SO#2", "SYS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#
4"."OBJ#"="SO#2"."OBJECT_ID") AND ("O#4"."TYPE#"="SO#2"."OBJECT_TYPE_ID") AND ("S#1"."FILE#"="SO#2"."HEADER_FILE") AND ("S#1"."BLOCK#"=
"SO#2"."HEADER_BLOCK") AND ("S#1"."TS#"="SO#2"."TS_NUMB

0000000060EEDAC0 SYS
X$KSLLTR_CHILDREN

00000000652FD2F0 $BUILD$
2b247fc5f6b6f088

0000000060F4F830
baf7e97128a705fcec221f74469fa7bd

000000008B259A98
57b25121c712c33d6e4d90096d2290bf

0000000060F20420
declare     v_cnt number;      cursor c_tbs is SELECT a.tablespace_name,        lpad(round((total-free) / maxsize * 100, 1) || '%',9) a
s used_pct,        rpad(lpad('#',ceil((nvl(total-free,0)/b.maxsize)*20),'#'),20,' ') as used,        b.autoextensible,        round(tot
al/1024,1) as TOTAL_GB,        round((total - free)/1024,1) as USED_GB,        round(free/1024,1) as FREE_GB,        b.cnt DATAFILE_COU
NT,        c.status,        c.CONTENTS,        c.extent_management,        c.allocation_type,        b.maxsize FROM   (SELECT tablespac
e_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) free         FROM   dba_free_space         GROUP BY tablespace_name) a,
      (SELECT tablespace_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) total,                count(*)
           cnt,                max(autoextensible)                  autoextensible,                sum(decode(autoextensible, 'YES', fl
oor(maxbytes/1048576), floor(bytes / 1048576 ))) maxsiz

00000000652C7500
declare     v_cnt number;      cursor c_tbs is SELECT a.tablespace_name,        lpad(round((total-free) / maxsize * 100, 1) || '%',9) a
s used_pct,        rpad(lpad('#',ceil((nvl(total-free,0)/b.maxsize)*20),'#'),20,' ') as used,        b.autoextensible,        round(tot
al/1024,1) as TOTAL_GB,        round((total - free)/1024,1) as USED_GB,        round(free/1024,1) as FREE_GB,        b.cnt DATAFILE_COU
NT,        c.status,        c.CONTENTS,        c.extent_management,        c.allocation_type,        b.maxsize FROM   (SELECT tablespac
e_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) free         FROM   dba_free_space         GROUP BY tablespace_name) a,
      (SELECT tablespace_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) total,                count(*)
           cnt,                max(autoextensible)                  autoextensible,                sum(decode(autoextensible, 'YES', fl
oor(maxbytes/1048576), floor(bytes / 1048576 ))) maxsiz

000000008C854278 APEX_030200
WWV_FLOW_PROCESSING

0000000092C7EB38 SYS
I_FIXED_OBJ$_OBJ#

0000000092C98D78
9a7513a7a314f6753af577b5e312decd

00000000653364E0
80d6758b800d5c402e36fc2e6d5d6556

000000008B287020
select     distinct i.INDEX_NAME,     i.COLUMN_NAME,     i.COLUMN_POSITION,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'(
'||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCAL
E||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
          'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '|
|            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col from
  dba_ind_columns i,     dba_tab_columns t where     i.table_name = upper('EMP') and owner = upper('SCOTT') and i.table_name = t.table_
name and i.column_name = t.column_name order by index_name,column_position

0000000088D54D20
select     distinct i.INDEX_NAME,     i.COLUMN_NAME,     i.COLUMN_POSITION,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'(
'||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCAL
E||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
          'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '|
|            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col from
  dba_ind_columns i,     dba_tab_columns t where     i.table_name = upper('EMP') and owner = upper('SCOTT') and i.table_name = t.table_
name and i.column_name = t.column_name order by index_name,column_position

000000008B354E60
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

0000000088CC18E0
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

0000000092CF9708
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

0000000088F3BFE8
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

000000008B1E01E8
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

000000008CBD8750
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

000000008C9D6D60
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

0000000088E8F300
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

000000008B3552E0
update sys.mon_mods$ set inserts = inserts + :ins, updates = updates + :upd, deletes = deletes + :del, flags = (decode(bitand(flags, :f
lag), :flag, flags, flags + :flag)), drop_segments = drop_segments + :dropseg, timestamp = :time where obj# = :objn

0000000060FBBF00
1871529dbb6cd514f52629ec8acf2700

000000008B284020
select min(minbkt),m

000000008B038858
SELECT DI.DBID, DI.I

000000008C8884A0
291b144e47de1158633f0903bdea4b07

0000000088C43F78
delete from hist_head$ where obj# = :1

000000008B26B1D0
delete from hist_head$ where obj# = :1

0000000088DAA9A8
delete from hist_head$ where obj# = :1

000000008B1508E8 SYS
DBA_ADVISOR_PARAMETERS

000000008B33FB38
5bc85d6c27785376bfa21350b9c21116

000000008C934010
3292a3d1ae77d385c5b5cc732a1abf35

0000000060CCC400
59ed1a539078de57a1d76440b23c05ea

000000008B1A4148 $BUILD$
542c0cfc c71f3e0

00000000653F6270
SELECT SUBSTR(VALUE,1,5) FROM V$PARAMETER WHERE LOWER(NAME) = 'compatible'

0000000088FE1720
SELECT SUBSTR(VALUE,1,5) FROM V$PARAMETER WHERE LOWER(NAME) = 'compatible'

0000000088CC4670
aec2a00d3f05bcba4e6e696827baa630

0000000060EF0160 SYS
STREAMS$_PROPAGATION_PROCESS

0000000060F75560
SELECT ITEM_NAME, IT

000000008C869398
8fb12607aa69c005c0c99213410588f

000000008B2D5460
e8d54638796dcb00f9b24680f53482d2

00000000653A64B0
select    SQL_TEXT,           SQL_FULLTEXT,           SQL_ID,           SHARABLE_MEM,           PERSISTENT_MEM,           RUNTIME_MEM,
          SORTS,           VERSION_COUNT,           LOADED_VERSIONS,           OPEN_VERSIONS,           USERS_OPENING,           FETCHE
S,           EXECUTIONS,           PX_SERVERS_EXECUTIONS,           END_OF_FETCH_COUNT,           USERS_EXECUTING,           LOADS,
       FIRST_LOAD_TIME,           INVALIDATIONS,           PARSE_CALLS,           DISK_READS,           DIRECT_WRITES,           BUFFER
_GETS,           APPLICATION_WAIT_TIME,           CONCURRENCY_WAIT_TIME,           CLUSTER_WAIT_TIME,           USER_IO_WAIT_TIME,
      PLSQL_EXEC_TIME,           JAVA_EXEC_TIME,           ROWS_PROCESSED,           COMMAND_TYPE,           OPTIMIZER_MODE,
OPTIMIZER_COST,           OPTIMIZER_ENV,           OPTIMIZER_ENV_HASH_VALUE,           PARSING_USER_ID,           PARSING_SCHEMA_ID,
        PARSING_SCHEMA_NAME,           KEPT_VERSIONS,

0000000088DAD008
select    SQL_TEXT,           SQL_FULLTEXT,           SQL_ID,           SHARABLE_MEM,           PERSISTENT_MEM,           RUNTIME_MEM,
          SORTS,           VERSION_COUNT,           LOADED_VERSIONS,           OPEN_VERSIONS,           USERS_OPENING,           FETCHE
S,           EXECUTIONS,           PX_SERVERS_EXECUTIONS,           END_OF_FETCH_COUNT,           USERS_EXECUTING,           LOADS,
       FIRST_LOAD_TIME,           INVALIDATIONS,           PARSE_CALLS,           DISK_READS,           DIRECT_WRITES,           BUFFER
_GETS,           APPLICATION_WAIT_TIME,           CONCURRENCY_WAIT_TIME,           CLUSTER_WAIT_TIME,           USER_IO_WAIT_TIME,
      PLSQL_EXEC_TIME,           JAVA_EXEC_TIME,           ROWS_PROCESSED,           COMMAND_TYPE,           OPTIMIZER_MODE,
OPTIMIZER_COST,           OPTIMIZER_ENV,           OPTIMIZER_ENV_HASH_VALUE,           PARSING_USER_ID,           PARSING_SCHEMA_ID,
        PARSING_SCHEMA_NAME,           KEPT_VERSIONS,

0000000060E612D0
select substrb(dump(

0000000088EE3CC0
UPDATE wrh$_tablespace tbs  SET (snap_id, tsname, contents, segment_space_management,        extent_management) =   (SELECT /*+ index(t
s) */         :lah_snap_id, ts.name tsname,         decode(ts.contents$, 0, (decode(bitand(ts.flags, 16), 16, 'UNDO',                'P
ERMANENT')), 1, 'TEMPORARY')            as contents,         decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as segspace_mgmt,
 decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management      FROM ts$ ts     WHERE ts.ts#  = tbs.ts#)  WHERE dbid    = :
dbid    AND snap_id < :snap_id

0000000088D01FA0
UPDATE wrh$_tablespace tbs  SET (snap_id, tsname, contents, segment_space_management,        extent_management) =   (SELECT /*+ index(t
s) */         :lah_snap_id, ts.name tsname,         decode(ts.contents$, 0, (decode(bitand(ts.flags, 16), 16, 'UNDO',                'P
ERMANENT')), 1, 'TEMPORARY')            as contents,         decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as segspace_mgmt,
 decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management      FROM ts$ ts     WHERE ts.ts#  = tbs.ts#)  WHERE dbid    = :
dbid    AND snap_id < :snap_id

0000000088EE4140
UPDATE wrh$_tablespace tbs  SET (snap_id, tsname, contents, segment_space_management,        extent_management) =   (SELECT /*+ index(t
s) */         :lah_snap_id, ts.name tsname,         decode(ts.contents$, 0, (decode(bitand(ts.flags, 16), 16, 'UNDO',                'P
ERMANENT')), 1, 'TEMPORARY')            as contents,         decode(bitand(ts.flags,32), 32,'AUTO', 'MANUAL') as segspace_mgmt,
 decode(ts.bitmapped, 0, 'DICTIONARY', 'LOCAL')   as extent_management      FROM ts$ ts     WHERE ts.ts#  = tbs.ts#)  WHERE dbid    = :
dbid    AND snap_id < :snap_id

0000000092C8E648
SELECT SECURITY_GROU

000000008C9D18B0 SYS
ALL_EVALUATION_CONTEXT_VARS

000000008B0A00D0
SELECT T.TASK_ID, E.EXECUTION_NAME FROM SYS.DBA_ADVISOR_TASKS T, SYS.DBA_ADVISOR_EXECUTIONS E, WRI$_ADV_PARAMETERS P WHERE T.TASK_ID =
P.TASK_ID AND T.TASK_ID = E.TASK_ID AND T.STATUS# <> :B2 AND T.READ_ONLY = 'FALSE' AND P.NAME = 'EXECUTION_DAYS_TO_EXPIRE' AND PRVT_ADV
ISOR.CHECK_EXPIRATION_COMP(:B1 , E.EXECUTION_LAST_MODIFIED, P.VALUE) = 1

000000008C915DD8
SELECT T.TASK_ID, E.EXECUTION_NAME FROM SYS.DBA_ADVISOR_TASKS T, SYS.DBA_ADVISOR_EXECUTIONS E, WRI$_ADV_PARAMETERS P WHERE T.TASK_ID =
P.TASK_ID AND T.TASK_ID = E.TASK_ID AND T.STATUS# <> :B2 AND T.READ_ONLY = 'FALSE' AND P.NAME = 'EXECUTION_DAYS_TO_EXPIRE' AND PRVT_ADV
ISOR.CHECK_EXPIRATION_COMP(:B1 , E.EXECUTION_LAST_MODIFIED, P.VALUE) = 1

0000000092D80328 SYS
aa

000000008B3295E8
d12157065e68de64e1bd048993406630

0000000088DBF8D8
DELETE FROM SYS.SCHE

0000000092CA1488
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

0000000092CA1318
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

0000000092C6AD58
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

0000000088FE4870
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

0000000088DC8758
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

000000008CBC1F58
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

0000000060E93180
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

000000008CA728F0
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

0000000092C91A68
SELECT name,datatype,value,flags, nvl(description,'NULL') FROM sys.wri$_adv_parameters  WHERE task_id = :1 ORDER BY 1

000000008B399EB0 SYS
DBMS_OBFUSCATION_TOOLKIT

0000000060F9E040
select substrb(dump(

0000000060F1EF80
e7e04a13b7fb7ff764c8ab84c22c7d28

0000000060EC66E0
96c2e326211991c82ed11ee835f395d3

000000008B356598
select substrb(dump(

000000008C882820 SYS
NCOMP_DLL$

0000000092D7C368 SYS
X$KSQEQTYP

0000000092C6F7D0
select cols,audit$,textlength,intcols,property,flags,rowid from view$ where obj#=:1

000000008B338A48
select cols,audit$,textlength,intcols,property,flags,rowid from view$ where obj#=:1

0000000092CB1B28
select cols,audit$,textlength,intcols,property,flags,rowid from view$ where obj#=:1

000000008B257FF8
select cols,audit$,textlength,intcols,property,flags,rowid from view$ where obj#=:1

0000000092C6FC50
select cols,audit$,textlength,intcols,property,flags,rowid from view$ where obj#=:1

000000008B3DBCD0 SYS
V_J

0000000088FC26F8
bd9e5af123b9adda5a274237cb178ea1

00000000652F9350
bd9e5af123b9adda5a274237cb178ea1

000000008B3B65F8
SELECT VALUE FROM SY

000000008B0997D0 SYS
OPTSTAT_USER_PREFS$

000000008B0640F0
UPDATE USTATS$ SET S

000000008B0D8598
SELECT TEMPLATE FROM

000000008CB85338
SELECT OBJECT_ID FRO

0000000088F3F6B8
c3ad87fe80980d6331144e92bfcb2460

000000008B1F34B0 $BUILD$
e13a371fb3e346af

0000000088F0F328 $BUILD$
84c3efae236e7b78

0000000060F4A400
/* SQL Analyze(1) */

000000008B37BD80
SELECT COUNT(*) FROM

0000000088FAE298 SYS
V$SPPARAMETER

0000000088E69DB0
b7ada89eb959bc13f558c0479a173b7

000000008B115C20 SYS
X$KGLLK

000000008CB10CE8
select  FILE# , CREATION_CHANGE# , CREATION_TIME , TS# , RFILE# , STATUS , ENABLED , BYTES, BLOCKS, CREATE_BYTES , BLOCK_SIZE , NAME fr
om GV$TEMPFILE where inst_id = USERENV('Instance')

0000000060C4A580
select  FILE# , CREATION_CHANGE# , CREATION_TIME , TS# , RFILE# , STATUS , ENABLED , BYTES, BLOCKS, CREATE_BYTES , BLOCK_SIZE , NAME fr
om GV$TEMPFILE where inst_id = USERENV('Instance')

0000000088CA0748
SELECT O.ATTR6 FROM

0000000065384D20
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "T")  */ 1 AS C1 FROM "SYS"."TAB$" S
AMPLE BLOCK(56.8586, 8) SEED(1)  "T" WHERE (DECODE(BITAND("T"."PROPERTY",8192),8192,'NESTED TABLE','TABLE') LIKE 'TABLE%') AND (BITAND(
"T"."PROPERTY",1024)=0)) innerQuery

000000008C93E1F0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "T")  */ 1 AS C1 FROM "SYS"."TAB$" S
AMPLE BLOCK(56.8586, 8) SEED(1)  "T" WHERE (DECODE(BITAND("T"."PROPERTY",8192),8192,'NESTED TABLE','TABLE') LIKE 'TABLE%') AND (BITAND(
"T"."PROPERTY",1024)=0)) innerQuery

0000000060E6C4B0
SELECT P1.PARAMETER_

0000000088CA9348
SELECT NAME, VALUE,

0000000088C85348
INSERT INTO WRI$_SQL

0000000092D611C8 SYS
SQL$

0000000088E661F0
e2335cab38a8540a3b098992bbe1c02a

0000000092D32598 SYS
X$QESMMAPADV

000000008CB30688
f265d5e838d61eea262c745e87356bf5

000000008C95DB50 SYS
SUMPARTLOG$

0000000060E5FE70
SELECT BS.SET_STAMP

0000000092C9E018
SELECT OWNER, NAME,

0000000092D5C818 SYS
WINDOW

000000008B36C110 APEX_030200
WWV_FLOW_PLATFORM_PREFS

000000008C869818
8136c7a0221131a18728d79d5db913c4

000000008B05D750
DELETE FROM SYS.WRI$

000000008CBB8978
INSERT INTO SYSTEM.A

0000000092CD07C8
23c68e1c658644607c09ef37edbee107

0000000088E41C28
SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME)
 SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION_NAME FROM DBA_SEGMENTS
WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS
','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','
GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

0000000088F69ED8
SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME)
 SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION_NAME FROM DBA_SEGMENTS
WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS
','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','
GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

000000008C93F890
SELECT OWNER,SEGMENT_NAME,SIZE_MB,PARTITION_NAME FROM (SELECT OWNER,NVL2(PARTITION_NAME,SEGMENT_NAME||'.'||PARTITION_NAME,SEGMENT_NAME)
 SEGMENT_NAME ,TRUNC(BYTES/1024/1024) AS SIZE_MB,DECODE(PARTITION_NAME,NULL,'None',PARTITION_NAME) AS PARTITION_NAME FROM DBA_SEGMENTS
WHERE SEGMENT_TYPE LIKE 'TABLE%' AND OWNER NOT IN ('OWBSYS','FLOWS_FILES','WMSYS','XDB','QMONITOR','OUTLN', 'ORDSYS','ORDDATA','OJVMSYS
','MDSYS','LBACSYS','DVSYS','DBSNMP','APPQOSSYS','APEX_040200','AUDSYS', 'CTXSYS','APEX_030200','EXFSYS','OLAPSYS','SYSMAN','WH_SYNC','
GSMADMIN_INTERNAL') ORDER BY BYTES DESC) WHERE ROWNUM < 21

000000008CA40200
SELECT VALUE FROM V$

0000000088CCE3B8
SELECT MAX(FORCE_MAT

000000008C975158
SELECT OBJOID, CLSOID,    DECODE(BITAND(FLAGS, 16384), 0, RUNTIME,           LETIME),    (2*PRI +     DECODE(BITAND(STATUS, 4), 0, 0,
          decode(INST, :1, -1, 1))),    JOBTYPE, SCHLIM, WT, INST, RUNNOW, ENQ_SCHLIM, INST_ID  FROM (  select a.obj# OBJOID, a.class_o
id CLSOID, a.next_run_date RUNTIME,         a.last_enabled_time LETIME, a.flags FLAGS, a.job_status STATUS,         1 JOBTYPE, a.priori
ty PRI,         decode(a.schedule_limit, NULL,                decode(bitand(a.flags, 4194304), 4194304,                              b.
schedule_limit, NULL),               a.schedule_limit) SCHLIM,         a.job_weight WT,         decode(a.running_instance, NULL, 0, a.r
unning_instance) INST,         decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,         decode(bitand(a.job_status, 8388608), 0, 0, 1) E
NQ_SCHLIM,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v ,        v$instance i  wher
e a.program_oid = b.obj#(+)    and (a.database_role = v

000000008B0AB7A0
SELECT OBJOID, CLSOID,    DECODE(BITAND(FLAGS, 16384), 0, RUNTIME,           LETIME),    (2*PRI +     DECODE(BITAND(STATUS, 4), 0, 0,
          decode(INST, :1, -1, 1))),    JOBTYPE, SCHLIM, WT, INST, RUNNOW, ENQ_SCHLIM, INST_ID  FROM (  select a.obj# OBJOID, a.class_o
id CLSOID, a.next_run_date RUNTIME,         a.last_enabled_time LETIME, a.flags FLAGS, a.job_status STATUS,         1 JOBTYPE, a.priori
ty PRI,         decode(a.schedule_limit, NULL,                decode(bitand(a.flags, 4194304), 4194304,                              b.
schedule_limit, NULL),               a.schedule_limit) SCHLIM,         a.job_weight WT,         decode(a.running_instance, NULL, 0, a.r
unning_instance) INST,         decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,         decode(bitand(a.job_status, 8388608), 0, 0, 1) E
NQ_SCHLIM,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v ,        v$instance i  wher
e a.program_oid = b.obj#(+)    and (a.database_role = v

0000000088DEB598
SELECT OBJOID, CLSOID,    DECODE(BITAND(FLAGS, 16384), 0, RUNTIME,           LETIME),    (2*PRI +     DECODE(BITAND(STATUS, 4), 0, 0,
          decode(INST, :1, -1, 1))),    JOBTYPE, SCHLIM, WT, INST, RUNNOW, ENQ_SCHLIM, INST_ID  FROM (  select a.obj# OBJOID, a.class_o
id CLSOID, a.next_run_date RUNTIME,         a.last_enabled_time LETIME, a.flags FLAGS, a.job_status STATUS,         1 JOBTYPE, a.priori
ty PRI,         decode(a.schedule_limit, NULL,                decode(bitand(a.flags, 4194304), 4194304,                              b.
schedule_limit, NULL),               a.schedule_limit) SCHLIM,         a.job_weight WT,         decode(a.running_instance, NULL, 0, a.r
unning_instance) INST,         decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,         decode(bitand(a.job_status, 8388608), 0, 0, 1) E
NQ_SCHLIM,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v ,        v$instance i  wher
e a.program_oid = b.obj#(+)    and (a.database_role = v

0000000088E035F0
SELECT OBJOID, CLSOID,    DECODE(BITAND(FLAGS, 16384), 0, RUNTIME,           LETIME),    (2*PRI +     DECODE(BITAND(STATUS, 4), 0, 0,
          decode(INST, :1, -1, 1))),    JOBTYPE, SCHLIM, WT, INST, RUNNOW, ENQ_SCHLIM, INST_ID  FROM (  select a.obj# OBJOID, a.class_o
id CLSOID, a.next_run_date RUNTIME,         a.last_enabled_time LETIME, a.flags FLAGS, a.job_status STATUS,         1 JOBTYPE, a.priori
ty PRI,         decode(a.schedule_limit, NULL,                decode(bitand(a.flags, 4194304), 4194304,                              b.
schedule_limit, NULL),               a.schedule_limit) SCHLIM,         a.job_weight WT,         decode(a.running_instance, NULL, 0, a.r
unning_instance) INST,         decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,         decode(bitand(a.job_status, 8388608), 0, 0, 1) E
NQ_SCHLIM,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v ,        v$instance i  wher
e a.program_oid = b.obj#(+)    and (a.database_role = v

0000000088E4AFB8
SELECT OBJOID, CLSOID,    DECODE(BITAND(FLAGS, 16384), 0, RUNTIME,           LETIME),    (2*PRI +     DECODE(BITAND(STATUS, 4), 0, 0,
          decode(INST, :1, -1, 1))),    JOBTYPE, SCHLIM, WT, INST, RUNNOW, ENQ_SCHLIM, INST_ID  FROM (  select a.obj# OBJOID, a.class_o
id CLSOID, a.next_run_date RUNTIME,         a.last_enabled_time LETIME, a.flags FLAGS, a.job_status STATUS,         1 JOBTYPE, a.priori
ty PRI,         decode(a.schedule_limit, NULL,                decode(bitand(a.flags, 4194304), 4194304,                              b.
schedule_limit, NULL),               a.schedule_limit) SCHLIM,         a.job_weight WT,         decode(a.running_instance, NULL, 0, a.r
unning_instance) INST,         decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,         decode(bitand(a.job_status, 8388608), 0, 0, 1) E
NQ_SCHLIM,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v ,        v$instance i  wher
e a.program_oid = b.obj#(+)    and (a.database_role = v

000000008C9755D8
SELECT OBJOID, CLSOID,    DECODE(BITAND(FLAGS, 16384), 0, RUNTIME,           LETIME),    (2*PRI +     DECODE(BITAND(STATUS, 4), 0, 0,
          decode(INST, :1, -1, 1))),    JOBTYPE, SCHLIM, WT, INST, RUNNOW, ENQ_SCHLIM, INST_ID  FROM (  select a.obj# OBJOID, a.class_o
id CLSOID, a.next_run_date RUNTIME,         a.last_enabled_time LETIME, a.flags FLAGS, a.job_status STATUS,         1 JOBTYPE, a.priori
ty PRI,         decode(a.schedule_limit, NULL,                decode(bitand(a.flags, 4194304), 4194304,                              b.
schedule_limit, NULL),               a.schedule_limit) SCHLIM,         a.job_weight WT,         decode(a.running_instance, NULL, 0, a.r
unning_instance) INST,         decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,         decode(bitand(a.job_status, 8388608), 0, 0, 1) E
NQ_SCHLIM,         a.instance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v ,        v$instance i  wher
e a.program_oid = b.obj#(+)    and (a.database_role = v

0000000060F12050
61494276c309fb066872338bef5c694a

0000000088C76BE0
dc629a2445b1d948eaeeb809f0b40ef

0000000088C8A038
INSERT INTO WRI$_SQL

000000008CAF9FD8
bbbcdc182f3d1d3f2feb791d7329f0f1

000000008CBBD678 SYS
GV$INSTANCE

000000008CA0B590
26947ac91d45c1242b247fc5f6b6f088

0000000060CDB9F0 $BUILD$
6b7d026d73105ae7

000000008B111960
c8775e28717851eeaad3f416447b46c9

000000008C9748A8
ee0939a6dd26084ecdd0a459fdf0611a

00000000652BAAD0
ba002f4cde4560c23a30a18135b31831

000000008B3A2BF8
b227e8c53113383e437ecaf0e0b1d0ed

0000000092D791A8
select substrb(dump(

0000000060FDEFF0 SYSTEM
AQ$_QUEUES

000000008B28AC78
217ca32094309d092a63ea8ac165fb75

000000008B07B750
eafe294e48cbb8071e361ae98c64c641

000000008B045FA0
860f5d026aa1c84c5b923b4fb98ea1f0

0000000088CD0208
SELECT DBID, DATABAS

0000000088C64430 SYS
ORA$BASE

000000008C8396C8
291b144e47de1158633f0903bdea4b07

0000000088D72DA8 SYS
SYS_UNCOMPRESSED_SEGS_BASE

0000000088E7CE10
44c56d5f7a1290d35ef1ee5363431c8c

000000008B239FD0
INSERT INTO WWV_FLOW

000000008B1B4BC0
SELECT JOB_STATUS FR

000000008CB23730 $BUILD$
f651c7def1eb1b83

0000000060FA19D8 $BUILD$
ae20e7494ffae65e

0000000088EEF9E0 SYS
WRH$_SEG_STAT_PK

0000000060E21720
SELECT /*+ leading(u) use_nl_with_index(o) */ O.OBJ# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME
= :B2 AND O.NAMESPACE = 4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND (O.SUBNAME IS NULL AND :B1 IS NULL OR O.SUBNAME = :B1 )
AND O.TYPE# IN (1,20,35)

000000008B0757D0
SELECT /*+ leading(u) use_nl_with_index(o) */ O.OBJ# FROM SYS.USER$ U, SYS.OBJ$ O WHERE U.NAME = :B3 AND O.OWNER# = U.USER# AND O.NAME
= :B2 AND O.NAMESPACE = 4 AND O.REMOTEOWNER IS NULL AND O.LINKNAME IS NULL AND (O.SUBNAME IS NULL AND :B1 IS NULL OR O.SUBNAME = :B1 )
AND O.TYPE# IN (1,20,35)

000000008C987440
select /*+  no_paral

00000000653C0370
select substrb(dump(

0000000060D5F3E8
c83c83666b7bfe9ce5fb9583b6955f1c

0000000092D7F668 SYS
X$KQFOPT

000000008CB0DAF0
43027390c22d7fcdac6ffd8982d61778

0000000092C38DF0
DELETE FROM WWV_FLOW

0000000060F79560
select A.inst_id, A.

000000008B3B7678 SYS
UTL_RAW

00000000652DEA30 PUBLIC
GV$INSTANCE

0000000088C983A8
SELECT XMLTYPE.APPEN

000000008C997908
SELECT RSET_DURMIN F

0000000088D70FA0
5c28a4e5f97e5409ce9c8002b2d5b589

000000008CBDEA00 SYS
TABSUBPART$

000000008CB3F650
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt, lowval, hival, density
, col#, spare1, spare2, avgcln from hist_head$ where obj#=:1 and intcol#=:2

000000008B34C6E0
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt, lowval, hival, density
, col#, spare1, spare2, avgcln from hist_head$ where obj#=:1 and intcol#=:2

000000008B1C37D0
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt, lowval, hival, density
, col#, spare1, spare2, avgcln from hist_head$ where obj#=:1 and intcol#=:2

000000008C835278
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt, lowval, hival, density
, col#, spare1, spare2, avgcln from hist_head$ where obj#=:1 and intcol#=:2

000000008CB3FAD0
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_size, minimum, maximum, distcnt, lowval, hival, density
, col#, spare1, spare2, avgcln from hist_head$ where obj#=:1 and intcol#=:2

000000008C978BF8
select substrb(dump(

000000008B232D60 SYS
DBMS_DATAPUMP

0000000060C551C0
SELECT /* DS_SVC */

0000000092D77178
6086fb66b23570bd3a41dfec7fd12f3d

0000000088D14CB0
declare  TYPE attrs_cur IS REF CURSOR;  m_cur       attrs_cur;  m_event   varchar2(512);  m_user    varchar2(512);  m_owner   varchar2(
512);  m_user1   varchar2(512);  m_type    varchar2(512);  m_name    varchar2(5120);  m_column  varchar2(5120);  m_cnt     NUMBER;  m_s
tmt    varchar2(512);  m_ret     varchar2(3000);  m_ret1     varchar2(512);  m_o_stmt VARCHAR2(5120); begin   m_stmt:='select sys.dbms_
standard.dictionary_obj_type from dual';  execute immediate m_stmt into m_type;  if(not (m_type='TABLE' or m_type='TRIGGER' or m_type='
USER' or m_type='TABLESPACE'))  then    return;  end if;   m_stmt:='select sys.dbms_standard.sysevent from dual';  execute immediate m_
stmt into m_event;   m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';  execute immediate m_stmt into m_user;   m_s
tmt:='select sys.dbms_standard.login_user  from dual';  execute immediate m_stmt into m_user1;   m_stmt:='select sys.dbms_standard.dict
ionary_obj_owner from dual';  execute immediate m_stmt

0000000088C41FD0
declare  TYPE attrs_cur IS REF CURSOR;  m_cur       attrs_cur;  m_event   varchar2(512);  m_user    varchar2(512);  m_owner   varchar2(
512);  m_user1   varchar2(512);  m_type    varchar2(512);  m_name    varchar2(5120);  m_column  varchar2(5120);  m_cnt     NUMBER;  m_s
tmt    varchar2(512);  m_ret     varchar2(3000);  m_ret1     varchar2(512);  m_o_stmt VARCHAR2(5120); begin   m_stmt:='select sys.dbms_
standard.dictionary_obj_type from dual';  execute immediate m_stmt into m_type;  if(not (m_type='TABLE' or m_type='TRIGGER' or m_type='
USER' or m_type='TABLESPACE'))  then    return;  end if;   m_stmt:='select sys.dbms_standard.sysevent from dual';  execute immediate m_
stmt into m_event;   m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';  execute immediate m_stmt into m_user;   m_s
tmt:='select sys.dbms_standard.login_user  from dual';  execute immediate m_stmt into m_user1;   m_stmt:='select sys.dbms_standard.dict
ionary_obj_owner from dual';  execute immediate m_stmt

0000000088D15130
declare  TYPE attrs_cur IS REF CURSOR;  m_cur       attrs_cur;  m_event   varchar2(512);  m_user    varchar2(512);  m_owner   varchar2(
512);  m_user1   varchar2(512);  m_type    varchar2(512);  m_name    varchar2(5120);  m_column  varchar2(5120);  m_cnt     NUMBER;  m_s
tmt    varchar2(512);  m_ret     varchar2(3000);  m_ret1     varchar2(512);  m_o_stmt VARCHAR2(5120); begin   m_stmt:='select sys.dbms_
standard.dictionary_obj_type from dual';  execute immediate m_stmt into m_type;  if(not (m_type='TABLE' or m_type='TRIGGER' or m_type='
USER' or m_type='TABLESPACE'))  then    return;  end if;   m_stmt:='select sys.dbms_standard.sysevent from dual';  execute immediate m_
stmt into m_event;   m_stmt:='select SYS_CONTEXT(''USERENV'',''SESSION_USER'') from dual';  execute immediate m_stmt into m_user;   m_s
tmt:='select sys.dbms_standard.login_user  from dual';  execute immediate m_stmt into m_user1;   m_stmt:='select sys.dbms_standard.dict
ionary_obj_owner from dual';  execute immediate m_stmt

000000008B080C70
SELECT /*+ rule */ C

0000000092D7BD08 SYS
X$KSQST

0000000060CCD5C0
9e304c31c622398dc4a8d959dc6631

0000000088DB9618 SYS
WRH$_MVPARAMETER

0000000088F1FAF0
select * from scott.emp where empno = 11

000000008B36B080
select * from scott.emp where empno = 11

000000008B07F240
SELECT O.OBJ# FROM O

0000000060D61E90
10a0910e37b72cf612dd6f811a29689a

0000000060EC2890
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."COL_USAGE$" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

0000000088F13658
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."COL_USAGE$" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

0000000060E8D5B0
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."COL_USAGE$" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

0000000060EC2D10
select min(minbkt),maxbkt,substrb(dump(min(val),16,0,32),1,120) minval,substrb(dump(max(val),16,0,32),1,120) maxval,sum(rep) sumrep, su
m(repsq) sumrepsq, max(rep) maxrep, count(*) bktndv, sum(case when rep=1 then 1 else 0 end) unqrep from (select val,min(bkt) minbkt, ma
x(bkt) maxbkt, count(val) rep, count(val)*count(val) repsq from (select /*+ no_expand_table(t) index_rs(t)   no_parallel(t) no_parallel
_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_substrb_pad  */"OBJ#" val, ntile(254)
 over (order by "OBJ#") bkt  from "SYS"."COL_USAGE$" t  where "OBJ#" is not null) group by val) group by maxbkt order by maxbkt

000000008CA924A0
SELECT RECID, RECID,

000000008B0E7078
SELECT COUNT(*) FROM

0000000060D65A28
776d085f3e27464ccdc242889fe9fe0d

0000000092CB4868
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CA76C88
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F9B7A8
31904ab7108c284242af68afc3fa4a17

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

0000000092D630F0 SYS
X$KSUPR

000000008CB8EAF8
291b144e47de1158633f0903bdea4b07

0000000088DF99B8 SYS
GV$DBFILE

000000008CB0ECF8
SELECT PE.PRIM_ATTRA

000000008C98D8B0 SYS
OPARG$

000000008B114630 SYS
SCHEDULER$_WINDOW_GROUP

0000000060C9D360
67c233df3cf8cbf2470259e75b4d3459

000000008CB33FA8 SYS
IDL_UB2$

000000008CADFF80
ROLLBACK

000000008C87D818
f9deb304c136f2f2ae59a63b75bff787

000000008B1B4E50 SYS
GV$ACTIVE_SERVICES

0000000088E7D210
ad741b5ee39441803847b5a52b3337

000000008C9D4590
ee7e8aaa2e19cdb473cf3c9d1a4612b2

0000000092D1B1A8 SYS
V$SORT_USAGE

000000008B046FD0
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_ENABLE_FRONT_END_VIEW_OPTIMIZATION'

0000000088D02EA0
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_ENABLE_FRONT_END_VIEW_OPTIMIZATION'

000000008CB76CA8
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_ENABLE_FRONT_END_VIEW_OPTIMIZATION'

000000008B048EC0
SELECT VALUE FROM V$PARAMETER WHERE UPPER(NAME) = '_ENABLE_FRONT_END_VIEW_OPTIMIZATION'

000000008B2069C8
e9397b4d8cca60127f57bf52ed385b7

000000008B3AA638 SYS
DBA_SQL_PROFILES

000000008B059690
INSERT INTO SYS.WRI$

000000008CADA708
SELECT SYS_CONTEXT(:

0000000088E7E1B0 $BUILD$
3b098992bbe1c02a

0000000088DC5318
ee7e8aaa2e19cdb473cf3c9d1a4612b2

000000008C91D798
UPDATE SYS.WRI$_ADV_

000000008B194648
SELECT RSET_PRMOBJT

0000000088F4EF18
b7ada89eb959bc13f558c0479a173b7

0000000092D7AC08 SYS
X$KSUSGSTA

000000008CBE1380
890a2e73b1bf4317f364f082db54f8ba

0000000060FE7250 APEX_030200
WWV_FLOW_PLATFORM

000000008B341168
select substrb(dump(

0000000088DAE908
select substrb(dump(

0000000060CE7248
8a81e0e97893e59d3780e4152bcfaa5d

0000000060F64C30
1243f25b4f5420f0d7fe72da626bba0f

0000000060CDE950
/* SQL Analyze(1) */

000000008B10C6C8
5b9c7ceb7783e18399d1893833d368b

000000008B037588
INSERT INTO EXFSYS.R

000000008B39F270
ca83e1083b4dbbbd4e899ea6f1ad35ba

0000000088F06E68
UPDATE WRH$_SEG_STAT_OBJ SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (TS#, OBJ#, DATAOBJ#) IN (SELECT NUM1_KEWRATTR, NUM2_KEW
RATTR, NUM3_KEWRATTR FROM X$KEWRATTRSTALE)

000000008B1A19B0
UPDATE WRH$_SEG_STAT_OBJ SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (TS#, OBJ#, DATAOBJ#) IN (SELECT NUM1_KEWRATTR, NUM2_KEW
RATTR, NUM3_KEWRATTR FROM X$KEWRATTRSTALE)

000000008CAB9430
UPDATE WRH$_SEG_STAT_OBJ SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (TS#, OBJ#, DATAOBJ#) IN (SELECT NUM1_KEWRATTR, NUM2_KEW
RATTR, NUM3_KEWRATTR FROM X$KEWRATTRSTALE)

0000000088ED4170
UPDATE WRH$_SEG_STAT_OBJ SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (TS#, OBJ#, DATAOBJ#) IN (SELECT NUM1_KEWRATTR, NUM2_KEW
RATTR, NUM3_KEWRATTR FROM X$KEWRATTRSTALE)

000000008B2F5378
UPDATE WRH$_SEG_STAT_OBJ SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (TS#, OBJ#, DATAOBJ#) IN (SELECT NUM1_KEWRATTR, NUM2_KEW
RATTR, NUM3_KEWRATTR FROM X$KEWRATTRSTALE)

0000000088F072E8
UPDATE WRH$_SEG_STAT_OBJ SET snap_id = :lah_snap_id  WHERE dbid = :dbid    AND (TS#, OBJ#, DATAOBJ#) IN (SELECT NUM1_KEWRATTR, NUM2_KEW
RATTR, NUM3_KEWRATTR FROM X$KEWRATTRSTALE)

000000008CB0A678 SYS
TRIGGER$

000000008B1F7D10
SELECT C.METRIC_ID ,

000000008B322090
UPDATE SYS.AQ$_SCHED

0000000088E8CD90
875c00da886952da9c1d62e641eef1d3

000000008CBF1078
4d7a37d0131e2a762ebf4b6995e87961

0000000088E826C0
insert into wrh$_db_cache_advice        (snap_id, dbid, instance_number,         bpid, buffers_for_estimate, name, block_size,
advice_status, size_for_estimate, size_factor,         physical_reads, base_physical_reads, actual_physical_reads,         estd_physica
l_read_time)   select :snap_id, :dbid, :instance_number,          a.bpid, a.nbufs, b.bp_name, a.blksz,          decode(a.status, 2, 'ON
', 'OFF'),          a.poolsz, round((a.poolsz / a.actual_poolsz), 4),          a.preads, a.base_preads, a.actual_preads,          a.est
d_time_for_disk_reads     from x$kcbsc a, x$kcbwbpd b     where a.bpid = b.bp_id

0000000088FDFBB0
insert into wrh$_db_cache_advice        (snap_id, dbid, instance_number,         bpid, buffers_for_estimate, name, block_size,
advice_status, size_for_estimate, size_factor,         physical_reads, base_physical_reads, actual_physical_reads,         estd_physica
l_read_time)   select :snap_id, :dbid, :instance_number,          a.bpid, a.nbufs, b.bp_name, a.blksz,          decode(a.status, 2, 'ON
', 'OFF'),          a.poolsz, round((a.poolsz / a.actual_poolsz), 4),          a.preads, a.base_preads, a.actual_preads,          a.est
d_time_for_disk_reads     from x$kcbsc a, x$kcbwbpd b     where a.bpid = b.bp_id

0000000088F5D918
insert into wrh$_db_cache_advice        (snap_id, dbid, instance_number,         bpid, buffers_for_estimate, name, block_size,
advice_status, size_for_estimate, size_factor,         physical_reads, base_physical_reads, actual_physical_reads,         estd_physica
l_read_time)   select :snap_id, :dbid, :instance_number,          a.bpid, a.nbufs, b.bp_name, a.blksz,          decode(a.status, 2, 'ON
', 'OFF'),          a.poolsz, round((a.poolsz / a.actual_poolsz), 4),          a.preads, a.base_preads, a.actual_preads,          a.est
d_time_for_disk_reads     from x$kcbsc a, x$kcbwbpd b     where a.bpid = b.bp_id

000000008B140838
insert into wrh$_db_cache_advice        (snap_id, dbid, instance_number,         bpid, buffers_for_estimate, name, block_size,
advice_status, size_for_estimate, size_factor,         physical_reads, base_physical_reads, actual_physical_reads,         estd_physica
l_read_time)   select :snap_id, :dbid, :instance_number,          a.bpid, a.nbufs, b.bp_name, a.blksz,          decode(a.status, 2, 'ON
', 'OFF'),          a.poolsz, round((a.poolsz / a.actual_poolsz), 4),          a.preads, a.base_preads, a.actual_preads,          a.est
d_time_for_disk_reads     from x$kcbsc a, x$kcbwbpd b     where a.bpid = b.bp_id

0000000060CA92D0
insert into wrh$_db_cache_advice        (snap_id, dbid, instance_number,         bpid, buffers_for_estimate, name, block_size,
advice_status, size_for_estimate, size_factor,         physical_reads, base_physical_reads, actual_physical_reads,         estd_physica
l_read_time)   select :snap_id, :dbid, :instance_number,          a.bpid, a.nbufs, b.bp_name, a.blksz,          decode(a.status, 2, 'ON
', 'OFF'),          a.poolsz, round((a.poolsz / a.actual_poolsz), 4),          a.preads, a.base_preads, a.actual_preads,          a.est
d_time_for_disk_reads     from x$kcbsc a, x$kcbwbpd b     where a.bpid = b.bp_id

0000000088E82B40
insert into wrh$_db_cache_advice        (snap_id, dbid, instance_number,         bpid, buffers_for_estimate, name, block_size,
advice_status, size_for_estimate, size_factor,         physical_reads, base_physical_reads, actual_physical_reads,         estd_physica
l_read_time)   select :snap_id, :dbid, :instance_number,          a.bpid, a.nbufs, b.bp_name, a.blksz,          decode(a.status, 2, 'ON
', 'OFF'),          a.poolsz, round((a.poolsz / a.actual_poolsz), 4),          a.preads, a.base_preads, a.actual_preads,          a.est
d_time_for_disk_reads     from x$kcbsc a, x$kcbwbpd b     where a.bpid = b.bp_id

0000000088CA22A8
SELECT TO_CHAR(EXECU

0000000060DCA0D8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C8471D0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088DC9BC8
LOCK TABLE "SYS"."OR

0000000088D697B8
select substrb(dump(

000000008B047CB0
33112c7778d88fba837089936c443e49

0000000092D7B4F8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."USER$
" "U#4", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="U
N#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE
2 UNDO') LIKE 'TABLE%') AND ("S#1"."USER#"="U#4"."USER#"(+))) innerQuery

000000008CAFD668
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."USER$
" "U#4", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="U
N#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE
2 UNDO') LIKE 'TABLE%') AND ("S#1"."USER#"="U#4"."USER#"(+))) innerQuery

0000000088F9C668
23b774f610b9f5c3a7331cd2c27a0c99

0000000060E5BA60
943874a0cc855f188634da117aee37d5

000000008C8DCA18 SYS
DBA_TABLES

0000000060C92800
5ca02bb59725147d425819cb5dae5f

000000008B2699B8 SYS
DBMS_PIPE

0000000088D770A8
d53d00726c300f3075d1f859e9e87b

0000000088FD4228
select u.name, o.name, o.namespace, o.type#, decode(bitand(i.property,1024),0,0,1), o.obj# from ind$ i,obj$ o,user$ u where i.obj#=:1 a
nd o.obj#=i.bo# and o.owner#=u.user#

000000008CBDCAB0
select u.name, o.name, o.namespace, o.type#, decode(bitand(i.property,1024),0,0,1), o.obj# from ind$ i,obj$ o,user$ u where i.obj#=:1 a
nd o.obj#=i.bo# and o.owner#=u.user#

000000008CB7F268
select u.name, o.name, o.namespace, o.type#, decode(bitand(i.property,1024),0,0,1), o.obj# from ind$ i,obj$ o,user$ u where i.obj#=:1 a
nd o.obj#=i.bo# and o.owner#=u.user#

0000000092C8AB58
select u.name, o.name, o.namespace, o.type#, decode(bitand(i.property,1024),0,0,1), o.obj# from ind$ i,obj$ o,user$ u where i.obj#=:1 a
nd o.obj#=i.bo# and o.owner#=u.user#

0000000088FDCF70
select u.name, o.name, o.namespace, o.type#, decode(bitand(i.property,1024),0,0,1), o.obj# from ind$ i,obj$ o,user$ u where i.obj#=:1 a
nd o.obj#=i.bo# and o.owner#=u.user#

000000008B147058
f3352b417589ba0c9a23ac1849d6cc19

0000000060C579E0
SELECT /* DS_SVC */

0000000088DD6188
select substrb(dump(

0000000060D228B8
b7ada89eb959bc13f558c0479a173b7

0000000060FE9B30
delete from sys.scheduler$_job where obj# = :1

0000000060DB7FC8
delete from sys.scheduler$_job where obj# = :1

0000000060DC1C90
delete from sys.scheduler$_job where obj# = :1

000000008B33DBA0
delete from sys.scheduler$_job where obj# = :1

0000000060EF1B70
delete from sys.scheduler$_job where obj# = :1

000000008B138EC8
delete from sys.scheduler$_job where obj# = :1

0000000088D3D818
delete from sys.scheduler$_job where obj# = :1

0000000092C7CEA8
6696d34c6885b0b88650073554a6a2f

000000008B20B218
8ea5386d3ccddb382c7a2adb64e7017

0000000088E07E28
f6c70ab150f271cdaecdae46ec7906f0

0000000088EF98F8
SELECT DECODE(:B1 , 0, 'NEXT OBJECT', 1, 'INDEX', 2, 'TABLE', 3, 'CLUSTER', 4, 'VIEW', 5, 'SYNONYM', 6, 'SEQUENCE', 7, 'PROCEDURE', 8,
'FUNCTION', 9, 'PACKAGE', 11, 'PACKAGE BODY', 12, 'TRIGGER', 13, 'TYPE', 14, 'TYPE BODY', 19, 'TABLE PARTITION', 20, 'INDEX PARTITION',
 21, 'LOB', 22, 'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE', 28, 'JAVA SOURCE', 29, 'JAVA CLASS', 30, 'JAVA RESOURCE', 32, 'INDEXTYPE', 33,
 'OPERATOR', 34, 'TABLE SUBPARTITION', 35, 'INDEX SUBPARTITION', 40, 'LOB PARTITION', 41, 'LOB SUBPARTITION', 42, 'MATERIALIZED VIEW',
43, 'DIMENSION', 44, 'CONTEXT', 47, 'RESOURCE PLAN', 48, 'CONSUMER GROUP', 51, 'SUBSCRIPTION', 52, 'LOCATION', 55, 'XML SCHEMA', 56, 'J
AVA DATA', 57, 'SECURITY PROFILE', 'UNDEFINED') FROM DUAL

0000000088D0FA80
SELECT DECODE(:B1 , 0, 'NEXT OBJECT', 1, 'INDEX', 2, 'TABLE', 3, 'CLUSTER', 4, 'VIEW', 5, 'SYNONYM', 6, 'SEQUENCE', 7, 'PROCEDURE', 8,
'FUNCTION', 9, 'PACKAGE', 11, 'PACKAGE BODY', 12, 'TRIGGER', 13, 'TYPE', 14, 'TYPE BODY', 19, 'TABLE PARTITION', 20, 'INDEX PARTITION',
 21, 'LOB', 22, 'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE', 28, 'JAVA SOURCE', 29, 'JAVA CLASS', 30, 'JAVA RESOURCE', 32, 'INDEXTYPE', 33,
 'OPERATOR', 34, 'TABLE SUBPARTITION', 35, 'INDEX SUBPARTITION', 40, 'LOB PARTITION', 41, 'LOB SUBPARTITION', 42, 'MATERIALIZED VIEW',
43, 'DIMENSION', 44, 'CONTEXT', 47, 'RESOURCE PLAN', 48, 'CONSUMER GROUP', 51, 'SUBSCRIPTION', 52, 'LOCATION', 55, 'XML SCHEMA', 56, 'J
AVA DATA', 57, 'SECURITY PROFILE', 'UNDEFINED') FROM DUAL

0000000088EFB268
SELECT DECODE(:B1 , 0, 'NEXT OBJECT', 1, 'INDEX', 2, 'TABLE', 3, 'CLUSTER', 4, 'VIEW', 5, 'SYNONYM', 6, 'SEQUENCE', 7, 'PROCEDURE', 8,
'FUNCTION', 9, 'PACKAGE', 11, 'PACKAGE BODY', 12, 'TRIGGER', 13, 'TYPE', 14, 'TYPE BODY', 19, 'TABLE PARTITION', 20, 'INDEX PARTITION',
 21, 'LOB', 22, 'LIBRARY', 23, 'DIRECTORY', 24, 'QUEUE', 28, 'JAVA SOURCE', 29, 'JAVA CLASS', 30, 'JAVA RESOURCE', 32, 'INDEXTYPE', 33,
 'OPERATOR', 34, 'TABLE SUBPARTITION', 35, 'INDEX SUBPARTITION', 40, 'LOB PARTITION', 41, 'LOB SUBPARTITION', 42, 'MATERIALIZED VIEW',
43, 'DIMENSION', 44, 'CONTEXT', 47, 'RESOURCE PLAN', 48, 'CONSUMER GROUP', 51, 'SUBSCRIPTION', 52, 'LOCATION', 55, 'XML SCHEMA', 56, 'J
AVA DATA', 57, 'SECURITY PROFILE', 'UNDEFINED') FROM DUAL

000000008C930598 SYS
DBMS_STATS

0000000092C3ADC8
DELETE FROM SYS.SCHE

000000008CAB15A0
delete refcon$ where obj#=:1

0000000088D1A960
delete refcon$ where obj#=:1

00000000652F5600
select * from  v$buffer_pool

00000000652DA230
select * from  v$buffer_pool

000000008C9FD288
select * from  v$buffer_pool

0000000060F96620
SELECT CT.TOID, CT.V

0000000092D25E18 APEX_030200
WWV_FLOW_COMPANIES

0000000088C614C8
SELECT SU.NAME, SO.NAME, A.STATSTYPE#, A.INTCOL# FROM ASSOCIATION$ A, OBJ$ O, USER$ U, COL$ C, OBJ$ SO, USER$ SU WHERE O.OWNER#=U.USER#
 AND A.OBJ#=O.OBJ# AND O.OBJ#=C.OBJ# AND C.INTCOL#=A.INTCOL# AND A.STATSTYPE#=SO.OBJ# AND SO.OWNER#=SU.USER# AND O.TYPE#=2 AND U.NAME=:
B3 AND O.NAME=:B2 AND C.NAME=:B1

000000008CA59078
SELECT SU.NAME, SO.NAME, A.STATSTYPE#, A.INTCOL# FROM ASSOCIATION$ A, OBJ$ O, USER$ U, COL$ C, OBJ$ SO, USER$ SU WHERE O.OWNER#=U.USER#
 AND A.OBJ#=O.OBJ# AND O.OBJ#=C.OBJ# AND C.INTCOL#=A.INTCOL# AND A.STATSTYPE#=SO.OBJ# AND SO.OWNER#=SU.USER# AND O.TYPE#=2 AND U.NAME=:
B3 AND O.NAME=:B2 AND C.NAME=:B1

000000008B07DB00
SELECT SU.NAME, SO.NAME, A.STATSTYPE#, A.INTCOL# FROM ASSOCIATION$ A, OBJ$ O, USER$ U, COL$ C, OBJ$ SO, USER$ SU WHERE O.OWNER#=U.USER#
 AND A.OBJ#=O.OBJ# AND O.OBJ#=C.OBJ# AND C.INTCOL#=A.INTCOL# AND A.STATSTYPE#=SO.OBJ# AND SO.OWNER#=SU.USER# AND O.TYPE#=2 AND U.NAME=:
B3 AND O.NAME=:B2 AND C.NAME=:B1

0000000088F4B198 $BUILD$
5a89a448eb8954f4

000000008B053EF0
SELECT SUM(ROW_CNT)

000000008CB634C8
select obj# from oid$ where user#=:1 and oid$=:2

0000000088C7CE00
select obj# from oid$ where user#=:1 and oid$=:2

000000008CAB9710
select obj# from oid$ where user#=:1 and oid$=:2

0000000092CBC458
select obj# from oid$ where user#=:1 and oid$=:2

000000008CBAC638
select obj# from oid$ where user#=:1 and oid$=:2

000000008CB63948
select obj# from oid$ where user#=:1 and oid$=:2

0000000092CD5B38 $BUILD$
 81e2c364828e1be

0000000088FE8D10
3137e563c404483db86fdf4adfebc162

000000008B126958
SELECT ATTRIBUTES,         ATTRIBUTES_OVERRIDE,         TASK_PRIORITY,         PRIORITY_OVERRIDE,         STATUS,         NVL(WINDOW_NA
ME,''),         NVL(CURR_JOB_NAME,''),         NVL(CURR_WIN_START,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         EST_TYPE,
 EST_WEIGHT,         RETRY_COUNT,         GOOD_COUNT,         NVL(LG_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LG_PRIORI
TY,         NVL(LT_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LT_PRIORITY,         LT_TERM_CODE,         LT_ERROR,
  EST_DURATION,         EST_CPU_TIME,         EST_TEMP,         EST_UNDO_RATE,         EST_IO_RATE,         EST_DOP,         LG_DURATIO
N,         LG_CPU_TIME,         LG_TEMP,         LG_UNDO_RATE,         LG_IO_RATE,         LG_DOP,         LG_CPU_WAIT,         LG_IO_W
AIT,         LG_UNDO_WAIT,         LG_TEMP_WAIT,         LG_CONCURRENCY,         LG_CONTENTION,         LT_DURATION,         LT_CPU_TIM
E,         LT_TEMP,         LT_UNDO_RATE,         LT_IO

0000000060E55470
SELECT ATTRIBUTES,         ATTRIBUTES_OVERRIDE,         TASK_PRIORITY,         PRIORITY_OVERRIDE,         STATUS,         NVL(WINDOW_NA
ME,''),         NVL(CURR_JOB_NAME,''),         NVL(CURR_WIN_START,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         EST_TYPE,
 EST_WEIGHT,         RETRY_COUNT,         GOOD_COUNT,         NVL(LG_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LG_PRIORI
TY,         NVL(LT_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LT_PRIORITY,         LT_TERM_CODE,         LT_ERROR,
  EST_DURATION,         EST_CPU_TIME,         EST_TEMP,         EST_UNDO_RATE,         EST_IO_RATE,         EST_DOP,         LG_DURATIO
N,         LG_CPU_TIME,         LG_TEMP,         LG_UNDO_RATE,         LG_IO_RATE,         LG_DOP,         LG_CPU_WAIT,         LG_IO_W
AIT,         LG_UNDO_WAIT,         LG_TEMP_WAIT,         LG_CONCURRENCY,         LG_CONTENTION,         LT_DURATION,         LT_CPU_TIM
E,         LT_TEMP,         LT_UNDO_RATE,         LT_IO

000000008CBCA818
SELECT ATTRIBUTES,         ATTRIBUTES_OVERRIDE,         TASK_PRIORITY,         PRIORITY_OVERRIDE,         STATUS,         NVL(WINDOW_NA
ME,''),         NVL(CURR_JOB_NAME,''),         NVL(CURR_WIN_START,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         EST_TYPE,
 EST_WEIGHT,         RETRY_COUNT,         GOOD_COUNT,         NVL(LG_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LG_PRIORI
TY,         NVL(LT_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LT_PRIORITY,         LT_TERM_CODE,         LT_ERROR,
  EST_DURATION,         EST_CPU_TIME,         EST_TEMP,         EST_UNDO_RATE,         EST_IO_RATE,         EST_DOP,         LG_DURATIO
N,         LG_CPU_TIME,         LG_TEMP,         LG_UNDO_RATE,         LG_IO_RATE,         LG_DOP,         LG_CPU_WAIT,         LG_IO_W
AIT,         LG_UNDO_WAIT,         LG_TEMP_WAIT,         LG_CONCURRENCY,         LG_CONTENTION,         LT_DURATION,         LT_CPU_TIM
E,         LT_TEMP,         LT_UNDO_RATE,         LT_IO

000000008CA08460
SELECT ATTRIBUTES,         ATTRIBUTES_OVERRIDE,         TASK_PRIORITY,         PRIORITY_OVERRIDE,         STATUS,         NVL(WINDOW_NA
ME,''),         NVL(CURR_JOB_NAME,''),         NVL(CURR_WIN_START,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         EST_TYPE,
 EST_WEIGHT,         RETRY_COUNT,         GOOD_COUNT,         NVL(LG_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LG_PRIORI
TY,         NVL(LT_DATE,TIMESTAMP '2001-01-01 01:01:01.01 +01:01'),         LT_PRIORITY,         LT_TERM_CODE,         LT_ERROR,
  EST_DURATION,         EST_CPU_TIME,         EST_TEMP,         EST_UNDO_RATE,         EST_IO_RATE,         EST_DOP,         LG_DURATIO
N,         LG_CPU_TIME,         LG_TEMP,         LG_UNDO_RATE,         LG_IO_RATE,         LG_DOP,         LG_CPU_WAIT,         LG_IO_W
AIT,         LG_UNDO_WAIT,         LG_TEMP_WAIT,         LG_CONCURRENCY,         LG_CONTENTION,         LT_DURATION,         LT_CPU_TIM
E,         LT_TEMP,         LT_UNDO_RATE,         LT_IO

0000000060E7FDE0
SELECT EXTRACTVALUE(

0000000088D69B38
96c2e326211991c82ed11ee835f395d3

00000000652B3190
52cdc05399e55f257edaf456f0dbeddc

0000000088F13A28
insert into wrh$_waitclassmetric_history     (snap_id, dbid, instance_number, wait_class_id,      begin_time, end_time, intsize, group_
id,      average_waiter_count, dbtime_in_wait,      time_waited, wait_count,      time_waited_fg, wait_count_fg)  select      :snap_id,
 :dbid, :instance_number, wait_id,      begtime, endtime, intsize_csec, groupid,      average_waiter_count, dbtime_in_wait,      time_w
aited, wait_count,      time_waited_fg, wait_count_fg  from x$kewmevmv

000000008CBD6AC0
insert into wrh$_waitclassmetric_history     (snap_id, dbid, instance_number, wait_class_id,      begin_time, end_time, intsize, group_
id,      average_waiter_count, dbtime_in_wait,      time_waited, wait_count,      time_waited_fg, wait_count_fg)  select      :snap_id,
 :dbid, :instance_number, wait_id,      begtime, endtime, intsize_csec, groupid,      average_waiter_count, dbtime_in_wait,      time_w
aited, wait_count,      time_waited_fg, wait_count_fg  from x$kewmevmv

0000000088F13EA8
insert into wrh$_waitclassmetric_history     (snap_id, dbid, instance_number, wait_class_id,      begin_time, end_time, intsize, group_
id,      average_waiter_count, dbtime_in_wait,      time_waited, wait_count,      time_waited_fg, wait_count_fg)  select      :snap_id,
 :dbid, :instance_number, wait_id,      begtime, endtime, intsize_csec, groupid,      average_waiter_count, dbtime_in_wait,      time_w
aited, wait_count,      time_waited_fg, wait_count_fg  from x$kewmevmv

00000000653B9F40
9a7c89d5c19203b3f3cf27ae6c241b47

000000008C9F4E40
7648651ea793e10c1ed5cbd66f7fcab0

000000008B2388B0 SYS
DBA_XSTREAM_INBOUND

0000000060F52DE0
select substrb(dump(

000000008B0E6BF8
DELETE FROM SYS.AQ$_

000000008B156328
begin dbsnmp.bsln_internal.maintain_thresholds; end;

000000008C852F40
begin dbsnmp.bsln_internal.maintain_thresholds; end;

000000008B059CB0
SELECT COUNT(*) FROM

000000008B2E16F0
1de34d29182c04c6505c9a5a7fd90d

0000000060EF2A40
883830cc853d0f37585f7bd06e738665

000000008B051170
SELECT SUBPART_NAME,

000000008C85DF50 PUBLIC
DBA_THRESHOLDS

000000008C8A5EC0
14689815531637228398

0000000088C94A98
SELECT XMLCONCAT(:B5

000000008C979B78
INSERT INTO RLM$EVEN

0000000088E197D8
insert into wrh$_java_pool_advice     (snap_id, dbid, instance_number,      java_pool_size_for_estimate, java_pool_size_factor,      es
td_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_time_facto
r, estd_lc_memory_object_hits)  select      :snap_id, :dbid, :instance_number,      java_pool_size_for_estimate, java_pool_size_factor,
      estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_ti
me_factor, estd_lc_memory_object_hits  from v$java_pool_advice

000000008C9F63F0
insert into wrh$_java_pool_advice     (snap_id, dbid, instance_number,      java_pool_size_for_estimate, java_pool_size_factor,      es
td_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_time_facto
r, estd_lc_memory_object_hits)  select      :snap_id, :dbid, :instance_number,      java_pool_size_for_estimate, java_pool_size_factor,
      estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_ti
me_factor, estd_lc_memory_object_hits  from v$java_pool_advice

000000008CB93A38
insert into wrh$_java_pool_advice     (snap_id, dbid, instance_number,      java_pool_size_for_estimate, java_pool_size_factor,      es
td_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_time_facto
r, estd_lc_memory_object_hits)  select      :snap_id, :dbid, :instance_number,      java_pool_size_for_estimate, java_pool_size_factor,
      estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_ti
me_factor, estd_lc_memory_object_hits  from v$java_pool_advice

00000000652D0A30
insert into wrh$_java_pool_advice     (snap_id, dbid, instance_number,      java_pool_size_for_estimate, java_pool_size_factor,      es
td_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_time_facto
r, estd_lc_memory_object_hits)  select      :snap_id, :dbid, :instance_number,      java_pool_size_for_estimate, java_pool_size_factor,
      estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_ti
me_factor, estd_lc_memory_object_hits  from v$java_pool_advice

0000000088E19C58
insert into wrh$_java_pool_advice     (snap_id, dbid, instance_number,      java_pool_size_for_estimate, java_pool_size_factor,      es
td_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_time_facto
r, estd_lc_memory_object_hits)  select      :snap_id, :dbid, :instance_number,      java_pool_size_for_estimate, java_pool_size_factor,
      estd_lc_size, estd_lc_memory_objects, estd_lc_time_saved,      estd_lc_time_saved_factor, estd_lc_load_time,      estd_lc_load_ti
me_factor, estd_lc_memory_object_hits  from v$java_pool_advice

000000008B1C58E0
select cc.intcol# from cdef$ c, ccol$ cc where c.obj#=cc.obj# and c.con#=cc.con# and c.type#=7 and c.obj#=:1

0000000092C39A48
select cc.intcol# from cdef$ c, ccol$ cc where c.obj#=cc.obj# and c.con#=cc.con# and c.type#=7 and c.obj#=:1

0000000088CAEC68
select cc.intcol# from cdef$ c, ccol$ cc where c.obj#=cc.obj# and c.con#=cc.con# and c.type#=7 and c.obj#=:1

00000000653FC800
SELECT COUNT(*) FROM

000000008C91A6B8
SELECT NVL(MAX(ID),

000000008B287290
alter table WRH$_FIL

0000000088F18F68
4ba8a6dafb69204e4de1216b367d06a6

0000000088F33248 SYS
WRH$_ACTIVE_SESSION_HISTORY

0000000088FD33E0 $BUILD$
ccae3944bd21e0fe

0000000092EBB1A8
select option#,NVL(success,0),NVL(failure,0) from audit$ where user#=:client and proxy# is null

000000008B28D5E0
select option#,NVL(success,0),NVL(failure,0) from audit$ where user#=:client and proxy# is null

000000008CAA88B8 SYS
KOTTBX$

0000000088D2F0D8 SYS
SYS_TEMP_0FD9D661E_EB3C8

0000000088C88058
SELECT O.ATTR1 SQL_I

000000008C8C74D8
1a82a5de534dc5c6ddad6549c1f5bae9

000000008CA145B8
select comments, flags from sys.scheduler$_window_group where obj# = :1

000000008CA14A38
select comments, flags from sys.scheduler$_window_group where obj# = :1

000000008C8C2328 SYS
EXPACT$

000000008B1F65F0
SELECT W.REPAIR_TYPE

000000008C8531B8 SYS
X$KSUSGIF

0000000088F6D550
/* SQL Analyze(1) */

000000008B25F4A8
cfb7da9575a0a8aaf5d18e42583d05e

0000000060D1F128 SYSTEM
AQ$_INTERNET_AGENTS

000000008B0F4FA8
UPDATE RLM$EVENTSTRU

0000000088C96CD8
SELECT XMLCONCAT(XML

000000008B160300 $BUILD$
37814241d1478e4f

000000008CBE43C8
e43af7dd699d423af9a726f326b0fb46

00000000652F7190 $BUILD$
e5fb9583b6955f1c

0000000060DFF030
8e0226084d814950b30ac7a3637ff9d

000000008B21CA70
c8aea8fb226ed48b5097ba868ef58df

000000008CB3AE58
DELETE FROM SYS.SCHE

000000008CB96818
DELETE WWV_FLOW_SESS

0000000092D68288 SYS
X$KSWSASTAB

0000000088D64C58
16030b5c728b234081e54a3c95c2a581

000000008C8BE470
38d61e41e552eeefd3f8996a98c3b871

0000000088F5DF08
DELETE FROM SYS.SCHE

000000008B2DEC20
update sys.scheduler$_job set  flags = :1, start_date = :2, dist_flags = :3 where  obj# = :4

0000000088FBE078
update sys.scheduler$_job set  flags = :1, start_date = :2, dist_flags = :3 where  obj# = :4

0000000060FA9DE8
update sys.scheduler$_job set  flags = :1, start_date = :2, dist_flags = :3 where  obj# = :4

0000000088C59558
update sys.scheduler$_job set  flags = :1, start_date = :2, dist_flags = :3 where  obj# = :4

000000008CA53E10
update sys.scheduler$_job set  flags = :1, start_date = :2, dist_flags = :3 where  obj# = :4

000000008B2AE4D8
update sys.scheduler$_job set  flags = :1, start_date = :2, dist_flags = :3 where  obj# = :4

000000008CA6FB70
select max(procedure#) from procedurejava$ where obj#=:1

000000008C8BA2A8
select max(procedure#) from procedurejava$ where obj#=:1

000000008B0D4F78
select max(procedure#) from procedurejava$ where obj#=:1

000000008CB48A90
select max(procedure#) from procedurejava$ where obj#=:1

000000008CA6FFF0
select max(procedure#) from procedurejava$ where obj#=:1

0000000060FAE7B0
SELECT FUNCTION_ID, FUNCTION_NAME,                                     SMALL_READ_MEGABYTES, SMALL_WRITE_MEGABYTES,
       LARGE_READ_MEGABYTES, LARGE_WRITE_MEGABYTES, SMALL_READ_REQS,          SMALL_WRITE_REQS, LARGE_READ_REQS, LARGE_WRITE_REQS,
              NUMBER_OF_WAITS, WAIT_TIME                                             FROM GV$IOSTAT_FUNCTION where inst_id=USERENV('Ins
tance')

0000000088F931E8
SELECT FUNCTION_ID, FUNCTION_NAME,                                     SMALL_READ_MEGABYTES, SMALL_WRITE_MEGABYTES,
       LARGE_READ_MEGABYTES, LARGE_WRITE_MEGABYTES, SMALL_READ_REQS,          SMALL_WRITE_REQS, LARGE_READ_REQS, LARGE_WRITE_REQS,
              NUMBER_OF_WAITS, WAIT_TIME                                             FROM GV$IOSTAT_FUNCTION where inst_id=USERENV('Ins
tance')

0000000060D22E28
5bcf9f49f8ae39470a6d57e18242a83

000000008C912A98
SELECT MAX(ADVISOR_N

0000000088C85E88
SELECT DISTINCT A.CO

0000000088CB02C8
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

000000008CB07AE0
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

0000000088D5B608
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

0000000088DB1AE8
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

000000008C988490
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

000000008B307CE8
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

0000000060F065B0
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

0000000088FACE88
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

000000008B0E3498
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

000000008CA34578
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

00000000652E1050
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

0000000088CB0748
                                    merge /*+ dynamic_sampling(mm 4) dynamic_sampling_est_cdn(mm)                           dynamic_sam
pling(m 4) dynamic_sampling_est_cdn(m) */                    into sys.mon_mods_all$ mm
  using                                                                         (select
                          decode(grouping_id(tp.bo#,tsp.pobj#,m.obj#),3,tp.bo#,1,tsp.pobj#,m.obj#)        obj#,
                                               sum(m.inserts) inserts, sum(m.updates) updates, sum(m.deletes) deletes,       case when
grouping_id(tp.bo#,tsp.pobj#,m.obj#) = 0 then                       (/* IF THIS IS A SUBPARTITION AGGREGATE THE TRUNCATE BIT */
            decode(sum(bitand(m.flags,1)),0,0,1)                                          +decode(sum(bitand(m.flags,2)),0,0,2)
                                 +decode(sum(bitand(m.f

0000000088D1CFE0
71426d02602c009f7f47f611106344c

0000000088E49F08
c1a10b0f309e414eb45aaa8f24f1508c

000000008B3A57A8
SELECT COUNT(*) FROM

0000000060ECBF80 SYS
STREAMS$_SM_ID

000000008B337AA8 SYS
WRH$_MVPARAMETER_PK

000000008CAE1810
select table_name from dict where table_name like '%DBA%STATIS%'

000000008CBA42B0
select table_name from dict where table_name like '%DBA%STATIS%'

000000008C88A2D0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_E
STIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I
_OBJ5", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823) */ COU
NT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."SYS_OBJECTS" "SO#2", "SYS"."USER$" "U#5", "S
YS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#4"."OWNER#"="U#5"."USER#"(+)) AND ("O#4"."OBJ#"="SO#2"."OBJECT_ID") AND ("
O#4"."TYPE#"="SO#2"."OBJECT_TYPE_ID")) innerQuery

000000008CBCADB8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ2", SCALE_ROWS=120.0959823) OPT_E
STIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I
_OBJ5", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OBJ1", SCALE_ROWS=120.0959823) */ COU
NT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O#4")  */ 1 AS C1 FROM "SYS"."SYS_OBJECTS" "SO#2", "SYS"."USER$" "U#5", "S
YS"."OBJ$" SAMPLE BLOCK(75.2587, 8) SEED(1)  "O#4" WHERE ("O#4"."OWNER#"="U#5"."USER#"(+)) AND ("O#4"."OBJ#"="SO#2"."OBJECT_ID") AND ("
O#4"."TYPE#"="SO#2"."OBJECT_TYPE_ID")) innerQuery

0000000060E66DA0
SELECT L.TABLE_NAME,

0000000060D8B3A0
select substrb(dump(

000000008CB3DEE0 SYS
IDL_SB4$

0000000088CCBC68
SELECT XMLELEMENT( "

000000008B03CBF8
7d4f8e8d7d7613d76c1f30c23883d665

0000000092D0A590 SYS
X$KSKPLW

000000008B18A5A0
UPDATE RLM$EQUALSPEC

000000008B0D20F8 SYS
X$KEWASH

0000000060F67CB0 PUBLIC
ORACLE_OCM

000000008B373F38 SYS
ALL_SQLSET_PLANS

0000000060F6D390 SYS
V$SQL_WORKAREA_HISTOGRAM

000000006534C9B0 SYS
COM$

0000000088CB8248
SELECT /*+ index(u)

0000000088D560D0 SYS
V_$SORT_USAGE

0000000060EABEE0 $BUILD$
ee28db85a8c6bdf9

0000000092C80748
select A.inst_id, A.

0000000060FF2BF0
select inst_id,fnfno, decode(fnflg,0,'',   decode(bitand(fnflg,1),1,'INVALID',   decode(bitand(fnflg,2),2,'STALE',   decode(bitand(fnfl
g,4),4,'DELETED',   decode(bitand(fnflg,8+32),8,'',32,'',40,'','UNKNOWN'))))), decode(bitand(fnflg,8),0,'ONLINE','STANDBY'), fnnam, dec
ode(bitand(fnflg, 32),0,'NO','YES') from x$kccfn where fnnam is not null and fntyp=3

0000000088F74F90
select inst_id,fnfno, decode(fnflg,0,'',   decode(bitand(fnflg,1),1,'INVALID',   decode(bitand(fnflg,2),2,'STALE',   decode(bitand(fnfl
g,4),4,'DELETED',   decode(bitand(fnflg,8+32),8,'',32,'',40,'','UNKNOWN'))))), decode(bitand(fnflg,8),0,'ONLINE','STANDBY'), fnnam, dec
ode(bitand(fnflg, 32),0,'NO','YES') from x$kccfn where fnnam is not null and fntyp=3

0000000088D01BB8 SYS
SCHEDULER$_STEP

000000008B077080
SELECT /*+ ordered i

0000000092EBD388
SELECT DECODE(NAME,NULL,'None',NAME) AS RECOVERY_DEST, DECODE(SPACE_LIMIT,0,0,(SPACE_USED - SPACE_RECLAIMABLE) / SPACE_LIMIT * 100) AS
USED_PCT FROM V$RECOVERY_FILE_DEST

0000000088F1A998
SELECT DECODE(NAME,NULL,'None',NAME) AS RECOVERY_DEST, DECODE(SPACE_LIMIT,0,0,(SPACE_USED - SPACE_RECLAIMABLE) / SPACE_LIMIT * 100) AS
USED_PCT FROM V$RECOVERY_FILE_DEST

0000000088C8AA08
UPDATE WRI$_SQLSET_D

000000008B266468 APEX_030200
WWV_HTP

0000000088DA6A48
217168247d53b7af134e27ea1a621859

000000008B1F2DE0
SELECT CRS.PRIM_ATTR

000000008B077880
SELECT COLUMN_NAME F

000000008CB15598
SELECT 1 FROM SYSTEM

000000008B07B970 SYS
DBMS_STATS_INTERNAL

0000000088C9D8E8
SELECT DBMS_ADVISOR.

0000000088D44278
SELECT NVL(ERROR_NOT

000000008CB24DE0
b53b543b6a65d6b141df4a8cf9b4bb58

000000008CA23588
INSERT INTO RLM$RULE

0000000088E3DFE0
select /*+  no_paral

00000000653DE300

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
SELECT VALUE FROM NL

0000000092C6B810
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060FAEA10
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

0000000060E42A48
 SELECT  A.PARTITION_NAME,  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRE
CISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE
',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,
                 'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,
       'N','NOT NULL',               'n','NOT NULL',               NULL) col1,  B.NUM_ROWS,  A.NUM_NULLS,  round(100 * A.DENSITY,2) as
DENSITY,  A.NUM_DISTINCT CARDINALITY,  ROUND(A.NUM_DISTINCT / decode(B.NUM_ROWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,  A.HISTOGRAM,  A
.NUM_BUCKETS,  decode(T.SAMPLE_SIZE,null,0,T.SAMPLE_SIZE) as SAMPLE_SIZE,  T.GLOBAL_STATS,  T.USER_STATS,  decode(to_char(T.last_analyz
ed,'YYYYMMDD HH24:MI'),null,'None',to_char(T.last_analy

000000008B2DAED0 SYS
SCHEDULER$_EVENT_INFO

0000000092D84278
select name,mandatory,mgmt_method,mast_method,pdl_method,que_method,max_iops,max_mbps,num_plan_directives,description,sub_plan from res
ource_plan$ where obj#=:1 and status = 'ACTIVE'

000000008C882300
select name,mandatory,mgmt_method,mast_method,pdl_method,que_method,max_iops,max_mbps,num_plan_directives,description,sub_plan from res
ource_plan$ where obj#=:1 and status = 'ACTIVE'

000000008B3C12B0
SELECT ROUND((HSECS

000000008B1DBBB8
f5c2ddd2d9959db925f2b275a39f63a9

0000000088EA24B0 SYS
WRH$_WAITSTAT_PK

000000008B1808B0 SYS
GV$SGASTAT

000000008CA538C0
SELECT ID FROM WWV_F

0000000092D19838
416617097481a2309ce8f8b8efc69b00

000000008C906140
fee5190fc583bc5a222f49657a0e4fb6

0000000088FD3BD8
INSERT INTO WWV_FLOW

0000000088F4F6D8 PUBLIC
DBMS_APPLICATION_INFO

0000000060C8B0F0
select   PGA_TARGET_FOR_ESTIMATE,           PGA_TARGET_FACTOR,           ADVICE_STATUS,           BYTES_PROCESSED,           ESTD_TIME,
           ESTD_EXTRA_BYTES_RW,           ESTD_PGA_CACHE_HIT_PERCENTAGE,           ESTD_OVERALLOC_COUNT    from   GV$PGA_TARGET_ADVICE
   where  INST_ID = USERENV('Instance')

0000000088E7D950
select   PGA_TARGET_FOR_ESTIMATE,           PGA_TARGET_FACTOR,           ADVICE_STATUS,           BYTES_PROCESSED,           ESTD_TIME,
           ESTD_EXTRA_BYTES_RW,           ESTD_PGA_CACHE_HIT_PERCENTAGE,           ESTD_OVERALLOC_COUNT    from   GV$PGA_TARGET_ADVICE
   where  INST_ID = USERENV('Instance')

000000008B28C748
alter table abc stor

000000006531D730
select substrb(dump(

000000008B138648
2adba16322aa4af64efa1c96a3baf98d

000000008B2BC008
3b642487a7c95796c43e978766a26558

000000008C9351D0
UPDATE RLM$EQUALSPEC

000000008B1EF078
9813d78b6c9745c0fe45364c0e6dc1

0000000088D85CF8
cd3744da5e17066dd59d0eedbbcee4f7

0000000088CAE058
5790a2b28b8c4c2c6bdf240040defbfb

000000008B341908
select substrb(dump(

0000000060D00830
3a9b479e3630f1912a9d9d1b2e275a0

0000000060D55CE8
32236045844ad0bd8209801e6479e686

0000000060F6F770
85127993f142030279443de727a13ab7

000000008C9EED48
ae16995fde98af308a9009bfd918ad59

0000000060DABAB8 XDB
XDB_PITRIG_PKG

0000000060F0EDD0
9cfd2727f30195e759a1d5c68bb699b4

0000000088F9C958 SYS
X$IR_REPAIR_STEP

000000008CBF54F0
select substrb(dump(

0000000060F1AD70
select * from test1 where rownum < 2

0000000092D82850
select * from test1 where rownum < 2

0000000060C41630
select * from test1 where rownum < 2

0000000088EBACF0
84f661675f694ad0e375c2d86bc38b9c

000000008B1A3CE8
f4d7751369b922115d98e6f9369634f

0000000060C494A0
SELECT COUNT(*) FROM

000000008C959A20
SELECT * FROM WWV_FL

000000008CA09E00 SYS
RE$RULE_HIT

0000000088D8DEC8
8219067028978191073

000000008B0461C0
c7d17d67e8fd47b5a25c1ec7c75e8679

000000008B074810
SELECT KQFOPTFLAGS F

0000000060C65DE0
9c6ebdcee63ae117eddd89b07512c493

000000008CBDA7B0
select 1 from sys.cdc_change_tables$  where source_schema_name = :1  and source_table_name = :2  and bitand(mvl_flag, 128)=128

000000008CA40E30
select 1 from sys.cdc_change_tables$  where source_schema_name = :1  and source_table_name = :2  and bitand(mvl_flag, 128)=128

0000000088DC9E28 SYS
AQ$_SCHEDULER$_EVENT_QTAB_L

000000008B28BD58 SYS
V$DATABASE_BLOCK_CORRUPTION

000000008C943A28 $BUILD$
19dee19715adf241

0000000088DD6508
insert into WRH$_RSRC_PLAN   (snap_id, dbid, instance_number,    sequence#, start_time, end_time,    plan_id, plan_name,    cpu_managed
, parallel_execution_managed)  (select      :snap_id, :dbid, :instance_number,      sequence#, start_time, end_time,      id, name, cpu
_managed,      parallel_execution_managed   from v$rsrc_plan_history    where id is not null)

000000008B21E280
insert into WRH$_RSRC_PLAN   (snap_id, dbid, instance_number,    sequence#, start_time, end_time,    plan_id, plan_name,    cpu_managed
, parallel_execution_managed)  (select      :snap_id, :dbid, :instance_number,      sequence#, start_time, end_time,      id, name, cpu
_managed,      parallel_execution_managed   from v$rsrc_plan_history    where id is not null)

000000008CBCBC68
insert into WRH$_RSRC_PLAN   (snap_id, dbid, instance_number,    sequence#, start_time, end_time,    plan_id, plan_name,    cpu_managed
, parallel_execution_managed)  (select      :snap_id, :dbid, :instance_number,      sequence#, start_time, end_time,      id, name, cpu
_managed,      parallel_execution_managed   from v$rsrc_plan_history    where id is not null)

000000008CBA6898
insert into WRH$_RSRC_PLAN   (snap_id, dbid, instance_number,    sequence#, start_time, end_time,    plan_id, plan_name,    cpu_managed
, parallel_execution_managed)  (select      :snap_id, :dbid, :instance_number,      sequence#, start_time, end_time,      id, name, cpu
_managed,      parallel_execution_managed   from v$rsrc_plan_history    where id is not null)

0000000060E92C90
insert into WRH$_RSRC_PLAN   (snap_id, dbid, instance_number,    sequence#, start_time, end_time,    plan_id, plan_name,    cpu_managed
, parallel_execution_managed)  (select      :snap_id, :dbid, :instance_number,      sequence#, start_time, end_time,      id, name, cpu
_managed,      parallel_execution_managed   from v$rsrc_plan_history    where id is not null)

0000000088DD6988
insert into WRH$_RSRC_PLAN   (snap_id, dbid, instance_number,    sequence#, start_time, end_time,    plan_id, plan_name,    cpu_managed
, parallel_execution_managed)  (select      :snap_id, :dbid, :instance_number,      sequence#, start_time, end_time,      id, name, cpu
_managed,      parallel_execution_managed   from v$rsrc_plan_history    where id is not null)

000000008C95DE60 SYS
X$KCCBF

0000000088D1FF20
c33ab351a89613b99aed71b5b2210964

000000008B2315D0
select substrb(dump(

000000008B05C150
DELETE FROM SYS.WRI$

0000000060F042B0
58e8c142109e7c51f6d07ec6bd8c3902

0000000088E164B8
select /*+  no_paral

0000000088D5E818
980571ef463699daddbcf11a93e54249

000000008C990EA0
select tf.inst_id, tf.tfnum, to_number(tf.tfcrc_scn), to_date(tf.tfcrc_tim,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), tf.tftsn, t
f.tfrfn, decode(bitand(tf.tfsta, 2),0,'OFFLINE',2,'ONLINE','UNKNOWN'), decode(bitand(tf.tfsta, 12), 0,'DISABLED',4, 'READ ONLY', 12, 'R
EAD WRITE',                                                                  'UNKNOWN'), fh.fhtmpfsz*tf.tfbsz, fh.fhtmpfsz,  tf.tfcsz*t
f.tfbsz,tf.tfbsz, fn.fnnam  from x$kcctf tf, x$kccfn fn, x$kcvfhtmp fh  where fn.fnfno=tf.tfnum and fn.fnfno=fh.htmpxfil and tf.tffnh=f
n.fnnum  and tf.tfdup!=0 and bitand(tf.tfsta, 32) <> 32  and fn.fntyp=7 and fn.fnnam is not null

0000000060DE05B8
select tf.inst_id, tf.tfnum, to_number(tf.tfcrc_scn), to_date(tf.tfcrc_tim,'MM/DD/RR HH24:MI:SS','NLS_CALENDAR=Gregorian'), tf.tftsn, t
f.tfrfn, decode(bitand(tf.tfsta, 2),0,'OFFLINE',2,'ONLINE','UNKNOWN'), decode(bitand(tf.tfsta, 12), 0,'DISABLED',4, 'READ ONLY', 12, 'R
EAD WRITE',                                                                  'UNKNOWN'), fh.fhtmpfsz*tf.tfbsz, fh.fhtmpfsz,  tf.tfcsz*t
f.tfbsz,tf.tfbsz, fn.fnnam  from x$kcctf tf, x$kccfn fn, x$kcvfhtmp fh  where fn.fnfno=tf.tfnum and fn.fnfno=fh.htmpxfil and tf.tffnh=f
n.fnnum  and tf.tfdup!=0 and bitand(tf.tfsta, 32) <> 32  and fn.fntyp=7 and fn.fnnam is not null

0000000060E8D0E8
5ca02bb59725147d425819cb5dae5f

000000008B16BCA0
c326b4aaa2bc6754ac6f4eb8edbfab4

0000000060F697C0
INSERT INTO sys.wri$_adv_actions (id, task_id, obj_id, command, msg_id, flags, attr1, attr2, attr3,attr4, attr5, attr6,num_attr1,num_at
tr2,num_attr3,num_attr4,num_attr5, exec_name) VALUES (:1,:2, :3,:4,:5,:6,:7,:8,:9,:10,' ',' ',:11,:12,:13,:14,:15, :16) RETURNING rowid
 INTO :17

0000000088DF69B8
INSERT INTO sys.wri$_adv_actions (id, task_id, obj_id, command, msg_id, flags, attr1, attr2, attr3,attr4, attr5, attr6,num_attr1,num_at
tr2,num_attr3,num_attr4,num_attr5, exec_name) VALUES (:1,:2, :3,:4,:5,:6,:7,:8,:9,:10,' ',' ',:11,:12,:13,:14,:15, :16) RETURNING rowid
 INTO :17

000000008CA0C4A0
insert into access$(d_obj#,order#,columns,types) values (:1,:2,:3,:4)

000000008B2066A8
insert into access$(d_obj#,order#,columns,types) values (:1,:2,:3,:4)

000000008CAD3188
insert into access$(d_obj#,order#,columns,types) values (:1,:2,:3,:4)

0000000060F14A40 $BUILD$
583b61d0ffaadca3

000000008B24A058 APEX_030200
WWV_FLOW_CACHE

000000008B37B308
6b3b02556e06a2bcca8df569fe83a388

000000008CB22D20
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), sum(sys_op_opnsize("INF")) from "SCOTT"."HASH_TABLE"
t

000000008B22BF90
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), sum(sys_op_opnsize("INF")) from "SCOTT"."HASH_TABLE"
t

000000008C950000
select  tab.rowid, tab.msgid, tab.corrid, tab.priority, tab.delay,   tab.expiration , tab.exception_qschema,   tab.exception_queue, tab
.chain_no, tab.local_order_no, tab.enq_time,   tab.time_manager_info, tab.state, tab.enq_tid, tab.step_no,   tab.sender_name, tab.sende
r_address, tab.sender_protocol,   tab.dequeue_msgid, tab.user_prop, tab.user_data  from "SYS"."ALERT_QT" tab  where msgid = :1

000000008C950480
select  tab.rowid, tab.msgid, tab.corrid, tab.priority, tab.delay,   tab.expiration , tab.exception_qschema,   tab.exception_queue, tab
.chain_no, tab.local_order_no, tab.enq_time,   tab.time_manager_info, tab.state, tab.enq_tid, tab.step_no,   tab.sender_name, tab.sende
r_address, tab.sender_protocol,   tab.dequeue_msgid, tab.user_prop, tab.user_data  from "SYS"."ALERT_QT" tab  where msgid = :1

00000000653E6640 $BUILD$
3f9517d14b59d4d2

000000008B052A60
SELECT COUNT(*) FROM

000000008B0A6E10
select min(minbkt),m

000000008B34A310
380b3dca8976e725312e105082d96c1b

000000008B3944D0
c1cba7c53a7d87e142d4518df5b5f8d

000000008CBD1FE0 ORACLE_OCM
MGMT_DB_LL_METRICS

0000000088F25718
SELECT TIMEGROUPING

0000000092D534C8
cb89c38ccd91d888706b2fd08a83ce18

0000000088FE5620
b4f335256ed143ca6e4c74234eba35af

0000000060CEDDA0
3896ecb5cbab5f95bf9f8891abe1a39

000000008B145108 APEX_030200
NV

0000000060FEB710
SELECT /* DS_SVC */

000000008B39FCE0 BP
HI_SETID

000000008C8B0980
570853718db3724d19daf1848001797

0000000088EB8B90
414c4b86c614a9618f40fd45a4fc7342

0000000088DBC7A8
select substrb(dump(

0000000092D5EE78
f2404ea776ae854bf1f2f29f65dfc1c2

0000000092CB1C98
SELECT T.NAME FROM S

0000000088D7B098
8db127d5752acfdc8e77ad6b434c71dc

000000008C99CD40
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B1A2DC8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060FCF038
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726)
OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) */ COUNT(C1) FROM (SELECT /*+ q
b_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."FILE$" "F#0", "SYS"."TS$" "TS#3", "SYS"."SEG$" "S#1" WHERE ("S#1"."TS
#"="TS#3"."TS#") AND ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#")) innerQuery

000000008CBCC458
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726)
OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "S#1", ("F#0"), "I_FILE#_BLOCK#", SCALE_ROWS=4.003497726) */ COUNT(C1) FROM (SELECT /*+ q
b_name("innerQuery") NO_INDEX_FFS( "S#1")  */ 1 AS C1 FROM "SYS"."FILE$" "F#0", "SYS"."TS$" "TS#3", "SYS"."SEG$" "S#1" WHERE ("S#1"."TS
#"="TS#3"."TS#") AND ("S#1"."TS#"="F#0"."TS#") AND ("S#1"."FILE#"="F#0"."RELFILE#")) innerQuery

0000000088CCE6A8
SELECT MAX(FORCE_MAT

000000008C92EDF8 SYS
WRI$_ADV_SQLT_PLANS

0000000088F53358
SELECT APPLY_USER FR

000000008B318208
SELECT FLOW_UNAVAILA

0000000060C40E50 $BUILD$
 75d1f85 9e9e87b

000000008B139C98
1a9caa64fc3f95ca9ed5ba2456c64cd1

000000008B1DF868
97c3c62e7c0ac1701e74f517b1f64f

000000008CBCE2E8
SELECT NVL(MAX(AUTO_TASKID), 0), MAX(START_TIME) FROM SYS.WRI$_SEGADV_CNTRLTAB

000000008B0C76D8
SELECT NVL(MAX(AUTO_TASKID), 0), MAX(START_TIME) FROM SYS.WRI$_SEGADV_CNTRLTAB

000000008B2948F0
SELECT NVL(MAX(AUTO_TASKID), 0), MAX(START_TIME) FROM SYS.WRI$_SEGADV_CNTRLTAB

000000008B126318
SELECT NVL(MAX(AUTO_TASKID), 0), MAX(START_TIME) FROM SYS.WRI$_SEGADV_CNTRLTAB

000000008CAF98C8
select service_name, service_name_hash,wait_class_id, wait_class#,  wait_class,total_waits, time_waited  from gv$service_wait_class whe
re inst_id = USERENV('Instance')

000000008B2FF140
select service_name, service_name_hash,wait_class_id, wait_class#,  wait_class,total_waits, time_waited  from gv$service_wait_class whe
re inst_id = USERENV('Instance')

000000008CB36788 SYS
IDL_CHAR$

000000008B0A9040
INSERT INTO RLM$DMLE

000000008B0479A0
47e4ff0811e7698bcc7779ddb6fe1778

000000008B28D148
DELETE FROM WWV_FLOW

0000000060CC0688
select /*+  no_paral

0000000088EDE8A0
e377575f1452998b722a9a8e728ff090

0000000092C9A348
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

0000000092C9A1D8
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

000000008B34BD78
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

000000008B0C3110
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

0000000088F84648
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

000000008CA0DB20
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

000000008B30F2D0
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

0000000092CA4038
SELECT decode(value,'FATAL',1,'ERROR',2,'WARNING',3,'INFORMATION',4,'INFORMATION2',5,'INFORMATION3',6,'INFORMATION4',7,'INFORMATION5',8
,'INFORMATION6',9,0) FROM sys.wri$_adv_parameters  WHERE task_id = :1 AND name = 'JOURNALING'

000000008C9F2EC0
11638621470874829993

00000000653C8780 SYS
ALL_APPLY

00000000653B3830
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 171

0000000088D3CDF8
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 171

000000008B05B9A0
DELETE FROM SYS.WRI$

000000008CB57150
/* SQL Analyze(1) */

000000008C933DF0 SYS
PRVT_ADVISOR

0000000088FD4D38
select substrb(dump(

000000008CBDCC20
delete from WRH$_SQLSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088FFA8E0
delete from WRH$_SQLSTAT_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and n
ot exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.st
art_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060F93480
select /*+  no_paral

0000000060FCC270
5dbb8f9bd44e567dd9c027c31b0b7c7f

0000000060E28880 EXFSYS
DBMS_RLMGR_UTL

000000008C946C18
select STAT_ID, STAT_NAME, VALUE from GV$SYS_TIME_MODEL  where inst_id = USERENV('Instance')

0000000088FD5408
select STAT_ID, STAT_NAME, VALUE from GV$SYS_TIME_MODEL  where inst_id = USERENV('Instance')

000000008B0558F0
SELECT B.INTCOL#, B.

000000008CADC618
SELECT USERENV('INST

000000008B1A66B8
SELECT BUTTON_NAME F

0000000088F2FC48
14a2977ca30770fdbd8cabb130d669c1

0000000092D706A8
2c444d22e330995d10af5c53b236d232

0000000060CCAF40
d1ddd68ed1edac67ce47973d6539529

000000008B1D2B58
LOCK TABLE "WRH$_FILESTATXS" PARTITION ("WRH$_FILEST_2188720451_110")  IN EXCLUSIVE MODE  NOWAIT

000000008B2C4BA0
LOCK TABLE "WRH$_FILESTATXS" PARTITION ("WRH$_FILEST_2188720451_110")  IN EXCLUSIVE MODE  NOWAIT

0000000088D3D5F8
58e8c142109e7c51f6d07ec6bd8c3902

0000000060F536A0 SYS
GV$SYS_TIME_MODEL

000000008B15B3E8 SYS
DBMS_CRYPTO

000000008B10B200
eafe294e48cbb8071e361ae98c64c641

0000000088D9DDB8
5c375eff6d4397bc47b2ef7321da09ca

0000000088DD4398
7625b8d714151fcaca41fa5c7171301

000000008B3B6388
SELECT PARTITION_NAM

000000008CBA7ED8
6455c743102e17d0cd0f0dc11a66b1

000000008CB812F8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B3FC3C8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B3535D0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 1 AS C1 FROM SYS."OBJ$" SA
MPLE BLOCK(75.2587, 8) SEED(1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

0000000088C623D8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 1 AS C1 FROM SYS."OBJ$" SA
MPLE BLOCK(75.2587, 8) SEED(1)  "O2" WHERE ("O2"."TYPE#"=88)) innerQuery

0000000088CD4B08
SELECT MAX(LAST_REFR

0000000092D3F198 EXFSYS
EXF$ATTRSET

0000000092C703D0 SYS
DBA_HIST_SNAPSHOT

0000000060F30180
/* SQL Analyze(1) */

0000000060E5B800
UPDATE SYS.AQ$_SCHED

0000000092C75508 SYS
WRH$_SESSMETRIC_HISTORY

0000000088CFFDE0
90dc8b8b9ba07deda2a43e2527a84f1

0000000088C90758
INSERT INTO WRI$_SQL

000000008CB7F4C8 SYS
DBMS_RULEADM_INTERNAL

0000000088EA8170 SYS
GV$ROWCACHE

0000000088F0CD18
ORACLE_OCM

000000008B081370
SELECT O2.NAME INDEX

0000000092C90698
SELECT COLLECTION_NA

000000008C923D28
SELECT MAX(E.NAME) K

000000008B30DA08
/* SQL Analyze(1) */

0000000092EBE110
d7e453cde05fb7216c59b5398e3917a3

0000000065389300
9763480b16379be78a41e2ab6ffc0f9c

0000000088F14298 $BUILD$
9753f06cf6d792c9

00000000652B3B30
9c4de36f9e9789751c3d2c1f338539b9

0000000065342960
SELECT COUNT(*) FROM

0000000088CAB1C8 SYS
WRI$_SQLSET_PLAN_LINES

000000008CA03FB0
4b4c69c28fc8eb47d4348615834f93c

0000000088CCF568
SELECT MAX(SNAP_ID)

0000000088DDF9F8
95965dff6dfa9d6e8cbb7cf6dd32b234

0000000088EC9F20
1f4aea65c72e75a1ea7c23ed372f2f31

000000008B255B08
select /*+  no_paral

0000000088D4B658
ac516cb5e67b706bccd6d978cb952ca

0000000088F0E4D8 $BUILD$
 ac6f4eb8edbfab4

0000000088DEB148
45c9f87ddf84fa0b66d36f527a0d369

00000000652D0BA0
777452b7c196beacde44bdfab56238b

000000008B2E1D50 APEX_030200
WWV_FLOW_RENDER_SHORTCUT

00000000653CEBF0
f714821aac59e2fbe9ff0aafbd0e9506

000000008C877F68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008CB29E68
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060DE31C8
f2d9a2d1fa49801b7c619a5a172e930

0000000088FFF370 SYS
ALL_CAPTURE

000000008B1D0398
/* SQL Analyze(1) */

000000008B36D880
update sys.scheduler$_job set  last_end_date = :1, retry_count = :2, run_count = :3, running_instance = :4, running_slave = :5, job_sta
tus = :6 where  obj# = :7

0000000088E78170
update sys.scheduler$_job set  last_end_date = :1, retry_count = :2, run_count = :3, running_instance = :4, running_slave = :5, job_sta
tus = :6 where  obj# = :7

000000008B042EB0
update sys.scheduler$_job set  last_end_date = :1, retry_count = :2, run_count = :3, running_instance = :4, running_slave = :5, job_sta
tus = :6 where  obj# = :7

000000008B0C5F48
update sys.scheduler$_job set  last_end_date = :1, retry_count = :2, run_count = :3, running_instance = :4, running_slave = :5, job_sta
tus = :6 where  obj# = :7

0000000060D6CD60
update sys.scheduler$_job set  last_end_date = :1, retry_count = :2, run_count = :3, running_instance = :4, running_slave = :5, job_sta
tus = :6 where  obj# = :7

000000008B2A8FB8
update sys.scheduler$_job set  last_end_date = :1, retry_count = :2, run_count = :3, running_instance = :4, running_slave = :5, job_sta
tus = :6 where  obj# = :7

0000000088CA2AA8
SELECT COUNT(O.ID) F

0000000092C47630 SYS
SEQ$

0000000088CCE058
SELECT SQL_FULLTEXT,

0000000060D36F08
SELECT COUNT(*) FROM

0000000088E2DDD8
delete ecol$ where tabobj# = :1

000000008C917498
delete ecol$ where tabobj# = :1

0000000060C41160
SELECT FLAGS, BITAND

0000000088DC46C8
select CONF#, NAME,

000000008CAAFF10
SELECT MAX(ID) FROM

000000008CBA1B68 SYS
X$KEHSQT

0000000088ED3020
aca4dfe5d75c6eb3e6bad01b62a6b3d

0000000060D2FA88
2b7313745935366b51e14a17e5737183

0000000088E84720
select substrb(dump(

000000008C9D0DC0
dcde638e8f2f819441810cb5ff3a34e9

000000008B1CFD48
669708df4ba128213f0d48f464ea4550

00000000653584E0
62981f278656ae9b8c5ceb6a5752453a

000000008B39EC10
4501485a7983a1e43f9517d14b59d4d2

000000008C8B62B8
1e72adecced337a334088361336bcbb3

0000000092D5CBA8 SYS
X$KCBWBPD

000000008B1EE7C8
3b23e99f4c8dbdc6f84030a5215b4fc

0000000088DFA6E8
/* SQL Analyze(1) */

000000008B049370
SELECT COUNT(*) FROM

000000008C9ED788
SELECT ITEM_NAME, WW

0000000060F67AB0
6d11d7de2049577d933d2385337fc737

000000008B262698
delete from WRH$_INTERCONNECT_PINGS_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbi
d)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap
_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B337F38
delete from WRH$_INTERCONNECT_PINGS_BL tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbi
d)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap
_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C92EBD8 SYS
XMLSEQUENCE

000000008B211298
732d1523e906e89a5839117a4fa53ef

000000008B246180
      begin          dbms_rcvman.setDatabase(upper(:dbname:dbname_i),                                  :rlgscn,
          :rlgtime,                                  :fhdbi:fhdbi_i);       end;

000000008B19CCC8
      begin          dbms_rcvman.setDatabase(upper(:dbname:dbname_i),                                  :rlgscn,
          :rlgtime,                                  :fhdbi:fhdbi_i);       end;

0000000088CA5308 SYS
WRI$_ADV_SQLT_STATISTICS

0000000060F7FEA0 $BUILD$
fc3a966b99bf0c76

000000008CB76A88
ca73681dc2b8ded3daf0c65a43128d6b

0000000088C62850
SELECT Q.OID FROM SY

000000008B32E1A8
SELECT BS.SET_STAMP

000000008B071940
SELECT H.COLNAME, H.

000000008C9FB8D8 SYS
DBMS_SMB_INTERNAL

0000000088F47048 SYS
DBMS_AW

000000008C9D0800 $BUILD$
b05690bc188d0c68

0000000060CDBC10
f5eccfff6cbea621f89b4c28215a5c35

000000008CB09E58
select /*+  no_paral

000000008B1D6FE8 $BUILD$
51e14a17e5737183

0000000088ED0170
4771acc79ea76dc16a770044a6df93a7

000000008B1250E8
2de1a286d2ef4b59117739fb1091b04f

0000000088EDDB50
select substrb(dump(

000000008C860A48
1797413f9f118a43dcc524d263115a24

000000008CB92428
insert into partcol$ (obj#, intcol#, col#, pos#, spare1, segcol#, type#, charsetform)  values (:1, :2, :3, :4, :5, :6, :7, :8)

000000008CA17BD8
insert into partcol$ (obj#, intcol#, col#, pos#, spare1, segcol#, type#, charsetform)  values (:1, :2, :3, :4, :5, :6, :7, :8)

0000000060D7C878
select substrb(dump(

0000000060F72C10 SYS
WRH$_LATCH_CHILDREN_BL

000000008B321A20
select substrb(dump(

000000008B2EB0A8
1808be9a60fa934d7da00b19661a149a

0000000065383350 SYS
X$KRSSMS

0000000092D7DAC8 SYS
X$KSLED

0000000092D309F8
SELECT ID, SOURCE, S

000000008B10CDE8
SELECT ITEM_NAME, IT

000000008B098380
INSERT INTO SYS.AUX_

0000000060FFFBE0 $BUILD$
a7c02d7dcb1b2d3c

000000008B2E8080
9faa9fdd35b1cdd759e02d8756a6d8c4

0000000060E56CC8
select externtype, externname from type$ where tvoid=:1

0000000088DF3818
select externtype, externname from type$ where tvoid=:1

000000008C9D0040
select externtype, externname from type$ where tvoid=:1

000000008CA73210
e75e9bd4c2f0ae585c92b8ddba3f9b05

00000000652AFC50
93e68bd5f62696436065a5b1b1a56b6

000000008B261788
SELECT * FROM ( SELECT 'shared pool ('||DECODE(TO_CHAR(KSMDSIDX),'0','0 - Unused',KSMDSIDX)||'):' SUBPOOL, KSMSSNAM AS NAME, ROUND(KSMS
SLEN/1024/1024,2) AS MB, ROUND(100 * KSMSSLEN/SUM(KSMSSLEN) OVER(PARTITION BY KSMDSIDX),2) AS PCT, RANK() OVER(PARTITION BY KSMDSIDX OR
DER BY KSMSSLEN DESC) AS RANK FROM X$KSMSS WHERE KSMSSLEN > 0 ) WHERE RANK < 21

0000000060CB0E40
SELECT * FROM ( SELECT 'shared pool ('||DECODE(TO_CHAR(KSMDSIDX),'0','0 - Unused',KSMDSIDX)||'):' SUBPOOL, KSMSSNAM AS NAME, ROUND(KSMS
SLEN/1024/1024,2) AS MB, ROUND(100 * KSMSSLEN/SUM(KSMSSLEN) OVER(PARTITION BY KSMDSIDX),2) AS PCT, RANK() OVER(PARTITION BY KSMDSIDX OR
DER BY KSMSSLEN DESC) AS RANK FROM X$KSMSS WHERE KSMSSLEN > 0 ) WHERE RANK < 21

000000008CBAB7A0
ed4e8a99bcc8103e70660768110b45c7

0000000060E290E0 PUBLIC
UTL_INADDR

0000000060FAAB10 SCOTT
SYS_C0011088

000000008CA7C8E0
select MUTEX_TYPE, LOCATION, SLEEPS, WAIT_TIME from GV$MUTEX_SLEEP where INST_ID = USERENV('INSTANCE')

000000008CA72C90
select MUTEX_TYPE, LOCATION, SLEEPS, WAIT_TIME from GV$MUTEX_SLEEP where INST_ID = USERENV('INSTANCE')

000000008C9E97C0
INSERT INTO EXFSYS.R

0000000088F4F4D8
4762609cb8de46b01d9c27a6ef07ae89

000000008C8B28D8 SCOTT
I_HHA

0000000088EFF7D8 APEX_030200
WWV_FLOW_BUTTON_TEMPLATES

00000000652B0F50 $BUILD$

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
38e9c591575b560b

00000000652E0830
analyze index EX. va

0000000088C6ABC0
analyze index EX. va

0000000088D4F5C8
select substrb(dump(

000000008B2FB058 $BUILD$
aa81e4bc5897c890

000000008C91FC98
SELECT A.STATUS#, A.

0000000088EC89E0
INSERT INTO EXFSYS.R

0000000060D8CB20
select substrb(dump(

000000008B27BF80
 SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
       null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
              'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'M
LSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NUL
L',               'n','NOT NULL',               NULL) col,  B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_R
OWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B,dba_tab_columns T  WH
ERE A.OWNER = B.OWNER and A.OWNER = T.OWNER    and A.TABLE_NAME = T.TABLE_NAME    AND A.TABLE_NAME = B.TABLE_NAME    AND T.COLUMN_NAME
= A.COLUMN_NAME    AND A.TABLE_NAME = upper('TEST') and

0000000060E465E8
 SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||            decode(t.DATA_PRECISION,
       null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),                   'DATE',t.DATA_TYPE,
              'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROWID',t.DATA_TYPE,                   'M
LSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t.nullable,               'N','NOT NUL
L',               'n','NOT NULL',               NULL) col,  B.NUM_ROWS,A.NUM_DISTINCT CARDINALITY,ROUND(A.NUM_DISTINCT / decode(B.NUM_R
OWS,0,1,B.NUM_ROWS) * 100, 2) SELECTIVITY,A.HISTOGRAM,A.NUM_BUCKETS   FROM DBA_TAB_COL_STATISTICS A, DBA_TABLES B,dba_tab_columns T  WH
ERE A.OWNER = B.OWNER and A.OWNER = T.OWNER    and A.TABLE_NAME = T.TABLE_NAME    AND A.TABLE_NAME = B.TABLE_NAME    AND T.COLUMN_NAME
= A.COLUMN_NAME    AND A.TABLE_NAME = upper('TEST') and

000000008CBF4270
select INST_ID,           QESMMSGANM,           decode( QESMMSGAUN, 3, (QESMMSGAVL*QESMMSGAMU)/100,                   QESMMSGAVL*QESMMS
GAMU),            decode( QESMMSGAUN, 0, 'bytes', 1, 'microseconds', 3, 'percent', '')    from   X$QESMMSGA    where  QESMMSGAVS = 1

0000000060F3B8B0
select INST_ID,           QESMMSGANM,           decode( QESMMSGAUN, 3, (QESMMSGAVL*QESMMSGAMU)/100,                   QESMMSGAVL*QESMMS
GAMU),            decode( QESMMSGAUN, 0, 'bytes', 1, 'microseconds', 3, 'percent', '')    from   X$QESMMSGA    where  QESMMSGAVS = 1

0000000088F82068
select value, flags, modified_inst, additional_info,         attr_tstamp, attr_intv from  sys.scheduler$_global_attribute where obj# =
:1

000000008C946E78
select value, flags, modified_inst, additional_info,         attr_tstamp, attr_intv from  sys.scheduler$_global_attribute where obj# =
:1

0000000088F10A48
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), count(distinct "INF"), sum(sys_op_opnsize("INF")) fro
m "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn

000000008B0EF718
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), count(distinct "INF"), sum(sys_op_opnsize("INF")) fro
m "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn

0000000092EB5680
select /*+  no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no
_substrb_pad  */count(*), count("COL"), sum(sys_op_opnsize("COL")), count("INF"), count(distinct "INF"), sum(sys_op_opnsize("INF")) fro
m "SCOTT"."HASH_TABLE" t  where TBL$OR$IDX$PART$NUM("SCOTT"."HASH_TABLE",0,4,0,"ROWID") = :objn

0000000092CF3F18 $BUILD$
cdc242889fe9fe0d

000000008C8C0CD8
select /*+  no_parallel_index(t, "I_JOB_JOB")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_
substrb_pad  no_expand index(t,"I_JOB_JOB") */ count(*) as nrw,count(distinct sys_op_lbid(289,'L',t.rowid)) as nlb,null as ndk,sys_op_c
ountchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "JOB" is not null

000000008C9788D8
select /*+  no_parallel_index(t, "I_JOB_JOB")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_
substrb_pad  no_expand index(t,"I_JOB_JOB") */ count(*) as nrw,count(distinct sys_op_lbid(289,'L',t.rowid)) as nlb,null as ndk,sys_op_c
ountchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "JOB" is not null

0000000088EC85A0
select /*+  no_parallel_index(t, "I_JOB_JOB")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_
substrb_pad  no_expand index(t,"I_JOB_JOB") */ count(*) as nrw,count(distinct sys_op_lbid(289,'L',t.rowid)) as nlb,null as ndk,sys_op_c
ountchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "JOB" is not null

000000008B34C080
select /*+  no_parallel_index(t, "I_JOB_JOB")  dbms_stats cursor_sharing_exact use_weak_name_resl dynamic_sampling(0) no_monitoring no_
substrb_pad  no_expand index(t,"I_JOB_JOB") */ count(*) as nrw,count(distinct sys_op_lbid(289,'L',t.rowid)) as nlb,null as ndk,sys_op_c
ountchg(substrb(t.rowid,1,15),1) as clf from "SYS"."JOB$" t where "JOB" is not null

0000000060F77600
DELETE FROM SYS.SCHE

000000008B3B4FB8
SELECT COUNT(*) FROM

0000000088EAA3F0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060FEA2B8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D60728 SYS
RE$TABLE_VALUE_LIST

000000008B05BC00
DELETE FROM SYS.WRI$

0000000088E0D628
ef9184f222ef9cf96df1d9c0eb9e9b82

000000008B05EEE0
SELECT COUNT(*) FROM

0000000092C42528 SYS
KU$_SUBMITRESULTS

000000008C910870
select /*+  no_paral

000000008B38F4F0
SELECT COUNT(*) FROM

000000008B058F70
SELECT * FROM V$PQ_S

0000000088EBCE70
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_tab_history          where savtime < :1 and rownum <= NVL(:2, rownum)

000000008B1B1D40
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_tab_history          where savtime < :1 and rownum <= NVL(:2, rownum)

000000008B3386C8
delete /*+ dynamic_sampling(4) */ from sys.wri$_optstat_tab_history          where savtime < :1 and rownum <= NVL(:2, rownum)

0000000060D8C828
1d029fd8290843508140fc1f79187f

000000008B32EA18
SELECT ERROR_MESSAGE

000000008B2DA880
56fbc44b96619c14a3fc42f0ff3866d8

000000008B1BC590 PUBLIC
DBMS_OUTPUTEPUT_LINE

000000008B0BE250
d5dd4537b1a6318a62005c2ccbccde3

0000000060C776B0
delete from WRH$_RSRC_PLAN tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and no
t exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.sta
rt_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CBC2EC8
delete from WRH$_RSRC_PLAN tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and no
t exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.sta
rt_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092D1CD38
delete from WRH$_SYSMETRIC_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088FFD1E0
delete from WRH$_SYSMETRIC_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B05EC20
SELECT COUNT(*) FROM

000000008C9A7110
SELECT /*+ leading(u op icp isp) use_hash(isp) */ OSP.OBJ# SPOBJN, ISP.SUBPART# SPN, OSP.SUBNAME SPNAME, ISP.ANALYZETIME LAST_ANALYZED,
 ICP.PART# PN, OP.SUBNAME PNAME, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ OP, SYS.INDCOMPART$ ICP, SYS.INDSUBPART$ ISP, SYS.OBJ$ OSP WHERE
 :B3 IS NULL AND U.NAME = :B2 AND OP.OWNER# = U.USER# AND OP.NAME = :B1 AND OP.NAMESPACE = 4 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME
 IS NULL AND OP.TYPE# = 20 AND OP.OBJ# = ICP.OBJ# AND OP.OBJ# = ISP.POBJ# AND OSP.OBJ# = ISP.OBJ# UNION ALL SELECT /*+ leading(u op icp
 isp)                    use_nl_with_index(isp) */ OSP.OBJ# SPOBJN, ISP.SUBPART# SPN, OSP.SUBNAME SPNAME, ISP.ANALYZETIME LAST_ANALYZED
, ICP.PART# PN, OP.SUBNAME PNAME, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ OP, SYS.INDCOMPART$ ICP, SYS.INDSUBPART$ ISP, SYS.OBJ$ OSP WHER
E U.NAME = :B2 AND OP.OWNER# = U.USER# AND OP.NAME = :B1 AND OP.NAMESPACE = 4 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME IS NULL AND OP
.SUBNAME = :B3 AND OP.OBJ# = ICP.OBJ# AND OP.OBJ# = ISP

000000008B04DFA0
SELECT /*+ leading(u op icp isp) use_hash(isp) */ OSP.OBJ# SPOBJN, ISP.SUBPART# SPN, OSP.SUBNAME SPNAME, ISP.ANALYZETIME LAST_ANALYZED,
 ICP.PART# PN, OP.SUBNAME PNAME, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ OP, SYS.INDCOMPART$ ICP, SYS.INDSUBPART$ ISP, SYS.OBJ$ OSP WHERE
 :B3 IS NULL AND U.NAME = :B2 AND OP.OWNER# = U.USER# AND OP.NAME = :B1 AND OP.NAMESPACE = 4 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME
 IS NULL AND OP.TYPE# = 20 AND OP.OBJ# = ICP.OBJ# AND OP.OBJ# = ISP.POBJ# AND OSP.OBJ# = ISP.OBJ# UNION ALL SELECT /*+ leading(u op icp
 isp)                    use_nl_with_index(isp) */ OSP.OBJ# SPOBJN, ISP.SUBPART# SPN, OSP.SUBNAME SPNAME, ISP.ANALYZETIME LAST_ANALYZED
, ICP.PART# PN, OP.SUBNAME PNAME, :B4 REASON FROM SYS.USER$ U, SYS.OBJ$ OP, SYS.INDCOMPART$ ICP, SYS.INDSUBPART$ ISP, SYS.OBJ$ OSP WHER
E U.NAME = :B2 AND OP.OWNER# = U.USER# AND OP.NAME = :B1 AND OP.NAMESPACE = 4 AND OP.REMOTEOWNER IS NULL AND OP.LINKNAME IS NULL AND OP
.SUBNAME = :B3 AND OP.OBJ# = ICP.OBJ# AND OP.OBJ# = ISP

000000008B2DC060
declare     v_cnt number;      cursor c_tbs is SELECT a.tablespace_name,        lpad(round((total-free) / maxsize * 100, 1) || '%',9) a
s used_pct,        rpad(lpad('#',ceil((nvl(total-free,0)/b.maxsize)*20),'#'),20,' ') as used,        b.autoextensible,        round(tot
al/1024,1) as TOTAL_GB,        round((total - free)/1024,1) as USED_GB,        round(free/1024,1) as FREE_GB,        b.cnt DATAFILE_COU
NT,        c.status,        c.CONTENTS,        c.extent_management,        c.allocation_type,        b.maxsize FROM   (SELECT tablespac
e_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) free         FROM   dba_free_space         GROUP BY tablespace_name) a,
      (SELECT tablespace_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) total,                count(*)
           cnt,                max(autoextensible)                  autoextensible,                sum(decode(autoextensible, 'YES', fl
oor(maxbytes/1048576), floor(bytes / 1048576 ))) maxsiz

00000000652D7240
declare     v_cnt number;      cursor c_tbs is SELECT a.tablespace_name,        lpad(round((total-free) / maxsize * 100, 1) || '%',9) a
s used_pct,        rpad(lpad('#',ceil((nvl(total-free,0)/b.maxsize)*20),'#'),20,' ') as used,        b.autoextensible,        round(tot
al/1024,1) as TOTAL_GB,        round((total - free)/1024,1) as USED_GB,        round(free/1024,1) as FREE_GB,        b.cnt DATAFILE_COU
NT,        c.status,        c.CONTENTS,        c.extent_management,        c.allocation_type,        b.maxsize FROM   (SELECT tablespac
e_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) free         FROM   dba_free_space         GROUP BY tablespace_name) a,
      (SELECT tablespace_name,                round(SUM(bytes) / ( 1024 * 1024 ), 1) total,                count(*)
           cnt,                max(autoextensible)                  autoextensible,                sum(decode(autoextensible, 'YES', fl
oor(maxbytes/1048576), floor(bytes / 1048576 ))) maxsiz

000000008B1299C8
16ab482bb5df9ed1cda4a9d084a2118

000000008B331C98
69a71095f0b24abc1ffd3a1fa391b9e

0000000060E413B0
b2a66f0b447c610281e2c364828e1be

000000008CAB1A10
ea42a515cabbc63619dee19715adf241

000000008CB835E8
16474294927597465258

000000008C967220
SELECT DIRECTORY_PAT

000000008B3FA398
2598f42a8495b075f0477f4331ebe58e

0000000060F3C7C0
SELECT A.TABLESPACE_NAME, LPAD(ROUND((TOTAL-FREE) / MAXSIZE * 100, 1) || '%',9) AS USED_PCT, RPAD(LPAD('#',CEIL((NVL(TOTAL-FREE,0)/B.MA
XSIZE)*20),'#'),20,' ') AS USED, B.AUTOEXTENSIBLE, ROUND(TOTAL/1024,1) AS TOTAL_GB, ROUND((TOTAL - FREE)/1024,1) AS USED_GB, ROUND(FREE
/1024,1) AS FREE_GB, B.CNT DATAFILE_COUNT, C.STATUS, C.CONTENTS, C.EXTENT_MANAGEMENT, C.ALLOCATION_TYPE, B.MAXSIZE FROM (SELECT TABLESP
ACE_NAME, ROUND(SUM(BYTES) / ( 1024 * 1024 ), 1) FREE FROM DBA_FREE_SPACE GROUP BY TABLESPACE_NAME) A, (SELECT TABLESPACE_NAME, ROUND(S
UM(BYTES) / ( 1024 * 1024 ), 1) TOTAL, COUNT(*) CNT, MAX(AUTOEXTENSIBLE) AUTOEXTENSIBLE, SUM(DECODE(AUTOEXTENSIBLE, 'YES', FLOOR(MAXBYT
ES/1048576), FLOOR(BYTES / 1048576 ))) MAXSIZE FROM DBA_DATA_FILES GROUP BY TABLESPACE_NAME) B, DBA_TABLESPACES C WHERE A.TABLESPACE_NA
ME = B.TABLESPACE_NAME AND A.TABLESPACE_NAME = C.TABLESPACE_NAME UNION ALL SELECT /*+ NO_MERGE */ A.TABLESPACE_NAME, LPAD(ROUND(100 * (
B.TOT_USED_MB / A.MAXSIZE ),1) || '%',9) AS USED_PCT, R

0000000092C98F78
SELECT A.TABLESPACE_NAME, LPAD(ROUND((TOTAL-FREE) / MAXSIZE * 100, 1) || '%',9) AS USED_PCT, RPAD(LPAD('#',CEIL((NVL(TOTAL-FREE,0)/B.MA
XSIZE)*20),'#'),20,' ') AS USED, B.AUTOEXTENSIBLE, ROUND(TOTAL/1024,1) AS TOTAL_GB, ROUND((TOTAL - FREE)/1024,1) AS USED_GB, ROUND(FREE
/1024,1) AS FREE_GB, B.CNT DATAFILE_COUNT, C.STATUS, C.CONTENTS, C.EXTENT_MANAGEMENT, C.ALLOCATION_TYPE, B.MAXSIZE FROM (SELECT TABLESP
ACE_NAME, ROUND(SUM(BYTES) / ( 1024 * 1024 ), 1) FREE FROM DBA_FREE_SPACE GROUP BY TABLESPACE_NAME) A, (SELECT TABLESPACE_NAME, ROUND(S
UM(BYTES) / ( 1024 * 1024 ), 1) TOTAL, COUNT(*) CNT, MAX(AUTOEXTENSIBLE) AUTOEXTENSIBLE, SUM(DECODE(AUTOEXTENSIBLE, 'YES', FLOOR(MAXBYT
ES/1048576), FLOOR(BYTES / 1048576 ))) MAXSIZE FROM DBA_DATA_FILES GROUP BY TABLESPACE_NAME) B, DBA_TABLESPACES C WHERE A.TABLESPACE_NA
ME = B.TABLESPACE_NAME AND A.TABLESPACE_NAME = C.TABLESPACE_NAME UNION ALL SELECT /*+ NO_MERGE */ A.TABLESPACE_NAME, LPAD(ROUND(100 * (
B.TOT_USED_MB / A.MAXSIZE ),1) || '%',9) AS USED_PCT, R

0000000060C6F0C0
SELECT A.TABLESPACE_NAME, LPAD(ROUND((TOTAL-FREE) / MAXSIZE * 100, 1) || '%',9) AS USED_PCT, RPAD(LPAD('#',CEIL((NVL(TOTAL-FREE,0)/B.MA
XSIZE)*20),'#'),20,' ') AS USED, B.AUTOEXTENSIBLE, ROUND(TOTAL/1024,1) AS TOTAL_GB, ROUND((TOTAL - FREE)/1024,1) AS USED_GB, ROUND(FREE
/1024,1) AS FREE_GB, B.CNT DATAFILE_COUNT, C.STATUS, C.CONTENTS, C.EXTENT_MANAGEMENT, C.ALLOCATION_TYPE, B.MAXSIZE FROM (SELECT TABLESP
ACE_NAME, ROUND(SUM(BYTES) / ( 1024 * 1024 ), 1) FREE FROM DBA_FREE_SPACE GROUP BY TABLESPACE_NAME) A, (SELECT TABLESPACE_NAME, ROUND(S
UM(BYTES) / ( 1024 * 1024 ), 1) TOTAL, COUNT(*) CNT, MAX(AUTOEXTENSIBLE) AUTOEXTENSIBLE, SUM(DECODE(AUTOEXTENSIBLE, 'YES', FLOOR(MAXBYT
ES/1048576), FLOOR(BYTES / 1048576 ))) MAXSIZE FROM DBA_DATA_FILES GROUP BY TABLESPACE_NAME) B, DBA_TABLESPACES C WHERE A.TABLESPACE_NA
ME = B.TABLESPACE_NAME AND A.TABLESPACE_NAME = C.TABLESPACE_NAME UNION ALL SELECT /*+ NO_MERGE */ A.TABLESPACE_NAME, LPAD(ROUND(100 * (
B.TOT_USED_MB / A.MAXSIZE ),1) || '%',9) AS USED_PCT, R

0000000060E28710
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.TABPART$ T WHERE T.OBJ# = :B1 UNION ALL SELECT T.FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ#
= :B1 )

0000000088D81918
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.TABPART$ T WHERE T.OBJ# = :B1 UNION ALL SELECT T.FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ#
= :B1 )

0000000060E7E730
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.TABPART$ T WHERE T.OBJ# = :B1 UNION ALL SELECT T.FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ#
= :B1 )

000000008B05FA20
SELECT FLAGS FROM ( SELECT T.FLAGS FROM SYS.TABPART$ T WHERE T.OBJ# = :B1 UNION ALL SELECT T.FLAGS FROM SYS.TABCOMPART$ T WHERE T.OBJ#
= :B1 )

0000000088CEB858
SELECT VALUE(P) FROM

000000008C955730
DELETE FROM BSLN_STA

000000008B3F5F68 SYS
WRH$_IOSTAT_DETAIL

000000008C8603F8
1d5d9a03132ddbfdf651c7def1eb1b83

000000006530E9C8
df62b0e7a56a3c40411200a38eb85bed

0000000088DB8558
f5eccfff6cbea621f89b4c28215a5c35

000000008C8650A8
SELECT VALUE FROM SY

000000008CA76768
85902826cb2afe9b9cb9f81920b6af27

000000008B377B10
update sys.scheduler$_window set  next_start_date = :1, flags = :2, last_start_date = :3, manual_open_time = :4, manual_duration = :5 w
here  obj# = :6

000000008B1125B8
update sys.scheduler$_window set  next_start_date = :1, flags = :2, last_start_date = :3, manual_open_time = :4, manual_duration = :5 w
here  obj# = :6

00000000653C1D30 SYS
CDC_CREATE_CTABLE_AFTER

000000008C84AA30
UPDATE SYS.STREAMS$_

000000008C91A178
SELECT OBJECT_TYPE_I

000000008C9329F8 SYS
DBMS_KEA_LIB

0000000060C37180
/* SQL Analyze(1) */

0000000092EB3CD8
SELECT PRIM_ASETNM F

0000000060EC2A00 $BUILD$
bd392b61fec26964

000000008B25A018
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060E249A0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F10990
delete from WRH$_SQL_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CAB7D00
delete from WRH$_SQL_SUMMARY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.s
tart_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C913208
INSERT INTO WRI$_ADV

000000008C918498
SELECT STATUS# FROM

000000008C9FD9A8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("F#0", "S#1", "SO#2", "O#4"), "I_TS#", SCALE_RO
WS=0.03367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4", "U#5"), "I_TS#", SCALE_ROWS=0.0440752075
1) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("F#0", "S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"inne
rQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4"), "I_TS#", SCALE_ROWS=0.03367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FIL
TER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("S#1", "SO#2", "
TS#3", "O#4"), "I_USER#", SCALE_ROWS=0.03367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("F#0", "S#1", "SO#2", "O#4"),
 "I_USER#", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"in

00000000653D6FF0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("F#0", "S#1", "SO#2", "O#4"), "I_TS#", SCALE_RO
WS=0.03367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4", "U#5"), "I_TS#", SCALE_ROWS=0.0440752075
1) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "TS#3", ("F#0", "S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"inne
rQuery", NLJ_INDEX_FILTER, "TS#3", ("S#1", "SO#2", "O#4"), "I_TS#", SCALE_ROWS=0.03367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FIL
TER, "TS#3", ("S#1", "SO#2"), "I_TS#", SCALE_ROWS=0.02110233079) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("S#1", "SO#2", "
TS#3", "O#4"), "I_USER#", SCALE_ROWS=0.03367951986) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("F#0", "S#1", "SO#2", "O#4"),
 "I_USER#", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"in

000000008B1678C0 SYS
V$RESOURCE_LIMIT

0000000065336AE0
f896b5b8dca1ace45a0323d778301d6d

000000008B3B5798
SELECT USER, UID FRO

0000000060F2B260
91c35f96611df08137814241d1478e4f

0000000088DFF7D8
SELECT BDF.FILE# DFN

0000000060DB7CD8
4769ddb6121bd637252e2ea6fc5bcbcf

0000000060D45DB8
6a16eb53e1982ae084e1bf202d6174e

0000000060DCE238 B
NUM_NULLS

0000000088DD26C8 SYS
DBA_SCHEDULER_JOB_RUN_DETAILS

0000000088DB66A8
delete from WRH$_PERSISTENT_SUBSCRIBERS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060CD2590
delete from WRH$_PERSISTENT_SUBSCRIBERS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :db
id)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.sna
p_id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088F9BD48
dc7644f86357a057b03743936b5c00f8

0000000060F48C00
SELECT INSTANCE_NAME

000000008B332AD0 $BUILD$
2e383a57f63f3f2a

000000008C92CED8
SELECT COUNT(*) FROM

0000000060F26960
dd3de12c4b04f4c7bfe19eb0fc3a54b

000000008CA2DA60
SELECT BEGIN_TIME, E

0000000088FCFEC8 SYS
GV$LATCH_CHILDREN

000000008B35A4C8
a55bd1442d793113b16167bccfbca107

000000008B3E6790 PUBLIC
DBMS_OBFUSCATION_TOOLKIT

000000008CAB4D10 MDSYS
SYS

0000000088FE3300 $BUILD$
5b3fe1a819ac9e7d

0000000060D873C8
f79d226eb7519e8b0f1851b5ad34075

0000000060E95ED0
select substrb(dump(

0000000060D86DC8
1d4a51a2c89ab6b07a3c64bebc5573b6

0000000088FE4070
SELECT T.TASK_ID FROM SYS.DBA_ADVISOR_TASKS T, WRI$_ADV_PARAMETERS P WHERE T.TASK_ID = P.TASK_ID AND T.STATUS# <> :B2 AND T.READ_ONLY =
 'FALSE' AND P.NAME = 'DAYS_TO_EXPIRE' AND PRVT_ADVISOR.CHECK_EXPIRATION_COMP(:B1 , T.LAST_MODIFIED, P.VALUE) = 1

000000008C916138
SELECT T.TASK_ID FROM SYS.DBA_ADVISOR_TASKS T, WRI$_ADV_PARAMETERS P WHERE T.TASK_ID = P.TASK_ID AND T.STATUS# <> :B2 AND T.READ_ONLY =
 'FALSE' AND P.NAME = 'DAYS_TO_EXPIRE' AND PRVT_ADVISOR.CHECK_EXPIRATION_COMP(:B1 , T.LAST_MODIFIED, P.VALUE) = 1

000000008CB87AC8
select substrb(dump(

000000008B374258
1c4a17954ac0b4e5db3a9e16971aba0

000000008B28F5C8
1de34d29182c04c6505c9a5a7fd90d

0000000088D845E0
/* SQL Analyze(1) */

0000000092C494A0
b7f56ddaa5380ec31871c7252a37d3c9

0000000088EE4730
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

00000000653D63B8
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088CB5498
660ba4c68c7f422acb5b9f84dd22a98d

000000008B03F5C8
31cd3f94a3f75139558d810b5ce7b77e

0000000060F23E90
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088F301C0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092CF5670
3b642487a7c95796c43e978766a26558

000000008B088BA0
SELECT /*+ rule */ T

0000000088C98B88
SELECT XMLELEMENT( "

000000008C91BF88
UPDATE SYS.WRI$_ADV_

0000000060EC4848
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000060F4D868
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000092D62670
select substrb(dump(

000000008B373848
select j.obj# from sys.scheduler$_job j    where j.schedule_id = :1 and      bitand(j.flags, 524288) = 524288 and      bitand(j.flags,
33554432) = 0 and      bitand(j.job_status, 2) = 2

0000000092C64B80
select j.obj# from sys.scheduler$_job j    where j.schedule_id = :1 and      bitand(j.flags, 524288) = 524288 and      bitand(j.flags,
33554432) = 0 and      bitand(j.job_status, 2) = 2

0000000060D55FD8
select flags, schema, name from system.aq$_queue_tables where objno = :1

0000000060D56458
select flags, schema, name from system.aq$_queue_tables where objno = :1

000000008CAD4C40
18369123656701261055

0000000092D1C448
select /*+  no_paral

000000008CBE4E88 SYS
REFCON$

000000008B0DED68
e7e04a13b7fb7ff764c8ab84c22c7d28

0000000088F79958
SELECT MAX(AL.NEXT_C

000000008B1E85C8
/* SQL Analyze(1) */

000000008CBD70D0
fdc71cf78fbb1fff1f0fa6117575bf15

000000008B04C940
SELECT /*+ leading(s

0000000088D51518 SYS
X$KSMFS

000000008CB8A6F8
SELECT /*+ ALL_ROWS */ COUNT(*) FROM DBA_POLICIES V WHERE V.OBJECT_OWNER = :B3 AND V.OBJECT_NAME = :B2 AND (V.POLICY_NAME LIKE '%xdbrls
%' OR V.POLICY_NAME LIKE '%$xd_%') AND V.FUNCTION = :B1

0000000088DD2F48
SELECT /*+ ALL_ROWS */ COUNT(*) FROM DBA_POLICIES V WHERE V.OBJECT_OWNER = :B3 AND V.OBJECT_NAME = :B2 AND (V.POLICY_NAME LIKE '%xdbrls
%' OR V.POLICY_NAME LIKE '%$xd_%') AND V.FUNCTION = :B1

000000008C8BF548
SELECT COUNT(*), MAX

0000000060E94540
SELECT COUNT(*) FROM

0000000060F2A7B0
delete from WRH$_DATAFILE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3D69B8
delete from WRH$_DATAFILE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and not
 exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.star
t_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060F5A450
select substrb(dump(

0000000088D2DE98
354849b898022c6fad8764811ebac951

000000008CB8F158
SELECT PROCESS_SQL_C

0000000088EEFD00 SYS
GV$WAITSTAT

0000000088D87EB8 SCOTT
EMP

0000000088C73648
/* SQL Analyze(1) */

000000008CADDC18 SYS
TABPARTV$

000000008B165D30
b05e67c3d1cedcd7f0019112b19bf1c

0000000088FE8B10
3137e563c404483db86fdf4adfebc162

0000000092C6F430
delete from compression$ where obj#=:1

0000000088D4D468
delete from compression$ where obj#=:1

000000008C867E78 SYS
X$KMCQS

0000000088F51708
select substrb(dump(

0000000088C56B58
select min(minbkt),m

0000000088F867C8 $BUILD$
 c9fd0afad15eee7

000000008CBE26F0
select intcol#,type,flags,lobcol,objcol,extracol,schemaoid,  elemnum from opqtype$ where obj# = :1 order by intcol# asc

0000000088D088B8
select intcol#,type,flags,lobcol,objcol,extracol,schemaoid,  elemnum from opqtype$ where obj# = :1 order by intcol# asc

0000000088C698B0
select intcol#,type,flags,lobcol,objcol,extracol,schemaoid,  elemnum from opqtype$ where obj# = :1 order by intcol# asc

0000000088D66220
select intcol#,type,flags,lobcol,objcol,extracol,schemaoid,  elemnum from opqtype$ where obj# = :1 order by intcol# asc

000000008CBE2B70
select intcol#,type,flags,lobcol,objcol,extracol,schemaoid,  elemnum from opqtype$ where obj# = :1 order by intcol# asc

000000008B1D56A8 SYS
DBA_HIST_PLAN_OPTION_NAME

0000000088F95798
SELECT REGEXP_SUBSTR(ADDITIONAL_INFO,'CHAIN_LOG_ID="[0-9]+"') FROM SYS.SCHEDULER$_EVENT_LOG E, SYS.SCHEDULER$_CLASS C WHERE E.TYPE# = 6
6 AND E.CLASS_ID = C.OBJ#(+) AND OPERATION IN ('CHAIN_RUN','CHAIN_RETRY_RUN') AND E.LOG_DATE < :B2 - NUMTODSINTERVAL(NVL(C.LOG_HISTORY,
 :B1 ), 'DAY') AND INSTR(E.NAME,'"')=0

000000008B20C688
SELECT REGEXP_SUBSTR(ADDITIONAL_INFO,'CHAIN_LOG_ID="[0-9]+"') FROM SYS.SCHEDULER$_EVENT_LOG E, SYS.SCHEDULER$_CLASS C WHERE E.TYPE# = 6
6 AND E.CLASS_ID = C.OBJ#(+) AND OPERATION IN ('CHAIN_RUN','CHAIN_RETRY_RUN') AND E.LOG_DATE < :B2 - NUMTODSINTERVAL(NVL(C.LOG_HISTORY,
 :B1 ), 'DAY') AND INSTR(E.NAME,'"')=0

000000008C8AE380
select kcbwbpd.inst_id, kcbwbpd.bp_id, kcbwbpd.bp_name, kcbwbpd.bp_blksz, sum(kcbwds.cnum_set),sum(kcbwds.cnum_repl), sum(kcbwds.cnum_w
rite), sum(kcbwds.cnum_set), sum(kcbwds.buf_got), sum(kcbwds.sum_wrt), sum(kcbwds.sum_scn), sum(kcbwds.fbwait), sum(kcbwds.wcwait), sum
(kcbwds.bbwait), sum(kcbwds.fbinsp), sum(kcbwds.dbinsp), sum(kcbwds.dbbchg), sum(kcbwds.dbbget), sum(kcbwds.conget), sum(kcbwds.pread),
 sum(kcbwds.pwrite) from x$kcbwds kcbwds, x$kcbwbpd kcbwbpd where kcbwds.set_id >= kcbwbpd.bp_lo_sid and kcbwds.set_id <= kcbwbpd.bp_hi
_sid and kcbwbpd.bp_size != 0 group by kcbwbpd.inst_id, kcbwbpd.bp_id, kcbwbpd.bp_name, kcbwbpd.bp_blksz

0000000060F5CE60
select kcbwbpd.inst_id, kcbwbpd.bp_id, kcbwbpd.bp_name, kcbwbpd.bp_blksz, sum(kcbwds.cnum_set),sum(kcbwds.cnum_repl), sum(kcbwds.cnum_w
rite), sum(kcbwds.cnum_set), sum(kcbwds.buf_got), sum(kcbwds.sum_wrt), sum(kcbwds.sum_scn), sum(kcbwds.fbwait), sum(kcbwds.wcwait), sum
(kcbwds.bbwait), sum(kcbwds.fbinsp), sum(kcbwds.dbinsp), sum(kcbwds.dbbchg), sum(kcbwds.dbbget), sum(kcbwds.conget), sum(kcbwds.pread),
 sum(kcbwds.pwrite) from x$kcbwds kcbwds, x$kcbwbpd kcbwbpd where kcbwds.set_id >= kcbwbpd.bp_lo_sid and kcbwds.set_id <= kcbwbpd.bp_hi
_sid and kcbwbpd.bp_size != 0 group by kcbwbpd.inst_id, kcbwbpd.bp_id, kcbwbpd.bp_name, kcbwbpd.bp_blksz

0000000092D7A5C8
b8219ddd274c27e82765ea06f6a7ebaf

0000000088E1EC88 $BUILD$
bc6d4328 645218c

000000008CBC20C8
59879fe723b04ddac237574cb8678bf0

000000008CA09410
f8045bb6e2dd8d1569db74cdd3ecd1ea

000000008B3A9508 SYS
DBMS_SQLTUNE

000000008B05A640
INSERT INTO SYS.WRI$

0000000060F298B0
SELECT SYS.SCHEDULER

0000000088C550E8
SELECT ERROR_MESSAGE

000000008B0825A0
SELECT S1.VALUE - S2

0000000088DAE428
SELECT T.NAME, Q.PRO

0000000060F5D3E0
ea869ce79cded5b6ae49174ec9706c0

0000000088F35DF8
b53b543b6a65d6b141df4a8cf9b4bb58

0000000088EF4F78 SYS
USER_ASTATUS_MAP

000000008B3FF018
select /*+  no_paral

000000008CB0A478
a5d0689f23e4d1dacadc3ef7eae9704a

000000008CAA2760 SYS
DBMS_ASSERT

0000000088E954A0 SYS
V$RSRC_CONS_GROUP_HISTORY

0000000060EDBFB0
3e6f8daa53bf03807cb0ba464739fdee

000000008B14FC18 SYS
DBA_ADVISOR_RATIONALE

000000008B085950
SELECT SUM(KCFIOSBR)

0000000088CAB4E8
SELECT /*+first_rows

000000008B039278
select /*+  no_paral

0000000088FD09B8
1a80689c518b9cc77ffae30771372c4

0000000088E82830
96c2e326211991c82ed11ee835f395d3

0000000060EA6528
SELECT ROWID, ACTSCHAT, RSET_OWNER, RSET_NAME, RSETPROC, SYS_OP_TOSETID(RSETINCRRS) FROM RLM$SCHACTLIST FUS WHERE FUS.ROWID = (SELECT M
IN(ROWID) KEEP (DENSE_RANK FIRST ORDER BY ACTSCHAT, ROWID) FROM RLM$SCHACTLIST WHERE ACTSCHAT IS NOT NULL) FOR UPDATE NOWAIT

000000008B2ECB38
SELECT ROWID, ACTSCHAT, RSET_OWNER, RSET_NAME, RSETPROC, SYS_OP_TOSETID(RSETINCRRS) FROM RLM$SCHACTLIST FUS WHERE FUS.ROWID = (SELECT M
IN(ROWID) KEEP (DENSE_RANK FIRST ORDER BY ACTSCHAT, ROWID) FROM RLM$SCHACTLIST WHERE ACTSCHAT IS NOT NULL) FOR UPDATE NOWAIT

0000000060EDCA40 SYS
AQ$_SRVNTFN_MESSAGE

0000000088C8AC68
UPDATE WRI$_SQLSET_P

000000008CA32DF8 SYS
PURGE_LOG

000000008B2E07E0
/* SQL Analyze(1) */

0000000088D520C8
select substrb(dump(

000000008CA825F8
select node,owner,name from syn$ where obj#=:1

0000000088D70C10
select node,owner,name from syn$ where obj#=:1

0000000088CBBF70
select node,owner,name from syn$ where obj#=:1

0000000092CA7C28
select node,owner,name from syn$ where obj#=:1

000000008CA7CA60
select node,owner,name from syn$ where obj#=:1

000000008CA82A78
select node,owner,name from syn$ where obj#=:1

000000008C867D08
select f.file#, f.block#, f.ts#, f.length from fet$ f, ts$ t where t.ts#=f.ts# and t.dflextpct!=0 and t.bitmapped=0

000000008B15BE38
select f.file#, f.block#, f.ts#, f.length from fet$ f, ts$ t where t.ts#=f.ts# and t.dflextpct!=0 and t.bitmapped=0

000000008C868188
select f.file#, f.block#, f.ts#, f.length from fet$ f, ts$ t where t.ts#=f.ts# and t.dflextpct!=0 and t.bitmapped=0

000000008C8C21B8
select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(bh.class,1,'data block',2
,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'extent map',
8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index block',13,'file header block
',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',                18,'undo block'
) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tch,         decode(mod(fl
ag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.data_object_id and     o
.data_object_id in         (select data_object_id           from dba_objects          where object_name = :table_name and owner = :owne
r         )) group by block_class, object_type, dba_obj

000000008B289668
select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(bh.class,1,'data block',2
,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'extent map',
8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index block',13,'file header block
',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',                18,'undo block'
) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tch,         decode(mod(fl
ag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.data_object_id and     o
.data_object_id in         (select data_object_id           from dba_objects          where object_name = :table_name and owner = :owne
r         )) group by block_class, object_type, dba_obj

00000000652C82D0
select block_class, object_type, dba_object, tch, dirty, count(*) from (select  /*+ ORDERED */         decode(bh.class,1,'data block',2
,'sort block',3,'save undo block',                4,'segment header',5,'save undo header',6,'free list',7,'extent map',
8,'1st level bmb',9,'2nd level bmb',10,'3rd level bmb', 11,'bitmap block',                12,'bitmap index block',13,'file header block
',14,'unused',                15,'system undo header',16,'system undo block', 17,'undo header',                18,'undo block'
) block_class,         o.object_type,         o.owner||'.'||o.object_name             dba_object,         bh.tch,         decode(mod(fl
ag, 2), 1, 'Y', 'N') dirty from         x$bh            bh,         dba_objects     o where         bh.obj = o.data_object_id and     o
.data_object_id in         (select data_object_id           from dba_objects          where object_name = :table_name and owner = :owne
r         )) group by block_class, object_type, dba_obj

0000000060C9E260 $BUILD$
5cb7f7d57b049466

000000008C92E578 SYS
WRI$_ADV_SEQ_EXEC

000000008CA6ABC0
4eb07448aafb261a81b2c155a3c2be6f

000000008CAA8698 SYS
GV$SHARED_POOL_ADVICE

0000000092C5FEA8
db6eb94c3b88c0b2d8dbb9b42b5153

000000008CAD3448
SELECT PRIOR_RESETLO

0000000092D4BC80
delete /*+ UNNEST(@SEL$2)             UNNEST(@SEL$1)             LEADING(@SEL$690D83E6 TAB@DEL$1 REFC@SEL$1 B@SEL$2)             USE_NL
(@SEL$690D83E6 REFC@SEL$1)             INDEX(@SEL$690D83E6 REFC@SEL$1                     (WRI$_SQLTEXT_REFCOUNT.DBID
    WRI$_SQLTEXT_REFCOUNT.SQL_ID))        */   from   wrh$_sqltext tab  where  tab.dbid = :dbid         and :beg_snap <= tab.snap_id
      and tab.snap_id <= :end_snap         and not exists (select 1                         from   wri$_sqltext_refcount refc
               where  refc.dbid = tab.dbid and                                refc.sql_id = tab.sql_id and
   refc.ref_count > 0)         and not exists (select 1                         from   WRM$_BASELINE b                         where  b
.dbid = :dbid2 and                                tab.snap_id >= b.start_snap_id and                                tab.snap_id <= b.en
d_snap_id)

0000000088D5DFD8
delete /*+ UNNEST(@SEL$2)             UNNEST(@SEL$1)             LEADING(@SEL$690D83E6 TAB@DEL$1 REFC@SEL$1 B@SEL$2)             USE_NL
(@SEL$690D83E6 REFC@SEL$1)             INDEX(@SEL$690D83E6 REFC@SEL$1                     (WRI$_SQLTEXT_REFCOUNT.DBID
    WRI$_SQLTEXT_REFCOUNT.SQL_ID))        */   from   wrh$_sqltext tab  where  tab.dbid = :dbid         and :beg_snap <= tab.snap_id
      and tab.snap_id <= :end_snap         and not exists (select 1                         from   wri$_sqltext_refcount refc
               where  refc.dbid = tab.dbid and                                refc.sql_id = tab.sql_id and
   refc.ref_count > 0)         and not exists (select 1                         from   WRM$_BASELINE b                         where  b
.dbid = :dbid2 and                                tab.snap_id >= b.start_snap_id and                                tab.snap_id <= b.en
d_snap_id)

000000008CA4A730 SYS
OBJECT_GRANT

000000006535C3E0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."TS$"
 "TS#3", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="U
N#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE
2 UNDO') LIKE 'TABLE%') AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

0000000088C43B08
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "UN#2")  */ 1 AS C1 FROM "SYS"."TS$"
 "TS#3", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AND ("S#1"."BLOCK#"="U
N#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1,'ROLLBACK',10,'TYPE
2 UNDO') LIKE 'TABLE%') AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

000000008B396FA8
LOCK TABLE "SYS"."OR

0000000092D50488
UPDATE WRI$_ADV_ADDM

000000008CB1F3A8
51a119a06c3154a92862da7238c5ae4e

0000000060FE0408
select substrb(dump(

000000006530BD60 SYS
LOBCOMPPART$

000000008B2190D0 SYS
SCHEDULER$_CREDENTIAL

000000008CBDC710 SYS
SYS_FBA_FA

000000008B269BD8
274e06dcc9c5fc1cf26eed7524cd449

0000000088D40DC8
SELECT NAME BUTTON_N

000000008C8536F8
UPDATE WWV_FLOW_SESS

0000000092D53D48 EXFSYS
RLM$SCHACTERRS

0000000088E96380
41cba3b841545bd7ed470a53ad5fa4a9

000000008C953B18 $BUILD$
ee2b0a93ed548447

000000008CAD9CB8 SYS
DBMS_PRVT_TRACE

000000008B05A990

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------
DELETE FROM SYS.WRI$

0000000092C46A00
select java_pool_size_for_estimate s,           java_pool_size_factor * 100 f,           estd_lc_load_time l, 0            from v$java_
pool_advice

000000008CA02678
select java_pool_size_for_estimate s,           java_pool_size_factor * 100 f,           estd_lc_load_time l, 0            from v$java_
pool_advice

000000008CBCFC70
select java_pool_size_for_estimate s,           java_pool_size_factor * 100 f,           estd_lc_load_time l, 0            from v$java_
pool_advice

0000000092CA43C8
DELETE FROM SYS.SCHE

000000008C91BD08
UPDATE SYS.WRI$_ADV_

0000000088E736F0 SYS
DBSNMP

000000008C999170
select /*+  no_paral

000000008CB087D8
INSERT INTO SYS.SCHE

000000008CA0F8F8
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

000000008C97D138
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

000000008CA10F70
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

000000008B2A21C0
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

000000008B3EAD30
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

0000000088D4A488
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

0000000088D47940
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

000000008CA0FC88
delete from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3

0000000088FEEFB0 SYS
WRH$_CLUSTER_INTERCON

000000008C9871E0
select  POOL, NAME , BYTES from GV$SGASTAT where inst_id = USERENV('Instance')

000000008CA2BD50
select  POOL, NAME , BYTES from GV$SGASTAT where inst_id = USERENV('Instance')

0000000088D59E18 $BUILD$
b546e905fd168b88

000000008CA93120
/* SQL Analyze(1) */

0000000088C64650 SYS
DBA_TABLESPACES

000000008CAA2B90 SYS
X$KEWMEVMV

000000006530D200 $BUILD$
f540e39557557449

000000008B13A478
select substrb(dump(

000000008CA71EF0
SELECT datatype, value, flags,nvl(description,'NULL') FROM sys.wri$_adv_parameters WHERE task_id = :1 AND name = :2

0000000088F79038
SELECT datatype, value, flags,nvl(description,'NULL') FROM sys.wri$_adv_parameters WHERE task_id = :1 AND name = :2

0000000060DCC7A8
SELECT datatype, value, flags,nvl(description,'NULL') FROM sys.wri$_adv_parameters WHERE task_id = :1 AND name = :2

0000000088F8F3A8
SELECT datatype, value, flags,nvl(description,'NULL') FROM sys.wri$_adv_parameters WHERE task_id = :1 AND name = :2

0000000060D1E638
SELECT datatype, value, flags,nvl(description,'NULL') FROM sys.wri$_adv_parameters WHERE task_id = :1 AND name = :2

000000008B23ADA0
65523a96b48bb4412882d0be58c5fc9a

000000008CBB4EB8
SELECT STATUS# FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008CBF5860
SELECT STATUS# FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008C875E58
SELECT STATUS# FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

0000000060EE7CE0
SELECT STATUS# FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

0000000060C8B540
SELECT STATUS# FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008C91F2D8
SELECT STATUS# FROM SYS.DBA_ADVISOR_TASKS WHERE TASK_ID = :B1 FOR UPDATE

000000008C8A8680
INSERT INTO BSLN_STA

0000000088D25B90
d7ffd12976c97f456e44bccfad4af798

000000008B30C760
87f94a23e43b3827acaedd41a9c51d1e

0000000060E41D70
select substrb(dump(

0000000088DBE658
14a2977ca30770fdbd8cabb130d669c1

0000000088DA5888 SYS
V$ASM_DISKGROUP

000000008C99E610
f5eccfff6cbea621f89b4c28215a5c35

000000008C96A3F0
select substrb(dump(

000000008CA61E40
bd466d855de744fc1a9b981f882a032

0000000088F5E498 SYS
AQ$_SCHEDULES

000000008C8666D8 SYSTEM
LOGSTDBY$PARAMETERS

000000008C9D3EF0 SYS
V$PGASTAT

000000008CB86538
SELECT ITEM_NAME, IT

0000000060FE86C0
select min(minbkt),m

000000008B07E920
SELECT /*+ leading(u

0000000088C806F8
SELECT INDEX_NAME, PARTITION_POSITION AS PART_POSITION, PARTITION_NAME, BLEVEL, LEAF_BLOCKS, NUM_ROWS, DISTINCT_KEYS, CLUSTERING_FACTOR
, CASE WHEN STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, HIGH_VALUE FROM DBA_IND_PARTITIONS WHERE INDEX_NAME IN ( SELECT INDEX_
NAME FROM DBA_INDEXES WHERE TABLE_NAME = UPPER(:B2 ) AND INDEX_OWNER = UPPER(:B1 ) AND PARTITIONED = 'YES') ORDER BY INDEX_NAME, PARTIT
ION_POSITION

0000000060C3E0B0
SELECT INDEX_NAME, PARTITION_POSITION AS PART_POSITION, PARTITION_NAME, BLEVEL, LEAF_BLOCKS, NUM_ROWS, DISTINCT_KEYS, CLUSTERING_FACTOR
, CASE WHEN STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, HIGH_VALUE FROM DBA_IND_PARTITIONS WHERE INDEX_NAME IN ( SELECT INDEX_
NAME FROM DBA_INDEXES WHERE TABLE_NAME = UPPER(:B2 ) AND INDEX_OWNER = UPPER(:B1 ) AND PARTITIONED = 'YES') ORDER BY INDEX_NAME, PARTIT
ION_POSITION

000000008B3E9FD0
70f310d923e756409cbe247a3c4bf3c8

0000000088FA1CF8
delete from WRH$_SESS_TIME_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C86E298
delete from WRH$_SESS_TIME_STATS tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >=
 b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B3396B8
eafe294e48cbb8071e361ae98c64c641

0000000088C41360
24262613a5e0af7564e34b633ad4ac03

0000000088EC3D70 SYS
V$SERVICE_STATS

0000000088F4DBD0 SYS
DBMS_DEBUG_JDWP

000000008C8AC0F0
select substrb(dump(

0000000092C84EE8 SYS
FIXED_OBJ$

000000008B354C60
2071c4568ee0582dc2c7de17dd05fa55

0000000088C72938 SYS
DBA_LOBS

000000008CABB130
b227e8c53113383e437ecaf0e0b1d0ed

0000000060EE36B0
4769ddb6121bd637252e2ea6fc5bcbcf

0000000060F1E3D0
/* SQL Analyze(1) */

0000000060F64620
f0d00b2f78959b379ebbb7d5a491fa7d

000000008B18AB18
91de253f10456de3309f658537b69130

0000000060CB4C20 PUBLIC
MDSYS

0000000088C45F20
delete from WRM$_BASELINE  where dbid = :dbid    and expiration is not NULL    and creation_time + expiration < :bind1

0000000088DD7170
delete from WRM$_BASELINE  where dbid = :dbid    and expiration is not NULL    and creation_time + expiration < :bind1

000000008CB980B8
begin   :q := dbms_sqltune.prepare_awr_statement(           begin_snap => :begin_snap,           end_snap   => :end_snap,           bas
ic_filter => :basf,           stmt_filter => TRUE,           object_filter => NULL,           rank1 => :rank1,           rank2 => :rank
2,           rank3 => :rank3,           result_percentage => :perc,           result_limit => :lmt,           attribute_list => :attrLi
st,           attribute_selected => :attrSel,           flags => dbms_sqltune.FLAG_PREPAWR_WRAPCTOR +                    dbms_sqltune.F
LAG_PREPAWR_NOCKBINDS +                    dbms_sqltune.FLAG_PREPAWR_INCLBID); end;

000000008CBEE578
begin   :q := dbms_sqltune.prepare_awr_statement(           begin_snap => :begin_snap,           end_snap   => :end_snap,           bas
ic_filter => :basf,           stmt_filter => TRUE,           object_filter => NULL,           rank1 => :rank1,           rank2 => :rank
2,           rank3 => :rank3,           result_percentage => :perc,           result_limit => :lmt,           attribute_list => :attrLi
st,           attribute_selected => :attrSel,           flags => dbms_sqltune.FLAG_PREPAWR_WRAPCTOR +                    dbms_sqltune.F
LAG_PREPAWR_NOCKBINDS +                    dbms_sqltune.FLAG_PREPAWR_INCLBID); end;

000000008B29DDB0
bcc535f9bc1448f8bc9438fedd7636b4

0000000088D962F8
SELECT COUNT(*) FROM

0000000088CEF528 SYS
PRVT_SQLSET_INFRA

000000008B2AEB28
select o.owner#, o.name,            o.namespace,    o.obj#,   d.d_timestamp, nvl(d.property,0), o.type#, o.subname, d.d_attrs  from dep
endency$ d, obj$ o   where d.p_obj#=:1  and   (d.p_timestamp=nvl(:2,d.p_timestamp) or d.property=2)  and   o.owner#=nvl(:3,o.owner#)  a
nd   d.d_obj#=o.obj#  order by o.obj#

0000000088C55E48
select o.owner#, o.name,            o.namespace,    o.obj#,   d.d_timestamp, nvl(d.property,0), o.type#, o.subname, d.d_attrs  from dep
endency$ d, obj$ o   where d.p_obj#=:1  and   (d.p_timestamp=nvl(:2,d.p_timestamp) or d.property=2)  and   o.owner#=nvl(:3,o.owner#)  a
nd   d.d_obj#=o.obj#  order by o.obj#

0000000088E49D98
select o.owner#, o.name,            o.namespace,    o.obj#,   d.d_timestamp, nvl(d.property,0), o.type#, o.subname, d.d_attrs  from dep
endency$ d, obj$ o   where d.p_obj#=:1  and   (d.p_timestamp=nvl(:2,d.p_timestamp) or d.property=2)  and   o.owner#=nvl(:3,o.owner#)  a
nd   d.d_obj#=o.obj#  order by o.obj#

0000000088FCAB08
select o.owner#, o.name,            o.namespace,    o.obj#,   d.d_timestamp, nvl(d.property,0), o.type#, o.subname, d.d_attrs  from dep
endency$ d, obj$ o   where d.p_obj#=:1  and   (d.p_timestamp=nvl(:2,d.p_timestamp) or d.property=2)  and   o.owner#=nvl(:3,o.owner#)  a
nd   d.d_obj#=o.obj#  order by o.obj#

000000008B2AEFA8
select o.owner#, o.name,            o.namespace,    o.obj#,   d.d_timestamp, nvl(d.property,0), o.type#, o.subname, d.d_attrs  from dep
endency$ d, obj$ o   where d.p_obj#=:1  and   (d.p_timestamp=nvl(:2,d.p_timestamp) or d.property=2)  and   o.owner#=nvl(:3,o.owner#)  a
nd   d.d_obj#=o.obj#  order by o.obj#

0000000092C4DBC8
cb87c155ccf5baeb795113ddb9af199f

000000008C8DDF78 SYS
DBMS_SYS_SQL

0000000092D2BD78 SYSTEM
PRODUCT_PRIVS

0000000088E7A320
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "F#0")  */ 1 AS C1 FROM "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S
#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACHE',9,'SPACE HEADER','UNDEFINED') LIK
E 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."TYPE#"<>8) AND ("S#1"."TYPE#"<>10)) innerQ
uery

0000000060C6CAE0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "S#1", SCALE_ROWS=0.01305066862) */ COUNT(C1) FROM (SELECT /*+ qb_n
ame("innerQuery") NO_INDEX_FFS( "F#0")  */ 1 AS C1 FROM "SYS"."SEG$" "S#1", "SYS"."FILE$" "F#0" WHERE ("S#1"."TS#"="F#0"."TS#") AND ("S
#1"."FILE#"="F#0"."RELFILE#") AND (DECODE("S#1"."TYPE#",2,'DEFERRED ROLLBACK',3,'TEMPORARY',4,'CACHE',9,'SPACE HEADER','UNDEFINED') LIK
E 'TABLE%') AND ("S#1"."TYPE#"<>1) AND ("S#1"."TYPE#"<>5) AND ("S#1"."TYPE#"<>6) AND ("S#1"."TYPE#"<>8) AND ("S#1"."TYPE#"<>10)) innerQ
uery

0000000060C53630
SELECT /* DS_SVC */

0000000060F9E3B0
select substrb(dump(

0000000088C530B8
select substrb(dump(

0000000088C657D0
insert into deferred_stg$ (obj#, pctfree_stg, pctused_stg, size_stg,initial_stg, next_stg, minext_stg, maxext_stg, maxsiz_stg, lobret_s
tg,mintim_stg, pctinc_stg, initra_stg, maxtra_stg, optimal_stg, maxins_stg,frlins_stg, flags_stg, bfp_stg, enc_stg, cmpflag_stg, cmplvl
_stg) values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,        :16,:17,:18,:19,:20,:21,:22)

000000008B1B3C30
insert into deferred_stg$ (obj#, pctfree_stg, pctused_stg, size_stg,initial_stg, next_stg, minext_stg, maxext_stg, maxsiz_stg, lobret_s
tg,mintim_stg, pctinc_stg, initra_stg, maxtra_stg, optimal_stg, maxins_stg,frlins_stg, flags_stg, bfp_stg, enc_stg, cmpflag_stg, cmplvl
_stg) values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,        :16,:17,:18,:19,:20,:21,:22)

0000000060ED7D00
select substrb(dump(

0000000060F77360 SYS
X$KCFISTSA

000000008B3ACDE8
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("SNAP_ID")),to_char(substrb(dump(min("SNAP_ID"),16,0,32),1,120)),to_char(
substrb(dump(max("SNAP_ID"),16,0,32),1,120)),to_char(count("DBID")),to_char(substrb(dump(min("DBID"),16,0,32),1,120)),to_char(substrb(d
ump(max("DBID"),16,0,32),1,120)),to_char(count("INSTANCE_NUMBER")),to_char(substrb(dump(min("INSTANCE_NUMBER"),16,0,32),1,120)),to_char
(substrb(dump(max("INSTANCE_NUMBER"),16,0,32),1,120)),to_char(count("FILE#")),to_char(substrb(dump(min("FILE#"),16,0,32),1,120)),to_cha
r(substrb(dump(max("FILE#"),16,0,32),1,120)),to_char(count("CREATION_CHANGE#")),to_char(substrb(dump(min("CREATION_CHANGE#"),16,0,32),1
,120)),to_char(substrb(dump(max("CREATION_CHANGE#"),16,0,32),1,120)),to_char(count("PHYRDS")),to_char(substrb(dump(min("PHYRDS"),16,0,3
2),1,120)),to_char(substrb(dump(max("PHYRDS"),16,0,32),

000000008CBD5DF0
/* SQL Analyze(1) */ select /*+  full(t)    no_parallel(t) no_parallel_index(t) dbms_stats cursor_sharing_exact use_weak_name_resl dyna
mic_sampling(0) no_monitoring no_substrb_pad  */to_char(count("SNAP_ID")),to_char(substrb(dump(min("SNAP_ID"),16,0,32),1,120)),to_char(
substrb(dump(max("SNAP_ID"),16,0,32),1,120)),to_char(count("DBID")),to_char(substrb(dump(min("DBID"),16,0,32),1,120)),to_char(substrb(d
ump(max("DBID"),16,0,32),1,120)),to_char(count("INSTANCE_NUMBER")),to_char(substrb(dump(min("INSTANCE_NUMBER"),16,0,32),1,120)),to_char
(substrb(dump(max("INSTANCE_NUMBER"),16,0,32),1,120)),to_char(count("FILE#")),to_char(substrb(dump(min("FILE#"),16,0,32),1,120)),to_cha
r(substrb(dump(max("FILE#"),16,0,32),1,120)),to_char(count("CREATION_CHANGE#")),to_char(substrb(dump(min("CREATION_CHANGE#"),16,0,32),1
,120)),to_char(substrb(dump(max("CREATION_CHANGE#"),16,0,32),1,120)),to_char(count("PHYRDS")),to_char(substrb(dump(min("PHYRDS"),16,0,3
2),1,120)),to_char(substrb(dump(max("PHYRDS"),16,0,32),

0000000092C7B7F8 SYS
OBJECT_USAGE

000000008B058250
MERGE INTO OPTSTAT_U

0000000088E69550 SYS
WRH$_SGA

000000008B2E8910
62815aefd38d89e6709fc2c9b1efc8d

000000008B0C1F58
SELECT 1 FROM DUAL W

000000008B0D79B8 SYS
X$KSPPCV2

000000008CB74D30
9faa9fdd35b1cdd759e02d8756a6d8c4

0000000060E6D6D0 SYS
STREAMS$_CAPTURE_SERVER

000000008CB5F110
505c2c0f5c7a8bc76486a250618e4813

0000000065333060
bed5840929272d57d9d96187eee2ebb0

000000008C981108
fa024673c871f8b9f3fe12fd225e12c

000000008B240CA8 $BUILD$
 119943eb69c47f6

0000000092D2DE38
select substrb(dump(

0000000092CA6F28
select 1, max(id) from sys.wri$_adv_objects  where task_id = :1 union all select 2, max(id) from sys.wri$_adv_recommendations  where ta
sk_id = :1 union all select 3, max(id) from sys.wri$_adv_actions  where task_id = :1 union all select 4, max(id) from sys.wri$_adv_find
ings  where task_id = :1 union all select 5, max(id) from sys.wri$_adv_rationale  where task_id = :1

000000008C9E0920
select 1, max(id) from sys.wri$_adv_objects  where task_id = :1 union all select 2, max(id) from sys.wri$_adv_recommendations  where ta
sk_id = :1 union all select 3, max(id) from sys.wri$_adv_actions  where task_id = :1 union all select 4, max(id) from sys.wri$_adv_find
ings  where task_id = :1 union all select 5, max(id) from sys.wri$_adv_rationale  where task_id = :1

000000008CA2E4D0
select 1, max(id) from sys.wri$_adv_objects  where task_id = :1 union all select 2, max(id) from sys.wri$_adv_recommendations  where ta
sk_id = :1 union all select 3, max(id) from sys.wri$_adv_actions  where task_id = :1 union all select 4, max(id) from sys.wri$_adv_find
ings  where task_id = :1 union all select 5, max(id) from sys.wri$_adv_rationale  where task_id = :1

000000008B265558
select 1, max(id) from sys.wri$_adv_objects  where task_id = :1 union all select 2, max(id) from sys.wri$_adv_recommendations  where ta
sk_id = :1 union all select 3, max(id) from sys.wri$_adv_actions  where task_id = :1 union all select 4, max(id) from sys.wri$_adv_find
ings  where task_id = :1 union all select 5, max(id) from sys.wri$_adv_rationale  where task_id = :1

0000000088D52438
select 1, max(id) from sys.wri$_adv_objects  where task_id = :1 union all select 2, max(id) from sys.wri$_adv_recommendations  where ta
sk_id = :1 union all select 3, max(id) from sys.wri$_adv_actions  where task_id = :1 union all select 4, max(id) from sys.wri$_adv_find
ings  where task_id = :1 union all select 5, max(id) from sys.wri$_adv_rationale  where task_id = :1

0000000060EA5C60
select 1, max(id) from sys.wri$_adv_objects  where task_id = :1 union all select 2, max(id) from sys.wri$_adv_recommendations  where ta
sk_id = :1 union all select 3, max(id) from sys.wri$_adv_actions  where task_id = :1 union all select 4, max(id) from sys.wri$_adv_find
ings  where task_id = :1 union all select 5, max(id) from sys.wri$_adv_rationale  where task_id = :1

0000000092D811B8
select 1, max(id) from sys.wri$_adv_objects  where task_id = :1 union all select 2, max(id) from sys.wri$_adv_recommendations  where ta
sk_id = :1 union all select 3, max(id) from sys.wri$_adv_actions  where task_id = :1 union all select 4, max(id) from sys.wri$_adv_find
ings  where task_id = :1 union all select 5, max(id) from sys.wri$_adv_rationale  where task_id = :1

0000000088FD48E8 SYS
EXPDEPOBJ$

000000008CB22E90
1d25fa28befaca4031ac50b627dd580b

000000008B1C8C38
SELECT ADVISOR_ID, T

000000008B2DFFD0
select bp.lo_setid,bp.hi_setid from    v$buffer_pool?

0000000088E8B1F0
select bp.lo_setid,bp.hi_setid from    v$buffer_pool?

000000008B0BD820
331ac7a4c0c84136b949b529b1ac36ff

0000000060CCCD60
e56c75d6d65980dfda72b303dac65eb0

0000000092C73708
96dda3773d9f9b93b8a21d135f9f0ab5

0000000092D5F6D8 SCOTT
PDBA

000000008CA4DFC8
DELETE FROM RLM$RULE

0000000088E8F0B0 EXFSYS
RLM$APNUMBLST

000000008B0C6B18 SYS
WRH$_SYS_TIME_MODEL_PK

0000000088EBF470
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B2FF5A0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B0881C0
SELECT /*+ rule */ T

0000000088CA3298 SYS
DBMS_XPLAN_LIB

000000008B302AC8
ea869ce79cded5b6ae49174ec9706c0

000000008CAA0250
/* SQL Analyze(1) */

0000000088F8C9A8
INSERT INTO EXFSYS.R

0000000088E4A428
f5c2ddd2d9959db925f2b275a39f63a9

0000000088E80650 SYS
WRH$_DB_CACHE_ADVICE_PK

000000008CAEBB78 SYS
WRI$_ADV_DEFINITIONS

000000008B31CA68
fc1dfc43da4925798b1b39eca8e1f927

0000000065359040
bf94b0f9609b96f5bfb483dc7db79e7

000000008B213918
select host,userid,password,flag,authusr,authpwd, passwordx, authpwdx from link$ where owner#=:1 and name=:2

0000000060DC7E38
select host,userid,password,flag,authusr,authpwd, passwordx, authpwdx from link$ where owner#=:1 and name=:2

0000000092C71030
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lists,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spar
e1,0),NVL(scanhint,0),NVL(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

0000000088D196A0
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lists,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spar
e1,0),NVL(scanhint,0),NVL(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

000000008CBD88C0
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lists,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spar
e1,0),NVL(scanhint,0),NVL(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

000000008B2EA0B8
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lists,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spar
e1,0),NVL(scanhint,0),NVL(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

0000000092C714B0
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lists,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spar
e1,0),NVL(scanhint,0),NVL(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

0000000060DFE468
c3add426cf82acf1e69158ac972b609a

000000008CB94878
SELECT F.MESSAGE FRO

0000000065333C60
88dcfb9b296013c1d1ab960d40e412ec

000000008CBD6C90
select * from gv$log order by INST_ID,GROUP#

000000008B1D1D78
select * from gv$log order by INST_ID,GROUP#

000000008B0D18C8
34d1e1b6d5b22b22be63a6d65cb804b6

000000008B3B7898 SYS
V$ACTIVE_INSTANCES

0000000088EE8F70
2c164207d23a3f81b4e581c13afd0204

000000008CB77388
SELECT /*+ first_row

0000000088CC6F08
SELECT XMLELEMENT( "

0000000088E74588 $BUILD$
6b105100 28e1f28

000000008C87AEA8
8576dc61bc418fb1d833b0d8e4a7b544

0000000088E76750
SELECT NAME BUTTON_N

000000008C85D030 DBSNMP
BSLN_STATISTICS_SET

000000008CAF2CD8
526e427be407f832a5b18a8f8f186127

0000000088F9E6D8
80e9c802846a2575a79210f42e8fcf

0000000060D85820
select  NAME , PADDR , STATUS , MESSAGES , BYTES , BREAKS , CIRCUIT , IDLE , BUSY , IN_NET , OUT_NET , REQUESTS from GV$SHARED_SERVER w
here inst_id = USERENV('Instance')

000000008CA4F910
select  NAME , PADDR , STATUS , MESSAGES , BYTES , BREAKS , CIRCUIT , IDLE , BUSY , IN_NET , OUT_NET , REQUESTS from GV$SHARED_SERVER w
here inst_id = USERENV('Instance')

000000008B09D580
SELECT /*+ leading(ST o u) */ ST.OBJ# OBJNUM, U.NAME OWNER, O.NAME OBJNAME, O.SUBNAME SUBNAME, ST.TYPE# TYPE#, ST.BO# BO#, ST.FLAGS, ST
.OSIZE FROM OBJ$ O, USER$ U, (SELECT /*+ no_merge */ * FROM (SELECT /*+ dynamic_sampling(s 4) dynamic_sampling_est_cdn(s) */ S.*, ROW_N
UMBER() OVER (ORDER BY DECODE(TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), STALENESS,OSIZE,OBJ#) RN FROM STATS_TARGET$ S WHERE S.STATUS = :
B1 ) WHERE RN <= :B2 ) ST WHERE ST.OBJ# = O.OBJ# AND O.OWNER# = U.USER# ORDER BY DECODE(ST.TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), ST.
STALENESS, ST.OSIZE, ST.OBJ#

000000008B10A7D0
SELECT /*+ leading(ST o u) */ ST.OBJ# OBJNUM, U.NAME OWNER, O.NAME OBJNAME, O.SUBNAME SUBNAME, ST.TYPE# TYPE#, ST.BO# BO#, ST.FLAGS, ST
.OSIZE FROM OBJ$ O, USER$ U, (SELECT /*+ no_merge */ * FROM (SELECT /*+ dynamic_sampling(s 4) dynamic_sampling_est_cdn(s) */ S.*, ROW_N
UMBER() OVER (ORDER BY DECODE(TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), STALENESS,OSIZE,OBJ#) RN FROM STATS_TARGET$ S WHERE S.STATUS = :
B1 ) WHERE RN <= :B2 ) ST WHERE ST.OBJ# = O.OBJ# AND O.OWNER# = U.USER# ORDER BY DECODE(ST.TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), ST.
STALENESS, ST.OSIZE, ST.OBJ#

0000000060E45D20
SELECT /*+ leading(ST o u) */ ST.OBJ# OBJNUM, U.NAME OWNER, O.NAME OBJNAME, O.SUBNAME SUBNAME, ST.TYPE# TYPE#, ST.BO# BO#, ST.FLAGS, ST
.OSIZE FROM OBJ$ O, USER$ U, (SELECT /*+ no_merge */ * FROM (SELECT /*+ dynamic_sampling(s 4) dynamic_sampling_est_cdn(s) */ S.*, ROW_N
UMBER() OVER (ORDER BY DECODE(TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), STALENESS,OSIZE,OBJ#) RN FROM STATS_TARGET$ S WHERE S.STATUS = :
B1 ) WHERE RN <= :B2 ) ST WHERE ST.OBJ# = O.OBJ# AND O.OWNER# = U.USER# ORDER BY DECODE(ST.TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), ST.
STALENESS, ST.OSIZE, ST.OBJ#

0000000088E5CE18
SELECT /*+ leading(ST o u) */ ST.OBJ# OBJNUM, U.NAME OWNER, O.NAME OBJNAME, O.SUBNAME SUBNAME, ST.TYPE# TYPE#, ST.BO# BO#, ST.FLAGS, ST
.OSIZE FROM OBJ$ O, USER$ U, (SELECT /*+ no_merge */ * FROM (SELECT /*+ dynamic_sampling(s 4) dynamic_sampling_est_cdn(s) */ S.*, ROW_N
UMBER() OVER (ORDER BY DECODE(TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), STALENESS,OSIZE,OBJ#) RN FROM STATS_TARGET$ S WHERE S.STATUS = :
B1 ) WHERE RN <= :B2 ) ST WHERE ST.OBJ# = O.OBJ# AND O.OWNER# = U.USER# ORDER BY DECODE(ST.TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), ST.
STALENESS, ST.OSIZE, ST.OBJ#

000000008B3111D8
SELECT /*+ leading(ST o u) */ ST.OBJ# OBJNUM, U.NAME OWNER, O.NAME OBJNAME, O.SUBNAME SUBNAME, ST.TYPE# TYPE#, ST.BO# BO#, ST.FLAGS, ST
.OSIZE FROM OBJ$ O, USER$ U, (SELECT /*+ no_merge */ * FROM (SELECT /*+ dynamic_sampling(s 4) dynamic_sampling_est_cdn(s) */ S.*, ROW_N
UMBER() OVER (ORDER BY DECODE(TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), STALENESS,OSIZE,OBJ#) RN FROM STATS_TARGET$ S WHERE S.STATUS = :
B1 ) WHERE RN <= :B2 ) ST WHERE ST.OBJ# = O.OBJ# AND O.OWNER# = U.USER# ORDER BY DECODE(ST.TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), ST.
STALENESS, ST.OSIZE, ST.OBJ#

000000008B092320
SELECT /*+ leading(ST o u) */ ST.OBJ# OBJNUM, U.NAME OWNER, O.NAME OBJNAME, O.SUBNAME SUBNAME, ST.TYPE# TYPE#, ST.BO# BO#, ST.FLAGS, ST
.OSIZE FROM OBJ$ O, USER$ U, (SELECT /*+ no_merge */ * FROM (SELECT /*+ dynamic_sampling(s 4) dynamic_sampling_est_cdn(s) */ S.*, ROW_N
UMBER() OVER (ORDER BY DECODE(TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), STALENESS,OSIZE,OBJ#) RN FROM STATS_TARGET$ S WHERE S.STATUS = :
B1 ) WHERE RN <= :B2 ) ST WHERE ST.OBJ# = O.OBJ# AND O.OWNER# = U.USER# ORDER BY DECODE(ST.TYPE#, 1,2,2,1, 19,3,20,4, 34,5,35,6,7), ST.
STALENESS, ST.OSIZE, ST.OBJ#

0000000060EEDCE0
d8c7523dd2725e7493704c5f4f4ccf3b

000000008B1AE590
UPDATE RLM$PRIMEVTTY

000000008B0656D0
SELECT USER# FROM SY

000000008CAE0790
b4f335256ed143ca6e4c74234eba35af

0000000088CED968 SYS
GV$SQL_PLAN_MONITOR

0000000088DBAAC8
41b20c07ba4ce083fbc3311f50420bf1

000000008B095440
INSERT INTO SYS.AUX_

000000008B132448 SYS
V$DATABASE_INCARNATION

000000008B20A248
e7e04a13b7fb7ff764c8ab84c22c7d28

000000008B13C0C8
2a6d74bf67d60ec581f88f4b9958bb9

0000000060FB02D0
select substrb(dump(

0000000088D10A20
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 169

000000008B1BE7F0
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 169

0000000060D8BFF8
SELECT COUNT(*) FROM

0000000088E026E8 SYS
WRH$_EVENT_HISTOGRAM

0000000060FDBA70
ee09bf57d63487a8d5326776ace2408b

000000008B079640 SYS
WRI$_OPTSTAT_SYNOPSIS$

000000008CAEA538 SYS
WRI$_ADV_SQLPI

0000000060CBE598 $BUILD$
4a175b91b5af55e8

000000008B325580 SYS
WRH$_MEM_DYNAMIC_COMP

000000008CB618D8 SYS
KOTTD$

000000008B123DE8
INSERT INTO sys.wri$_adv_rationale (id, task_id, rec_id, obj_id, impact_msg_id, impact_val, msg_id, type, attr1, attr2, attr3, attr4, a
ttr5, exec_name) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, ' ', :13) RETURNING rowid INTO :14

0000000088F1F740
INSERT INTO sys.wri$_adv_rationale (id, task_id, rec_id, obj_id, impact_msg_id, impact_val, msg_id, type, attr1, attr2, attr3, attr4, a
ttr5, exec_name) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, ' ', :13) RETURNING rowid INTO :14

0000000060E32290
SELECT INSTANCE_NUMB

0000000088EB4F20
6e7a0b25fa63093eb8c33ffe54d8390

0000000060F03FC0
5a53b140fea8dfc2238781c4b3a8bad2

0000000060FB30F0
4b4c69c28fc8eb47d4348615834f93c

0000000088FC3C28 SYS
GV$MYSTAT

000000008B292370
f2404ea776ae854bf1f2f29f65dfc1c2

000000008B1AB7A0
ee490cb7df60321fcbda5fa6a05c99d8

000000008B167CE0 APEX_030200
WWV_FLOW_ITEMS

000000008CAC48F8
484b8e45450410dd2daf5801e5f91f65

0000000088F06BF8
SELECT MAX(COPY#) FR

0000000060EF2C40
b21073388c363f0ee28db85a8c6bdf9

000000008CB3C4C8
cd3744da5e17066dd59d0eedbbcee4f7

000000008CAE01A0
COMMIT

000000008B21E060
5c41f9a6246246eb150e8a58bd26a2e0

000000008B283080
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SK
IP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 42949672
95 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" "O2" WHERE ("O2"."TYPE#"=88))
innerQuery

000000008CAC30F8
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", TABLE, "O2", SCALE_ROWS=0.1275732567) OPT_ESTIMATE(@"innerQuery", INDEX_SK
IP_SCAN, "O2", "I_OBJ1", SCALE_ROWS=0.1275732567) */ C1, C2, C3 FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "O2")  */ 42949672
95 AS C1, COUNT(*) AS C2, COUNT(CASE WHEN ("O2"."TYPE#"=88) THEN 1 ELSE null END) AS C3  FROM SYS."OBJ$" "O2" WHERE ("O2"."TYPE#"=88))
innerQuery

000000008B1F2AB0
SELECT * FROM EXF$JA

000000008B3074B8
b4462001616e19d529e5601976102b00

0000000060F1DB60 APEX_030200
WWV_FLOW_STEP_PROCESSING

000000008CA59568
48e1fc19b07f60e77ba0b876fdea38e

0000000060F0A530
SELECT A.INSTANCE_NU

0000000088CB1708
INSERT INTO WWV_FLOW

000000008B079420 SYS
SYNOPSIS_NUM_SEQ

0000000088F8C348
INSERT INTO WWV_FLOW

000000008CB4EF78
a763c2d8caae42949bb3df4b68bebea5

0000000088FF19F0
BEGIN   aw_drop_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner); END;

0000000088FF1E70
BEGIN   aw_drop_proc(ora_dict_obj_type, ora_dict_obj_name, ora_dict_obj_owner); END;

000000008CBA6C48
delete from WRH$_SERVICE_NAME tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000060E0CE38
delete from WRH$_SERVICE_NAME tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)    and
 not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id >= b.
start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

00000000653361D0 SYS
KU$_MULTI_DDLS

000000008B1AD510
8fb12607aa69c005c0c99213410588f

0000000092D74E88 SYS
X$KGLJSIM

000000008C92C4D8
SELECT LAST_EXEC_NAM

000000008B0D8F68
7cda76911a5aef12ec66a7ea377b0865

0000000092C6A078
select con#,obj#,rcon#,enabled,nvl(defer,0),spare2,spare3 from cdef$ where robj#=:1

0000000088D66D88
select con#,obj#,rcon#,enabled,nvl(defer,0),spare2,spare3 from cdef$ where robj#=:1

0000000088CF9D58
select con#,obj#,rcon#,enabled,nvl(defer,0),spare2,spare3 from cdef$ where robj#=:1

000000008B270AE8
select con#,obj#,rcon#,enabled,nvl(defer,0),spare2,spare3 from cdef$ where robj#=:1

0000000092C89B70
select con#,obj#,rcon#,enabled,nvl(defer,0),spare2,spare3 from cdef$ where robj#=:1

0000000092C6A4F8
select con#,obj#,rcon#,enabled,nvl(defer,0),spare2,spare3 from cdef$ where robj#=:1

000000006539E100
9241140100182438320

000000008CACABE0
SELECT TP.* FROM BSL

000000008B22C9B0 SYS
WRH$_LATCH_MISSES_SUMMARY_PK

0000000088CEAE78
SELECT SERIAL#, SID

0000000088ED7A60
d3922d093395192921cf58b972e0f180

0000000060D92CC0
3b11c1281b6f11d34bb2fd96d56c8cee

0000000060E1A500
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("S#1", "SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.0
3029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"i
nnerQuery", JOIN, ("SO#2", "O#4", "U#5"), SCALE_ROWS=165.5060901) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2", "O
#4"), "I_FILE2", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.
02110233079) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "
U#5", ("S#1", "SO#2", "O#4"), "I_USER#", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OB
J2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery"

00000000653E8540
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("S#1", "SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.0
3029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "U#5", ("SO#2", "O#4"), "I_USER2", SCALE_ROWS=0.02110235282) OPT_ESTIMATE(@"i
nnerQuery", JOIN, ("SO#2", "O#4", "U#5"), SCALE_ROWS=165.5060901) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2", "O
#4"), "I_FILE2", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_SCAN, "F#0", ("S#1", "SO#2"), "I_FILE2", SCALE_ROWS=0.
02110233079) OPT_ESTIMATE(@"innerQuery", JOIN, ("SO#2", "O#4"), SCALE_ROWS=126.4692351) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "
U#5", ("S#1", "SO#2", "O#4"), "I_USER#", SCALE_ROWS=0.03029266449) OPT_ESTIMATE(@"innerQuery", NLJ_INDEX_FILTER, "O#4", ("SO#2"), "I_OB
J2", SCALE_ROWS=120.0959823) OPT_ESTIMATE(@"innerQuery"

000000008CBDFD90 SYS
DBA_TAB_PRIVS

0000000088F09ED8
SELECT OBJ# FROM SCH

000000008B3E32B0
SELECT * FROM  (SELECT        elapsed_time,        cpu_time,        buffer_gets,        disk_reads,        direct_writes,        execut
ions,        plan_hash_value,        plan_time,        (SELECT other_xml         FROM   all_sqlset_plans P          WHERE  P.sql_seq =
S.sql_seq AND                rownum = 1 AND                P.plan_hash_value = S.plan_hash_value AND                P.id = 1) other_xml
,        sql_seq   FROM (SELECT sql_seq,                elapsed_time/executions elapsed_time,                cpu_time/executions as cpu
_time,                buffer_gets/executions as buffer_gets,                disk_reads/executions as disk_reads,                direct_
writes/executions as direct_writes,                rows_processed/executions as rows_processed,                fetches/executions fetch
es,                executions,                plan_hash_value,                FIRST_LOAD_TIME as plan_time,                row_number()
 over (partition by plan_hash_value

0000000060E0A208
SELECT * FROM  (SELECT        elapsed_time,        cpu_time,        buffer_gets,        disk_reads,        direct_writes,        execut
ions,        plan_hash_value,        plan_time,        (SELECT other_xml         FROM   all_sqlset_plans P          WHERE  P.sql_seq =
S.sql_seq AND                rownum = 1 AND                P.plan_hash_value = S.plan_hash_value AND                P.id = 1) other_xml
,        sql_seq   FROM (SELECT sql_seq,                elapsed_time/executions elapsed_time,                cpu_time/executions as cpu
_time,                buffer_gets/executions as buffer_gets,                disk_reads/executions as disk_reads,                direct_
writes/executions as direct_writes,                rows_processed/executions as rows_processed,                fetches/executions fetch
es,                executions,                plan_hash_value,                FIRST_LOAD_TIME as plan_time,                row_number()
 over (partition by plan_hash_value

000000008CA07F00
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 166

00000000653F4BA0
SELECT count(*) FROM sys.wri$_adv_executions e                  WHERE e.name = :exec_name and e.task_id = 166

000000008CA85BD8 SYS
CURRENT_OPEN_WINDOW

000000008CBDB4F0
delete from WRH$_SQL_BIND_METADATA tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088E83C40
delete from WRH$_SQL_BIND_METADATA tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
  and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
>= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008C9501A0
11556423443895066297

0000000088FE2458
SELECT NVL(MAX(PARAM

0000000060E14F50
INSERT INTO RLM$JOBQ

00000000652E5490
select     distinct i.INDEX_NAME,     i.COLUMN_NAME,     i.COLUMN_POSITION,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'(
'||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCAL
E||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
          'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '|
|            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col from
  dba_ind_columns i,     dba_tab_columns t where     i.table_name = :table_name and owner = upper(nvl(:owner,user)) and i.table_name =
t.table_name and i.column_name = t.column_name order by index_name,column_position

0000000060DBD210
select     distinct i.INDEX_NAME,     i.COLUMN_NAME,     i.COLUMN_POSITION,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'(
'||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCAL
E||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
          'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '|
|            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col from
  dba_ind_columns i,     dba_tab_columns t where     i.table_name = :table_name and owner = upper(nvl(:owner,user)) and i.table_name =
t.table_name and i.column_name = t.column_name order by index_name,column_position

00000000652E7220
select     distinct i.INDEX_NAME,     i.COLUMN_NAME,     i.COLUMN_POSITION,     decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'(
'||            decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCAL
E||')'),                   'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,
          'ROWID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '|
|            decode(t.nullable,                   'N','NOT NULL',                   'n','NOT NULL',                   NULL) col from
  dba_ind_columns i,     dba_tab_columns t where     i.table_name = :table_name and owner = upper(nvl(:owner,user)) and i.table_name =
t.table_name and i.column_name = t.column_name order by index_name,column_position

0000000092D30EF8
select substrb(dump(

0000000088E30698
create global tempor

0000000092D13088
select /*+  no_paral

0000000088CEB5B8
SELECT TO_NUMBER(EXT

000000008C91C918
SELECT USER# FROM US

000000008B2E8DD0
SELECT :B15 TYPE_CON

0000000088EA85B0
insert into wrh$_bg_event_summary   (snap_id, dbid, instance_number,    event_id, total_waits,    total_timeouts, time_waited_micro) se
lect   :snap_id, :dbid, :instance_number, event_id,   total_waits - total_waits_fg,   total_timeouts - total_timeouts_fg,   time_waited
_micro - time_waited_micro_fg  from   v$system_event  where   (total_waits - total_waits_fg) > 0  order by    event_id

000000008CA1EF08
insert into wrh$_bg_event_summary   (snap_id, dbid, instance_number,    event_id, total_waits,    total_timeouts, time_waited_micro) se
lect   :snap_id, :dbid, :instance_number, event_id,   total_waits - total_waits_fg,   total_timeouts - total_timeouts_fg,   time_waited
_micro - time_waited_micro_fg  from   v$system_event  where   (total_waits - total_waits_fg) > 0  order by    event_id

000000008CA5FF58
insert into wrh$_bg_event_summary   (snap_id, dbid, instance_number,    event_id, total_waits,    total_timeouts, time_waited_micro) se
lect   :snap_id, :dbid, :instance_number, event_id,   total_waits - total_waits_fg,   total_timeouts - total_timeouts_fg,   time_waited
_micro - time_waited_micro_fg  from   v$system_event  where   (total_waits - total_waits_fg) > 0  order by    event_id

000000008B240A28
insert into wrh$_bg_event_summary   (snap_id, dbid, instance_number,    event_id, total_waits,    total_timeouts, time_waited_micro) se
lect   :snap_id, :dbid, :instance_number, event_id,   total_waits - total_waits_fg,   total_timeouts - total_timeouts_fg,   time_waited
_micro - time_waited_micro_fg  from   v$system_event  where   (total_waits - total_waits_fg) > 0  order by    event_id

KGLHDADR         KGLNAOWN
---------------- ----------------------------------------------------------------
KGLNAOBJ
---------------------------------------------------------------------------------------------------------------------------------------

0000000088EA8A30
insert into wrh$_bg_event_summary   (snap_id, dbid, instance_number,    event_id, total_waits,    total_timeouts, time_waited_micro) se
lect   :snap_id, :dbid, :instance_number, event_id,   total_waits - total_waits_fg,   total_timeouts - total_timeouts_fg,   time_waited
_micro - time_waited_micro_fg  from   v$system_event  where   (total_waits - total_waits_fg) > 0  order by    event_id

0000000088F83EA8 SYS
V$IR_MANUAL_CHECKLIST

00000000653C1F60
/* SQL Analyze(1) */

000000008B3A41E8 SYS
DBMS_KEG_LIB

000000008CA08080
select substrb(dump(

000000008CBE20F0 SYS
OPQTYPE$

000000008B13BC68 APEX_030200
WWV_FLOW_IMAGE_PREFIX

00000000653FF650
9f888fbd7ca7c0a0cf0c51854d09a689

0000000060E723C8 $BUILD$
b1c189ae3e155124

0000000088FEAFB0
SELECT '"'||:B2 ||'"

0000000060FF76D0 APEX_030200
WWV_FLOW_PPR_UTIL

000000008C854598
e08030a8519ff94a4fffb745f70c9c9f

000000006533E250
812501b3dcd989077e94b8cdee8d040b

0000000088CCFB68
SELECT XMLCONCAT( (S

0000000060E1DC10
insert into sys.wri$_optstat_opr (operation, target, start_time,  end_time) values (:1,:2,:3,:4)

0000000088F01438
insert into sys.wri$_optstat_opr (operation, target, start_time,  end_time) values (:1,:2,:3,:4)

00000000653A53F0
insert into sys.wri$_optstat_opr (operation, target, start_time,  end_time) values (:1,:2,:3,:4)

0000000088C5E948
insert into sys.wri$_optstat_opr (operation, target, start_time,  end_time) values (:1,:2,:3,:4)

000000008B2858D0
87fdf86ca1795cbaa0ff66e4743765fb

0000000088C8BA68
DELETE WRI$_SQLSET_B

0000000060F1D940
b4f335256ed143ca6e4c74234eba35af

0000000065331B50
7bca5ce219d8b8add07674a81178396f

0000000092D68A00
select max(intcol#) from hist_head$ where obj# = :1

0000000060EE5BC8
select max(intcol#) from hist_head$ where obj# = :1

0000000088E0BB20
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."TS$"
"TS#3", "SYS"."USER$" "U#4", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AN
D ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1
,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("S#1"."USER#"="U#4"."USER#"(+)) AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

0000000060C434F0
SELECT /* DS_SVC */ /*+ dynamic_sampling(0) no_sql_tune no_monitoring optimizer_features_enable(default) opt_param('parallel_execution_
enabled', 'false')  result_cache */ COUNT(C1) FROM (SELECT /*+ qb_name("innerQuery") NO_INDEX_FFS( "U#4")  */ 1 AS C1 FROM "SYS"."TS$"
"TS#3", "SYS"."USER$" "U#4", "SYS"."SEG$" "S#1", "SYS"."UNDO$" "UN#2" WHERE ("UN#2"."STATUS$"<>1) AND ("S#1"."FILE#"="UN#2"."FILE#") AN
D ("S#1"."BLOCK#"="UN#2"."BLOCK#") AND ("S#1"."TS#"="UN#2"."TS#") AND ("S#1"."TYPE#"=1 OR "S#1"."TYPE#"=10) AND (DECODE("S#1"."TYPE#",1
,'ROLLBACK',10,'TYPE2 UNDO') LIKE 'TABLE%') AND ("S#1"."USER#"="U#4"."USER#"(+)) AND ("S#1"."TS#"="TS#3"."TS#")) innerQuery

000000008C92B598
SELECT COUNT(*),MAX(

000000008B1FB6C0
select substrb(dump(

0000000088DFDA58
2932d53b4f6e5e8c9b3883bf3c86219c

0000000088EBDA70
e45909ba8a185710be63e403470622c7

0000000088FE0D60 T
INDEX_NAME

000000008CA54180 SYS
STREAMS$_PREPARE_DDL

000000008B2E4688
delete from WRH$_PERSISTENT_QMN_CACHE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008CB5BA90
delete from WRH$_PERSISTENT_QMN_CACHE tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid
)    and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_
id >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000088C72270
select substrb(dump(

000000006539DC70
fc1dfc43da4925798b1b39eca8e1f927

000000008B100BD8
delete from WRH$_SESSMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

0000000092C68DE8
delete from WRH$_SESSMETRIC_HISTORY tab where (:beg_snap <= tab.snap_id and         tab.snap_id <= :end_snap and         dbid = :dbid)
   and not exists (select 1 from WRM$_BASELINE b                    where (tab.dbid = b.dbid) and                          (tab.snap_id
 >= b.start_snap_id) and                          (tab.snap_id <= b.end_snap_id))

000000008B392AF0
UPDATE RLM$SCHACTLIS

0000000060CC9AE0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

0000000088E890A0
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B219640
select min(minbkt),m

000000008B2E4028
select substrb(dump(

0000000088ED3680
SELECT RSPNAME NAME,

000000008C8517E0
select s.inst_id,s.kslwtsid,s.kslwtseq,e.kslednam, e.ksledp1,s.kslwtp1,s.kslwtp1r,e.ksledp2, s.kslwtp2,s.kslwtp2r,e.ksledp3,s.kslwtp3,s
.kslwtp3r, e.ksledclassid, e.ksledclass#, e.ksledclass, decode(s.kslwtinwait,        0,decode(bitand(s.kslwtflags,256),
 0,-2,                 decode(round(s.kslwtstime/10000),                        0,-1,                        round(s.kslwtstime/10000))
),        0), decode(s.kslwtinwait,0,round((s.kslwtstime+s.kslwtltime)/1000000),  round(s.kslwtstime/1000000)), decode(s.kslwtinwait,1,
'WAITING',  decode(bitand(s.kslwtflags,256),0,'WAITED UNKNOWN TIME',   decode(round(s.kslwtstime/10000),0,'WAITED SHORT TIME',    'WAIT
ED KNOWN TIME'))), s.kslwtstime, decode(s.kslwtinwait,0,to_number(null),  decode(bitand(s.kslwtflags,64),64,0,s.kslwttrem)), s.kslwtlti
me from x$kslwt s, x$ksled e where s.kslwtevt=e.indx

0000000060C3D080
select s.inst_id,s.kslwtsid,s.kslwtseq,e.kslednam, e.ksledp1,s.kslwtp1,s.kslwtp1r,e.ksledp2, s.kslwtp2,s.kslwtp2r,e.ksledp3,s.kslwtp3,s
.kslwtp3r, e.ksledclassid, e.ksledclass#, e.ksledclass, decode(s.kslwtinwait,        0,decode(bitand(s.kslwtflags,256),
 0,-2,                 decode(round(s.kslwtstime/10000),                        0,-1,                        round(s.kslwtstime/10000))
),        0), decode(s.kslwtinwait,0,round((s.kslwtstime+s.kslwtltime)/1000000),  round(s.kslwtstime/1000000)), decode(s.kslwtinwait,1,
'WAITING',  decode(bitand(s.kslwtflags,256),0,'WAITED UNKNOWN TIME',   decode(round(s.kslwtstime/10000),0,'WAITED SHORT TIME',    'WAIT
ED KNOWN TIME'))), s.kslwtstime, decode(s.kslwtinwait,0,to_number(null),  decode(bitand(s.kslwtflags,64),64,0,s.kslwttrem)), s.kslwtlti
me from x$kslwt s, x$ksled e where s.kslwtevt=e.indx

0000000060F97840
select substrb(dump(

0000000060CD80F0
9b243b51d28e7ddfafb31da42f20435e

0000000060E76EC0
aed972e15d0178c4d13c5d8c7e468af5

0000000088F45748
d7fd8654aa8de535d6ece14654ebbbe

0000000088E10C38 SYS
WRH$_OSSTAT

000000008CAFB948
insert into indpart$ (obj#, dataobj#, bo#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, anal
yzetime, samplesize, rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, bhiboundval) values (:1, :2, :3, :4, :5, :6
, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, EMPTY_BLOB()) returning bhiboundval into :24

000000008C9D4940
insert into indpart$ (obj#, dataobj#, bo#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, anal
yzetime, samplesize, rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, bhiboundval) values (:1, :2, :3, :4, :5, :6
, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, EMPTY_BLOB()) returning bhiboundval into :24

000000008B139808
insert into indpart$ (obj#, dataobj#, bo#, part#, hiboundlen, hiboundval, flags, ts#, file#, block#, pctfree$, initrans, maxtrans, anal
yzetime, samplesize, rowcnt, blevel, leafcnt, distkey, lblkkey, dblkkey, clufac, pctthres$, bhiboundval) values (:1, :2, :3, :4, :5, :6
, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21, :22, :23, EMPTY_BLOB()) returning bhiboundval into :24

0000000088E76D50
UPDATE KET$_AUTOTASK_STATUS     SET AUTOTASK_STATUS = 2,         ABA_STATE = 1,         INSTANCE_NAME = (SELECT INSTANCE_NAME FROM V$IN
STANCE),         MW_NAME = :1,         MW_START_TIME = :2,         ABA_STATE_TIME = :3,         ABA_START_TIME = :4   WHERE DUMMY_KEY =
 99999

0000000088CC0B10
UPDATE KET$_AUTOTASK_STATUS     SET AUTOTASK_STATUS = 2,         ABA_STATE = 1,         INSTANCE_NAME = (SELECT INSTANCE_NAME FROM V$IN
STANCE),         MW_NAME = :1,         MW_START_TIME = :2,         ABA_STATE_TIME = :3,         ABA_START_TIME = :4   WHERE DUMMY_KEY =
 99999

0000000088D8ABF8
UPDATE KET$_AUTOTASK_STATUS     SET AUTOTASK_STATUS = 2,         ABA_STATE = 1,         INSTANCE_NAME = (SELECT INSTANCE_NAME FROM V$IN
STANCE),         MW_NAME = :1,         MW_START_TIME = :2,         ABA_STATE_TIME = :3,         ABA_START_TIME = :4   WHERE DUMMY_KEY =
 99999

000000008B3DCA28
UPDATE KET$_AUTOTASK_STATUS     SET AUTOTASK_STATUS = 2,         ABA_STATE = 1,         INSTANCE_NAME = (SELECT INSTANCE_NAME FROM V$IN
STANCE),         MW_NAME = :1,         MW_START_TIME = :2,         ABA_STATE_TIME = :3,         ABA_START_TIME = :4   WHERE DUMMY_KEY =
 99999

0000000088C859F8
DELETE WRI$_SQLSET_W

0000000092CFCA10
SELECT PROPERTY FROM SYS.WRI$_ADV_DEFINITIONS WHERE ID = :B1

000000008C92A968
SELECT PROPERTY FROM SYS.WRI$_ADV_DEFINITIONS WHERE ID = :B1

000000008B3E0C60
f951e7d28fa2e7da963df1b83bcb8c28

000000008B111760
8b57fc6115d21182d6633719ae0dfc0d

000000008B11F5D8
/* SQL Analyze(1) */

000000008C9FC618
select /*+  no_paral

0000000092C3A898
1f4aea65c72e75a1ea7c23ed372f2f31

0000000088C54998
5d281913a66764cc564abe2267a25645

000000008B13B478 SYS
RE$COLUMN_VALUE_LIST

0000000092EBED40 SYS
GV$SYSTEM_EVENT

0000000088C77090 SYS
SCHEDULER$_JOB_STEP_TYPE

0000000060E1FF70
da0f5d5885f338c29aeb8ffd394a9d23

000000008B1DEC48
DECLARE job BINARY_INTEGER := :job; next_date DATE := :mydate;  broken BOOLEAN := FALSE; BEGIN wwv_flow_mail.push_queue(wwv_flow_platfo
rm.get_preference('SMTP_HOST_ADDRESS'),wwv_flow_platform.get_preference('SMTP_HOST_PORT')); :mydate := next_date; IF broken THEN :b :=
1; ELSE :b := 0; END IF; END;

000000008B21B640
DECLARE job BINARY_INTEGER := :job; next_date DATE := :mydate;  broken BOOLEAN := FALSE; BEGIN wwv_flow_mail.push_queue(wwv_flow_platfo
rm.get_preference('SMTP_HOST_ADDRESS'),wwv_flow_platform.get_preference('SMTP_HOST_PORT')); :mydate := next_date; IF broken THEN :b :=
1; ELSE :b := 0; END IF; END;

000000006533AC10 $BUILD$
98bfd6ee86de8bd6

0000000088E2CB08
DELETE FROM SYS.SCHE

0000000088E95F58
7bca5ce219d8b8add07674a81178396f

0000000088FE88F0
78f31d58b5a25ff35695bdd4e4a5ba

000000008B29D110
SELECT NAME FROM SYS

0000000060D28010
select substrb(dump(

0000000060E848B0
93e68bd5f62696436065a5b1b1a56b6

000000008B096980
INSERT INTO SYS.AUX_

000000008CA7F5C8
select procedure#,procedurename,properties,itypeobj# from procedureinfo$ where obj#=:1 order by procedurename desc, overload# desc

0000000092D143B8
select procedure#,procedurename,properties,itypeobj# from procedureinfo$ where obj#=:1 order by procedurename desc, overload# desc

0000000088FEAE40
select procedure#,procedurename,properties,itypeobj# from procedureinfo$ where obj#=:1 order by procedurename desc, overload# desc

000000008CAA6B90
select procedure#,procedurename,properties,itypeobj# from procedureinfo$ where obj#=:1 order by procedurename desc, overload# desc

000000008CA7FA48
select procedure#,procedurename,properties,itypeobj# from procedureinfo$ where obj#=:1 order by procedurename desc, overload# desc

000000008B257A48
f62ff30b38867e865452f06e98caec8

0000000092D2F038 SYS
GV$SGA_TARGET_ADVICE

0000000088EF9D78
8baacead941e9dac41dc08ef5e55e383

0000000060E12490 SYS
DBMS_LOGREP_LIB

0000000060DC1F88
acc84660c4ff0cdebd5318b24a0c520e

000000008B15F0A0
/* SQL Analyze(1) */

000000008C9D5BC8
select sequence#, id, name, requests,          cpu_wait_time, cpu_waits, consumed_cpu_time, yields,          cpu_decisions, cpu_decisio
ns_exclusive,          cpu_decisions_won,          active_sess_limit_hit, undo_limit_hit,          switches_in_cpu_time, switches_out_c
pu_time,          switches_in_io_megabytes, switches_out_io_megabytes,          switches_in_io_requests, switches_out_io_requests,
     sql_canceled,          active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,          queued_time, queue_time_outs,
  io_service_time, io_service_waits,          small_read_megabytes, small_write_megabytes,          large_read_megabytes, large_write_m
egabytes,          small_read_requests, small_write_requests,          large_read_requests, large_write_requests,          pqs_complete
d, pq_servers_used, pqs_queued,          pq_active_time, pq_queued_time, pq_queue_time_outs          from gv$rsrc_cons_group_history
       where inst_id = userenv('instance')

0000000088D34710
select sequence#, id, name, requests,          cpu_wait_time, cpu_waits, consumed_cpu_time, yields,          cpu_decisions, cpu_decisio
ns_exclusive,          cpu_decisions_won,          active_sess_limit_hit, undo_limit_hit,          switches_in_cpu_time, switches_out_c
pu_time,          switches_in_io_megabytes, switches_out_io_megabytes,          switches_in_io_requests, switches_out_io_requests,
     sql_canceled,          active_sess_killed, idle_sess_killed, idle_blkr_sess_killed,          queued_time, queue_time_outs,
  io_service_time, io_service_waits,          small_read_megabytes, small_write_megabytes,          large_read_megabytes, large_write_m
egabytes,          small_read_requests, small_write_requests,          large_read_requests, large_write_requests,          pqs_complete
d, pq_servers_used, pqs_queued,          pq_active_time, pq_queued_time, pq_queue_time_outs          from gv$rsrc_cons_group_history
       where inst_id = userenv('instance')

000000008B3ABCD8
SELECT GA.VALUE FROM SYS.SCHEDULER$_GLOBAL_ATTRIBUTE GA, OBJ$ GO WHERE GA.OBJ# = GO.OBJ# AND GO.NAME = 'LOG_HISTORY'

000000008C983F58
SELECT GA.VALUE FROM SYS.SCHEDULER$_GLOBAL_ATTRIBUTE GA, OBJ$ GO WHERE GA.OBJ# = GO.OBJ# AND GO.NAME = 'LOG_HISTORY'

000000008B2B9968
SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,DECODE(B.TABLESPACE_NAME,NULL,'None',B.TABLESPACE_NAME) AS TABLESPACE_NAME,B.INDEX_
TYPE,B.DEGREE, ROUND(C.BYTES / 1024 / 1024) AS INDEX_MB, A.DESCEND, CASE WHEN B.STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, DE
CODE(TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi'),NULL,'None', TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi')) AS LAST_ANALYZED, CASE WHEN B.VI
SIBILITY = 'VISIBLE' THEN 'YES' ELSE 'NO ' END VISIBILITY, CASE WHEN UNIQUENESS = 'UNIQUE' THEN 'YES' ELSE 'NO ' END UNIQUENESS FROM DB
A_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C WHERE A.INDEX_NAME = B.INDEX_NAME AND A.TABLE_NAME = :B2 AND A.INDEX_OWNER = :B1 AND C.S
EGMENT_NAME = A.INDEX_NAME ORDER BY INDEX_NAME, COLUMN_POSITION

0000000088EBA800
SELECT A.INDEX_NAME,A.COLUMN_NAME,A.COLUMN_POSITION,DECODE(B.TABLESPACE_NAME,NULL,'None',B.TABLESPACE_NAME) AS TABLESPACE_NAME,B.INDEX_
TYPE,B.DEGREE, ROUND(C.BYTES / 1024 / 1024) AS INDEX_MB, A.DESCEND, CASE WHEN B.STATUS = 'UNUSABLE' THEN 'NO' ELSE 'YES' END USABLE, DE
CODE(TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi'),NULL,'None', TO_CHAR(B.LAST_ANALYZED,'yymmdd hh24:mi')) AS LAST_ANALYZED, CASE WHEN B.VI
SIBILITY = 'VISIBLE' THEN 'YES' ELSE 'NO ' END VISIBILITY, CASE WHEN UNIQUENESS = 'UNIQUE' THEN 'YES' ELSE 'NO ' END UNIQUENESS FROM DB
A_IND_COLUMNS A, DBA_INDEXES B, DBA_SEGMENTS C WHERE A.INDEX_NAME = B.INDEX_NAME AND A.TABLE_NAME = :B2 AND A.INDEX_OWNER = :B1 AND C.S
EGMENT_NAME = A.INDEX_NAME ORDER BY INDEX_NAME, COLUMN_POSITION

000000008CBC10D0 SYS
WRH$_DB_CACHE_ADVICE_BL

0000000060D7C588
ee0939a6dd26084ecdd0a459fdf0611a

000000008CAC1468
DELETE FROM SYS.EXPA

000000008CB7FC18
fbdd5a53ea38d7d96fbce048f1b2fc9c

00000000653051B0
69a71095f0b24abc1ffd3a1fa391b9e

000000008CA4A960
INSERT INTO RLM$SCHA

0000000088D79BB0
10cbdccb900c34493de65a98b86111a

000000008B3FC7E8
a82edba0645bf0edd1b2ca969dc8b914

000000008CB98948
78e49a0a9bdc456ea67cc1d4623d1c75

000000008C958848
select OBJOID,  CLSOID, RUNTIME, PRI, JOBTYPE,  SCHLIM,  WT, INST,  RUNNOW, ENQ_SCHLIM from ( select a.obj# OBJOID, a.class_oid CLSOID,
    decode(bitand(a.flags, 16384), 0, a.next_run_date,           a.last_enabled_time) RUNTIME,    (2*a.priority +     decode(bitand(a.j
ob_status, 4), 0, 0,            decode(a.running_instance, :1, -1, 1))) PRI,    1 JOBTYPE,    decode(a.schedule_limit, NULL,
decode(bitand(a.flags, 4194304), 4194304, p.schedule_limit, NULL),           a.schedule_limit) SCHLIM,    a.job_weight WT,    decode(a.
running_instance, NULL, 0, a.running_instance) INST,    decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,    decode(bitand(a.job_status,
8388608), 0, 0, 1) ENQ_SCHLIM  from sys.scheduler$_job a, sys.scheduler$_program p, v$database v,                      v$instance i  wh
ere a.program_oid = p.obj#(+)    and bitand(a.job_status, 515) = 1    and bitand(a.flags, 1048576) = 0    and ((bitand(a.flags, 1342177
28 + 268435456) = 0) or         (bitand(a.job_status, 1

000000008B0ACA00
select OBJOID,  CLSOID, RUNTIME, PRI, JOBTYPE,  SCHLIM,  WT, INST,  RUNNOW, ENQ_SCHLIM from ( select a.obj# OBJOID, a.class_oid CLSOID,
    decode(bitand(a.flags, 16384), 0, a.next_run_date,           a.last_enabled_time) RUNTIME,    (2*a.priority +     decode(bitand(a.j
ob_status, 4), 0, 0,            decode(a.running_instance, :1, -1, 1))) PRI,    1 JOBTYPE,    decode(a.schedule_limit, NULL,
decode(bitand(a.flags, 4194304), 4194304, p.schedule_limit, NULL),           a.schedule_limit) SCHLIM,    a.job_weight WT,    decode(a.
running_instance, NULL, 0, a.running_instance) INST,    decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,    decode(bitand(a.job_status,
8388608), 0, 0, 1) ENQ_SCHLIM  from sys.scheduler$_job a, sys.scheduler$_program p, v$database v,                      v$instance i  wh
ere a.program_oid = p.obj#(+)    and bitand(a.job_status, 515) = 1    and bitand(a.flags, 1048576) = 0    and ((bitand(a.flags, 1342177
28 + 268435456) = 0) or         (bitand(a.job_status, 1

0000000088F52DE8
select OBJOID,  CLSOID, RUNTIME, PRI, JOBTYPE,  SCHLIM,  WT, INST,  RUNNOW, ENQ_SCHLIM from ( select a.obj# OBJOID, a.class_oid CLSOID,
    decode(bitand(a.flags, 16384), 0, a.next_run_date,           a.last_enabled_time) RUNTIME,    (2*a.priority +     decode(bitand(a.j
ob_status, 4), 0, 0,            decode(a.running_instance, :1, -1, 1))) PRI,    1 JOBTYPE,    decode(a.schedule_limit, NULL,
decode(bitand(a.flags, 4194304), 4194304, p.schedule_limit, NULL),           a.schedule_limit) SCHLIM,    a.job_weight WT,    decode(a.
running_instance, NULL, 0, a.running_instance) INST,    decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,    decode(bitand(a.job_status,
8388608), 0, 0, 1) ENQ_SCHLIM  from sys.scheduler$_job a, sys.scheduler$_program p, v$database v,                      v$instance i  wh
ere a.program_oid = p.obj#(+)    and bitand(a.job_status, 515) = 1    and bitand(a.flags, 1048576) = 0    and ((bitand(a.flags, 1342177
28 + 268435456) = 0) or         (bitand(a.job_status, 1

0000000092D253E8
select OBJOID,  CLSOID, RUNTIME, PRI, JOBTYPE,  SCHLIM,  WT, INST,  RUNNOW, ENQ_SCHLIM from ( select a.obj# OBJOID, a.class_oid CLSOID,
    decode(bitand(a.flags, 16384), 0, a.next_run_date,           a.last_enabled_time) RUNTIME,    (2*a.priority +     decode(bitand(a.j
ob_status, 4), 0, 0,            decode(a.running_instance, :1, -1, 1))) PRI,    1 JOBTYPE,    decode(a.schedule_limit, NULL,
decode(bitand(a.flags, 4194304), 4194304, p.schedule_limit, NULL),           a.schedule_limit) SCHLIM,    a.job_weight WT,    decode(a.
running_instance, NULL, 0, a.running_instance) INST,    decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,    decode(bitand(a.job_status,
8388608), 0, 0, 1) ENQ_SCHLIM  from sys.scheduler$_job a, sys.scheduler$_program p, v$database v,                      v$instance i  wh
ere a.program_oid = p.obj#(+)    and bitand(a.job_status, 515) = 1    and bitand(a.flags, 1048576) = 0    and ((bitand(a.flags, 1342177
28 + 268435456) = 0) or         (bitand(a.job_status, 1

0000000088DADE28
select OBJOID,  CLSOID, RUNTIME, PRI, JOBTYPE,  SCHLIM,  WT, INST,  RUNNOW, ENQ_SCHLIM from ( select a.obj# OBJOID, a.class_oid CLSOID,
    decode(bitand(a.flags, 16384), 0, a.next_run_date,           a.last_enabled_time) RUNTIME,    (2*a.priority +     decode(bitand(a.j
ob_status, 4), 0, 0,            decode(a.running_instance, :1, -1, 1))) PRI,    1 JOBTYPE,    decode(a.schedule_limit, NULL,
decode(bitand(a.flags, 4194304), 4194304, p.schedule_limit, NULL),           a.schedule_limit) SCHLIM,    a.job_weight WT,    decode(a.
running_instance, NULL, 0, a.running_instance) INST,    decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,    decode(bitand(a.job_status,
8388608), 0, 0, 1) ENQ_SCHLIM  from sys.scheduler$_job a, sys.scheduler$_program p, v$database v,                      v$instance i  wh
ere a.program_oid = p.obj#(+)    and bitand(a.job_status, 515) = 1    and bitand(a.flags, 1048576) = 0    and ((bitand(a.flags, 1342177
28 + 268435456) = 0) or         (bitand(a.job_status, 1

0000000092EB4158
select OBJOID,  CLSOID, RUNTIME, PRI, JOBTYPE,  SCHLIM,  WT, INST,  RUNNOW, ENQ_SCHLIM from ( select a.obj# OBJOID, a.class_oid CLSOID,
    decode(bitand(a.flags, 16384), 0, a.next_run_date,           a.last_enabled_time) RUNTIME,    (2*a.priority +     decode(bitand(a.j
ob_status, 4), 0, 0,            decode(a.running_instance, :1, -1, 1))) PRI,    1 JOBTYPE,    decode(a.schedule_limit, NULL,
decode(bitand(a.flags, 4194304), 4194304, p.schedule_limit, NULL),           a.schedule_limit) SCHLIM,    a.job_weight WT,    decode(a.
running_instance, NULL, 0, a.running_instance) INST,    decode(bitand(a.flags, 16384), 0, 0, 1) RUNNOW,    decode(bitand(a.job_status,
8388608), 0, 0, 1) ENQ_SCHLIM  from sys.scheduler$_job a, sys.scheduler$_program p, v$database v,                      v$instance i  wh
ere a.program_oid = p.obj#(+)    and bitand(a.job_status, 515) = 1    and bitand(a.flags, 1048576) = 0    and ((bitand(a.flags, 1342177
28 + 268435456) = 0) or         (bitand(a.job_status, 1

0000000088C6CB50
3b23e99f4c8dbdc6f84030a5215b4fc

0000000060C90B50
select name ,count(*) from v$buffer_pool group by name

000000008B0E36F8
select name ,count(*) from v$buffer_pool group by name

000000008B28E958
SELECT JOB FROM USER

0000000060FCE4D0
update WRI$_DBU_CPU_USAGE_SAMPLE set last_sample_date     = :bind1, last_sample_date_num = :bind2, total_samples        = total_samples
 + 1, last_sample_period   = decode(total_samples, 0, 0, :bind3 - last_sample_date_num) where dbid = :dbid and version = :version

0000000088E7E5D0
update WRI$_DBU_CPU_USAGE_SAMPLE set last_sample_date     = :bind1, last_sample_date_num = :bind2, total_samples        = total_samples
 + 1, last_sample_period   = decode(total_samples, 0, 0, :bind3 - last_sample_date_num) where dbid = :dbid and version = :version

0000000088C82E18
update WRI$_DBU_CPU_USAGE_SAMPLE set last_sample_date     = :bind1, last_sample_date_num = :bind2, total_samples        = total_samples
 + 1, last_sample_period   = decode(total_samples, 0, 0, :bind3 - last_sample_date_num) where dbid = :dbid and version = :version

000000008B2A97F8
update WRI$_DBU_CPU_USAGE_SAMPLE set last_sample_date     = :bind1, last_sample_date_num = :bind2, total_samples        = total_samples
 + 1, last_sample_period   = decode(total_samples, 0, 0, :bind3 - last_sample_date_num) where dbid = :dbid and version = :version

0000000088D93098
select set_id,cnum_set,set_latch,nxt_repl,prv_repl,nxt_replax, prv_replax,cnum_repl,anum_repl, dbwr_num from x$kcbwds

000000008CA13910
select set_id,cnum_set,set_latch,nxt_repl,prv_repl,nxt_replax, prv_replax,cnum_repl,anum_repl, dbwr_num from x$kcbwds

000000008B28DDE8
select set_id,cnum_set,set_latch,nxt_repl,prv_repl,nxt_replax, prv_replax,cnum_repl,anum_repl, dbwr_num from x$kcbwds

0000000060ECBB00
select set_id,cnum_set,set_latch,nxt_repl,prv_repl,nxt_replax, prv_replax,cnum_repl,anum_repl, dbwr_num from x$kcbwds

0000000060F1AEE0
a458465a8a2413ef11ba8b29c5d37d31

000000008C8E3B98
select 1 from obj$ where name='DBA_QUEUE_SCHEDULES'

000000008CB92CC8
select 1 from obj$ where name='DBA_QUEUE_SCHEDULES'

000000008C8E3F28
select 1 from obj$ where name='DBA_QUEUE_SCHEDULES'

0000000088E1CEF8
1d029fd8290843508140fc1f79187f

000000008CB7EEB8
select RESOURCE_NAME, CURRENT_UTILIZATION, MAX_UTILIZATION,  INITIAL_ALLOCATION, LIMIT_VALUE from GV$RESOURCE_LIMIT where inst_id = USE
RENV('Instance')

000000008C84B490
select RESOURCE_NAME, CURRENT_UTILIZATION, MAX_UTILIZATION,  INITIAL_ALLOCATION, LIMIT_VALUE from GV$RESOURCE_LIMIT where inst_id = USE
RENV('Instance')

000000008B2D5200
SELECT METRIC_ID FRO

000000008C8B78E8
cae5c5d7427b741e52368fb7bdb1d811

0000000088E4F738
4266ad41f92a147ae48039bfb85647c0

000000008C94D280
select   schedule_mode, start_calibrate, num_votes,   synced_time, last_vote, status from   WRI$_SCH_CONTROL where   schedule_id = :id

0000000088F70770
select   schedule_mode, start_calibrate, num_votes,   synced_time, last_vote, status from   WRI$_SCH_CONTROL where   schedule_id = :id

000000008B1975A8
select   schedule_mode, start_calibrate, num_votes,   synced_time, last_vote, status from   WRI$_SCH_CONTROL where   schedule_id = :id

0000000060F3A020
select   schedule_mode, start_calibrate, num_votes,   synced_time, last_vote, status from   WRI$_SCH_CONTROL where   schedule_id = :id

000000008C94D700
select   schedule_mode, start_calibrate, num_votes,   synced_time, last_vote, status from   WRI$_SCH_CONTROL where   schedule_id = :id

0000000060E22D10
SELECT BDF.FILE# DFN

000000008B220650
select cachedblk, cachehit, logicalread from tab_stats$ where obj#=:1

000000008B218D90
select cachedblk, cachehit, logicalread from tab_stats$ where obj#=:1

000000008CBE05E0
2c8ce596f4c97ec8052d45a8caf2b90

000000008CA41C10
5bcf9f49f8ae39470a6d57e18242a83

000000008B0884F0
SELECT /*+ leading(u

0000000088C60D58
SELECT SU.NAME, SO.NAME, A.STATSTYPE#, C.INTCOL# FROM ASSOCIATION$ A, OBJ$ O, USER$ U, COL$ C, OBJ$ SO, USER$ SU, COLTYPE$ CT, OBJ$ TY
WHERE O.OWNER#=U.USER# AND A.OBJ#=TY.OBJ# AND O.OBJ#=C.OBJ# AND C.INTCOL#=CT.INTCOL# AND O.OBJ#=CT.OBJ# AND CT.TOID=TY.OID$ AND A.STATS
TYPE#=SO.OBJ# AND SO.OWNER#=SU.USER# AND O.TYPE#=2 AND O.NAME=:B3 AND U.NAME=:B2 AND C.NAME=:B1

000000008CA50CF0
SELECT SU.NAME, SO.NAME, A.STATSTYPE#, C.INTCOL# FROM ASSOCIATION$ A, OBJ$ O, USER$ U, COL$ C, OBJ$ SO, USER$ SU, COLTYPE$ CT, OBJ$ TY
WHERE O.OWNER#=U.USER# AND A.OBJ#=TY.OBJ# AND O.OBJ#=C.OBJ# AND C.INTCOL#=CT.INTCOL# AND O.OBJ#=CT.OBJ# AND CT.TOID=TY.OID$ AND A.STATS
TYPE#=SO.OBJ# AND SO.OWNER#=SU.USER# AND O.TYPE#=2 AND O.NAME=:B3 AND U.NAME=:B2 AND C.NAME=:B1

000000008B07D780
SELECT SU.NAME, SO.NAME, A.STATSTYPE#, C.INTCOL# FROM ASSOCIATION$ A, OBJ$ O, USER$ U, COL$ C, OBJ$ SO, USER$ SU, COLTYPE$ CT, OBJ$ TY
WHERE O.OWNER#=U.USER# AND A.OBJ#=TY.OBJ# AND O.OBJ#=C.OBJ# AND C.INTCOL#=CT.INTCOL# AND O.OBJ#=CT.OBJ# AND CT.TOID=TY.OID$ AND A.STATS
TYPE#=SO.OBJ# AND SO.OWNER#=SU.USER# AND O.TYPE#=2 AND O.NAME=:B3 AND U.NAME=:B2 AND C.NAME=:B1

000000008C989100
f8bce8f03ec00cfae07222305734628d

000000008CAB6610
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

000000008C890FA0
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

0000000088CAEFD8
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

000000008B3458F0
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

000000008B30EC28
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

0000000060F6B810
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

0000000088CB9D18
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

000000008B2E7198
SELECT OBJOID, CLSOID,         (2*PRI +          DECODE(BITAND(STATUS,  4), 0, 0,                 DECODE(INST, :1, -1, 1))),         WT
, INST,         DECODE(BITAND(STATUS, 8388608), 0, 0, 1), SCHLIM, ISLW, INST_ID  FROM (  select a.obj# OBJOID, a.class_oid CLSOID, a.jo
b_status STATUS,         a.flags FLAGS, a.priority PRI, a.job_weight WT,         decode(a.running_instance, NULL, 0, a.running_instance
) INST,         a.schedule_id SCHOID, a.last_start_date LSDATE,         a.last_enabled_time LETIME,         decode(a.schedule_limit, NU
LL,           decode(bitand(a.flags, 4194304), 4194304, b.schedule_limit, NULL),                a.schedule_limit) SCHLIM, 0 ISLW, a.ins
tance_id INST_ID  from sys.scheduler$_job a, sys.scheduler$_program b, v$database v  where a.program_oid = b.obj#(+)    and (a.database
_role = v.database_role      or (a.database_role is null and v.database_role = 'PRIMARY'))  union all  select c.obj#, c.class_oid, c.jo
b_status, c.flags, d.priority,         d.job_weight,

0000000088C8E588
UPDATE WRI$_SQLSET_S

0000000088E45AB8
select count(*) from sys.scheduler$_program_argument where oid = :1

0000000088E45F38
select count(*) from sys.scheduler$_program_argument where oid = :1

0000000060E4E490
fea0b3854397334743f873b6fd0acb78

0000000060D28A80
table_c_a_24f_1a_0_0

0000000088E8D830
table_c_a_24f_1a_0_0

000000008CB30898 $BUILD$
89d1d3e5c411da7e

0000000088E911E0
UPDATE RLM$PRIMEVTTY

000000008CAB0700
RECO.ORACLE.COM

000000008B0446B0
SELECT FORMAT_MASK F

0000000060C95920
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008B15C940
declare     v_cnt number;     v_open_mode varchar2(100) :=null;     v_protection_mode  varchar2(100) :=null;     v_switchover  varchar2
(100) :=null;     v_force_logging varchar2(100) :=null;      cursor c_seg is select sum(bytes/1024/1024/1024) G ,partition_name from db
a_segments where segment_name = upper(:table_name) and owner = upper(:owner) group by partition_name order by partition_name;     v_seg
 c_seg%rowtype;     cursor c_stats is SELECT  A.COLUMN_NAME,      decode(t.DATA_TYPE,            'NUMBER',t.DATA_TYPE||'('||
 decode(t.DATA_PRECISION,                   null,t.DATA_LENGTH||')',                   t.DATA_PRECISION||','||t.DATA_SCALE||')'),
             'DATE',t.DATA_TYPE,                   'LONG',t.DATA_TYPE,                   'LONG RAW',t.DATA_TYPE,                   'ROW
ID',t.DATA_TYPE,                   'MLSLABEL',t.DATA_TYPE,                   t.DATA_TYPE||'('||t.DATA_LENGTH||')') ||' '||     decode(t
.nullable,               'N','NOT NULL',

000000008C898C58
INSERT INTO EXFSYS.R

000000008B2AA658 SYS
V$LOG_HISTORY

0000000060E22000 ORACLE_OCM
V$PARAMETER

0000000088D59C08
70f310d923e756409cbe247a3c4bf3c8

0000000088E77F50
6e78bf7eeda8c7df1468aba2d2bfee0a

000000008CA4AF90 SYS
AQ$SCHEDULER$_EVENT_QTAB

0000000088E3A488 SYS
WRH$_SYSSTAT_PK

000000008C897FB8 SYS
DBMS_PROPAGATION_INTERNAL

000000008B0EB408
7abe1f806b653253169aec677d7ed3c6

0000000088E6A780 SYS
RECYCLEBIN$

0000000060F5A7C0
a44cf0da90d3ff7432a0b0119fa0e496

000000008C986A70
 SELECT DISTINCT e.instance_number  FROM    WRM$_SNAP_ERROR e ,  X$KEHSQT x  WHERE e.table_name = x.name   AND  x.ver_type = :edge  AND
  x.critical = 'Y'   AND  e.dbid = :dbid  AND e.21:22:59 sys@AA>exit
21:23:34 sys@AA>@whats_changed2.sql
Enter value for begin_time: sysdate-1
old  33:     --and s.begin_interval_time > &begin_time
new  33:     --and s.begin_interval_time > sysdate-1
)
*
ERROR at line 37:
ORA-00933: SQL command not properly ended


Elapsed: 00:00:00.00
21:23:39 sys@AA>exit
21:24:07 sys@AA>@snapper_ash1hour
ON CPU User I/O Network Commit Application Concurrency Cluster Configuration Administrative System I/O Scheduler Queueing Other Others for Wait_class%

SQL_ID        Active%  AAS Wait_class%                                                                 COMMAND  MACHINE                   PROCEDURE_SQL
------------- ------- ---- --------------------------------------------------------------------------- -------- ------------------------- -------------
Null          96.43%    10   59%   0%   0%   4%   0%   4%   0%   0%   0%  33%   0%   0%   0%   0%      Others   centos7
bunssq950snhf  3.57%     0  100%   0%   0%   0%   0%   0%   0%   0%   0%   0%   0%   0%   0%   0%      INSERT   centos7

Elapsed: 00:00:00.04
Which Object Caused The Library Cache Wait

no rows selected

Elapsed: 00:00:00.04
21:24:15 sys@AA>
21:24:40 sys@AA>
21:24:40 sys@AA>exit
21:25:01 sys@AA>@tq_stat.sql

no rows selected

Elapsed: 00:00:00.01
21:25:02 sys@AA>
21:25:03 sys@AA>@redo.sql

Session altered.

Elapsed: 00:00:00.00

no rows selected

Elapsed: 00:00:00.01

    GROUP#    THREAD#  SEQUENCE#     FIRST_CHANGE#      NEXT_CHANGE# STATUS           ARC REDO_SIZE MEMBER
---------- ---------- ---------- ----------------- ----------------- ---------------- --- --------- ------------------------------------------------------------
         1          1          4            972670           1098121 INACTIVE         NO       500M /data/oradata/aa/redo01.log
         2          1          5           1098121           1098124 INACTIVE         NO       500M /data/oradata/aa/redo02.log
         3          1          6           1098124   281474976710655 CURRENT          NO       500M /data/oradata/aa/redo03.log

Elapsed: 00:00:00.01

no rows selected

Elapsed: 00:00:00.00
21:25:18 sys@AA>
21:25:18 sys@AA>
21:25:18 sys@AA>exit
21:39:31 sys@AA>exit
21:41:49 sys@AA>@tbs

Tablespace Used Information
======================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
| TABLESPACE_NAME     | Used_Pct% |                 Used | AUTOEXTEND | TOTAL_GB | USED_GB | FREE_GB | FILE_CNT | STATUS |  CONTENTS | EXTENT_MANAGE | MAXSIZE(MB) |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
| SYSTEM              |      2.3% | #                    |        YES |       .8 |      .7 |       0 |        1 | ONLINE | PERMANENT |         LOCAL |        32767|
| SYSAUX              |      1.8% | #                    |        YES |       .6 |      .6 |       0 |        1 | ONLINE | PERMANENT |         LOCAL |        32767|
| UNDOTBS1            |       .1% | #                    |        YES |       .1 |       0 |      .1 |        1 | ONLINE |      UNDO |         LOCAL |        32767|
| USERS               |        4% | #                    |        YES |      1.4 |     1.3 |      .1 |        1 | ONLINE | PERMANENT |         LOCAL |        32767|
| TEMP                |        0% | #                    |        YES |       .3 |       0 |      .3 |        1 | ONLINE | TEMPORARY |         LOCAL |        32767|
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

There is no Session that Use Temp Tablespace Disk Space
======================

There is no Session that PGA Memory Usage > 10M for Per Session
======================

Fast Recovery Dest Information
======================
------------------------------------------------------------------------------------------------------------
| RECOVERY_DEST                                                                                | Used_Pct% |
------------------------------------------------------------------------------------------------------------
| /u01/app/oracle/fast_recovery_area                                                           |          0|
------------------------------------------------------------------------------------------------------------

Top 20 Big Table Information in The Database
======================
----------------------------------------------------------------------------------------------------
| OWNER            | SEGMENT_NAME                     |   SIZE(MB) | PARTITION_NAME                |
----------------------------------------------------------------------------------------------------
| SCOTT            | TEST                             |       1283 | None                          |
| SYS              | IDL_UB1$                         |        272 | None                          |
| SYS              | SOURCE$                          |         72 | None                          |
| SYS              | IDL_UB2$                         |         31 | None                          |
| SYS              | TEST                             |         20 | None                          |
| SYS              | ARGUMENT$                        |         12 | None                          |
| SCOTT            | TEST1                            |         12 | None                          |
| SYS              | JAVA$MC$                         |         12 | None                          |
| SYS              | IDL_CHAR$                        |         11 | None                          |
| SYS              | WRH$_SYSMETRIC_HISTORY           |         10 | None                          |
| SYS              | OBJ$                             |          9 | None                          |
| SCOTT            | HASH_TABLE.PART01                |          8 | PART01                        |
| SCOTT            | HASH_TABLE.PART03                |          8 | PART03                        |
| SCOTT            | HASH_TABLE.PART02                |          8 | PART02                        |
| SYS              | VIEW$                            |          7 | None                          |
| SYS              | WRH$_SQL_PLAN                    |          7 | None                          |
| SYS              | DEPENDENCY$                      |          7 | None                          |
| SYS              | IDL_SB4$                         |          5 | None                          |
| SYS              | WRH$_LATCH.WRH$_LATCH_2188720451 |          5 | WRH$_LATCH_2188720451_0       |
| SYS              | ACCESS$                          |          4 | None                          |
----------------------------------------------------------------------------------------------------

Top 20 Big LOB Information in The Database (When Migrating Database,<purge dba_recyclebin;> can purge unnecessary LOB)
======================
-------------------------------------------------------------------------------------------------------------------
| OWNER            | TABLE_NAME                | COLUMN_NAME          | SEGMENT_NAME                   | SIZE(MB) |
-------------------------------------------------------------------------------------------------------------------
| SYS              | AW$AWXML                  | AWLOB                | SYS_LOB0000077623C00004$$      |        16|
| SYS              | METASTYLESHEET            | STYLESHEET           | SYS_LOB0000001100C00003$$      |         9|
| SYS              | WRH$_SQL_PLAN             | OTHER_XML            | SYS_LOB0000006417C00038$$      |         9|
| SYS              | AW$AWMD                   | AWLOB                | SYS_LOB0000077608C00004$$      |         7|
| SYS              | WRH$_SQLTEXT              | SQL_TEXT             | SYS_LOB0000006409C00004$$      |         7|
| SYS              | AW$AWCREATE               | AWLOB                | SYS_LOB0000077613C00004$$      |         4|
| SYSTEM           | LOGMNR_INTEGRATED_SPILL$  | SPILL_DATA           | SYS_LOB0000001180C00009$$      |         4|
| SYS              | AW$EXPRESS                | AWLOB                | SYS_LOB0000077603C00004$$      |         3|
| SYS              | AW$AWREPORT               | AWLOB                | SYS_LOB0000077628C00004$$      |         2|
| SYS              | AW$AWCREATE10G            | AWLOB                | SYS_LOB0000077618C00004$$      |         2|
-------------------------------------------------------------------------------------------------------------------
Elapsed: 00:00:01.72

ASM Diskgroup is not in Useage
======================
Elapsed: 00:00:00.07
asm_rebalance_file
Elapsed: 00:00:00.02
Show the overall situation of table size ...

less_2G%  less_4G%  less_6G%  less_8G%  less_10G% less_20G% less_30G% less_40G% less_50G% less_60G% less_70G% less_80G% less_90G% less_100G more_100G
--------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- ---------
162 100%  0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%
Elapsed: 00:00:00.19
21:41:52 sys@AA>@tbs

Tablespace Used Information
======================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
| TABLESPACE_NAME     | Used_Pct% |                 Used | AUTOEXTEND | TOTAL_GB | USED_GB | FREE_GB | FILE_CNT | STATUS |  CONTENTS | EXTENT_MANAGE | MAXSIZE(MB) |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
| SYSTEM              |      2.3% | #                    |        YES |       .8 |      .7 |       0 |        1 | ONLINE | PERMANENT |         LOCAL |        32767|
| SYSAUX              |      1.8% | #                    |        YES |       .6 |      .6 |       0 |        1 | ONLINE | PERMANENT |         LOCAL |        32767|
| UNDOTBS1            |       .1% | #                    |        YES |       .1 |       0 |      .1 |        1 | ONLINE |      UNDO |         LOCAL |        32767|
| USERS               |        4% | #                    |        YES |      1.4 |     1.3 |      .1 |        1 | ONLINE | PERMANENT |         LOCAL |        32767|
| TEMP                |        0% | #                    |        YES |       .3 |       0 |      .3 |        1 | ONLINE | TEMPORARY |         LOCAL |        32767|
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

There is no Session that Use Temp Tablespace Disk Space
======================

There is no Session that PGA Memory Usage > 10M for Per Session
======================

Fast Recovery Dest Information
======================
------------------------------------------------------------------------------------------------------------
| RECOVERY_DEST                                                                                | Used_Pct% |
------------------------------------------------------------------------------------------------------------
| /u01/app/oracle/fast_recovery_area                                                           |          0|
------------------------------------------------------------------------------------------------------------

Top 20 Big Table Information in The Database
======================
----------------------------------------------------------------------------------------------------
| OWNER            | SEGMENT_NAME                     |   SIZE(MB) | PARTITION_NAME                |
----------------------------------------------------------------------------------------------------
| SCOTT            | TEST                             |       1283 | None                          |
| SYS              | IDL_UB1$                         |        272 | None                          |
| SYS              | SOURCE$                          |         72 | None                          |
| SYS              | IDL_UB2$                         |         31 | None                          |
| SYS              | TEST                             |         20 | None                          |
| SYS              | ARGUMENT$                        |         12 | None                          |
| SCOTT            | TEST1                            |         12 | None                          |
| SYS              | JAVA$MC$                         |         12 | None                          |
| SYS              | IDL_CHAR$                        |         11 | None                          |
| SYS              | WRH$_SYSMETRIC_HISTORY           |         10 | None                          |
| SYS              | OBJ$                             |          9 | None                          |
| SCOTT            | HASH_TABLE.PART01                |          8 | PART01                        |
| SCOTT            | HASH_TABLE.PART03                |          8 | PART03                        |
| SCOTT            | HASH_TABLE.PART02                |          8 | PART02                        |
| SYS              | VIEW$                            |          7 | None                          |
| SYS              | WRH$_SQL_PLAN                    |          7 | None                          |
| SYS              | DEPENDENCY$                      |          7 | None                          |
| SYS              | IDL_SB4$                         |          5 | None                          |
| SYS              | WRH$_LATCH.WRH$_LATCH_2188720451 |          5 | WRH$_LATCH_2188720451_0       |
| SYS              | ACCESS$                          |          4 | None                          |
----------------------------------------------------------------------------------------------------

Top 20 Big LOB Information in The Database (When Migrating Database,<purge dba_recyclebin;> can purge unnecessary LOB)
======================
-------------------------------------------------------------------------------------------------------------------
| OWNER            | TABLE_NAME                | COLUMN_NAME          | SEGMENT_NAME                   | SIZE(MB) |
-------------------------------------------------------------------------------------------------------------------
| SYS              | AW$AWXML                  | AWLOB                | SYS_LOB0000077623C00004$$      |        16|
| SYS              | METASTYLESHEET            | STYLESHEET           | SYS_LOB0000001100C00003$$      |         9|
| SYS              | WRH$_SQL_PLAN             | OTHER_XML            | SYS_LOB0000006417C00038$$      |         9|
| SYS              | AW$AWMD                   | AWLOB                | SYS_LOB0000077608C00004$$      |         7|
| SYS              | WRH$_SQLTEXT              | SQL_TEXT             | SYS_LOB0000006409C00004$$      |         7|
| SYS              | AW$AWCREATE               | AWLOB                | SYS_LOB0000077613C00004$$      |         4|
| SYSTEM           | LOGMNR_INTEGRATED_SPILL$  | SPILL_DATA           | SYS_LOB0000001180C00009$$      |         4|
| SYS              | AW$EXPRESS                | AWLOB                | SYS_LOB0000077603C00004$$      |         3|
| SYS              | AW$AWREPORT               | AWLOB                | SYS_LOB0000077628C00004$$      |         2|
| SYS              | AW$AWCREATE10G            | AWLOB                | SYS_LOB0000077618C00004$$      |         2|
-------------------------------------------------------------------------------------------------------------------
Elapsed: 00:00:01.46

ASM Diskgroup is not in Useage
======================
Elapsed: 00:00:00.00
asm_rebalance_file
Elapsed: 00:00:00.00
Show the overall situation of table size ...

less_2G%  less_4G%  less_6G%  less_8G%  less_10G% less_20G% less_30G% less_40G% less_50G% less_60G% less_70G% less_80G% less_90G% less_100G more_100G
--------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- --------- ---------
162 100%  0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%      0 0%
Elapsed: 00:00:00.21
21:42:05 sys@AA>
21:42:39 sys@AA>
21:42:39 sys@AA>
21:42:39 sys@AA>exit
21:42:49 sys@AA>@stats
last_analyzed < 7 and last_analyzed is null and stale_stats = 'YES'

OWNER                          TABLE_NAME                     STA LAST_ANALYZED_TIME
------------------------------ ------------------------------ --- -------------------
SCOTT                          ABC
SCOTT                          PDBA
SCOTT                          TEST1

Elapsed: 00:00:00.99


no rows selected

Elapsed: 00:00:00.14
table statistics are locked

no rows selected

Elapsed: 00:00:00.04
expired Index Statistics

OWNER                          TABLE_NAME                     INDEX_NAME                     STA LAST_ANALYZED_TIME
------------------------------ ------------------------------ ------------------------------ --- -------------------
SCOTT                          PDBA                           SYS_C0011088

Elapsed: 00:00:01.81

no rows selected

Elapsed: 00:00:00.64
21:42:54 sys@AA>
21:50:33 sys@AA>
21:50:34 sys@AA>exit
21:56:52 sys@AA>alter session set statistics_level = all;alter session set statistics_level = all;alter session set statistics_level = all;alter session set statistics_level = all;alter session set statistics_level = all;
alter session set statistics_level = all;alter session set statistics_level = all;alter session set statistics_level = all;alter session set statistics_level = all;alter session set statistics_level = all
                                        *
ERROR at line 1:
ORA-00911: invalid character


Elapsed: 00:00:00.01
21:57:30 sys@AA>
21:57:30 sys@AA>
21:57:30 sys@AA>
21:57:30 sys@AA>
21:57:31 sys@AA>alter session set statistics_level = all;

Session altered.

Elapsed: 00:00:00.00
21:57:35 sys@AA>