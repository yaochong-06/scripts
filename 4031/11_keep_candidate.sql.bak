CREATE TABLE LRU_TMP AS SELECT * FROM X$KSMLRU;

INSERT INTO LRU_TMP SELECT * FROM X$KSMLRU;

--Use the LRU_TMP table for analysis. You can use a query below to see more information on candidate code in the library cache.
SELECT S.SID, USERNAME, KSMLRCOM, KSMLRHON, KSMLRNUM, KSMLRSIZ, SQL_TEXT
FROM V$SQLAREA A, LRU_TMP K, V$SESSION S
WHERE KSMLRSIZ > 3000
AND A.ADDRESS=S.SQL_ADDRESS AND A.HASH_VALUE = S.SQL_HASH_VALUE
AND SADDR=KSMLRSES;
--You can see the candidates to pin from the query below

COL STORED_OBJECT FORMAT A40;
COL SQ_EXECUTIONS FORMAT 999,999;
SELECT /*+ ORDERED USE_HASH(D) USE_HASH(C) */
	O.KGLNAOWN||'.'||O.KGLNAOBJ STORED_OBJECT,
	SUM(C.KGLHDEXC) SQL_EXECUTIONS
FROM SYS.X$KGLOB O, SYS.X$KGLRD D, SYS.X$KGLCURSOR C
WHERE
O.INST_ID = USERENV('INSTANCE') AND
D.INST_ID = USERENV('INSTANCE') AND
C.INST_ID = USERENV('INSTANCE') AND
O.KGLOBTYP IN (7, 8, 9, 11, 12) AND
D.KGLHDCDR = O.KGLHDADR AND
C.KGLHDPAR = D.KGLRDHDL
GROUP BY O.KGLNAOWN, O.KGLNAOBJ
HAVING SUM(C.KGLHDEXC) > 0
ORDER BY 2 DESC;

